
./a.out:     ファイル形式 elf64-x86-64


セクション .init の逆アセンブル:

00000000004018f8 <_init>:
  4018f8:	48 83 ec 08          	sub    $0x8,%rsp
  4018fc:	48 8b 05 f5 76 22 00 	mov    0x2276f5(%rip),%rax        # 628ff8 <_DYNAMIC+0x1f0>
  401903:	48 85 c0             	test   %rax,%rax
  401906:	74 05                	je     40190d <_init+0x15>
  401908:	e8 93 05 00 00       	callq  401ea0 <dlerror@plt+0x10>
  40190d:	48 83 c4 08          	add    $0x8,%rsp
  401911:	c3                   	retq   

セクション .plt の逆アセンブル:

0000000000401920 <getenv@plt-0x10>:
  401920:	ff 35 e2 76 22 00    	pushq  0x2276e2(%rip)        # 629008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401926:	ff 25 e4 76 22 00    	jmpq   *0x2276e4(%rip)        # 629010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40192c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401930 <getenv@plt>:
  401930:	ff 25 e2 76 22 00    	jmpq   *0x2276e2(%rip)        # 629018 <_GLOBAL_OFFSET_TABLE_+0x18>
  401936:	68 00 00 00 00       	pushq  $0x0
  40193b:	e9 e0 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401940 <sigprocmask@plt>:
  401940:	ff 25 da 76 22 00    	jmpq   *0x2276da(%rip)        # 629020 <_GLOBAL_OFFSET_TABLE_+0x20>
  401946:	68 01 00 00 00       	pushq  $0x1
  40194b:	e9 d0 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401950 <__snprintf_chk@plt>:
  401950:	ff 25 d2 76 22 00    	jmpq   *0x2276d2(%rip)        # 629028 <_GLOBAL_OFFSET_TABLE_+0x28>
  401956:	68 02 00 00 00       	pushq  $0x2
  40195b:	e9 c0 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401960 <free@plt>:
  401960:	ff 25 ca 76 22 00    	jmpq   *0x2276ca(%rip)        # 629030 <_GLOBAL_OFFSET_TABLE_+0x30>
  401966:	68 03 00 00 00       	pushq  $0x3
  40196b:	e9 b0 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401970 <__errno_location@plt>:
  401970:	ff 25 c2 76 22 00    	jmpq   *0x2276c2(%rip)        # 629038 <_GLOBAL_OFFSET_TABLE_+0x38>
  401976:	68 04 00 00 00       	pushq  $0x4
  40197b:	e9 a0 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401980 <ldexp@plt>:
  401980:	ff 25 ba 76 22 00    	jmpq   *0x2276ba(%rip)        # 629040 <_GLOBAL_OFFSET_TABLE_+0x40>
  401986:	68 05 00 00 00       	pushq  $0x5
  40198b:	e9 90 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401990 <unlink@plt>:
  401990:	ff 25 b2 76 22 00    	jmpq   *0x2276b2(%rip)        # 629048 <_GLOBAL_OFFSET_TABLE_+0x48>
  401996:	68 06 00 00 00       	pushq  $0x6
  40199b:	e9 80 ff ff ff       	jmpq   401920 <_init+0x28>

00000000004019a0 <isatty@plt>:
  4019a0:	ff 25 aa 76 22 00    	jmpq   *0x2276aa(%rip)        # 629050 <_GLOBAL_OFFSET_TABLE_+0x50>
  4019a6:	68 07 00 00 00       	pushq  $0x7
  4019ab:	e9 70 ff ff ff       	jmpq   401920 <_init+0x28>

00000000004019b0 <sigaction@plt>:
  4019b0:	ff 25 a2 76 22 00    	jmpq   *0x2276a2(%rip)        # 629058 <_GLOBAL_OFFSET_TABLE_+0x58>
  4019b6:	68 08 00 00 00       	pushq  $0x8
  4019bb:	e9 60 ff ff ff       	jmpq   401920 <_init+0x28>

00000000004019c0 <strtod@plt>:
  4019c0:	ff 25 9a 76 22 00    	jmpq   *0x22769a(%rip)        # 629060 <_GLOBAL_OFFSET_TABLE_+0x60>
  4019c6:	68 09 00 00 00       	pushq  $0x9
  4019cb:	e9 50 ff ff ff       	jmpq   401920 <_init+0x28>

00000000004019d0 <exp@plt>:
  4019d0:	ff 25 92 76 22 00    	jmpq   *0x227692(%rip)        # 629068 <_GLOBAL_OFFSET_TABLE_+0x68>
  4019d6:	68 0a 00 00 00       	pushq  $0xa
  4019db:	e9 40 ff ff ff       	jmpq   401920 <_init+0x28>

00000000004019e0 <readlink@plt>:
  4019e0:	ff 25 8a 76 22 00    	jmpq   *0x22768a(%rip)        # 629070 <_GLOBAL_OFFSET_TABLE_+0x70>
  4019e6:	68 0b 00 00 00       	pushq  $0xb
  4019eb:	e9 30 ff ff ff       	jmpq   401920 <_init+0x28>

00000000004019f0 <fcntl@plt>:
  4019f0:	ff 25 82 76 22 00    	jmpq   *0x227682(%rip)        # 629078 <_GLOBAL_OFFSET_TABLE_+0x78>
  4019f6:	68 0c 00 00 00       	pushq  $0xc
  4019fb:	e9 20 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401a00 <write@plt>:
  401a00:	ff 25 7a 76 22 00    	jmpq   *0x22767a(%rip)        # 629080 <_GLOBAL_OFFSET_TABLE_+0x80>
  401a06:	68 0d 00 00 00       	pushq  $0xd
  401a0b:	e9 10 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401a10 <getpid@plt>:
  401a10:	ff 25 72 76 22 00    	jmpq   *0x227672(%rip)        # 629088 <_GLOBAL_OFFSET_TABLE_+0x88>
  401a16:	68 0e 00 00 00       	pushq  $0xe
  401a1b:	e9 00 ff ff ff       	jmpq   401920 <_init+0x28>

0000000000401a20 <atan@plt>:
  401a20:	ff 25 6a 76 22 00    	jmpq   *0x22766a(%rip)        # 629090 <_GLOBAL_OFFSET_TABLE_+0x90>
  401a26:	68 0f 00 00 00       	pushq  $0xf
  401a2b:	e9 f0 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401a30 <__xstat64@plt>:
  401a30:	ff 25 62 76 22 00    	jmpq   *0x227662(%rip)        # 629098 <_GLOBAL_OFFSET_TABLE_+0x98>
  401a36:	68 10 00 00 00       	pushq  $0x10
  401a3b:	e9 e0 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401a40 <opendir@plt>:
  401a40:	ff 25 5a 76 22 00    	jmpq   *0x22765a(%rip)        # 6290a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
  401a46:	68 11 00 00 00       	pushq  $0x11
  401a4b:	e9 d0 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401a50 <strlen@plt>:
  401a50:	ff 25 52 76 22 00    	jmpq   *0x227652(%rip)        # 6290a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
  401a56:	68 12 00 00 00       	pushq  $0x12
  401a5b:	e9 c0 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401a60 <chdir@plt>:
  401a60:	ff 25 4a 76 22 00    	jmpq   *0x22764a(%rip)        # 6290b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
  401a66:	68 13 00 00 00       	pushq  $0x13
  401a6b:	e9 b0 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401a70 <__stack_chk_fail@plt>:
  401a70:	ff 25 42 76 22 00    	jmpq   *0x227642(%rip)        # 6290b8 <_GLOBAL_OFFSET_TABLE_+0xb8>
  401a76:	68 14 00 00 00       	pushq  $0x14
  401a7b:	e9 a0 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401a80 <system@plt>:
  401a80:	ff 25 3a 76 22 00    	jmpq   *0x22763a(%rip)        # 6290c0 <_GLOBAL_OFFSET_TABLE_+0xc0>
  401a86:	68 15 00 00 00       	pushq  $0x15
  401a8b:	e9 90 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401a90 <modf@plt>:
  401a90:	ff 25 32 76 22 00    	jmpq   *0x227632(%rip)        # 6290c8 <_GLOBAL_OFFSET_TABLE_+0xc8>
  401a96:	68 16 00 00 00       	pushq  $0x16
  401a9b:	e9 80 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401aa0 <gettimeofday@plt>:
  401aa0:	ff 25 2a 76 22 00    	jmpq   *0x22762a(%rip)        # 6290d0 <_GLOBAL_OFFSET_TABLE_+0xd0>
  401aa6:	68 17 00 00 00       	pushq  $0x17
  401aab:	e9 70 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401ab0 <fputs@plt>:
  401ab0:	ff 25 22 76 22 00    	jmpq   *0x227622(%rip)        # 6290d8 <_GLOBAL_OFFSET_TABLE_+0xd8>
  401ab6:	68 18 00 00 00       	pushq  $0x18
  401abb:	e9 60 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401ac0 <memset@plt>:
  401ac0:	ff 25 1a 76 22 00    	jmpq   *0x22761a(%rip)        # 6290e0 <_GLOBAL_OFFSET_TABLE_+0xe0>
  401ac6:	68 19 00 00 00       	pushq  $0x19
  401acb:	e9 50 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401ad0 <pow@plt>:
  401ad0:	ff 25 12 76 22 00    	jmpq   *0x227612(%rip)        # 6290e8 <_GLOBAL_OFFSET_TABLE_+0xe8>
  401ad6:	68 1a 00 00 00       	pushq  $0x1a
  401adb:	e9 40 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401ae0 <getcwd@plt>:
  401ae0:	ff 25 0a 76 22 00    	jmpq   *0x22760a(%rip)        # 6290f0 <_GLOBAL_OFFSET_TABLE_+0xf0>
  401ae6:	68 1b 00 00 00       	pushq  $0x1b
  401aeb:	e9 30 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401af0 <log@plt>:
  401af0:	ff 25 02 76 22 00    	jmpq   *0x227602(%rip)        # 6290f8 <_GLOBAL_OFFSET_TABLE_+0xf8>
  401af6:	68 1c 00 00 00       	pushq  $0x1c
  401afb:	e9 20 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401b00 <close@plt>:
  401b00:	ff 25 fa 75 22 00    	jmpq   *0x2275fa(%rip)        # 629100 <_GLOBAL_OFFSET_TABLE_+0x100>
  401b06:	68 1d 00 00 00       	pushq  $0x1d
  401b0b:	e9 10 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401b10 <log1p@plt>:
  401b10:	ff 25 f2 75 22 00    	jmpq   *0x2275f2(%rip)        # 629108 <_GLOBAL_OFFSET_TABLE_+0x108>
  401b16:	68 1e 00 00 00       	pushq  $0x1e
  401b1b:	e9 00 fe ff ff       	jmpq   401920 <_init+0x28>

0000000000401b20 <fmod@plt>:
  401b20:	ff 25 ea 75 22 00    	jmpq   *0x2275ea(%rip)        # 629110 <_GLOBAL_OFFSET_TABLE_+0x110>
  401b26:	68 1f 00 00 00       	pushq  $0x1f
  401b2b:	e9 f0 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401b30 <closedir@plt>:
  401b30:	ff 25 e2 75 22 00    	jmpq   *0x2275e2(%rip)        # 629118 <_GLOBAL_OFFSET_TABLE_+0x118>
  401b36:	68 20 00 00 00       	pushq  $0x20
  401b3b:	e9 e0 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401b40 <cos@plt>:
  401b40:	ff 25 da 75 22 00    	jmpq   *0x2275da(%rip)        # 629120 <_GLOBAL_OFFSET_TABLE_+0x120>
  401b46:	68 21 00 00 00       	pushq  $0x21
  401b4b:	e9 d0 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401b50 <fputc@plt>:
  401b50:	ff 25 d2 75 22 00    	jmpq   *0x2275d2(%rip)        # 629128 <_GLOBAL_OFFSET_TABLE_+0x128>
  401b56:	68 22 00 00 00       	pushq  $0x22
  401b5b:	e9 c0 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401b60 <acos@plt>:
  401b60:	ff 25 ca 75 22 00    	jmpq   *0x2275ca(%rip)        # 629130 <_GLOBAL_OFFSET_TABLE_+0x130>
  401b66:	68 23 00 00 00       	pushq  $0x23
  401b6b:	e9 b0 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401b70 <read@plt>:
  401b70:	ff 25 c2 75 22 00    	jmpq   *0x2275c2(%rip)        # 629138 <_GLOBAL_OFFSET_TABLE_+0x138>
  401b76:	68 24 00 00 00       	pushq  $0x24
  401b7b:	e9 a0 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401b80 <__libc_start_main@plt>:
  401b80:	ff 25 ba 75 22 00    	jmpq   *0x2275ba(%rip)        # 629140 <_GLOBAL_OFFSET_TABLE_+0x140>
  401b86:	68 25 00 00 00       	pushq  $0x25
  401b8b:	e9 90 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401b90 <memcmp@plt>:
  401b90:	ff 25 b2 75 22 00    	jmpq   *0x2275b2(%rip)        # 629148 <_GLOBAL_OFFSET_TABLE_+0x148>
  401b96:	68 26 00 00 00       	pushq  $0x26
  401b9b:	e9 80 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401ba0 <frexp@plt>:
  401ba0:	ff 25 aa 75 22 00    	jmpq   *0x2275aa(%rip)        # 629150 <_GLOBAL_OFFSET_TABLE_+0x150>
  401ba6:	68 27 00 00 00       	pushq  $0x27
  401bab:	e9 70 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401bb0 <calloc@plt>:
  401bb0:	ff 25 a2 75 22 00    	jmpq   *0x2275a2(%rip)        # 629158 <_GLOBAL_OFFSET_TABLE_+0x158>
  401bb6:	68 28 00 00 00       	pushq  $0x28
  401bbb:	e9 60 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401bc0 <strcmp@plt>:
  401bc0:	ff 25 9a 75 22 00    	jmpq   *0x22759a(%rip)        # 629160 <_GLOBAL_OFFSET_TABLE_+0x160>
  401bc6:	68 29 00 00 00       	pushq  $0x29
  401bcb:	e9 50 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401bd0 <log10@plt>:
  401bd0:	ff 25 92 75 22 00    	jmpq   *0x227592(%rip)        # 629168 <_GLOBAL_OFFSET_TABLE_+0x168>
  401bd6:	68 2a 00 00 00       	pushq  $0x2a
  401bdb:	e9 40 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401be0 <__memcpy_chk@plt>:
  401be0:	ff 25 8a 75 22 00    	jmpq   *0x22758a(%rip)        # 629170 <_GLOBAL_OFFSET_TABLE_+0x170>
  401be6:	68 2b 00 00 00       	pushq  $0x2b
  401beb:	e9 30 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401bf0 <sigemptyset@plt>:
  401bf0:	ff 25 82 75 22 00    	jmpq   *0x227582(%rip)        # 629178 <_GLOBAL_OFFSET_TABLE_+0x178>
  401bf6:	68 2c 00 00 00       	pushq  $0x2c
  401bfb:	e9 20 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401c00 <strtol@plt>:
  401c00:	ff 25 7a 75 22 00    	jmpq   *0x22757a(%rip)        # 629180 <_GLOBAL_OFFSET_TABLE_+0x180>
  401c06:	68 2d 00 00 00       	pushq  $0x2d
  401c0b:	e9 10 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401c10 <memcpy@plt>:
  401c10:	ff 25 72 75 22 00    	jmpq   *0x227572(%rip)        # 629188 <_GLOBAL_OFFSET_TABLE_+0x188>
  401c16:	68 2e 00 00 00       	pushq  $0x2e
  401c1b:	e9 00 fd ff ff       	jmpq   401920 <_init+0x28>

0000000000401c20 <expm1@plt>:
  401c20:	ff 25 6a 75 22 00    	jmpq   *0x22756a(%rip)        # 629190 <_GLOBAL_OFFSET_TABLE_+0x190>
  401c26:	68 2f 00 00 00       	pushq  $0x2f
  401c2b:	e9 f0 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401c30 <fmin@plt>:
  401c30:	ff 25 62 75 22 00    	jmpq   *0x227562(%rip)        # 629198 <_GLOBAL_OFFSET_TABLE_+0x198>
  401c36:	68 30 00 00 00       	pushq  $0x30
  401c3b:	e9 e0 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401c40 <cosh@plt>:
  401c40:	ff 25 5a 75 22 00    	jmpq   *0x22755a(%rip)        # 6291a0 <_GLOBAL_OFFSET_TABLE_+0x1a0>
  401c46:	68 31 00 00 00       	pushq  $0x31
  401c4b:	e9 d0 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401c50 <getrlimit64@plt>:
  401c50:	ff 25 52 75 22 00    	jmpq   *0x227552(%rip)        # 6291a8 <_GLOBAL_OFFSET_TABLE_+0x1a8>
  401c56:	68 32 00 00 00       	pushq  $0x32
  401c5b:	e9 c0 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401c60 <dlopen@plt>:
  401c60:	ff 25 4a 75 22 00    	jmpq   *0x22754a(%rip)        # 6291b0 <_GLOBAL_OFFSET_TABLE_+0x1b0>
  401c66:	68 33 00 00 00       	pushq  $0x33
  401c6b:	e9 b0 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401c70 <sinh@plt>:
  401c70:	ff 25 42 75 22 00    	jmpq   *0x227542(%rip)        # 6291b8 <_GLOBAL_OFFSET_TABLE_+0x1b8>
  401c76:	68 34 00 00 00       	pushq  $0x34
  401c7b:	e9 a0 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401c80 <mmap64@plt>:
  401c80:	ff 25 3a 75 22 00    	jmpq   *0x22753a(%rip)        # 6291c0 <_GLOBAL_OFFSET_TABLE_+0x1c0>
  401c86:	68 35 00 00 00       	pushq  $0x35
  401c8b:	e9 90 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401c90 <malloc@plt>:
  401c90:	ff 25 32 75 22 00    	jmpq   *0x227532(%rip)        # 6291c8 <_GLOBAL_OFFSET_TABLE_+0x1c8>
  401c96:	68 36 00 00 00       	pushq  $0x36
  401c9b:	e9 80 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401ca0 <fflush@plt>:
  401ca0:	ff 25 2a 75 22 00    	jmpq   *0x22752a(%rip)        # 6291d0 <_GLOBAL_OFFSET_TABLE_+0x1d0>
  401ca6:	68 37 00 00 00       	pushq  $0x37
  401cab:	e9 70 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401cb0 <tan@plt>:
  401cb0:	ff 25 22 75 22 00    	jmpq   *0x227522(%rip)        # 6291d8 <_GLOBAL_OFFSET_TABLE_+0x1d8>
  401cb6:	68 38 00 00 00       	pushq  $0x38
  401cbb:	e9 60 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401cc0 <__isoc99_sscanf@plt>:
  401cc0:	ff 25 1a 75 22 00    	jmpq   *0x22751a(%rip)        # 6291e0 <_GLOBAL_OFFSET_TABLE_+0x1e0>
  401cc6:	68 39 00 00 00       	pushq  $0x39
  401ccb:	e9 50 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401cd0 <atan2@plt>:
  401cd0:	ff 25 12 75 22 00    	jmpq   *0x227512(%rip)        # 6291e8 <_GLOBAL_OFFSET_TABLE_+0x1e8>
  401cd6:	68 3a 00 00 00       	pushq  $0x3a
  401cdb:	e9 40 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401ce0 <__vsnprintf_chk@plt>:
  401ce0:	ff 25 0a 75 22 00    	jmpq   *0x22750a(%rip)        # 6291f0 <_GLOBAL_OFFSET_TABLE_+0x1f0>
  401ce6:	68 3b 00 00 00       	pushq  $0x3b
  401ceb:	e9 30 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401cf0 <dlclose@plt>:
  401cf0:	ff 25 02 75 22 00    	jmpq   *0x227502(%rip)        # 6291f8 <_GLOBAL_OFFSET_TABLE_+0x1f8>
  401cf6:	68 3c 00 00 00       	pushq  $0x3c
  401cfb:	e9 20 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401d00 <realloc@plt>:
  401d00:	ff 25 fa 74 22 00    	jmpq   *0x2274fa(%rip)        # 629200 <_GLOBAL_OFFSET_TABLE_+0x200>
  401d06:	68 3d 00 00 00       	pushq  $0x3d
  401d0b:	e9 10 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401d10 <munmap@plt>:
  401d10:	ff 25 f2 74 22 00    	jmpq   *0x2274f2(%rip)        # 629208 <_GLOBAL_OFFSET_TABLE_+0x208>
  401d16:	68 3e 00 00 00       	pushq  $0x3e
  401d1b:	e9 00 fc ff ff       	jmpq   401920 <_init+0x28>

0000000000401d20 <open64@plt>:
  401d20:	ff 25 ea 74 22 00    	jmpq   *0x2274ea(%rip)        # 629210 <_GLOBAL_OFFSET_TABLE_+0x210>
  401d26:	68 3f 00 00 00       	pushq  $0x3f
  401d2b:	e9 f0 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401d30 <memmove@plt>:
  401d30:	ff 25 e2 74 22 00    	jmpq   *0x2274e2(%rip)        # 629218 <_GLOBAL_OFFSET_TABLE_+0x218>
  401d36:	68 40 00 00 00       	pushq  $0x40
  401d3b:	e9 e0 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401d40 <readdir64@plt>:
  401d40:	ff 25 da 74 22 00    	jmpq   *0x2274da(%rip)        # 629220 <_GLOBAL_OFFSET_TABLE_+0x220>
  401d46:	68 41 00 00 00       	pushq  $0x41
  401d4b:	e9 d0 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401d50 <sigdelset@plt>:
  401d50:	ff 25 d2 74 22 00    	jmpq   *0x2274d2(%rip)        # 629228 <_GLOBAL_OFFSET_TABLE_+0x228>
  401d56:	68 42 00 00 00       	pushq  $0x42
  401d5b:	e9 c0 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401d60 <getrusage@plt>:
  401d60:	ff 25 ca 74 22 00    	jmpq   *0x2274ca(%rip)        # 629230 <_GLOBAL_OFFSET_TABLE_+0x230>
  401d66:	68 43 00 00 00       	pushq  $0x43
  401d6b:	e9 b0 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401d70 <rename@plt>:
  401d70:	ff 25 c2 74 22 00    	jmpq   *0x2274c2(%rip)        # 629238 <_GLOBAL_OFFSET_TABLE_+0x238>
  401d76:	68 44 00 00 00       	pushq  $0x44
  401d7b:	e9 a0 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401d80 <sin@plt>:
  401d80:	ff 25 ba 74 22 00    	jmpq   *0x2274ba(%rip)        # 629240 <_GLOBAL_OFFSET_TABLE_+0x240>
  401d86:	68 45 00 00 00       	pushq  $0x45
  401d8b:	e9 90 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401d90 <floor@plt>:
  401d90:	ff 25 b2 74 22 00    	jmpq   *0x2274b2(%rip)        # 629248 <_GLOBAL_OFFSET_TABLE_+0x248>
  401d96:	68 46 00 00 00       	pushq  $0x46
  401d9b:	e9 80 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401da0 <tanh@plt>:
  401da0:	ff 25 aa 74 22 00    	jmpq   *0x2274aa(%rip)        # 629250 <_GLOBAL_OFFSET_TABLE_+0x250>
  401da6:	68 47 00 00 00       	pushq  $0x47
  401dab:	e9 70 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401db0 <asin@plt>:
  401db0:	ff 25 a2 74 22 00    	jmpq   *0x2274a2(%rip)        # 629258 <_GLOBAL_OFFSET_TABLE_+0x258>
  401db6:	68 48 00 00 00       	pushq  $0x48
  401dbb:	e9 60 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401dc0 <getppid@plt>:
  401dc0:	ff 25 9a 74 22 00    	jmpq   *0x22749a(%rip)        # 629260 <_GLOBAL_OFFSET_TABLE_+0x260>
  401dc6:	68 49 00 00 00       	pushq  $0x49
  401dcb:	e9 50 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401dd0 <exit@plt>:
  401dd0:	ff 25 92 74 22 00    	jmpq   *0x227492(%rip)        # 629268 <_GLOBAL_OFFSET_TABLE_+0x268>
  401dd6:	68 4a 00 00 00       	pushq  $0x4a
  401ddb:	e9 40 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401de0 <fwrite@plt>:
  401de0:	ff 25 8a 74 22 00    	jmpq   *0x22748a(%rip)        # 629270 <_GLOBAL_OFFSET_TABLE_+0x270>
  401de6:	68 4b 00 00 00       	pushq  $0x4b
  401deb:	e9 30 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401df0 <lseek64@plt>:
  401df0:	ff 25 82 74 22 00    	jmpq   *0x227482(%rip)        # 629278 <_GLOBAL_OFFSET_TABLE_+0x278>
  401df6:	68 4c 00 00 00       	pushq  $0x4c
  401dfb:	e9 20 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401e00 <__fprintf_chk@plt>:
  401e00:	ff 25 7a 74 22 00    	jmpq   *0x22747a(%rip)        # 629280 <_GLOBAL_OFFSET_TABLE_+0x280>
  401e06:	68 4d 00 00 00       	pushq  $0x4d
  401e0b:	e9 10 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401e10 <hypot@plt>:
  401e10:	ff 25 72 74 22 00    	jmpq   *0x227472(%rip)        # 629288 <_GLOBAL_OFFSET_TABLE_+0x288>
  401e16:	68 4e 00 00 00       	pushq  $0x4e
  401e1b:	e9 00 fb ff ff       	jmpq   401920 <_init+0x28>

0000000000401e20 <sqrt@plt>:
  401e20:	ff 25 6a 74 22 00    	jmpq   *0x22746a(%rip)        # 629290 <_GLOBAL_OFFSET_TABLE_+0x290>
  401e26:	68 4f 00 00 00       	pushq  $0x4f
  401e2b:	e9 f0 fa ff ff       	jmpq   401920 <_init+0x28>

0000000000401e30 <sigaltstack@plt>:
  401e30:	ff 25 62 74 22 00    	jmpq   *0x227462(%rip)        # 629298 <_GLOBAL_OFFSET_TABLE_+0x298>
  401e36:	68 50 00 00 00       	pushq  $0x50
  401e3b:	e9 e0 fa ff ff       	jmpq   401920 <_init+0x28>

0000000000401e40 <strerror@plt>:
  401e40:	ff 25 5a 74 22 00    	jmpq   *0x22745a(%rip)        # 6292a0 <_GLOBAL_OFFSET_TABLE_+0x2a0>
  401e46:	68 51 00 00 00       	pushq  $0x51
  401e4b:	e9 d0 fa ff ff       	jmpq   401920 <_init+0x28>

0000000000401e50 <dlsym@plt>:
  401e50:	ff 25 52 74 22 00    	jmpq   *0x227452(%rip)        # 6292a8 <_GLOBAL_OFFSET_TABLE_+0x2a8>
  401e56:	68 52 00 00 00       	pushq  $0x52
  401e5b:	e9 c0 fa ff ff       	jmpq   401920 <_init+0x28>

0000000000401e60 <ceil@plt>:
  401e60:	ff 25 4a 74 22 00    	jmpq   *0x22744a(%rip)        # 6292b0 <_GLOBAL_OFFSET_TABLE_+0x2b0>
  401e66:	68 53 00 00 00       	pushq  $0x53
  401e6b:	e9 b0 fa ff ff       	jmpq   401920 <_init+0x28>

0000000000401e70 <__sigsetjmp@plt>:
  401e70:	ff 25 42 74 22 00    	jmpq   *0x227442(%rip)        # 6292b8 <_GLOBAL_OFFSET_TABLE_+0x2b8>
  401e76:	68 54 00 00 00       	pushq  $0x54
  401e7b:	e9 a0 fa ff ff       	jmpq   401920 <_init+0x28>

0000000000401e80 <sigaddset@plt>:
  401e80:	ff 25 3a 74 22 00    	jmpq   *0x22743a(%rip)        # 6292c0 <_GLOBAL_OFFSET_TABLE_+0x2c0>
  401e86:	68 55 00 00 00       	pushq  $0x55
  401e8b:	e9 90 fa ff ff       	jmpq   401920 <_init+0x28>

0000000000401e90 <dlerror@plt>:
  401e90:	ff 25 32 74 22 00    	jmpq   *0x227432(%rip)        # 6292c8 <_GLOBAL_OFFSET_TABLE_+0x2c8>
  401e96:	68 56 00 00 00       	pushq  $0x56
  401e9b:	e9 80 fa ff ff       	jmpq   401920 <_init+0x28>

セクション .plt.got の逆アセンブル:

0000000000401ea0 <.plt.got>:
  401ea0:	ff 25 52 71 22 00    	jmpq   *0x227152(%rip)        # 628ff8 <_DYNAMIC+0x1f0>
  401ea6:	66 90                	xchg   %ax,%ax

セクション .text の逆アセンブル:

0000000000401eb0 <compare_stack_overflow>:
  401eb0:	50                   	push   %rax
  401eb1:	31 d2                	xor    %edx,%edx
  401eb3:	bf 04 00 00 00       	mov    $0x4,%edi
  401eb8:	be 38 de 41 00       	mov    $0x41de38,%esi
  401ebd:	e8 ee 9d 01 00       	callq  41bcb0 <caml_gc_message>
  401ec2:	48 8b 3d b7 a7 22 00 	mov    0x22a7b7(%rip),%rdi        # 62c680 <compare_stack>
  401ec9:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  401ed0:	74 1b                	je     401eed <compare_stack_overflow+0x3d>
  401ed2:	e8 89 fa ff ff       	callq  401960 <free@plt>
  401ed7:	48 c7 05 9e a7 22 00 	movq   $0x62cf60,0x22a79e(%rip)        # 62c680 <compare_stack>
  401ede:	60 cf 62 00 
  401ee2:	48 c7 05 8b a7 22 00 	movq   $0x62e760,0x22a78b(%rip)        # 62c678 <compare_stack_limit>
  401ee9:	60 e7 62 00 
  401eed:	e8 0e 88 01 00       	callq  41a700 <caml_raise_out_of_memory>

0000000000401ef2 <extern_out_of_memory>:
  401ef2:	50                   	push   %rax
  401ef3:	e8 38 c8 00 00       	callq  40e730 <extern_replay_trail>
  401ef8:	48 83 3d c8 c8 22 00 	cmpq   $0x0,0x22c8c8(%rip)        # 62e7c8 <extern_userprovided_output>
  401eff:	00 
  401f00:	75 05                	jne    401f07 <extern_out_of_memory+0x15>
  401f02:	e8 19 c9 00 00       	callq  40e820 <free_extern_output.part.0>
  401f07:	e8 f4 87 01 00       	callq  41a700 <caml_raise_out_of_memory>

0000000000401f0c <extern_stack_overflow>:
  401f0c:	50                   	push   %rax
  401f0d:	31 d2                	xor    %edx,%edx
  401f0f:	be 40 e2 41 00       	mov    $0x41e240,%esi
  401f14:	bf 04 00 00 00       	mov    $0x4,%edi
  401f19:	e8 92 9d 01 00       	callq  41bcb0 <caml_gc_message>
  401f1e:	e8 0d c8 00 00       	callq  40e730 <extern_replay_trail>
  401f23:	48 83 3d 9d c8 22 00 	cmpq   $0x0,0x22c89d(%rip)        # 62e7c8 <extern_userprovided_output>
  401f2a:	00 
  401f2b:	75 05                	jne    401f32 <extern_stack_overflow+0x26>
  401f2d:	e8 ee c8 00 00       	callq  40e820 <free_extern_output.part.0>
  401f32:	e8 c9 87 01 00       	callq  41a700 <caml_raise_out_of_memory>

0000000000401f37 <intern_bad_code_pointer>:
  401f37:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
  401f3e:	41 b8 70 e5 41 00    	mov    $0x41e570,%r8d
  401f44:	b9 00 01 00 00       	mov    $0x100,%ecx
  401f49:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401f50:	00 00 
  401f52:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
  401f59:	00 
  401f5a:	31 c0                	xor    %eax,%eax
  401f5c:	0f b6 47 0f          	movzbl 0xf(%rdi),%eax
  401f60:	ba 01 00 00 00       	mov    $0x1,%edx
  401f65:	be 00 01 00 00       	mov    $0x100,%esi
  401f6a:	50                   	push   %rax
  401f6b:	0f b6 47 0e          	movzbl 0xe(%rdi),%eax
  401f6f:	50                   	push   %rax
  401f70:	0f b6 47 0d          	movzbl 0xd(%rdi),%eax
  401f74:	50                   	push   %rax
  401f75:	0f b6 47 0c          	movzbl 0xc(%rdi),%eax
  401f79:	50                   	push   %rax
  401f7a:	0f b6 47 0b          	movzbl 0xb(%rdi),%eax
  401f7e:	50                   	push   %rax
  401f7f:	0f b6 47 0a          	movzbl 0xa(%rdi),%eax
  401f83:	50                   	push   %rax
  401f84:	0f b6 47 09          	movzbl 0x9(%rdi),%eax
  401f88:	50                   	push   %rax
  401f89:	0f b6 47 08          	movzbl 0x8(%rdi),%eax
  401f8d:	50                   	push   %rax
  401f8e:	0f b6 47 07          	movzbl 0x7(%rdi),%eax
  401f92:	50                   	push   %rax
  401f93:	0f b6 47 06          	movzbl 0x6(%rdi),%eax
  401f97:	50                   	push   %rax
  401f98:	0f b6 47 05          	movzbl 0x5(%rdi),%eax
  401f9c:	50                   	push   %rax
  401f9d:	0f b6 47 04          	movzbl 0x4(%rdi),%eax
  401fa1:	50                   	push   %rax
  401fa2:	0f b6 47 03          	movzbl 0x3(%rdi),%eax
  401fa6:	50                   	push   %rax
  401fa7:	0f b6 47 02          	movzbl 0x2(%rdi),%eax
  401fab:	50                   	push   %rax
  401fac:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
  401fb0:	50                   	push   %rax
  401fb1:	44 0f b6 0f          	movzbl (%rdi),%r9d
  401fb5:	31 c0                	xor    %eax,%eax
  401fb7:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
  401fbe:	00 
  401fbf:	e8 8c f9 ff ff       	callq  401950 <__snprintf_chk@plt>
  401fc4:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
  401fc8:	48 89 e7             	mov    %rsp,%rdi
  401fcb:	e8 f0 86 01 00       	callq  41a6c0 <caml_failwith>

0000000000401fd0 <intern_stack_overflow>:
  401fd0:	50                   	push   %rax
  401fd1:	31 d2                	xor    %edx,%edx
  401fd3:	bf 04 00 00 00       	mov    $0x4,%edi
  401fd8:	be d8 e5 41 00       	mov    $0x41e5d8,%esi
  401fdd:	e8 ce 9c 01 00       	callq  41bcb0 <caml_gc_message>
  401fe2:	48 8b 3d d7 a7 22 00 	mov    0x22a7d7(%rip),%rdi        # 62c7c0 <intern_stack>
  401fe9:	48 81 ff 40 38 63 00 	cmp    $0x633840,%rdi
  401ff0:	74 1b                	je     40200d <intern_stack_overflow+0x3d>
  401ff2:	e8 69 f9 ff ff       	callq  401960 <free@plt>
  401ff7:	48 c7 05 be a7 22 00 	movq   $0x633840,0x22a7be(%rip)        # 62c7c0 <intern_stack>
  401ffe:	40 38 63 00 
  402002:	48 c7 05 ab a7 22 00 	movq   $0x635040,0x22a7ab(%rip)        # 62c7b8 <intern_stack_limit>
  402009:	40 50 63 00 
  40200d:	e8 ee 86 01 00       	callq  41a700 <caml_raise_out_of_memory>
  402012:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402019:	00 00 00 
  40201c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402020 <main>:
  402020:	48 83 ec 08          	sub    $0x8,%rsp
  402024:	48 89 f7             	mov    %rsi,%rdi
  402027:	e8 c4 81 01 00       	callq  41a1f0 <caml_main>
  40202c:	bf 01 00 00 00       	mov    $0x1,%edi
  402031:	e8 ba fb 00 00       	callq  411bf0 <caml_sys_exit>
  402036:	31 c0                	xor    %eax,%eax
  402038:	48 83 c4 08          	add    $0x8,%rsp
  40203c:	c3                   	retq   
  40203d:	0f 1f 00             	nopl   (%rax)

0000000000402040 <_start>:
  402040:	31 ed                	xor    %ebp,%ebp
  402042:	49 89 d1             	mov    %rdx,%r9
  402045:	5e                   	pop    %rsi
  402046:	48 89 e2             	mov    %rsp,%rdx
  402049:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40204d:	50                   	push   %rax
  40204e:	54                   	push   %rsp
  40204f:	49 c7 c0 30 d8 41 00 	mov    $0x41d830,%r8
  402056:	48 c7 c1 c0 d7 41 00 	mov    $0x41d7c0,%rcx
  40205d:	48 c7 c7 20 20 40 00 	mov    $0x402020,%rdi
  402064:	e8 17 fb ff ff       	callq  401b80 <__libc_start_main@plt>
  402069:	f4                   	hlt    
  40206a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402070 <deregister_tm_clones>:
  402070:	b8 ef c8 62 00       	mov    $0x62c8ef,%eax
  402075:	55                   	push   %rbp
  402076:	48 2d e8 c8 62 00    	sub    $0x62c8e8,%rax
  40207c:	48 83 f8 0e          	cmp    $0xe,%rax
  402080:	48 89 e5             	mov    %rsp,%rbp
  402083:	76 1b                	jbe    4020a0 <deregister_tm_clones+0x30>
  402085:	b8 00 00 00 00       	mov    $0x0,%eax
  40208a:	48 85 c0             	test   %rax,%rax
  40208d:	74 11                	je     4020a0 <deregister_tm_clones+0x30>
  40208f:	5d                   	pop    %rbp
  402090:	bf e8 c8 62 00       	mov    $0x62c8e8,%edi
  402095:	ff e0                	jmpq   *%rax
  402097:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40209e:	00 00 
  4020a0:	5d                   	pop    %rbp
  4020a1:	c3                   	retq   
  4020a2:	0f 1f 40 00          	nopl   0x0(%rax)
  4020a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4020ad:	00 00 00 

00000000004020b0 <register_tm_clones>:
  4020b0:	be e8 c8 62 00       	mov    $0x62c8e8,%esi
  4020b5:	55                   	push   %rbp
  4020b6:	48 81 ee e8 c8 62 00 	sub    $0x62c8e8,%rsi
  4020bd:	48 c1 fe 03          	sar    $0x3,%rsi
  4020c1:	48 89 e5             	mov    %rsp,%rbp
  4020c4:	48 89 f0             	mov    %rsi,%rax
  4020c7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4020cb:	48 01 c6             	add    %rax,%rsi
  4020ce:	48 d1 fe             	sar    %rsi
  4020d1:	74 15                	je     4020e8 <register_tm_clones+0x38>
  4020d3:	b8 00 00 00 00       	mov    $0x0,%eax
  4020d8:	48 85 c0             	test   %rax,%rax
  4020db:	74 0b                	je     4020e8 <register_tm_clones+0x38>
  4020dd:	5d                   	pop    %rbp
  4020de:	bf e8 c8 62 00       	mov    $0x62c8e8,%edi
  4020e3:	ff e0                	jmpq   *%rax
  4020e5:	0f 1f 00             	nopl   (%rax)
  4020e8:	5d                   	pop    %rbp
  4020e9:	c3                   	retq   
  4020ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004020f0 <__do_global_dtors_aux>:
  4020f0:	80 3d 11 a8 22 00 00 	cmpb   $0x0,0x22a811(%rip)        # 62c908 <completed.7585>
  4020f7:	75 11                	jne    40210a <__do_global_dtors_aux+0x1a>
  4020f9:	55                   	push   %rbp
  4020fa:	48 89 e5             	mov    %rsp,%rbp
  4020fd:	e8 6e ff ff ff       	callq  402070 <deregister_tm_clones>
  402102:	5d                   	pop    %rbp
  402103:	c6 05 fe a7 22 00 01 	movb   $0x1,0x22a7fe(%rip)        # 62c908 <completed.7585>
  40210a:	f3 c3                	repz retq 
  40210c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402110 <frame_dummy>:
  402110:	bf 00 8e 62 00       	mov    $0x628e00,%edi
  402115:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  402119:	75 05                	jne    402120 <frame_dummy+0x10>
  40211b:	eb 93                	jmp    4020b0 <register_tm_clones>
  40211d:	0f 1f 00             	nopl   (%rax)
  402120:	b8 00 00 00 00       	mov    $0x0,%eax
  402125:	48 85 c0             	test   %rax,%rax
  402128:	74 f1                	je     40211b <frame_dummy+0xb>
  40212a:	55                   	push   %rbp
  40212b:	48 89 e5             	mov    %rsp,%rbp
  40212e:	ff d0                	callq  *%rax
  402130:	5d                   	pop    %rbp
  402131:	e9 7a ff ff ff       	jmpq   4020b0 <register_tm_clones>
  402136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40213d:	00 00 00 

0000000000402140 <caml_program>:
  402140:	48 83 ec 08          	sub    $0x8,%rsp
  402144:	e8 f7 13 00 00       	callq  403540 <camlCamlinternalFormatBasics__entry>
  402149:	48 8d 05 d0 a7 22 00 	lea    0x22a7d0(%rip),%rax        # 62c920 <caml_globals_inited>
  402150:	48 83 00 01          	addq   $0x1,(%rax)
  402154:	e8 e7 2b 00 00       	callq  404d40 <camlPervasives__entry>
  402159:	48 8d 05 c0 a7 22 00 	lea    0x22a7c0(%rip),%rax        # 62c920 <caml_globals_inited>
  402160:	48 83 00 01          	addq   $0x1,(%rax)
  402164:	e8 27 04 00 00       	callq  402590 <camlFib__entry>
  402169:	48 8d 05 b0 a7 22 00 	lea    0x22a7b0(%rip),%rax        # 62c920 <caml_globals_inited>
  402170:	48 83 00 01          	addq   $0x1,(%rax)
  402174:	e8 97 03 00 00       	callq  402510 <camlStd_exit__entry>
  402179:	48 8d 05 a0 a7 22 00 	lea    0x22a7a0(%rip),%rax        # 62c920 <caml_globals_inited>
  402180:	48 83 00 01          	addq   $0x1,(%rax)
  402184:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40218b:	48 83 c4 08          	add    $0x8,%rsp
  40218f:	c3                   	retq   

0000000000402190 <caml_curry4>:
  402190:	48 83 ec 08          	sub    $0x8,%rsp
  402194:	48 89 c7             	mov    %rax,%rdi
  402197:	49 83 ef 30          	sub    $0x30,%r15
  40219b:	48 8d 05 fe ac 22 00 	lea    0x22acfe(%rip),%rax        # 62cea0 <caml_young_limit>
  4021a2:	4c 3b 38             	cmp    (%rax),%r15
  4021a5:	72 36                	jb     4021dd <caml_curry4+0x4d>
  4021a7:	49 8d 47 08          	lea    0x8(%r15),%rax
  4021ab:	48 c7 40 f8 f7 14 00 	movq   $0x14f7,-0x8(%rax)
  4021b2:	00 
  4021b3:	48 8d 35 66 00 00 00 	lea    0x66(%rip),%rsi        # 402220 <caml_curry4_1>
  4021ba:	48 89 30             	mov    %rsi,(%rax)
  4021bd:	48 c7 40 08 07 00 00 	movq   $0x7,0x8(%rax)
  4021c4:	00 
  4021c5:	48 8d 35 24 00 00 00 	lea    0x24(%rip),%rsi        # 4021f0 <caml_curry4_1_app>
  4021cc:	48 89 70 10          	mov    %rsi,0x10(%rax)
  4021d0:	48 89 78 18          	mov    %rdi,0x18(%rax)
  4021d4:	48 89 58 20          	mov    %rbx,0x20(%rax)
  4021d8:	48 83 c4 08          	add    $0x8,%rsp
  4021dc:	c3                   	retq   
  4021dd:	e8 3e 79 01 00       	callq  419b20 <caml_call_gc>
  4021e2:	eb b3                	jmp    402197 <caml_curry4+0x7>
  4021e4:	66 90                	xchg   %ax,%ax
  4021e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4021ed:	00 00 00 

00000000004021f0 <caml_curry4_1_app>:
  4021f0:	48 89 c1             	mov    %rax,%rcx
  4021f3:	49 89 d8             	mov    %rbx,%r8
  4021f6:	49 89 f9             	mov    %rdi,%r9
  4021f9:	48 8b 56 20          	mov    0x20(%rsi),%rdx
  4021fd:	48 8b 46 18          	mov    0x18(%rsi),%rax
  402201:	4c 8b 62 10          	mov    0x10(%rdx),%r12
  402205:	48 89 cb             	mov    %rcx,%rbx
  402208:	4c 89 c7             	mov    %r8,%rdi
  40220b:	4c 89 ce             	mov    %r9,%rsi
  40220e:	41 ff e4             	jmpq   *%r12
  402211:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40221d:	00 00 00 

0000000000402220 <caml_curry4_1>:
  402220:	48 83 ec 08          	sub    $0x8,%rsp
  402224:	48 89 c7             	mov    %rax,%rdi
  402227:	49 83 ef 30          	sub    $0x30,%r15
  40222b:	48 8d 05 6e ac 22 00 	lea    0x22ac6e(%rip),%rax        # 62cea0 <caml_young_limit>
  402232:	4c 3b 38             	cmp    (%rax),%r15
  402235:	72 36                	jb     40226d <caml_curry4_1+0x4d>
  402237:	49 8d 47 08          	lea    0x8(%r15),%rax
  40223b:	48 c7 40 f8 f7 14 00 	movq   $0x14f7,-0x8(%rax)
  402242:	00 
  402243:	48 8d 35 56 00 00 00 	lea    0x56(%rip),%rsi        # 4022a0 <caml_curry4_2>
  40224a:	48 89 30             	mov    %rsi,(%rax)
  40224d:	48 c7 40 08 05 00 00 	movq   $0x5,0x8(%rax)
  402254:	00 
  402255:	48 8d 35 24 00 00 00 	lea    0x24(%rip),%rsi        # 402280 <caml_curry4_2_app>
  40225c:	48 89 70 10          	mov    %rsi,0x10(%rax)
  402260:	48 89 78 18          	mov    %rdi,0x18(%rax)
  402264:	48 89 58 20          	mov    %rbx,0x20(%rax)
  402268:	48 83 c4 08          	add    $0x8,%rsp
  40226c:	c3                   	retq   
  40226d:	e8 ae 78 01 00       	callq  419b20 <caml_call_gc>
  402272:	eb b3                	jmp    402227 <caml_curry4_1+0x7>
  402274:	66 90                	xchg   %ax,%ax
  402276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40227d:	00 00 00 

0000000000402280 <caml_curry4_2_app>:
  402280:	48 89 c1             	mov    %rax,%rcx
  402283:	48 89 de             	mov    %rbx,%rsi
  402286:	48 8b 47 20          	mov    0x20(%rdi),%rax
  40228a:	48 8b 50 20          	mov    0x20(%rax),%rdx
  40228e:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
  402292:	48 8b 40 18          	mov    0x18(%rax),%rax
  402296:	4c 8b 42 10          	mov    0x10(%rdx),%r8
  40229a:	48 89 cf             	mov    %rcx,%rdi
  40229d:	41 ff e0             	jmpq   *%r8

00000000004022a0 <caml_curry4_2>:
  4022a0:	48 83 ec 08          	sub    $0x8,%rsp
  4022a4:	48 89 c7             	mov    %rax,%rdi
  4022a7:	49 83 ef 28          	sub    $0x28,%r15
  4022ab:	48 8d 05 ee ab 22 00 	lea    0x22abee(%rip),%rax        # 62cea0 <caml_young_limit>
  4022b2:	4c 3b 38             	cmp    (%rax),%r15
  4022b5:	72 2b                	jb     4022e2 <caml_curry4_2+0x42>
  4022b7:	49 8d 47 08          	lea    0x8(%r15),%rax
  4022bb:	48 c7 40 f8 f7 10 00 	movq   $0x10f7,-0x8(%rax)
  4022c2:	00 
  4022c3:	48 8d 35 26 00 00 00 	lea    0x26(%rip),%rsi        # 4022f0 <caml_curry4_3>
  4022ca:	48 89 30             	mov    %rsi,(%rax)
  4022cd:	48 c7 40 08 03 00 00 	movq   $0x3,0x8(%rax)
  4022d4:	00 
  4022d5:	48 89 78 10          	mov    %rdi,0x10(%rax)
  4022d9:	48 89 58 18          	mov    %rbx,0x18(%rax)
  4022dd:	48 83 c4 08          	add    $0x8,%rsp
  4022e1:	c3                   	retq   
  4022e2:	e8 39 78 01 00       	callq  419b20 <caml_call_gc>
  4022e7:	eb be                	jmp    4022a7 <caml_curry4_2+0x7>
  4022e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004022f0 <caml_curry4_3>:
  4022f0:	48 89 c6             	mov    %rax,%rsi
  4022f3:	48 8b 43 18          	mov    0x18(%rbx),%rax
  4022f7:	48 8b 48 20          	mov    0x20(%rax),%rcx
  4022fb:	48 8b 51 20          	mov    0x20(%rcx),%rdx
  4022ff:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
  402303:	48 8b 58 18          	mov    0x18(%rax),%rbx
  402307:	48 8b 41 18          	mov    0x18(%rcx),%rax
  40230b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
  40230f:	ff e1                	jmpq   *%rcx
  402311:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402316:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40231d:	00 00 00 

0000000000402320 <caml_curry3>:
  402320:	48 83 ec 08          	sub    $0x8,%rsp
  402324:	48 89 c7             	mov    %rax,%rdi
  402327:	49 83 ef 30          	sub    $0x30,%r15
  40232b:	48 8d 05 6e ab 22 00 	lea    0x22ab6e(%rip),%rax        # 62cea0 <caml_young_limit>
  402332:	4c 3b 38             	cmp    (%rax),%r15
  402335:	72 36                	jb     40236d <caml_curry3+0x4d>
  402337:	49 8d 47 08          	lea    0x8(%r15),%rax
  40233b:	48 c7 40 f8 f7 14 00 	movq   $0x14f7,-0x8(%rax)
  402342:	00 
  402343:	48 8d 35 56 00 00 00 	lea    0x56(%rip),%rsi        # 4023a0 <caml_curry3_1>
  40234a:	48 89 30             	mov    %rsi,(%rax)
  40234d:	48 c7 40 08 05 00 00 	movq   $0x5,0x8(%rax)
  402354:	00 
  402355:	48 8d 35 24 00 00 00 	lea    0x24(%rip),%rsi        # 402380 <caml_curry3_1_app>
  40235c:	48 89 70 10          	mov    %rsi,0x10(%rax)
  402360:	48 89 78 18          	mov    %rdi,0x18(%rax)
  402364:	48 89 58 20          	mov    %rbx,0x20(%rax)
  402368:	48 83 c4 08          	add    $0x8,%rsp
  40236c:	c3                   	retq   
  40236d:	e8 ae 77 01 00       	callq  419b20 <caml_call_gc>
  402372:	eb b3                	jmp    402327 <caml_curry3+0x7>
  402374:	66 90                	xchg   %ax,%ax
  402376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40237d:	00 00 00 

0000000000402380 <caml_curry3_1_app>:
  402380:	48 89 c2             	mov    %rax,%rdx
  402383:	48 89 d9             	mov    %rbx,%rcx
  402386:	48 8b 77 20          	mov    0x20(%rdi),%rsi
  40238a:	48 8b 47 18          	mov    0x18(%rdi),%rax
  40238e:	4c 8b 46 10          	mov    0x10(%rsi),%r8
  402392:	48 89 d3             	mov    %rdx,%rbx
  402395:	48 89 cf             	mov    %rcx,%rdi
  402398:	41 ff e0             	jmpq   *%r8
  40239b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004023a0 <caml_curry3_1>:
  4023a0:	48 83 ec 08          	sub    $0x8,%rsp
  4023a4:	48 89 c7             	mov    %rax,%rdi
  4023a7:	49 83 ef 28          	sub    $0x28,%r15
  4023ab:	48 8d 05 ee aa 22 00 	lea    0x22aaee(%rip),%rax        # 62cea0 <caml_young_limit>
  4023b2:	4c 3b 38             	cmp    (%rax),%r15
  4023b5:	72 2b                	jb     4023e2 <caml_curry3_1+0x42>
  4023b7:	49 8d 47 08          	lea    0x8(%r15),%rax
  4023bb:	48 c7 40 f8 f7 10 00 	movq   $0x10f7,-0x8(%rax)
  4023c2:	00 
  4023c3:	48 8d 35 26 00 00 00 	lea    0x26(%rip),%rsi        # 4023f0 <caml_curry3_2>
  4023ca:	48 89 30             	mov    %rsi,(%rax)
  4023cd:	48 c7 40 08 03 00 00 	movq   $0x3,0x8(%rax)
  4023d4:	00 
  4023d5:	48 89 78 10          	mov    %rdi,0x10(%rax)
  4023d9:	48 89 58 18          	mov    %rbx,0x18(%rax)
  4023dd:	48 83 c4 08          	add    $0x8,%rsp
  4023e1:	c3                   	retq   
  4023e2:	e8 39 77 01 00       	callq  419b20 <caml_call_gc>
  4023e7:	eb be                	jmp    4023a7 <caml_curry3_1+0x7>
  4023e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004023f0 <caml_curry3_2>:
  4023f0:	48 89 c7             	mov    %rax,%rdi
  4023f3:	48 8b 43 18          	mov    0x18(%rbx),%rax
  4023f7:	48 8b 70 20          	mov    0x20(%rax),%rsi
  4023fb:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
  4023ff:	48 8b 40 18          	mov    0x18(%rax),%rax
  402403:	48 8b 56 10          	mov    0x10(%rsi),%rdx
  402407:	ff e2                	jmpq   *%rdx
  402409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000402410 <caml_curry2>:
  402410:	48 83 ec 08          	sub    $0x8,%rsp
  402414:	48 89 c7             	mov    %rax,%rdi
  402417:	49 83 ef 28          	sub    $0x28,%r15
  40241b:	48 8d 05 7e aa 22 00 	lea    0x22aa7e(%rip),%rax        # 62cea0 <caml_young_limit>
  402422:	4c 3b 38             	cmp    (%rax),%r15
  402425:	72 2b                	jb     402452 <caml_curry2+0x42>
  402427:	49 8d 47 08          	lea    0x8(%r15),%rax
  40242b:	48 c7 40 f8 f7 10 00 	movq   $0x10f7,-0x8(%rax)
  402432:	00 
  402433:	48 8d 35 26 00 00 00 	lea    0x26(%rip),%rsi        # 402460 <caml_curry2_1>
  40243a:	48 89 30             	mov    %rsi,(%rax)
  40243d:	48 c7 40 08 03 00 00 	movq   $0x3,0x8(%rax)
  402444:	00 
  402445:	48 89 78 10          	mov    %rdi,0x10(%rax)
  402449:	48 89 58 18          	mov    %rbx,0x18(%rax)
  40244d:	48 83 c4 08          	add    $0x8,%rsp
  402451:	c3                   	retq   
  402452:	e8 c9 76 01 00       	callq  419b20 <caml_call_gc>
  402457:	eb be                	jmp    402417 <caml_curry2+0x7>
  402459:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000402460 <caml_curry2_1>:
  402460:	48 89 c6             	mov    %rax,%rsi
  402463:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
  402467:	48 8b 43 10          	mov    0x10(%rbx),%rax
  40246b:	48 8b 57 10          	mov    0x10(%rdi),%rdx
  40246f:	48 89 f3             	mov    %rsi,%rbx
  402472:	ff e2                	jmpq   *%rdx
  402474:	66 90                	xchg   %ax,%ax
  402476:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40247d:	00 00 00 

0000000000402480 <caml_apply3>:
  402480:	48 83 ec 18          	sub    $0x18,%rsp
  402484:	48 8b 56 08          	mov    0x8(%rsi),%rdx
  402488:	48 83 fa 07          	cmp    $0x7,%rdx
  40248c:	75 0a                	jne    402498 <caml_apply3+0x18>
  40248e:	48 8b 56 10          	mov    0x10(%rsi),%rdx
  402492:	48 83 c4 18          	add    $0x18,%rsp
  402496:	ff e2                	jmpq   *%rdx
  402498:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40249d:	48 89 1c 24          	mov    %rbx,(%rsp)
  4024a1:	48 8b 3e             	mov    (%rsi),%rdi
  4024a4:	48 89 f3             	mov    %rsi,%rbx
  4024a7:	ff d7                	callq  *%rdi
  4024a9:	48 89 c3             	mov    %rax,%rbx
  4024ac:	48 8b 3b             	mov    (%rbx),%rdi
  4024af:	48 8b 04 24          	mov    (%rsp),%rax
  4024b3:	ff d7                	callq  *%rdi
  4024b5:	48 89 c3             	mov    %rax,%rbx
  4024b8:	48 8b 3b             	mov    (%rbx),%rdi
  4024bb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4024c0:	48 83 c4 18          	add    $0x18,%rsp
  4024c4:	ff e7                	jmpq   *%rdi
  4024c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4024cd:	00 00 00 

00000000004024d0 <caml_apply2>:
  4024d0:	48 83 ec 08          	sub    $0x8,%rsp
  4024d4:	48 8b 77 08          	mov    0x8(%rdi),%rsi
  4024d8:	48 83 fe 05          	cmp    $0x5,%rsi
  4024dc:	75 0a                	jne    4024e8 <caml_apply2+0x18>
  4024de:	48 8b 77 10          	mov    0x10(%rdi),%rsi
  4024e2:	48 83 c4 08          	add    $0x8,%rsp
  4024e6:	ff e6                	jmpq   *%rsi
  4024e8:	48 89 1c 24          	mov    %rbx,(%rsp)
  4024ec:	48 8b 37             	mov    (%rdi),%rsi
  4024ef:	48 89 fb             	mov    %rdi,%rbx
  4024f2:	ff d6                	callq  *%rsi
  4024f4:	48 89 c3             	mov    %rax,%rbx
  4024f7:	48 8b 3b             	mov    (%rbx),%rdi
  4024fa:	48 8b 04 24          	mov    (%rsp),%rax
  4024fe:	48 83 c4 08          	add    $0x8,%rsp
  402502:	ff e7                	jmpq   *%rdi

0000000000402504 <caml_startup__code_end>:
  402504:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40250b:	00 00 00 
  40250e:	66 90                	xchg   %ax,%ax

0000000000402510 <camlStd_exit__entry>:
  402510:	48 83 ec 08          	sub    $0x8,%rsp
  402514:	48 8d 05 6d 81 22 00 	lea    0x22816d(%rip),%rax        # 62a688 <camlPervasives>
  40251b:	48 8b 80 b0 02 00 00 	mov    0x2b0(%rax),%rax
  402522:	48 8b 18             	mov    (%rax),%rbx
  402525:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40252c:	48 8b 3b             	mov    (%rbx),%rdi
  40252f:	ff d7                	callq  *%rdi
  402531:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  402538:	48 83 c4 08          	add    $0x8,%rsp
  40253c:	c3                   	retq   

000000000040253d <camlStd_exit__code_end>:
  40253d:	0f 1f 00             	nopl   (%rax)

0000000000402540 <camlFib__fib_1199>:
  402540:	48 83 ec 18          	sub    $0x18,%rsp
  402544:	48 83 f8 01          	cmp    $0x1,%rax
  402548:	74 36                	je     402580 <camlFib__fib_1199+0x40>
  40254a:	48 83 f8 03          	cmp    $0x3,%rax
  40254e:	74 30                	je     402580 <camlFib__fib_1199+0x40>
  402550:	48 89 04 24          	mov    %rax,(%rsp)
  402554:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
  402558:	e8 e3 ff ff ff       	callq  402540 <camlFib__fib_1199>
  40255d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  402562:	48 8b 04 24          	mov    (%rsp),%rax
  402566:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
  40256a:	e8 d1 ff ff ff       	callq  402540 <camlFib__fib_1199>
  40256f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  402574:	48 01 d8             	add    %rbx,%rax
  402577:	48 ff c8             	dec    %rax
  40257a:	48 83 c4 18          	add    $0x18,%rsp
  40257e:	c3                   	retq   
  40257f:	90                   	nop
  402580:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
  402587:	48 83 c4 18          	add    $0x18,%rsp
  40258b:	c3                   	retq   
  40258c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402590 <camlFib__entry>:
  402590:	48 83 ec 08          	sub    $0x8,%rsp
  402594:	48 8d 05 2d 73 22 00 	lea    0x22732d(%rip),%rax        # 6298c8 <camlFib__1>
  40259b:	48 8d 1d 06 73 22 00 	lea    0x227306(%rip),%rbx        # 6298a8 <camlFib>
  4025a2:	48 89 03             	mov    %rax,(%rbx)
  4025a5:	48 c7 c0 15 00 00 00 	mov    $0x15,%rax
  4025ac:	e8 8f ff ff ff       	callq  402540 <camlFib__fib_1199>
  4025b1:	e8 aa 15 00 00       	callq  403b60 <camlPervasives__string_of_int_1146>
  4025b6:	48 89 c3             	mov    %rax,%rbx
  4025b9:	48 8d 05 c8 80 22 00 	lea    0x2280c8(%rip),%rax        # 62a688 <camlPervasives>
  4025c0:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  4025c7:	e8 e4 18 00 00       	callq  403eb0 <camlPervasives__output_string_1203>
  4025cc:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4025d3:	48 83 c4 08          	add    $0x8,%rsp
  4025d7:	c3                   	retq   

00000000004025d8 <camlFib__code_end>:
  4025d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4025df:	00 

00000000004025e0 <camlCamlinternalFormatBasics__erase_rel_1146>:
  4025e0:	48 83 ec 08          	sub    $0x8,%rsp
  4025e4:	48 89 c3             	mov    %rax,%rbx
  4025e7:	f6 c3 01             	test   $0x1,%bl
  4025ea:	74 0c                	je     4025f8 <camlCamlinternalFormatBasics__erase_rel_1146+0x18>
  4025ec:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4025f3:	48 83 c4 08          	add    $0x8,%rsp
  4025f7:	c3                   	retq   
  4025f8:	48 89 1c 24          	mov    %rbx,(%rsp)
  4025fc:	48 0f b6 43 f8       	movzbq -0x8(%rbx),%rax
  402601:	48 8d 15 c8 b2 01 00 	lea    0x1b2c8(%rip),%rdx        # 41d8d0 <caml_absf_mask+0x10>
  402608:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
  40260c:	48 01 c2             	add    %rax,%rdx
  40260f:	ff e2                	jmpq   *%rdx
  402611:	0f 1f 00             	nopl   (%rax)
  402614:	48 8b 03             	mov    (%rbx),%rax
  402617:	e8 c4 ff ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  40261c:	48 89 c3             	mov    %rax,%rbx
  40261f:	49 83 ef 10          	sub    $0x10,%r15
  402623:	48 8d 05 76 a8 22 00 	lea    0x22a876(%rip),%rax        # 62cea0 <caml_young_limit>
  40262a:	4c 3b 38             	cmp    (%rax),%r15
  40262d:	0f 82 8a 03 00 00    	jb     4029bd <camlCamlinternalFormatBasics__erase_rel_1146+0x3dd>
  402633:	49 8d 47 08          	lea    0x8(%r15),%rax
  402637:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
  40263e:	00 
  40263f:	48 89 18             	mov    %rbx,(%rax)
  402642:	48 83 c4 08          	add    $0x8,%rsp
  402646:	c3                   	retq   
  402647:	90                   	nop
  402648:	48 8b 03             	mov    (%rbx),%rax
  40264b:	e8 90 ff ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402650:	48 89 c3             	mov    %rax,%rbx
  402653:	49 83 ef 10          	sub    $0x10,%r15
  402657:	48 8d 05 42 a8 22 00 	lea    0x22a842(%rip),%rax        # 62cea0 <caml_young_limit>
  40265e:	4c 3b 38             	cmp    (%rax),%r15
  402661:	0f 82 4c 03 00 00    	jb     4029b3 <camlCamlinternalFormatBasics__erase_rel_1146+0x3d3>
  402667:	49 8d 47 08          	lea    0x8(%r15),%rax
  40266b:	48 c7 40 f8 01 04 00 	movq   $0x401,-0x8(%rax)
  402672:	00 
  402673:	48 89 18             	mov    %rbx,(%rax)
  402676:	48 83 c4 08          	add    $0x8,%rsp
  40267a:	c3                   	retq   
  40267b:	90                   	nop
  40267c:	48 8b 03             	mov    (%rbx),%rax
  40267f:	e8 5c ff ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402684:	48 89 c3             	mov    %rax,%rbx
  402687:	49 83 ef 10          	sub    $0x10,%r15
  40268b:	48 8d 05 0e a8 22 00 	lea    0x22a80e(%rip),%rax        # 62cea0 <caml_young_limit>
  402692:	4c 3b 38             	cmp    (%rax),%r15
  402695:	0f 82 0e 03 00 00    	jb     4029a9 <camlCamlinternalFormatBasics__erase_rel_1146+0x3c9>
  40269b:	49 8d 47 08          	lea    0x8(%r15),%rax
  40269f:	48 c7 40 f8 02 04 00 	movq   $0x402,-0x8(%rax)
  4026a6:	00 
  4026a7:	48 89 18             	mov    %rbx,(%rax)
  4026aa:	48 83 c4 08          	add    $0x8,%rsp
  4026ae:	c3                   	retq   
  4026af:	90                   	nop
  4026b0:	48 8b 03             	mov    (%rbx),%rax
  4026b3:	e8 28 ff ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  4026b8:	48 89 c3             	mov    %rax,%rbx
  4026bb:	49 83 ef 10          	sub    $0x10,%r15
  4026bf:	48 8d 05 da a7 22 00 	lea    0x22a7da(%rip),%rax        # 62cea0 <caml_young_limit>
  4026c6:	4c 3b 38             	cmp    (%rax),%r15
  4026c9:	0f 82 d0 02 00 00    	jb     40299f <camlCamlinternalFormatBasics__erase_rel_1146+0x3bf>
  4026cf:	49 8d 47 08          	lea    0x8(%r15),%rax
  4026d3:	48 c7 40 f8 03 04 00 	movq   $0x403,-0x8(%rax)
  4026da:	00 
  4026db:	48 89 18             	mov    %rbx,(%rax)
  4026de:	48 83 c4 08          	add    $0x8,%rsp
  4026e2:	c3                   	retq   
  4026e3:	90                   	nop
  4026e4:	48 8b 03             	mov    (%rbx),%rax
  4026e7:	e8 f4 fe ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  4026ec:	48 89 c3             	mov    %rax,%rbx
  4026ef:	49 83 ef 10          	sub    $0x10,%r15
  4026f3:	48 8d 05 a6 a7 22 00 	lea    0x22a7a6(%rip),%rax        # 62cea0 <caml_young_limit>
  4026fa:	4c 3b 38             	cmp    (%rax),%r15
  4026fd:	0f 82 92 02 00 00    	jb     402995 <camlCamlinternalFormatBasics__erase_rel_1146+0x3b5>
  402703:	49 8d 47 08          	lea    0x8(%r15),%rax
  402707:	48 c7 40 f8 04 04 00 	movq   $0x404,-0x8(%rax)
  40270e:	00 
  40270f:	48 89 18             	mov    %rbx,(%rax)
  402712:	48 83 c4 08          	add    $0x8,%rsp
  402716:	c3                   	retq   
  402717:	90                   	nop
  402718:	48 8b 03             	mov    (%rbx),%rax
  40271b:	e8 c0 fe ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402720:	48 89 c3             	mov    %rax,%rbx
  402723:	49 83 ef 10          	sub    $0x10,%r15
  402727:	48 8d 05 72 a7 22 00 	lea    0x22a772(%rip),%rax        # 62cea0 <caml_young_limit>
  40272e:	4c 3b 38             	cmp    (%rax),%r15
  402731:	0f 82 54 02 00 00    	jb     40298b <camlCamlinternalFormatBasics__erase_rel_1146+0x3ab>
  402737:	49 8d 47 08          	lea    0x8(%r15),%rax
  40273b:	48 c7 40 f8 05 04 00 	movq   $0x405,-0x8(%rax)
  402742:	00 
  402743:	48 89 18             	mov    %rbx,(%rax)
  402746:	48 83 c4 08          	add    $0x8,%rsp
  40274a:	c3                   	retq   
  40274b:	90                   	nop
  40274c:	48 8b 03             	mov    (%rbx),%rax
  40274f:	e8 8c fe ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402754:	48 89 c3             	mov    %rax,%rbx
  402757:	49 83 ef 10          	sub    $0x10,%r15
  40275b:	48 8d 05 3e a7 22 00 	lea    0x22a73e(%rip),%rax        # 62cea0 <caml_young_limit>
  402762:	4c 3b 38             	cmp    (%rax),%r15
  402765:	0f 82 16 02 00 00    	jb     402981 <camlCamlinternalFormatBasics__erase_rel_1146+0x3a1>
  40276b:	49 8d 47 08          	lea    0x8(%r15),%rax
  40276f:	48 c7 40 f8 06 04 00 	movq   $0x406,-0x8(%rax)
  402776:	00 
  402777:	48 89 18             	mov    %rbx,(%rax)
  40277a:	48 83 c4 08          	add    $0x8,%rsp
  40277e:	c3                   	retq   
  40277f:	90                   	nop
  402780:	48 8b 03             	mov    (%rbx),%rax
  402783:	e8 58 fe ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402788:	48 89 c3             	mov    %rax,%rbx
  40278b:	49 83 ef 10          	sub    $0x10,%r15
  40278f:	48 8d 05 0a a7 22 00 	lea    0x22a70a(%rip),%rax        # 62cea0 <caml_young_limit>
  402796:	4c 3b 38             	cmp    (%rax),%r15
  402799:	0f 82 d8 01 00 00    	jb     402977 <camlCamlinternalFormatBasics__erase_rel_1146+0x397>
  40279f:	49 8d 47 08          	lea    0x8(%r15),%rax
  4027a3:	48 c7 40 f8 07 04 00 	movq   $0x407,-0x8(%rax)
  4027aa:	00 
  4027ab:	48 89 18             	mov    %rbx,(%rax)
  4027ae:	48 83 c4 08          	add    $0x8,%rsp
  4027b2:	c3                   	retq   
  4027b3:	90                   	nop
  4027b4:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4027b8:	e8 23 fe ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  4027bd:	48 89 c3             	mov    %rax,%rbx
  4027c0:	49 83 ef 18          	sub    $0x18,%r15
  4027c4:	48 8d 05 d5 a6 22 00 	lea    0x22a6d5(%rip),%rax        # 62cea0 <caml_young_limit>
  4027cb:	4c 3b 38             	cmp    (%rax),%r15
  4027ce:	0f 82 99 01 00 00    	jb     40296d <camlCamlinternalFormatBasics__erase_rel_1146+0x38d>
  4027d4:	49 8d 47 08          	lea    0x8(%r15),%rax
  4027d8:	48 c7 40 f8 08 08 00 	movq   $0x808,-0x8(%rax)
  4027df:	00 
  4027e0:	48 8b 3c 24          	mov    (%rsp),%rdi
  4027e4:	48 8b 3f             	mov    (%rdi),%rdi
  4027e7:	48 89 38             	mov    %rdi,(%rax)
  4027ea:	48 89 58 08          	mov    %rbx,0x8(%rax)
  4027ee:	48 83 c4 08          	add    $0x8,%rsp
  4027f2:	c3                   	retq   
  4027f3:	90                   	nop
  4027f4:	48 8b 03             	mov    (%rbx),%rax
  4027f7:	48 89 04 24          	mov    %rax,(%rsp)
  4027fb:	48 8b 43 10          	mov    0x10(%rbx),%rax
  4027ff:	e8 dc fd ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402804:	48 89 c3             	mov    %rax,%rbx
  402807:	49 83 ef 20          	sub    $0x20,%r15
  40280b:	48 8d 05 8e a6 22 00 	lea    0x22a68e(%rip),%rax        # 62cea0 <caml_young_limit>
  402812:	4c 3b 38             	cmp    (%rax),%r15
  402815:	0f 82 48 01 00 00    	jb     402963 <camlCamlinternalFormatBasics__erase_rel_1146+0x383>
  40281b:	49 8d 47 08          	lea    0x8(%r15),%rax
  40281f:	48 c7 40 f8 09 0c 00 	movq   $0xc09,-0x8(%rax)
  402826:	00 
  402827:	48 8b 3c 24          	mov    (%rsp),%rdi
  40282b:	48 89 38             	mov    %rdi,(%rax)
  40282e:	48 89 78 08          	mov    %rdi,0x8(%rax)
  402832:	48 89 58 10          	mov    %rbx,0x10(%rax)
  402836:	48 83 c4 08          	add    $0x8,%rsp
  40283a:	c3                   	retq   
  40283b:	90                   	nop
  40283c:	48 8b 03             	mov    (%rbx),%rax
  40283f:	e8 9c fd ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402844:	48 89 c3             	mov    %rax,%rbx
  402847:	49 83 ef 10          	sub    $0x10,%r15
  40284b:	48 8d 05 4e a6 22 00 	lea    0x22a64e(%rip),%rax        # 62cea0 <caml_young_limit>
  402852:	4c 3b 38             	cmp    (%rax),%r15
  402855:	0f 82 fe 00 00 00    	jb     402959 <camlCamlinternalFormatBasics__erase_rel_1146+0x379>
  40285b:	49 8d 47 08          	lea    0x8(%r15),%rax
  40285f:	48 c7 40 f8 0a 04 00 	movq   $0x40a,-0x8(%rax)
  402866:	00 
  402867:	48 89 18             	mov    %rbx,(%rax)
  40286a:	48 83 c4 08          	add    $0x8,%rsp
  40286e:	c3                   	retq   
  40286f:	90                   	nop
  402870:	48 8b 03             	mov    (%rbx),%rax
  402873:	e8 68 fd ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402878:	48 89 c3             	mov    %rax,%rbx
  40287b:	49 83 ef 10          	sub    $0x10,%r15
  40287f:	48 8d 05 1a a6 22 00 	lea    0x22a61a(%rip),%rax        # 62cea0 <caml_young_limit>
  402886:	4c 3b 38             	cmp    (%rax),%r15
  402889:	0f 82 c0 00 00 00    	jb     40294f <camlCamlinternalFormatBasics__erase_rel_1146+0x36f>
  40288f:	49 8d 47 08          	lea    0x8(%r15),%rax
  402893:	48 c7 40 f8 0b 04 00 	movq   $0x40b,-0x8(%rax)
  40289a:	00 
  40289b:	48 89 18             	mov    %rbx,(%rax)
  40289e:	48 83 c4 08          	add    $0x8,%rsp
  4028a2:	c3                   	retq   
  4028a3:	90                   	nop
  4028a4:	48 8b 03             	mov    (%rbx),%rax
  4028a7:	e8 34 fd ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  4028ac:	48 89 c3             	mov    %rax,%rbx
  4028af:	49 83 ef 10          	sub    $0x10,%r15
  4028b3:	48 8d 05 e6 a5 22 00 	lea    0x22a5e6(%rip),%rax        # 62cea0 <caml_young_limit>
  4028ba:	4c 3b 38             	cmp    (%rax),%r15
  4028bd:	0f 82 82 00 00 00    	jb     402945 <camlCamlinternalFormatBasics__erase_rel_1146+0x365>
  4028c3:	49 8d 47 08          	lea    0x8(%r15),%rax
  4028c7:	48 c7 40 f8 0c 04 00 	movq   $0x40c,-0x8(%rax)
  4028ce:	00 
  4028cf:	48 89 18             	mov    %rbx,(%rax)
  4028d2:	48 83 c4 08          	add    $0x8,%rsp
  4028d6:	c3                   	retq   
  4028d7:	90                   	nop
  4028d8:	48 8b 03             	mov    (%rbx),%rax
  4028db:	e8 00 fd ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  4028e0:	48 89 c3             	mov    %rax,%rbx
  4028e3:	49 83 ef 10          	sub    $0x10,%r15
  4028e7:	48 8d 05 b2 a5 22 00 	lea    0x22a5b2(%rip),%rax        # 62cea0 <caml_young_limit>
  4028ee:	4c 3b 38             	cmp    (%rax),%r15
  4028f1:	72 4b                	jb     40293e <camlCamlinternalFormatBasics__erase_rel_1146+0x35e>
  4028f3:	49 8d 47 08          	lea    0x8(%r15),%rax
  4028f7:	48 c7 40 f8 0d 04 00 	movq   $0x40d,-0x8(%rax)
  4028fe:	00 
  4028ff:	48 89 18             	mov    %rbx,(%rax)
  402902:	48 83 c4 08          	add    $0x8,%rsp
  402906:	c3                   	retq   
  402907:	90                   	nop
  402908:	48 8b 03             	mov    (%rbx),%rax
  40290b:	e8 d0 fc ff ff       	callq  4025e0 <camlCamlinternalFormatBasics__erase_rel_1146>
  402910:	48 89 c3             	mov    %rax,%rbx
  402913:	49 83 ef 10          	sub    $0x10,%r15
  402917:	48 8d 05 82 a5 22 00 	lea    0x22a582(%rip),%rax        # 62cea0 <caml_young_limit>
  40291e:	4c 3b 38             	cmp    (%rax),%r15
  402921:	72 14                	jb     402937 <camlCamlinternalFormatBasics__erase_rel_1146+0x357>
  402923:	49 8d 47 08          	lea    0x8(%r15),%rax
  402927:	48 c7 40 f8 0e 04 00 	movq   $0x40e,-0x8(%rax)
  40292e:	00 
  40292f:	48 89 18             	mov    %rbx,(%rax)
  402932:	48 83 c4 08          	add    $0x8,%rsp
  402936:	c3                   	retq   
  402937:	e8 e4 71 01 00       	callq  419b20 <caml_call_gc>
  40293c:	eb d5                	jmp    402913 <camlCamlinternalFormatBasics__erase_rel_1146+0x333>
  40293e:	e8 dd 71 01 00       	callq  419b20 <caml_call_gc>
  402943:	eb 9e                	jmp    4028e3 <camlCamlinternalFormatBasics__erase_rel_1146+0x303>
  402945:	e8 d6 71 01 00       	callq  419b20 <caml_call_gc>
  40294a:	e9 60 ff ff ff       	jmpq   4028af <camlCamlinternalFormatBasics__erase_rel_1146+0x2cf>
  40294f:	e8 cc 71 01 00       	callq  419b20 <caml_call_gc>
  402954:	e9 22 ff ff ff       	jmpq   40287b <camlCamlinternalFormatBasics__erase_rel_1146+0x29b>
  402959:	e8 c2 71 01 00       	callq  419b20 <caml_call_gc>
  40295e:	e9 e4 fe ff ff       	jmpq   402847 <camlCamlinternalFormatBasics__erase_rel_1146+0x267>
  402963:	e8 b8 71 01 00       	callq  419b20 <caml_call_gc>
  402968:	e9 9a fe ff ff       	jmpq   402807 <camlCamlinternalFormatBasics__erase_rel_1146+0x227>
  40296d:	e8 ae 71 01 00       	callq  419b20 <caml_call_gc>
  402972:	e9 49 fe ff ff       	jmpq   4027c0 <camlCamlinternalFormatBasics__erase_rel_1146+0x1e0>
  402977:	e8 a4 71 01 00       	callq  419b20 <caml_call_gc>
  40297c:	e9 0a fe ff ff       	jmpq   40278b <camlCamlinternalFormatBasics__erase_rel_1146+0x1ab>
  402981:	e8 9a 71 01 00       	callq  419b20 <caml_call_gc>
  402986:	e9 cc fd ff ff       	jmpq   402757 <camlCamlinternalFormatBasics__erase_rel_1146+0x177>
  40298b:	e8 90 71 01 00       	callq  419b20 <caml_call_gc>
  402990:	e9 8e fd ff ff       	jmpq   402723 <camlCamlinternalFormatBasics__erase_rel_1146+0x143>
  402995:	e8 86 71 01 00       	callq  419b20 <caml_call_gc>
  40299a:	e9 50 fd ff ff       	jmpq   4026ef <camlCamlinternalFormatBasics__erase_rel_1146+0x10f>
  40299f:	e8 7c 71 01 00       	callq  419b20 <caml_call_gc>
  4029a4:	e9 12 fd ff ff       	jmpq   4026bb <camlCamlinternalFormatBasics__erase_rel_1146+0xdb>
  4029a9:	e8 72 71 01 00       	callq  419b20 <caml_call_gc>
  4029ae:	e9 d4 fc ff ff       	jmpq   402687 <camlCamlinternalFormatBasics__erase_rel_1146+0xa7>
  4029b3:	e8 68 71 01 00       	callq  419b20 <caml_call_gc>
  4029b8:	e9 96 fc ff ff       	jmpq   402653 <camlCamlinternalFormatBasics__erase_rel_1146+0x73>
  4029bd:	e8 5e 71 01 00       	callq  419b20 <caml_call_gc>
  4029c2:	e9 58 fc ff ff       	jmpq   40261f <camlCamlinternalFormatBasics__erase_rel_1146+0x3f>
  4029c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4029ce:	00 00 

00000000004029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>:
  4029d0:	48 83 ec 08          	sub    $0x8,%rsp
  4029d4:	48 89 c7             	mov    %rax,%rdi
  4029d7:	40 f6 c7 01          	test   $0x1,%dil
  4029db:	74 0b                	je     4029e8 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x18>
  4029dd:	48 89 d8             	mov    %rbx,%rax
  4029e0:	48 83 c4 08          	add    $0x8,%rsp
  4029e4:	c3                   	retq   
  4029e5:	0f 1f 00             	nopl   (%rax)
  4029e8:	48 89 3c 24          	mov    %rdi,(%rsp)
  4029ec:	48 0f b6 47 f8       	movzbq -0x8(%rdi),%rax
  4029f1:	48 8d 15 14 af 01 00 	lea    0x1af14(%rip),%rdx        # 41d90c <caml_absf_mask+0x4c>
  4029f8:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
  4029fc:	48 01 c2             	add    %rax,%rdx
  4029ff:	ff e2                	jmpq   *%rdx
  402a01:	0f 1f 00             	nopl   (%rax)
  402a04:	48 8b 07             	mov    (%rdi),%rax
  402a07:	e8 c4 ff ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402a0c:	48 89 c3             	mov    %rax,%rbx
  402a0f:	49 83 ef 10          	sub    $0x10,%r15
  402a13:	48 8d 05 86 a4 22 00 	lea    0x22a486(%rip),%rax        # 62cea0 <caml_young_limit>
  402a1a:	4c 3b 38             	cmp    (%rax),%r15
  402a1d:	0f 82 8a 03 00 00    	jb     402dad <camlCamlinternalFormatBasics__concat_fmtty_1239+0x3dd>
  402a23:	49 8d 47 08          	lea    0x8(%r15),%rax
  402a27:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
  402a2e:	00 
  402a2f:	48 89 18             	mov    %rbx,(%rax)
  402a32:	48 83 c4 08          	add    $0x8,%rsp
  402a36:	c3                   	retq   
  402a37:	90                   	nop
  402a38:	48 8b 07             	mov    (%rdi),%rax
  402a3b:	e8 90 ff ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402a40:	48 89 c3             	mov    %rax,%rbx
  402a43:	49 83 ef 10          	sub    $0x10,%r15
  402a47:	48 8d 05 52 a4 22 00 	lea    0x22a452(%rip),%rax        # 62cea0 <caml_young_limit>
  402a4e:	4c 3b 38             	cmp    (%rax),%r15
  402a51:	0f 82 4c 03 00 00    	jb     402da3 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x3d3>
  402a57:	49 8d 47 08          	lea    0x8(%r15),%rax
  402a5b:	48 c7 40 f8 01 04 00 	movq   $0x401,-0x8(%rax)
  402a62:	00 
  402a63:	48 89 18             	mov    %rbx,(%rax)
  402a66:	48 83 c4 08          	add    $0x8,%rsp
  402a6a:	c3                   	retq   
  402a6b:	90                   	nop
  402a6c:	48 8b 07             	mov    (%rdi),%rax
  402a6f:	e8 5c ff ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402a74:	48 89 c3             	mov    %rax,%rbx
  402a77:	49 83 ef 10          	sub    $0x10,%r15
  402a7b:	48 8d 05 1e a4 22 00 	lea    0x22a41e(%rip),%rax        # 62cea0 <caml_young_limit>
  402a82:	4c 3b 38             	cmp    (%rax),%r15
  402a85:	0f 82 0e 03 00 00    	jb     402d99 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x3c9>
  402a8b:	49 8d 47 08          	lea    0x8(%r15),%rax
  402a8f:	48 c7 40 f8 02 04 00 	movq   $0x402,-0x8(%rax)
  402a96:	00 
  402a97:	48 89 18             	mov    %rbx,(%rax)
  402a9a:	48 83 c4 08          	add    $0x8,%rsp
  402a9e:	c3                   	retq   
  402a9f:	90                   	nop
  402aa0:	48 8b 07             	mov    (%rdi),%rax
  402aa3:	e8 28 ff ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402aa8:	48 89 c3             	mov    %rax,%rbx
  402aab:	49 83 ef 10          	sub    $0x10,%r15
  402aaf:	48 8d 05 ea a3 22 00 	lea    0x22a3ea(%rip),%rax        # 62cea0 <caml_young_limit>
  402ab6:	4c 3b 38             	cmp    (%rax),%r15
  402ab9:	0f 82 d0 02 00 00    	jb     402d8f <camlCamlinternalFormatBasics__concat_fmtty_1239+0x3bf>
  402abf:	49 8d 47 08          	lea    0x8(%r15),%rax
  402ac3:	48 c7 40 f8 03 04 00 	movq   $0x403,-0x8(%rax)
  402aca:	00 
  402acb:	48 89 18             	mov    %rbx,(%rax)
  402ace:	48 83 c4 08          	add    $0x8,%rsp
  402ad2:	c3                   	retq   
  402ad3:	90                   	nop
  402ad4:	48 8b 07             	mov    (%rdi),%rax
  402ad7:	e8 f4 fe ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402adc:	48 89 c3             	mov    %rax,%rbx
  402adf:	49 83 ef 10          	sub    $0x10,%r15
  402ae3:	48 8d 05 b6 a3 22 00 	lea    0x22a3b6(%rip),%rax        # 62cea0 <caml_young_limit>
  402aea:	4c 3b 38             	cmp    (%rax),%r15
  402aed:	0f 82 92 02 00 00    	jb     402d85 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x3b5>
  402af3:	49 8d 47 08          	lea    0x8(%r15),%rax
  402af7:	48 c7 40 f8 04 04 00 	movq   $0x404,-0x8(%rax)
  402afe:	00 
  402aff:	48 89 18             	mov    %rbx,(%rax)
  402b02:	48 83 c4 08          	add    $0x8,%rsp
  402b06:	c3                   	retq   
  402b07:	90                   	nop
  402b08:	48 8b 07             	mov    (%rdi),%rax
  402b0b:	e8 c0 fe ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402b10:	48 89 c3             	mov    %rax,%rbx
  402b13:	49 83 ef 10          	sub    $0x10,%r15
  402b17:	48 8d 05 82 a3 22 00 	lea    0x22a382(%rip),%rax        # 62cea0 <caml_young_limit>
  402b1e:	4c 3b 38             	cmp    (%rax),%r15
  402b21:	0f 82 54 02 00 00    	jb     402d7b <camlCamlinternalFormatBasics__concat_fmtty_1239+0x3ab>
  402b27:	49 8d 47 08          	lea    0x8(%r15),%rax
  402b2b:	48 c7 40 f8 05 04 00 	movq   $0x405,-0x8(%rax)
  402b32:	00 
  402b33:	48 89 18             	mov    %rbx,(%rax)
  402b36:	48 83 c4 08          	add    $0x8,%rsp
  402b3a:	c3                   	retq   
  402b3b:	90                   	nop
  402b3c:	48 8b 07             	mov    (%rdi),%rax
  402b3f:	e8 8c fe ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402b44:	48 89 c3             	mov    %rax,%rbx
  402b47:	49 83 ef 10          	sub    $0x10,%r15
  402b4b:	48 8d 05 4e a3 22 00 	lea    0x22a34e(%rip),%rax        # 62cea0 <caml_young_limit>
  402b52:	4c 3b 38             	cmp    (%rax),%r15
  402b55:	0f 82 16 02 00 00    	jb     402d71 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x3a1>
  402b5b:	49 8d 47 08          	lea    0x8(%r15),%rax
  402b5f:	48 c7 40 f8 06 04 00 	movq   $0x406,-0x8(%rax)
  402b66:	00 
  402b67:	48 89 18             	mov    %rbx,(%rax)
  402b6a:	48 83 c4 08          	add    $0x8,%rsp
  402b6e:	c3                   	retq   
  402b6f:	90                   	nop
  402b70:	48 8b 07             	mov    (%rdi),%rax
  402b73:	e8 58 fe ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402b78:	48 89 c3             	mov    %rax,%rbx
  402b7b:	49 83 ef 10          	sub    $0x10,%r15
  402b7f:	48 8d 05 1a a3 22 00 	lea    0x22a31a(%rip),%rax        # 62cea0 <caml_young_limit>
  402b86:	4c 3b 38             	cmp    (%rax),%r15
  402b89:	0f 82 d8 01 00 00    	jb     402d67 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x397>
  402b8f:	49 8d 47 08          	lea    0x8(%r15),%rax
  402b93:	48 c7 40 f8 07 04 00 	movq   $0x407,-0x8(%rax)
  402b9a:	00 
  402b9b:	48 89 18             	mov    %rbx,(%rax)
  402b9e:	48 83 c4 08          	add    $0x8,%rsp
  402ba2:	c3                   	retq   
  402ba3:	90                   	nop
  402ba4:	48 8b 47 08          	mov    0x8(%rdi),%rax
  402ba8:	e8 23 fe ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402bad:	48 89 c3             	mov    %rax,%rbx
  402bb0:	49 83 ef 18          	sub    $0x18,%r15
  402bb4:	48 8d 05 e5 a2 22 00 	lea    0x22a2e5(%rip),%rax        # 62cea0 <caml_young_limit>
  402bbb:	4c 3b 38             	cmp    (%rax),%r15
  402bbe:	0f 82 99 01 00 00    	jb     402d5d <camlCamlinternalFormatBasics__concat_fmtty_1239+0x38d>
  402bc4:	49 8d 47 08          	lea    0x8(%r15),%rax
  402bc8:	48 c7 40 f8 08 08 00 	movq   $0x808,-0x8(%rax)
  402bcf:	00 
  402bd0:	48 8b 3c 24          	mov    (%rsp),%rdi
  402bd4:	48 8b 3f             	mov    (%rdi),%rdi
  402bd7:	48 89 38             	mov    %rdi,(%rax)
  402bda:	48 89 58 08          	mov    %rbx,0x8(%rax)
  402bde:	48 83 c4 08          	add    $0x8,%rsp
  402be2:	c3                   	retq   
  402be3:	90                   	nop
  402be4:	48 8b 47 10          	mov    0x10(%rdi),%rax
  402be8:	e8 e3 fd ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402bed:	48 89 c3             	mov    %rax,%rbx
  402bf0:	49 83 ef 20          	sub    $0x20,%r15
  402bf4:	48 8d 05 a5 a2 22 00 	lea    0x22a2a5(%rip),%rax        # 62cea0 <caml_young_limit>
  402bfb:	4c 3b 38             	cmp    (%rax),%r15
  402bfe:	0f 82 4f 01 00 00    	jb     402d53 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x383>
  402c04:	49 8d 47 08          	lea    0x8(%r15),%rax
  402c08:	48 c7 40 f8 09 0c 00 	movq   $0xc09,-0x8(%rax)
  402c0f:	00 
  402c10:	48 8b 34 24          	mov    (%rsp),%rsi
  402c14:	48 8b 3e             	mov    (%rsi),%rdi
  402c17:	48 89 38             	mov    %rdi,(%rax)
  402c1a:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  402c1e:	48 89 78 08          	mov    %rdi,0x8(%rax)
  402c22:	48 89 58 10          	mov    %rbx,0x10(%rax)
  402c26:	48 83 c4 08          	add    $0x8,%rsp
  402c2a:	c3                   	retq   
  402c2b:	90                   	nop
  402c2c:	48 8b 07             	mov    (%rdi),%rax
  402c2f:	e8 9c fd ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402c34:	48 89 c3             	mov    %rax,%rbx
  402c37:	49 83 ef 10          	sub    $0x10,%r15
  402c3b:	48 8d 05 5e a2 22 00 	lea    0x22a25e(%rip),%rax        # 62cea0 <caml_young_limit>
  402c42:	4c 3b 38             	cmp    (%rax),%r15
  402c45:	0f 82 fe 00 00 00    	jb     402d49 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x379>
  402c4b:	49 8d 47 08          	lea    0x8(%r15),%rax
  402c4f:	48 c7 40 f8 0a 04 00 	movq   $0x40a,-0x8(%rax)
  402c56:	00 
  402c57:	48 89 18             	mov    %rbx,(%rax)
  402c5a:	48 83 c4 08          	add    $0x8,%rsp
  402c5e:	c3                   	retq   
  402c5f:	90                   	nop
  402c60:	48 8b 07             	mov    (%rdi),%rax
  402c63:	e8 68 fd ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402c68:	48 89 c3             	mov    %rax,%rbx
  402c6b:	49 83 ef 10          	sub    $0x10,%r15
  402c6f:	48 8d 05 2a a2 22 00 	lea    0x22a22a(%rip),%rax        # 62cea0 <caml_young_limit>
  402c76:	4c 3b 38             	cmp    (%rax),%r15
  402c79:	0f 82 c0 00 00 00    	jb     402d3f <camlCamlinternalFormatBasics__concat_fmtty_1239+0x36f>
  402c7f:	49 8d 47 08          	lea    0x8(%r15),%rax
  402c83:	48 c7 40 f8 0b 04 00 	movq   $0x40b,-0x8(%rax)
  402c8a:	00 
  402c8b:	48 89 18             	mov    %rbx,(%rax)
  402c8e:	48 83 c4 08          	add    $0x8,%rsp
  402c92:	c3                   	retq   
  402c93:	90                   	nop
  402c94:	48 8b 07             	mov    (%rdi),%rax
  402c97:	e8 34 fd ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402c9c:	48 89 c3             	mov    %rax,%rbx
  402c9f:	49 83 ef 10          	sub    $0x10,%r15
  402ca3:	48 8d 05 f6 a1 22 00 	lea    0x22a1f6(%rip),%rax        # 62cea0 <caml_young_limit>
  402caa:	4c 3b 38             	cmp    (%rax),%r15
  402cad:	0f 82 82 00 00 00    	jb     402d35 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x365>
  402cb3:	49 8d 47 08          	lea    0x8(%r15),%rax
  402cb7:	48 c7 40 f8 0c 04 00 	movq   $0x40c,-0x8(%rax)
  402cbe:	00 
  402cbf:	48 89 18             	mov    %rbx,(%rax)
  402cc2:	48 83 c4 08          	add    $0x8,%rsp
  402cc6:	c3                   	retq   
  402cc7:	90                   	nop
  402cc8:	48 8b 07             	mov    (%rdi),%rax
  402ccb:	e8 00 fd ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402cd0:	48 89 c3             	mov    %rax,%rbx
  402cd3:	49 83 ef 10          	sub    $0x10,%r15
  402cd7:	48 8d 05 c2 a1 22 00 	lea    0x22a1c2(%rip),%rax        # 62cea0 <caml_young_limit>
  402cde:	4c 3b 38             	cmp    (%rax),%r15
  402ce1:	72 4b                	jb     402d2e <camlCamlinternalFormatBasics__concat_fmtty_1239+0x35e>
  402ce3:	49 8d 47 08          	lea    0x8(%r15),%rax
  402ce7:	48 c7 40 f8 0d 04 00 	movq   $0x40d,-0x8(%rax)
  402cee:	00 
  402cef:	48 89 18             	mov    %rbx,(%rax)
  402cf2:	48 83 c4 08          	add    $0x8,%rsp
  402cf6:	c3                   	retq   
  402cf7:	90                   	nop
  402cf8:	48 8b 07             	mov    (%rdi),%rax
  402cfb:	e8 d0 fc ff ff       	callq  4029d0 <camlCamlinternalFormatBasics__concat_fmtty_1239>
  402d00:	48 89 c3             	mov    %rax,%rbx
  402d03:	49 83 ef 10          	sub    $0x10,%r15
  402d07:	48 8d 05 92 a1 22 00 	lea    0x22a192(%rip),%rax        # 62cea0 <caml_young_limit>
  402d0e:	4c 3b 38             	cmp    (%rax),%r15
  402d11:	72 14                	jb     402d27 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x357>
  402d13:	49 8d 47 08          	lea    0x8(%r15),%rax
  402d17:	48 c7 40 f8 0e 04 00 	movq   $0x40e,-0x8(%rax)
  402d1e:	00 
  402d1f:	48 89 18             	mov    %rbx,(%rax)
  402d22:	48 83 c4 08          	add    $0x8,%rsp
  402d26:	c3                   	retq   
  402d27:	e8 f4 6d 01 00       	callq  419b20 <caml_call_gc>
  402d2c:	eb d5                	jmp    402d03 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x333>
  402d2e:	e8 ed 6d 01 00       	callq  419b20 <caml_call_gc>
  402d33:	eb 9e                	jmp    402cd3 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x303>
  402d35:	e8 e6 6d 01 00       	callq  419b20 <caml_call_gc>
  402d3a:	e9 60 ff ff ff       	jmpq   402c9f <camlCamlinternalFormatBasics__concat_fmtty_1239+0x2cf>
  402d3f:	e8 dc 6d 01 00       	callq  419b20 <caml_call_gc>
  402d44:	e9 22 ff ff ff       	jmpq   402c6b <camlCamlinternalFormatBasics__concat_fmtty_1239+0x29b>
  402d49:	e8 d2 6d 01 00       	callq  419b20 <caml_call_gc>
  402d4e:	e9 e4 fe ff ff       	jmpq   402c37 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x267>
  402d53:	e8 c8 6d 01 00       	callq  419b20 <caml_call_gc>
  402d58:	e9 93 fe ff ff       	jmpq   402bf0 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x220>
  402d5d:	e8 be 6d 01 00       	callq  419b20 <caml_call_gc>
  402d62:	e9 49 fe ff ff       	jmpq   402bb0 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x1e0>
  402d67:	e8 b4 6d 01 00       	callq  419b20 <caml_call_gc>
  402d6c:	e9 0a fe ff ff       	jmpq   402b7b <camlCamlinternalFormatBasics__concat_fmtty_1239+0x1ab>
  402d71:	e8 aa 6d 01 00       	callq  419b20 <caml_call_gc>
  402d76:	e9 cc fd ff ff       	jmpq   402b47 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x177>
  402d7b:	e8 a0 6d 01 00       	callq  419b20 <caml_call_gc>
  402d80:	e9 8e fd ff ff       	jmpq   402b13 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x143>
  402d85:	e8 96 6d 01 00       	callq  419b20 <caml_call_gc>
  402d8a:	e9 50 fd ff ff       	jmpq   402adf <camlCamlinternalFormatBasics__concat_fmtty_1239+0x10f>
  402d8f:	e8 8c 6d 01 00       	callq  419b20 <caml_call_gc>
  402d94:	e9 12 fd ff ff       	jmpq   402aab <camlCamlinternalFormatBasics__concat_fmtty_1239+0xdb>
  402d99:	e8 82 6d 01 00       	callq  419b20 <caml_call_gc>
  402d9e:	e9 d4 fc ff ff       	jmpq   402a77 <camlCamlinternalFormatBasics__concat_fmtty_1239+0xa7>
  402da3:	e8 78 6d 01 00       	callq  419b20 <caml_call_gc>
  402da8:	e9 96 fc ff ff       	jmpq   402a43 <camlCamlinternalFormatBasics__concat_fmtty_1239+0x73>
  402dad:	e8 6e 6d 01 00       	callq  419b20 <caml_call_gc>
  402db2:	e9 58 fc ff ff       	jmpq   402a0f <camlCamlinternalFormatBasics__concat_fmtty_1239+0x3f>
  402db7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402dbe:	00 00 

0000000000402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>:
  402dc0:	48 83 ec 08          	sub    $0x8,%rsp
  402dc4:	48 89 c7             	mov    %rax,%rdi
  402dc7:	40 f6 c7 01          	test   $0x1,%dil
  402dcb:	74 0b                	je     402dd8 <camlCamlinternalFormatBasics__concat_fmt_1337+0x18>
  402dcd:	48 89 d8             	mov    %rbx,%rax
  402dd0:	48 83 c4 08          	add    $0x8,%rsp
  402dd4:	c3                   	retq   
  402dd5:	0f 1f 00             	nopl   (%rax)
  402dd8:	48 89 3c 24          	mov    %rdi,(%rsp)
  402ddc:	48 0f b6 47 f8       	movzbq -0x8(%rdi),%rax
  402de1:	48 8d 15 60 ab 01 00 	lea    0x1ab60(%rip),%rdx        # 41d948 <caml_absf_mask+0x88>
  402de8:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
  402dec:	48 01 c2             	add    %rax,%rdx
  402def:	ff e2                	jmpq   *%rdx
  402df1:	0f 1f 00             	nopl   (%rax)
  402df4:	48 8b 07             	mov    (%rdi),%rax
  402df7:	e8 c4 ff ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  402dfc:	48 89 c3             	mov    %rax,%rbx
  402dff:	49 83 ef 10          	sub    $0x10,%r15
  402e03:	48 8d 05 96 a0 22 00 	lea    0x22a096(%rip),%rax        # 62cea0 <caml_young_limit>
  402e0a:	4c 3b 38             	cmp    (%rax),%r15
  402e0d:	0f 82 15 07 00 00    	jb     403528 <camlCamlinternalFormatBasics__concat_fmt_1337+0x768>
  402e13:	49 8d 47 08          	lea    0x8(%r15),%rax
  402e17:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
  402e1e:	00 
  402e1f:	48 89 18             	mov    %rbx,(%rax)
  402e22:	48 83 c4 08          	add    $0x8,%rsp
  402e26:	c3                   	retq   
  402e27:	90                   	nop
  402e28:	48 8b 07             	mov    (%rdi),%rax
  402e2b:	e8 90 ff ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  402e30:	48 89 c3             	mov    %rax,%rbx
  402e33:	49 83 ef 10          	sub    $0x10,%r15
  402e37:	48 8d 05 62 a0 22 00 	lea    0x22a062(%rip),%rax        # 62cea0 <caml_young_limit>
  402e3e:	4c 3b 38             	cmp    (%rax),%r15
  402e41:	0f 82 d7 06 00 00    	jb     40351e <camlCamlinternalFormatBasics__concat_fmt_1337+0x75e>
  402e47:	49 8d 47 08          	lea    0x8(%r15),%rax
  402e4b:	48 c7 40 f8 01 04 00 	movq   $0x401,-0x8(%rax)
  402e52:	00 
  402e53:	48 89 18             	mov    %rbx,(%rax)
  402e56:	48 83 c4 08          	add    $0x8,%rsp
  402e5a:	c3                   	retq   
  402e5b:	90                   	nop
  402e5c:	48 8b 47 08          	mov    0x8(%rdi),%rax
  402e60:	e8 5b ff ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  402e65:	48 89 c3             	mov    %rax,%rbx
  402e68:	49 83 ef 18          	sub    $0x18,%r15
  402e6c:	48 8d 05 2d a0 22 00 	lea    0x22a02d(%rip),%rax        # 62cea0 <caml_young_limit>
  402e73:	4c 3b 38             	cmp    (%rax),%r15
  402e76:	0f 82 98 06 00 00    	jb     403514 <camlCamlinternalFormatBasics__concat_fmt_1337+0x754>
  402e7c:	49 8d 47 08          	lea    0x8(%r15),%rax
  402e80:	48 c7 40 f8 02 08 00 	movq   $0x802,-0x8(%rax)
  402e87:	00 
  402e88:	48 8b 3c 24          	mov    (%rsp),%rdi
  402e8c:	48 8b 3f             	mov    (%rdi),%rdi
  402e8f:	48 89 38             	mov    %rdi,(%rax)
  402e92:	48 89 58 08          	mov    %rbx,0x8(%rax)
  402e96:	48 83 c4 08          	add    $0x8,%rsp
  402e9a:	c3                   	retq   
  402e9b:	90                   	nop
  402e9c:	48 8b 47 08          	mov    0x8(%rdi),%rax
  402ea0:	e8 1b ff ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  402ea5:	48 89 c3             	mov    %rax,%rbx
  402ea8:	49 83 ef 18          	sub    $0x18,%r15
  402eac:	48 8d 05 ed 9f 22 00 	lea    0x229fed(%rip),%rax        # 62cea0 <caml_young_limit>
  402eb3:	4c 3b 38             	cmp    (%rax),%r15
  402eb6:	0f 82 4e 06 00 00    	jb     40350a <camlCamlinternalFormatBasics__concat_fmt_1337+0x74a>
  402ebc:	49 8d 47 08          	lea    0x8(%r15),%rax
  402ec0:	48 c7 40 f8 03 08 00 	movq   $0x803,-0x8(%rax)
  402ec7:	00 
  402ec8:	48 8b 3c 24          	mov    (%rsp),%rdi
  402ecc:	48 8b 3f             	mov    (%rdi),%rdi
  402ecf:	48 89 38             	mov    %rdi,(%rax)
  402ed2:	48 89 58 08          	mov    %rbx,0x8(%rax)
  402ed6:	48 83 c4 08          	add    $0x8,%rsp
  402eda:	c3                   	retq   
  402edb:	90                   	nop
  402edc:	48 8b 47 18          	mov    0x18(%rdi),%rax
  402ee0:	e8 db fe ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  402ee5:	48 89 c3             	mov    %rax,%rbx
  402ee8:	49 83 ef 28          	sub    $0x28,%r15
  402eec:	48 8d 05 ad 9f 22 00 	lea    0x229fad(%rip),%rax        # 62cea0 <caml_young_limit>
  402ef3:	4c 3b 38             	cmp    (%rax),%r15
  402ef6:	0f 82 04 06 00 00    	jb     403500 <camlCamlinternalFormatBasics__concat_fmt_1337+0x740>
  402efc:	49 8d 47 08          	lea    0x8(%r15),%rax
  402f00:	48 c7 40 f8 04 10 00 	movq   $0x1004,-0x8(%rax)
  402f07:	00 
  402f08:	48 8b 34 24          	mov    (%rsp),%rsi
  402f0c:	48 8b 3e             	mov    (%rsi),%rdi
  402f0f:	48 89 38             	mov    %rdi,(%rax)
  402f12:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  402f16:	48 89 78 08          	mov    %rdi,0x8(%rax)
  402f1a:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
  402f1e:	48 89 78 10          	mov    %rdi,0x10(%rax)
  402f22:	48 89 58 18          	mov    %rbx,0x18(%rax)
  402f26:	48 83 c4 08          	add    $0x8,%rsp
  402f2a:	c3                   	retq   
  402f2b:	90                   	nop
  402f2c:	48 8b 47 18          	mov    0x18(%rdi),%rax
  402f30:	e8 8b fe ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  402f35:	48 89 c3             	mov    %rax,%rbx
  402f38:	49 83 ef 28          	sub    $0x28,%r15
  402f3c:	48 8d 05 5d 9f 22 00 	lea    0x229f5d(%rip),%rax        # 62cea0 <caml_young_limit>
  402f43:	4c 3b 38             	cmp    (%rax),%r15
  402f46:	0f 82 aa 05 00 00    	jb     4034f6 <camlCamlinternalFormatBasics__concat_fmt_1337+0x736>
  402f4c:	49 8d 47 08          	lea    0x8(%r15),%rax
  402f50:	48 c7 40 f8 05 10 00 	movq   $0x1005,-0x8(%rax)
  402f57:	00 
  402f58:	48 8b 34 24          	mov    (%rsp),%rsi
  402f5c:	48 8b 3e             	mov    (%rsi),%rdi
  402f5f:	48 89 38             	mov    %rdi,(%rax)
  402f62:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  402f66:	48 89 78 08          	mov    %rdi,0x8(%rax)
  402f6a:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
  402f6e:	48 89 78 10          	mov    %rdi,0x10(%rax)
  402f72:	48 89 58 18          	mov    %rbx,0x18(%rax)
  402f76:	48 83 c4 08          	add    $0x8,%rsp
  402f7a:	c3                   	retq   
  402f7b:	90                   	nop
  402f7c:	48 8b 47 18          	mov    0x18(%rdi),%rax
  402f80:	e8 3b fe ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  402f85:	48 89 c3             	mov    %rax,%rbx
  402f88:	49 83 ef 28          	sub    $0x28,%r15
  402f8c:	48 8d 05 0d 9f 22 00 	lea    0x229f0d(%rip),%rax        # 62cea0 <caml_young_limit>
  402f93:	4c 3b 38             	cmp    (%rax),%r15
  402f96:	0f 82 50 05 00 00    	jb     4034ec <camlCamlinternalFormatBasics__concat_fmt_1337+0x72c>
  402f9c:	49 8d 47 08          	lea    0x8(%r15),%rax
  402fa0:	48 c7 40 f8 06 10 00 	movq   $0x1006,-0x8(%rax)
  402fa7:	00 
  402fa8:	48 8b 34 24          	mov    (%rsp),%rsi
  402fac:	48 8b 3e             	mov    (%rsi),%rdi
  402faf:	48 89 38             	mov    %rdi,(%rax)
  402fb2:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  402fb6:	48 89 78 08          	mov    %rdi,0x8(%rax)
  402fba:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
  402fbe:	48 89 78 10          	mov    %rdi,0x10(%rax)
  402fc2:	48 89 58 18          	mov    %rbx,0x18(%rax)
  402fc6:	48 83 c4 08          	add    $0x8,%rsp
  402fca:	c3                   	retq   
  402fcb:	90                   	nop
  402fcc:	48 8b 47 18          	mov    0x18(%rdi),%rax
  402fd0:	e8 eb fd ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  402fd5:	48 89 c3             	mov    %rax,%rbx
  402fd8:	49 83 ef 28          	sub    $0x28,%r15
  402fdc:	48 8d 05 bd 9e 22 00 	lea    0x229ebd(%rip),%rax        # 62cea0 <caml_young_limit>
  402fe3:	4c 3b 38             	cmp    (%rax),%r15
  402fe6:	0f 82 f6 04 00 00    	jb     4034e2 <camlCamlinternalFormatBasics__concat_fmt_1337+0x722>
  402fec:	49 8d 47 08          	lea    0x8(%r15),%rax
  402ff0:	48 c7 40 f8 07 10 00 	movq   $0x1007,-0x8(%rax)
  402ff7:	00 
  402ff8:	48 8b 34 24          	mov    (%rsp),%rsi
  402ffc:	48 8b 3e             	mov    (%rsi),%rdi
  402fff:	48 89 38             	mov    %rdi,(%rax)
  403002:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  403006:	48 89 78 08          	mov    %rdi,0x8(%rax)
  40300a:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
  40300e:	48 89 78 10          	mov    %rdi,0x10(%rax)
  403012:	48 89 58 18          	mov    %rbx,0x18(%rax)
  403016:	48 83 c4 08          	add    $0x8,%rsp
  40301a:	c3                   	retq   
  40301b:	90                   	nop
  40301c:	48 8b 47 18          	mov    0x18(%rdi),%rax
  403020:	e8 9b fd ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403025:	48 89 c3             	mov    %rax,%rbx
  403028:	49 83 ef 28          	sub    $0x28,%r15
  40302c:	48 8d 05 6d 9e 22 00 	lea    0x229e6d(%rip),%rax        # 62cea0 <caml_young_limit>
  403033:	4c 3b 38             	cmp    (%rax),%r15
  403036:	0f 82 9c 04 00 00    	jb     4034d8 <camlCamlinternalFormatBasics__concat_fmt_1337+0x718>
  40303c:	49 8d 47 08          	lea    0x8(%r15),%rax
  403040:	48 c7 40 f8 08 10 00 	movq   $0x1008,-0x8(%rax)
  403047:	00 
  403048:	48 8b 34 24          	mov    (%rsp),%rsi
  40304c:	48 8b 3e             	mov    (%rsi),%rdi
  40304f:	48 89 38             	mov    %rdi,(%rax)
  403052:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  403056:	48 89 78 08          	mov    %rdi,0x8(%rax)
  40305a:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
  40305e:	48 89 78 10          	mov    %rdi,0x10(%rax)
  403062:	48 89 58 18          	mov    %rbx,0x18(%rax)
  403066:	48 83 c4 08          	add    $0x8,%rsp
  40306a:	c3                   	retq   
  40306b:	90                   	nop
  40306c:	48 8b 07             	mov    (%rdi),%rax
  40306f:	e8 4c fd ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403074:	48 89 c3             	mov    %rax,%rbx
  403077:	49 83 ef 10          	sub    $0x10,%r15
  40307b:	48 8d 05 1e 9e 22 00 	lea    0x229e1e(%rip),%rax        # 62cea0 <caml_young_limit>
  403082:	4c 3b 38             	cmp    (%rax),%r15
  403085:	0f 82 43 04 00 00    	jb     4034ce <camlCamlinternalFormatBasics__concat_fmt_1337+0x70e>
  40308b:	49 8d 47 08          	lea    0x8(%r15),%rax
  40308f:	48 c7 40 f8 09 04 00 	movq   $0x409,-0x8(%rax)
  403096:	00 
  403097:	48 89 18             	mov    %rbx,(%rax)
  40309a:	48 83 c4 08          	add    $0x8,%rsp
  40309e:	c3                   	retq   
  40309f:	90                   	nop
  4030a0:	48 8b 07             	mov    (%rdi),%rax
  4030a3:	e8 18 fd ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  4030a8:	48 89 c3             	mov    %rax,%rbx
  4030ab:	49 83 ef 10          	sub    $0x10,%r15
  4030af:	48 8d 05 ea 9d 22 00 	lea    0x229dea(%rip),%rax        # 62cea0 <caml_young_limit>
  4030b6:	4c 3b 38             	cmp    (%rax),%r15
  4030b9:	0f 82 05 04 00 00    	jb     4034c4 <camlCamlinternalFormatBasics__concat_fmt_1337+0x704>
  4030bf:	49 8d 47 08          	lea    0x8(%r15),%rax
  4030c3:	48 c7 40 f8 0a 04 00 	movq   $0x40a,-0x8(%rax)
  4030ca:	00 
  4030cb:	48 89 18             	mov    %rbx,(%rax)
  4030ce:	48 83 c4 08          	add    $0x8,%rsp
  4030d2:	c3                   	retq   
  4030d3:	90                   	nop
  4030d4:	48 8b 47 08          	mov    0x8(%rdi),%rax
  4030d8:	e8 e3 fc ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  4030dd:	48 89 c3             	mov    %rax,%rbx
  4030e0:	49 83 ef 18          	sub    $0x18,%r15
  4030e4:	48 8d 05 b5 9d 22 00 	lea    0x229db5(%rip),%rax        # 62cea0 <caml_young_limit>
  4030eb:	4c 3b 38             	cmp    (%rax),%r15
  4030ee:	0f 82 c6 03 00 00    	jb     4034ba <camlCamlinternalFormatBasics__concat_fmt_1337+0x6fa>
  4030f4:	49 8d 47 08          	lea    0x8(%r15),%rax
  4030f8:	48 c7 40 f8 0b 08 00 	movq   $0x80b,-0x8(%rax)
  4030ff:	00 
  403100:	48 8b 3c 24          	mov    (%rsp),%rdi
  403104:	48 8b 3f             	mov    (%rdi),%rdi
  403107:	48 89 38             	mov    %rdi,(%rax)
  40310a:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40310e:	48 83 c4 08          	add    $0x8,%rsp
  403112:	c3                   	retq   
  403113:	90                   	nop
  403114:	48 8b 47 08          	mov    0x8(%rdi),%rax
  403118:	e8 a3 fc ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  40311d:	48 89 c3             	mov    %rax,%rbx
  403120:	49 83 ef 18          	sub    $0x18,%r15
  403124:	48 8d 05 75 9d 22 00 	lea    0x229d75(%rip),%rax        # 62cea0 <caml_young_limit>
  40312b:	4c 3b 38             	cmp    (%rax),%r15
  40312e:	0f 82 7c 03 00 00    	jb     4034b0 <camlCamlinternalFormatBasics__concat_fmt_1337+0x6f0>
  403134:	49 8d 47 08          	lea    0x8(%r15),%rax
  403138:	48 c7 40 f8 0c 08 00 	movq   $0x80c,-0x8(%rax)
  40313f:	00 
  403140:	48 8b 3c 24          	mov    (%rsp),%rdi
  403144:	48 8b 3f             	mov    (%rdi),%rdi
  403147:	48 89 38             	mov    %rdi,(%rax)
  40314a:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40314e:	48 83 c4 08          	add    $0x8,%rsp
  403152:	c3                   	retq   
  403153:	90                   	nop
  403154:	48 8b 47 10          	mov    0x10(%rdi),%rax
  403158:	e8 63 fc ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  40315d:	48 89 c3             	mov    %rax,%rbx
  403160:	49 83 ef 20          	sub    $0x20,%r15
  403164:	48 8d 05 35 9d 22 00 	lea    0x229d35(%rip),%rax        # 62cea0 <caml_young_limit>
  40316b:	4c 3b 38             	cmp    (%rax),%r15
  40316e:	0f 82 32 03 00 00    	jb     4034a6 <camlCamlinternalFormatBasics__concat_fmt_1337+0x6e6>
  403174:	49 8d 47 08          	lea    0x8(%r15),%rax
  403178:	48 c7 40 f8 0d 0c 00 	movq   $0xc0d,-0x8(%rax)
  40317f:	00 
  403180:	48 8b 34 24          	mov    (%rsp),%rsi
  403184:	48 8b 3e             	mov    (%rsi),%rdi
  403187:	48 89 38             	mov    %rdi,(%rax)
  40318a:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  40318e:	48 89 78 08          	mov    %rdi,0x8(%rax)
  403192:	48 89 58 10          	mov    %rbx,0x10(%rax)
  403196:	48 83 c4 08          	add    $0x8,%rsp
  40319a:	c3                   	retq   
  40319b:	90                   	nop
  40319c:	48 8b 47 10          	mov    0x10(%rdi),%rax
  4031a0:	e8 1b fc ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  4031a5:	48 89 c3             	mov    %rax,%rbx
  4031a8:	49 83 ef 20          	sub    $0x20,%r15
  4031ac:	48 8d 05 ed 9c 22 00 	lea    0x229ced(%rip),%rax        # 62cea0 <caml_young_limit>
  4031b3:	4c 3b 38             	cmp    (%rax),%r15
  4031b6:	0f 82 e0 02 00 00    	jb     40349c <camlCamlinternalFormatBasics__concat_fmt_1337+0x6dc>
  4031bc:	49 8d 47 08          	lea    0x8(%r15),%rax
  4031c0:	48 c7 40 f8 0e 0c 00 	movq   $0xc0e,-0x8(%rax)
  4031c7:	00 
  4031c8:	48 8b 34 24          	mov    (%rsp),%rsi
  4031cc:	48 8b 3e             	mov    (%rsi),%rdi
  4031cf:	48 89 38             	mov    %rdi,(%rax)
  4031d2:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  4031d6:	48 89 78 08          	mov    %rdi,0x8(%rax)
  4031da:	48 89 58 10          	mov    %rbx,0x10(%rax)
  4031de:	48 83 c4 08          	add    $0x8,%rsp
  4031e2:	c3                   	retq   
  4031e3:	90                   	nop
  4031e4:	48 8b 07             	mov    (%rdi),%rax
  4031e7:	e8 d4 fb ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  4031ec:	48 89 c3             	mov    %rax,%rbx
  4031ef:	49 83 ef 10          	sub    $0x10,%r15
  4031f3:	48 8d 05 a6 9c 22 00 	lea    0x229ca6(%rip),%rax        # 62cea0 <caml_young_limit>
  4031fa:	4c 3b 38             	cmp    (%rax),%r15
  4031fd:	0f 82 8f 02 00 00    	jb     403492 <camlCamlinternalFormatBasics__concat_fmt_1337+0x6d2>
  403203:	49 8d 47 08          	lea    0x8(%r15),%rax
  403207:	48 c7 40 f8 0f 04 00 	movq   $0x40f,-0x8(%rax)
  40320e:	00 
  40320f:	48 89 18             	mov    %rbx,(%rax)
  403212:	48 83 c4 08          	add    $0x8,%rsp
  403216:	c3                   	retq   
  403217:	90                   	nop
  403218:	48 8b 07             	mov    (%rdi),%rax
  40321b:	e8 a0 fb ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403220:	48 89 c3             	mov    %rax,%rbx
  403223:	49 83 ef 10          	sub    $0x10,%r15
  403227:	48 8d 05 72 9c 22 00 	lea    0x229c72(%rip),%rax        # 62cea0 <caml_young_limit>
  40322e:	4c 3b 38             	cmp    (%rax),%r15
  403231:	0f 82 51 02 00 00    	jb     403488 <camlCamlinternalFormatBasics__concat_fmt_1337+0x6c8>
  403237:	49 8d 47 08          	lea    0x8(%r15),%rax
  40323b:	48 c7 40 f8 10 04 00 	movq   $0x410,-0x8(%rax)
  403242:	00 
  403243:	48 89 18             	mov    %rbx,(%rax)
  403246:	48 83 c4 08          	add    $0x8,%rsp
  40324a:	c3                   	retq   
  40324b:	90                   	nop
  40324c:	48 8b 47 08          	mov    0x8(%rdi),%rax
  403250:	e8 6b fb ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403255:	48 89 c3             	mov    %rax,%rbx
  403258:	49 83 ef 18          	sub    $0x18,%r15
  40325c:	48 8d 05 3d 9c 22 00 	lea    0x229c3d(%rip),%rax        # 62cea0 <caml_young_limit>
  403263:	4c 3b 38             	cmp    (%rax),%r15
  403266:	0f 82 12 02 00 00    	jb     40347e <camlCamlinternalFormatBasics__concat_fmt_1337+0x6be>
  40326c:	49 8d 47 08          	lea    0x8(%r15),%rax
  403270:	48 c7 40 f8 11 08 00 	movq   $0x811,-0x8(%rax)
  403277:	00 
  403278:	48 8b 3c 24          	mov    (%rsp),%rdi
  40327c:	48 8b 3f             	mov    (%rdi),%rdi
  40327f:	48 89 38             	mov    %rdi,(%rax)
  403282:	48 89 58 08          	mov    %rbx,0x8(%rax)
  403286:	48 83 c4 08          	add    $0x8,%rsp
  40328a:	c3                   	retq   
  40328b:	90                   	nop
  40328c:	48 8b 47 08          	mov    0x8(%rdi),%rax
  403290:	e8 2b fb ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403295:	48 89 c3             	mov    %rax,%rbx
  403298:	49 83 ef 18          	sub    $0x18,%r15
  40329c:	48 8d 05 fd 9b 22 00 	lea    0x229bfd(%rip),%rax        # 62cea0 <caml_young_limit>
  4032a3:	4c 3b 38             	cmp    (%rax),%r15
  4032a6:	0f 82 c8 01 00 00    	jb     403474 <camlCamlinternalFormatBasics__concat_fmt_1337+0x6b4>
  4032ac:	49 8d 47 08          	lea    0x8(%r15),%rax
  4032b0:	48 c7 40 f8 12 08 00 	movq   $0x812,-0x8(%rax)
  4032b7:	00 
  4032b8:	48 8b 3c 24          	mov    (%rsp),%rdi
  4032bc:	48 8b 3f             	mov    (%rdi),%rdi
  4032bf:	48 89 38             	mov    %rdi,(%rax)
  4032c2:	48 89 58 08          	mov    %rbx,0x8(%rax)
  4032c6:	48 83 c4 08          	add    $0x8,%rsp
  4032ca:	c3                   	retq   
  4032cb:	90                   	nop
  4032cc:	48 8b 07             	mov    (%rdi),%rax
  4032cf:	e8 ec fa ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  4032d4:	48 89 c3             	mov    %rax,%rbx
  4032d7:	49 83 ef 10          	sub    $0x10,%r15
  4032db:	48 8d 05 be 9b 22 00 	lea    0x229bbe(%rip),%rax        # 62cea0 <caml_young_limit>
  4032e2:	4c 3b 38             	cmp    (%rax),%r15
  4032e5:	0f 82 7f 01 00 00    	jb     40346a <camlCamlinternalFormatBasics__concat_fmt_1337+0x6aa>
  4032eb:	49 8d 47 08          	lea    0x8(%r15),%rax
  4032ef:	48 c7 40 f8 13 04 00 	movq   $0x413,-0x8(%rax)
  4032f6:	00 
  4032f7:	48 89 18             	mov    %rbx,(%rax)
  4032fa:	48 83 c4 08          	add    $0x8,%rsp
  4032fe:	c3                   	retq   
  4032ff:	90                   	nop
  403300:	48 8b 47 10          	mov    0x10(%rdi),%rax
  403304:	e8 b7 fa ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403309:	48 89 c3             	mov    %rax,%rbx
  40330c:	49 83 ef 20          	sub    $0x20,%r15
  403310:	48 8d 05 89 9b 22 00 	lea    0x229b89(%rip),%rax        # 62cea0 <caml_young_limit>
  403317:	4c 3b 38             	cmp    (%rax),%r15
  40331a:	0f 82 40 01 00 00    	jb     403460 <camlCamlinternalFormatBasics__concat_fmt_1337+0x6a0>
  403320:	49 8d 47 08          	lea    0x8(%r15),%rax
  403324:	48 c7 40 f8 14 0c 00 	movq   $0xc14,-0x8(%rax)
  40332b:	00 
  40332c:	48 8b 34 24          	mov    (%rsp),%rsi
  403330:	48 8b 3e             	mov    (%rsi),%rdi
  403333:	48 89 38             	mov    %rdi,(%rax)
  403336:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  40333a:	48 89 78 08          	mov    %rdi,0x8(%rax)
  40333e:	48 89 58 10          	mov    %rbx,0x10(%rax)
  403342:	48 83 c4 08          	add    $0x8,%rsp
  403346:	c3                   	retq   
  403347:	90                   	nop
  403348:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40334c:	e8 6f fa ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403351:	48 89 c3             	mov    %rax,%rbx
  403354:	49 83 ef 18          	sub    $0x18,%r15
  403358:	48 8d 05 41 9b 22 00 	lea    0x229b41(%rip),%rax        # 62cea0 <caml_young_limit>
  40335f:	4c 3b 38             	cmp    (%rax),%r15
  403362:	0f 82 ee 00 00 00    	jb     403456 <camlCamlinternalFormatBasics__concat_fmt_1337+0x696>
  403368:	49 8d 47 08          	lea    0x8(%r15),%rax
  40336c:	48 c7 40 f8 15 08 00 	movq   $0x815,-0x8(%rax)
  403373:	00 
  403374:	48 8b 3c 24          	mov    (%rsp),%rdi
  403378:	48 8b 3f             	mov    (%rdi),%rdi
  40337b:	48 89 38             	mov    %rdi,(%rax)
  40337e:	48 89 58 08          	mov    %rbx,0x8(%rax)
  403382:	48 83 c4 08          	add    $0x8,%rsp
  403386:	c3                   	retq   
  403387:	90                   	nop
  403388:	48 8b 07             	mov    (%rdi),%rax
  40338b:	e8 30 fa ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403390:	48 89 c3             	mov    %rax,%rbx
  403393:	49 83 ef 10          	sub    $0x10,%r15
  403397:	48 8d 05 02 9b 22 00 	lea    0x229b02(%rip),%rax        # 62cea0 <caml_young_limit>
  40339e:	4c 3b 38             	cmp    (%rax),%r15
  4033a1:	0f 82 a5 00 00 00    	jb     40344c <camlCamlinternalFormatBasics__concat_fmt_1337+0x68c>
  4033a7:	49 8d 47 08          	lea    0x8(%r15),%rax
  4033ab:	48 c7 40 f8 16 04 00 	movq   $0x416,-0x8(%rax)
  4033b2:	00 
  4033b3:	48 89 18             	mov    %rbx,(%rax)
  4033b6:	48 83 c4 08          	add    $0x8,%rsp
  4033ba:	c3                   	retq   
  4033bb:	90                   	nop
  4033bc:	48 8b 47 08          	mov    0x8(%rdi),%rax
  4033c0:	e8 fb f9 ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  4033c5:	48 89 c3             	mov    %rax,%rbx
  4033c8:	49 83 ef 18          	sub    $0x18,%r15
  4033cc:	48 8d 05 cd 9a 22 00 	lea    0x229acd(%rip),%rax        # 62cea0 <caml_young_limit>
  4033d3:	4c 3b 38             	cmp    (%rax),%r15
  4033d6:	72 6a                	jb     403442 <camlCamlinternalFormatBasics__concat_fmt_1337+0x682>
  4033d8:	49 8d 47 08          	lea    0x8(%r15),%rax
  4033dc:	48 c7 40 f8 17 08 00 	movq   $0x817,-0x8(%rax)
  4033e3:	00 
  4033e4:	48 8b 3c 24          	mov    (%rsp),%rdi
  4033e8:	48 8b 3f             	mov    (%rdi),%rdi
  4033eb:	48 89 38             	mov    %rdi,(%rax)
  4033ee:	48 89 58 08          	mov    %rbx,0x8(%rax)
  4033f2:	48 83 c4 08          	add    $0x8,%rsp
  4033f6:	c3                   	retq   
  4033f7:	90                   	nop
  4033f8:	48 8b 47 10          	mov    0x10(%rdi),%rax
  4033fc:	e8 bf f9 ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  403401:	48 89 c3             	mov    %rax,%rbx
  403404:	49 83 ef 20          	sub    $0x20,%r15
  403408:	48 8d 05 91 9a 22 00 	lea    0x229a91(%rip),%rax        # 62cea0 <caml_young_limit>
  40340f:	4c 3b 38             	cmp    (%rax),%r15
  403412:	72 27                	jb     40343b <camlCamlinternalFormatBasics__concat_fmt_1337+0x67b>
  403414:	49 8d 47 08          	lea    0x8(%r15),%rax
  403418:	48 c7 40 f8 18 0c 00 	movq   $0xc18,-0x8(%rax)
  40341f:	00 
  403420:	48 8b 34 24          	mov    (%rsp),%rsi
  403424:	48 8b 3e             	mov    (%rsi),%rdi
  403427:	48 89 38             	mov    %rdi,(%rax)
  40342a:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  40342e:	48 89 78 08          	mov    %rdi,0x8(%rax)
  403432:	48 89 58 10          	mov    %rbx,0x10(%rax)
  403436:	48 83 c4 08          	add    $0x8,%rsp
  40343a:	c3                   	retq   
  40343b:	e8 e0 66 01 00       	callq  419b20 <caml_call_gc>
  403440:	eb c2                	jmp    403404 <camlCamlinternalFormatBasics__concat_fmt_1337+0x644>
  403442:	e8 d9 66 01 00       	callq  419b20 <caml_call_gc>
  403447:	e9 7c ff ff ff       	jmpq   4033c8 <camlCamlinternalFormatBasics__concat_fmt_1337+0x608>
  40344c:	e8 cf 66 01 00       	callq  419b20 <caml_call_gc>
  403451:	e9 3d ff ff ff       	jmpq   403393 <camlCamlinternalFormatBasics__concat_fmt_1337+0x5d3>
  403456:	e8 c5 66 01 00       	callq  419b20 <caml_call_gc>
  40345b:	e9 f4 fe ff ff       	jmpq   403354 <camlCamlinternalFormatBasics__concat_fmt_1337+0x594>
  403460:	e8 bb 66 01 00       	callq  419b20 <caml_call_gc>
  403465:	e9 a2 fe ff ff       	jmpq   40330c <camlCamlinternalFormatBasics__concat_fmt_1337+0x54c>
  40346a:	e8 b1 66 01 00       	callq  419b20 <caml_call_gc>
  40346f:	e9 63 fe ff ff       	jmpq   4032d7 <camlCamlinternalFormatBasics__concat_fmt_1337+0x517>
  403474:	e8 a7 66 01 00       	callq  419b20 <caml_call_gc>
  403479:	e9 1a fe ff ff       	jmpq   403298 <camlCamlinternalFormatBasics__concat_fmt_1337+0x4d8>
  40347e:	e8 9d 66 01 00       	callq  419b20 <caml_call_gc>
  403483:	e9 d0 fd ff ff       	jmpq   403258 <camlCamlinternalFormatBasics__concat_fmt_1337+0x498>
  403488:	e8 93 66 01 00       	callq  419b20 <caml_call_gc>
  40348d:	e9 91 fd ff ff       	jmpq   403223 <camlCamlinternalFormatBasics__concat_fmt_1337+0x463>
  403492:	e8 89 66 01 00       	callq  419b20 <caml_call_gc>
  403497:	e9 53 fd ff ff       	jmpq   4031ef <camlCamlinternalFormatBasics__concat_fmt_1337+0x42f>
  40349c:	e8 7f 66 01 00       	callq  419b20 <caml_call_gc>
  4034a1:	e9 02 fd ff ff       	jmpq   4031a8 <camlCamlinternalFormatBasics__concat_fmt_1337+0x3e8>
  4034a6:	e8 75 66 01 00       	callq  419b20 <caml_call_gc>
  4034ab:	e9 b0 fc ff ff       	jmpq   403160 <camlCamlinternalFormatBasics__concat_fmt_1337+0x3a0>
  4034b0:	e8 6b 66 01 00       	callq  419b20 <caml_call_gc>
  4034b5:	e9 66 fc ff ff       	jmpq   403120 <camlCamlinternalFormatBasics__concat_fmt_1337+0x360>
  4034ba:	e8 61 66 01 00       	callq  419b20 <caml_call_gc>
  4034bf:	e9 1c fc ff ff       	jmpq   4030e0 <camlCamlinternalFormatBasics__concat_fmt_1337+0x320>
  4034c4:	e8 57 66 01 00       	callq  419b20 <caml_call_gc>
  4034c9:	e9 dd fb ff ff       	jmpq   4030ab <camlCamlinternalFormatBasics__concat_fmt_1337+0x2eb>
  4034ce:	e8 4d 66 01 00       	callq  419b20 <caml_call_gc>
  4034d3:	e9 9f fb ff ff       	jmpq   403077 <camlCamlinternalFormatBasics__concat_fmt_1337+0x2b7>
  4034d8:	e8 43 66 01 00       	callq  419b20 <caml_call_gc>
  4034dd:	e9 46 fb ff ff       	jmpq   403028 <camlCamlinternalFormatBasics__concat_fmt_1337+0x268>
  4034e2:	e8 39 66 01 00       	callq  419b20 <caml_call_gc>
  4034e7:	e9 ec fa ff ff       	jmpq   402fd8 <camlCamlinternalFormatBasics__concat_fmt_1337+0x218>
  4034ec:	e8 2f 66 01 00       	callq  419b20 <caml_call_gc>
  4034f1:	e9 92 fa ff ff       	jmpq   402f88 <camlCamlinternalFormatBasics__concat_fmt_1337+0x1c8>
  4034f6:	e8 25 66 01 00       	callq  419b20 <caml_call_gc>
  4034fb:	e9 38 fa ff ff       	jmpq   402f38 <camlCamlinternalFormatBasics__concat_fmt_1337+0x178>
  403500:	e8 1b 66 01 00       	callq  419b20 <caml_call_gc>
  403505:	e9 de f9 ff ff       	jmpq   402ee8 <camlCamlinternalFormatBasics__concat_fmt_1337+0x128>
  40350a:	e8 11 66 01 00       	callq  419b20 <caml_call_gc>
  40350f:	e9 94 f9 ff ff       	jmpq   402ea8 <camlCamlinternalFormatBasics__concat_fmt_1337+0xe8>
  403514:	e8 07 66 01 00       	callq  419b20 <caml_call_gc>
  403519:	e9 4a f9 ff ff       	jmpq   402e68 <camlCamlinternalFormatBasics__concat_fmt_1337+0xa8>
  40351e:	e8 fd 65 01 00       	callq  419b20 <caml_call_gc>
  403523:	e9 0b f9 ff ff       	jmpq   402e33 <camlCamlinternalFormatBasics__concat_fmt_1337+0x73>
  403528:	e8 f3 65 01 00       	callq  419b20 <caml_call_gc>
  40352d:	e9 cd f8 ff ff       	jmpq   402dff <camlCamlinternalFormatBasics__concat_fmt_1337+0x3f>
  403532:	0f 1f 40 00          	nopl   0x0(%rax)
  403536:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40353d:	00 00 00 

0000000000403540 <camlCamlinternalFormatBasics__entry>:
  403540:	48 8d 05 f1 64 22 00 	lea    0x2264f1(%rip),%rax        # 629a38 <camlCamlinternalFormatBasics__3>
  403547:	48 8d 1d 7a 64 22 00 	lea    0x22647a(%rip),%rbx        # 6299c8 <camlCamlinternalFormatBasics>
  40354e:	48 89 43 08          	mov    %rax,0x8(%rbx)
  403552:	48 8d 05 bf 64 22 00 	lea    0x2264bf(%rip),%rax        # 629a18 <camlCamlinternalFormatBasics__2>
  403559:	48 89 03             	mov    %rax,(%rbx)
  40355c:	48 8d 05 95 64 22 00 	lea    0x226495(%rip),%rax        # 6299f8 <camlCamlinternalFormatBasics__1>
  403563:	48 89 43 10          	mov    %rax,0x10(%rbx)
  403567:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40356e:	c3                   	retq   

000000000040356f <camlCamlinternalFormatBasics__code_end>:
  40356f:	90                   	nop

0000000000403570 <camlPervasives__fun_1622>:
  403570:	48 83 ec 08          	sub    $0x8,%rsp
  403574:	48 89 c7             	mov    %rax,%rdi
  403577:	48 89 de             	mov    %rbx,%rsi
  40357a:	48 8d 05 ef a4 00 00 	lea    0xa4ef(%rip),%rax        # 40da70 <caml_ml_set_binary_mode>
  403581:	e8 be 67 01 00       	callq  419d44 <caml_c_call>
  403586:	4c 8d 1d 1b 99 22 00 	lea    0x22991b(%rip),%r11        # 62cea8 <caml_young_ptr>
  40358d:	4d 8b 3b             	mov    (%r11),%r15
  403590:	48 83 c4 08          	add    $0x8,%rsp
  403594:	c3                   	retq   
  403595:	90                   	nop
  403596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40359d:	00 00 00 

00000000004035a0 <camlPervasives__fun_1624>:
  4035a0:	48 83 ec 08          	sub    $0x8,%rsp
  4035a4:	48 89 c7             	mov    %rax,%rdi
  4035a7:	48 8d 05 d2 a3 00 00 	lea    0xa3d2(%rip),%rax        # 40d980 <caml_ml_close_channel>
  4035ae:	e8 91 67 01 00       	callq  419d44 <caml_c_call>
  4035b3:	4c 8d 1d ee 98 22 00 	lea    0x2298ee(%rip),%r11        # 62cea8 <caml_young_ptr>
  4035ba:	4d 8b 3b             	mov    (%r11),%r15
  4035bd:	48 83 c4 08          	add    $0x8,%rsp
  4035c1:	c3                   	retq   
  4035c2:	0f 1f 40 00          	nopl   0x0(%rax)
  4035c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4035cd:	00 00 00 

00000000004035d0 <camlPervasives__fun_1626>:
  4035d0:	48 83 ec 08          	sub    $0x8,%rsp
  4035d4:	48 89 c7             	mov    %rax,%rdi
  4035d7:	48 8d 05 32 a4 00 00 	lea    0xa432(%rip),%rax        # 40da10 <caml_ml_channel_size>
  4035de:	e8 61 67 01 00       	callq  419d44 <caml_c_call>
  4035e3:	4c 8d 1d be 98 22 00 	lea    0x2298be(%rip),%r11        # 62cea8 <caml_young_ptr>
  4035ea:	4d 8b 3b             	mov    (%r11),%r15
  4035ed:	48 83 c4 08          	add    $0x8,%rsp
  4035f1:	c3                   	retq   
  4035f2:	0f 1f 40 00          	nopl   0x0(%rax)
  4035f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4035fd:	00 00 00 

0000000000403600 <camlPervasives__fun_1628>:
  403600:	48 83 ec 08          	sub    $0x8,%rsp
  403604:	48 89 c7             	mov    %rax,%rdi
  403607:	48 8d 05 12 b0 00 00 	lea    0xb012(%rip),%rax        # 40e620 <caml_ml_pos_in>
  40360e:	e8 31 67 01 00       	callq  419d44 <caml_c_call>
  403613:	4c 8d 1d 8e 98 22 00 	lea    0x22988e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40361a:	4d 8b 3b             	mov    (%r11),%r15
  40361d:	48 83 c4 08          	add    $0x8,%rsp
  403621:	c3                   	retq   
  403622:	0f 1f 40 00          	nopl   0x0(%rax)
  403626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40362d:	00 00 00 

0000000000403630 <camlPervasives__fun_1630>:
  403630:	48 83 ec 08          	sub    $0x8,%rsp
  403634:	48 89 c7             	mov    %rax,%rdi
  403637:	48 89 de             	mov    %rbx,%rsi
  40363a:	48 8d 05 5f ae 00 00 	lea    0xae5f(%rip),%rax        # 40e4a0 <caml_ml_seek_in>
  403641:	e8 fe 66 01 00       	callq  419d44 <caml_c_call>
  403646:	4c 8d 1d 5b 98 22 00 	lea    0x22985b(%rip),%r11        # 62cea8 <caml_young_ptr>
  40364d:	4d 8b 3b             	mov    (%r11),%r15
  403650:	48 83 c4 08          	add    $0x8,%rsp
  403654:	c3                   	retq   
  403655:	90                   	nop
  403656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40365d:	00 00 00 

0000000000403660 <camlPervasives__fun_1632>:
  403660:	48 83 ec 08          	sub    $0x8,%rsp
  403664:	48 89 c7             	mov    %rax,%rdi
  403667:	48 8d 05 52 db 00 00 	lea    0xdb52(%rip),%rax        # 4111c0 <caml_input_value>
  40366e:	e8 d1 66 01 00       	callq  419d44 <caml_c_call>
  403673:	4c 8d 1d 2e 98 22 00 	lea    0x22982e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40367a:	4d 8b 3b             	mov    (%r11),%r15
  40367d:	48 83 c4 08          	add    $0x8,%rsp
  403681:	c3                   	retq   
  403682:	0f 1f 40 00          	nopl   0x0(%rax)
  403686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40368d:	00 00 00 

0000000000403690 <camlPervasives__fun_1634>:
  403690:	48 83 ec 08          	sub    $0x8,%rsp
  403694:	48 89 c7             	mov    %rax,%rdi
  403697:	48 8d 05 d2 ab 00 00 	lea    0xabd2(%rip),%rax        # 40e270 <caml_ml_input_int>
  40369e:	e8 a1 66 01 00       	callq  419d44 <caml_c_call>
  4036a3:	4c 8d 1d fe 97 22 00 	lea    0x2297fe(%rip),%r11        # 62cea8 <caml_young_ptr>
  4036aa:	4d 8b 3b             	mov    (%r11),%r15
  4036ad:	48 83 c4 08          	add    $0x8,%rsp
  4036b1:	c3                   	retq   
  4036b2:	0f 1f 40 00          	nopl   0x0(%rax)
  4036b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4036bd:	00 00 00 

00000000004036c0 <camlPervasives__fun_1636>:
  4036c0:	48 83 ec 08          	sub    $0x8,%rsp
  4036c4:	48 89 c7             	mov    %rax,%rdi
  4036c7:	48 8d 05 d2 aa 00 00 	lea    0xaad2(%rip),%rax        # 40e1a0 <caml_ml_input_char>
  4036ce:	e8 71 66 01 00       	callq  419d44 <caml_c_call>
  4036d3:	4c 8d 1d ce 97 22 00 	lea    0x2297ce(%rip),%r11        # 62cea8 <caml_young_ptr>
  4036da:	4d 8b 3b             	mov    (%r11),%r15
  4036dd:	48 83 c4 08          	add    $0x8,%rsp
  4036e1:	c3                   	retq   
  4036e2:	0f 1f 40 00          	nopl   0x0(%rax)
  4036e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4036ed:	00 00 00 

00000000004036f0 <camlPervasives__fun_1638>:
  4036f0:	48 83 ec 08          	sub    $0x8,%rsp
  4036f4:	48 89 c7             	mov    %rax,%rdi
  4036f7:	48 8d 05 a2 aa 00 00 	lea    0xaaa2(%rip),%rax        # 40e1a0 <caml_ml_input_char>
  4036fe:	e8 41 66 01 00       	callq  419d44 <caml_c_call>
  403703:	4c 8d 1d 9e 97 22 00 	lea    0x22979e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40370a:	4d 8b 3b             	mov    (%r11),%r15
  40370d:	48 83 c4 08          	add    $0x8,%rsp
  403711:	c3                   	retq   
  403712:	0f 1f 40 00          	nopl   0x0(%rax)
  403716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40371d:	00 00 00 

0000000000403720 <camlPervasives__fun_1640>:
  403720:	48 83 ec 08          	sub    $0x8,%rsp
  403724:	48 89 c7             	mov    %rax,%rdi
  403727:	48 89 de             	mov    %rbx,%rsi
  40372a:	48 8d 05 3f a3 00 00 	lea    0xa33f(%rip),%rax        # 40da70 <caml_ml_set_binary_mode>
  403731:	e8 0e 66 01 00       	callq  419d44 <caml_c_call>
  403736:	4c 8d 1d 6b 97 22 00 	lea    0x22976b(%rip),%r11        # 62cea8 <caml_young_ptr>
  40373d:	4d 8b 3b             	mov    (%r11),%r15
  403740:	48 83 c4 08          	add    $0x8,%rsp
  403744:	c3                   	retq   
  403745:	90                   	nop
  403746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40374d:	00 00 00 

0000000000403750 <camlPervasives__fun_1642>:
  403750:	48 83 ec 08          	sub    $0x8,%rsp
  403754:	48 89 c7             	mov    %rax,%rdi
  403757:	48 8d 05 b2 a2 00 00 	lea    0xa2b2(%rip),%rax        # 40da10 <caml_ml_channel_size>
  40375e:	e8 e1 65 01 00       	callq  419d44 <caml_c_call>
  403763:	4c 8d 1d 3e 97 22 00 	lea    0x22973e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40376a:	4d 8b 3b             	mov    (%r11),%r15
  40376d:	48 83 c4 08          	add    $0x8,%rsp
  403771:	c3                   	retq   
  403772:	0f 1f 40 00          	nopl   0x0(%rax)
  403776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40377d:	00 00 00 

0000000000403780 <camlPervasives__fun_1644>:
  403780:	48 83 ec 08          	sub    $0x8,%rsp
  403784:	48 89 c7             	mov    %rax,%rdi
  403787:	48 8d 05 b2 a9 00 00 	lea    0xa9b2(%rip),%rax        # 40e140 <caml_ml_pos_out>
  40378e:	e8 b1 65 01 00       	callq  419d44 <caml_c_call>
  403793:	4c 8d 1d 0e 97 22 00 	lea    0x22970e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40379a:	4d 8b 3b             	mov    (%r11),%r15
  40379d:	48 83 c4 08          	add    $0x8,%rsp
  4037a1:	c3                   	retq   
  4037a2:	0f 1f 40 00          	nopl   0x0(%rax)
  4037a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4037ad:	00 00 00 

00000000004037b0 <camlPervasives__fun_1646>:
  4037b0:	48 83 ec 08          	sub    $0x8,%rsp
  4037b4:	48 89 c7             	mov    %rax,%rdi
  4037b7:	48 89 de             	mov    %rbx,%rsi
  4037ba:	48 8d 05 ff a7 00 00 	lea    0xa7ff(%rip),%rax        # 40dfc0 <caml_ml_seek_out>
  4037c1:	e8 7e 65 01 00       	callq  419d44 <caml_c_call>
  4037c6:	4c 8d 1d db 96 22 00 	lea    0x2296db(%rip),%r11        # 62cea8 <caml_young_ptr>
  4037cd:	4d 8b 3b             	mov    (%r11),%r15
  4037d0:	48 83 c4 08          	add    $0x8,%rsp
  4037d4:	c3                   	retq   
  4037d5:	90                   	nop
  4037d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4037dd:	00 00 00 

00000000004037e0 <camlPervasives__fun_1648>:
  4037e0:	48 83 ec 08          	sub    $0x8,%rsp
  4037e4:	48 89 c7             	mov    %rax,%rdi
  4037e7:	48 89 de             	mov    %rbx,%rsi
  4037ea:	48 8d 05 0f a5 00 00 	lea    0xa50f(%rip),%rax        # 40dd00 <caml_ml_output_int>
  4037f1:	e8 4e 65 01 00       	callq  419d44 <caml_c_call>
  4037f6:	4c 8d 1d ab 96 22 00 	lea    0x2296ab(%rip),%r11        # 62cea8 <caml_young_ptr>
  4037fd:	4d 8b 3b             	mov    (%r11),%r15
  403800:	48 83 c4 08          	add    $0x8,%rsp
  403804:	c3                   	retq   
  403805:	90                   	nop
  403806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40380d:	00 00 00 

0000000000403810 <camlPervasives__fun_1650>:
  403810:	48 83 ec 08          	sub    $0x8,%rsp
  403814:	48 89 c7             	mov    %rax,%rdi
  403817:	48 89 de             	mov    %rbx,%rsi
  40381a:	48 8d 05 ff a3 00 00 	lea    0xa3ff(%rip),%rax        # 40dc20 <caml_ml_output_char>
  403821:	e8 1e 65 01 00       	callq  419d44 <caml_c_call>
  403826:	4c 8d 1d 7b 96 22 00 	lea    0x22967b(%rip),%r11        # 62cea8 <caml_young_ptr>
  40382d:	4d 8b 3b             	mov    (%r11),%r15
  403830:	48 83 c4 08          	add    $0x8,%rsp
  403834:	c3                   	retq   
  403835:	90                   	nop
  403836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40383d:	00 00 00 

0000000000403840 <camlPervasives__fun_1652>:
  403840:	48 83 ec 08          	sub    $0x8,%rsp
  403844:	48 89 c7             	mov    %rax,%rdi
  403847:	48 89 de             	mov    %rbx,%rsi
  40384a:	48 8d 05 cf a3 00 00 	lea    0xa3cf(%rip),%rax        # 40dc20 <caml_ml_output_char>
  403851:	e8 ee 64 01 00       	callq  419d44 <caml_c_call>
  403856:	4c 8d 1d 4b 96 22 00 	lea    0x22964b(%rip),%r11        # 62cea8 <caml_young_ptr>
  40385d:	4d 8b 3b             	mov    (%r11),%r15
  403860:	48 83 c4 08          	add    $0x8,%rsp
  403864:	c3                   	retq   
  403865:	90                   	nop
  403866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40386d:	00 00 00 

0000000000403870 <camlPervasives__fun_1654>:
  403870:	48 83 ec 08          	sub    $0x8,%rsp
  403874:	48 89 c7             	mov    %rax,%rdi
  403877:	48 8d 05 e2 a2 00 00 	lea    0xa2e2(%rip),%rax        # 40db60 <caml_ml_flush>
  40387e:	e8 c1 64 01 00       	callq  419d44 <caml_c_call>
  403883:	4c 8d 1d 1e 96 22 00 	lea    0x22961e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40388a:	4d 8b 3b             	mov    (%r11),%r15
  40388d:	48 83 c4 08          	add    $0x8,%rsp
  403891:	c3                   	retq   
  403892:	0f 1f 40 00          	nopl   0x0(%rax)
  403896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40389d:	00 00 00 

00000000004038a0 <camlPervasives__failwith_1005>:
  4038a0:	48 83 ec 08          	sub    $0x8,%rsp
  4038a4:	48 89 c3             	mov    %rax,%rbx
  4038a7:	48 8d 05 aa 99 23 00 	lea    0x2399aa(%rip),%rax        # 63d258 <caml_backtrace_pos>
  4038ae:	48 31 ff             	xor    %rdi,%rdi
  4038b1:	89 38                	mov    %edi,(%rax)
  4038b3:	49 83 ef 18          	sub    $0x18,%r15
  4038b7:	48 8d 05 e2 95 22 00 	lea    0x2295e2(%rip),%rax        # 62cea0 <caml_young_limit>
  4038be:	4c 3b 38             	cmp    (%rax),%r15
  4038c1:	72 1f                	jb     4038e2 <camlPervasives__failwith_1005+0x42>
  4038c3:	49 8d 47 08          	lea    0x8(%r15),%rax
  4038c7:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
  4038ce:	00 
  4038cf:	48 8d 3d 82 5a 22 00 	lea    0x225a82(%rip),%rdi        # 629358 <caml_exn_Failure>
  4038d6:	48 89 38             	mov    %rdi,(%rax)
  4038d9:	48 89 58 08          	mov    %rbx,0x8(%rax)
  4038dd:	e8 22 65 01 00       	callq  419e04 <caml_raise_exn>
  4038e2:	e8 39 62 01 00       	callq  419b20 <caml_call_gc>
  4038e7:	eb ca                	jmp    4038b3 <camlPervasives__failwith_1005+0x13>
  4038e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004038f0 <camlPervasives__invalid_arg_1007>:
  4038f0:	48 83 ec 08          	sub    $0x8,%rsp
  4038f4:	48 89 c3             	mov    %rax,%rbx
  4038f7:	48 8d 05 5a 99 23 00 	lea    0x23995a(%rip),%rax        # 63d258 <caml_backtrace_pos>
  4038fe:	48 31 ff             	xor    %rdi,%rdi
  403901:	89 38                	mov    %edi,(%rax)
  403903:	49 83 ef 18          	sub    $0x18,%r15
  403907:	48 8d 05 92 95 22 00 	lea    0x229592(%rip),%rax        # 62cea0 <caml_young_limit>
  40390e:	4c 3b 38             	cmp    (%rax),%r15
  403911:	72 1f                	jb     403932 <camlPervasives__invalid_arg_1007+0x42>
  403913:	49 8d 47 08          	lea    0x8(%r15),%rax
  403917:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
  40391e:	00 
  40391f:	48 8d 3d 5a 5a 22 00 	lea    0x225a5a(%rip),%rdi        # 629380 <caml_exn_Invalid_argument>
  403926:	48 89 38             	mov    %rdi,(%rax)
  403929:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40392d:	e8 d2 64 01 00       	callq  419e04 <caml_raise_exn>
  403932:	e8 e9 61 01 00       	callq  419b20 <caml_call_gc>
  403937:	eb ca                	jmp    403903 <camlPervasives__invalid_arg_1007+0x13>
  403939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000403940 <camlPervasives__min_1027>:
  403940:	48 83 ec 18          	sub    $0x18,%rsp
  403944:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  403949:	48 89 1c 24          	mov    %rbx,(%rsp)
  40394d:	48 89 c7             	mov    %rax,%rdi
  403950:	48 89 de             	mov    %rbx,%rsi
  403953:	48 8d 05 96 65 00 00 	lea    0x6596(%rip),%rax        # 409ef0 <caml_lessequal>
  40395a:	e8 e5 63 01 00       	callq  419d44 <caml_c_call>
  40395f:	4c 8d 1d 42 95 22 00 	lea    0x229542(%rip),%r11        # 62cea8 <caml_young_ptr>
  403966:	4d 8b 3b             	mov    (%r11),%r15
  403969:	48 83 f8 01          	cmp    $0x1,%rax
  40396d:	74 0d                	je     40397c <camlPervasives__min_1027+0x3c>
  40396f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  403974:	48 83 c4 18          	add    $0x18,%rsp
  403978:	c3                   	retq   
  403979:	0f 1f 00             	nopl   (%rax)
  40397c:	48 8b 04 24          	mov    (%rsp),%rax
  403980:	48 83 c4 18          	add    $0x18,%rsp
  403984:	c3                   	retq   
  403985:	90                   	nop
  403986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40398d:	00 00 00 

0000000000403990 <camlPervasives__max_1030>:
  403990:	48 83 ec 18          	sub    $0x18,%rsp
  403994:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  403999:	48 89 1c 24          	mov    %rbx,(%rsp)
  40399d:	48 89 c7             	mov    %rax,%rdi
  4039a0:	48 89 de             	mov    %rbx,%rsi
  4039a3:	48 8d 05 f6 65 00 00 	lea    0x65f6(%rip),%rax        # 409fa0 <caml_greaterequal>
  4039aa:	e8 95 63 01 00       	callq  419d44 <caml_c_call>
  4039af:	4c 8d 1d f2 94 22 00 	lea    0x2294f2(%rip),%r11        # 62cea8 <caml_young_ptr>
  4039b6:	4d 8b 3b             	mov    (%r11),%r15
  4039b9:	48 83 f8 01          	cmp    $0x1,%rax
  4039bd:	74 0d                	je     4039cc <camlPervasives__max_1030+0x3c>
  4039bf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4039c4:	48 83 c4 18          	add    $0x18,%rsp
  4039c8:	c3                   	retq   
  4039c9:	0f 1f 00             	nopl   (%rax)
  4039cc:	48 8b 04 24          	mov    (%rsp),%rax
  4039d0:	48 83 c4 18          	add    $0x18,%rsp
  4039d4:	c3                   	retq   
  4039d5:	90                   	nop
  4039d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4039dd:	00 00 00 

00000000004039e0 <camlPervasives__abs_1049>:
  4039e0:	48 83 f8 01          	cmp    $0x1,%rax
  4039e4:	7c 02                	jl     4039e8 <camlPervasives__abs_1049+0x8>
  4039e6:	c3                   	retq   
  4039e7:	90                   	nop
  4039e8:	48 c7 c3 02 00 00 00 	mov    $0x2,%rbx
  4039ef:	48 29 c3             	sub    %rax,%rbx
  4039f2:	48 89 d8             	mov    %rbx,%rax
  4039f5:	c3                   	retq   
  4039f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4039fd:	00 00 00 

0000000000403a00 <camlPervasives__lnot_1054>:
  403a00:	48 83 f0 ff          	xor    $0xffffffffffffffff,%rax
  403a04:	48 83 c8 01          	or     $0x1,%rax
  403a08:	c3                   	retq   
  403a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000403a10 <camlPervasives__$5e_1117>:
  403a10:	48 83 ec 28          	sub    $0x28,%rsp
  403a14:	48 89 04 24          	mov    %rax,(%rsp)
  403a18:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  403a1d:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
  403a21:	48 c1 ef 0a          	shr    $0xa,%rdi
  403a25:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
  403a2c:	ff 
  403a2d:	48 0f b6 04 38       	movzbq (%rax,%rdi,1),%rax
  403a32:	48 29 c7             	sub    %rax,%rdi
  403a35:	48 8d 44 3f 01       	lea    0x1(%rdi,%rdi,1),%rax
  403a3a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  403a3f:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  403a43:	48 c1 ef 0a          	shr    $0xa,%rdi
  403a47:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
  403a4e:	ff 
  403a4f:	48 0f b6 1c 3b       	movzbq (%rbx,%rdi,1),%rbx
  403a54:	48 29 df             	sub    %rbx,%rdi
  403a57:	48 8d 5c 3f 01       	lea    0x1(%rdi,%rdi,1),%rbx
  403a5c:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
  403a61:	48 8d 7c 18 ff       	lea    -0x1(%rax,%rbx,1),%rdi
  403a66:	48 8d 05 d3 8b 00 00 	lea    0x8bd3(%rip),%rax        # 40c640 <caml_create_bytes>
  403a6d:	e8 d2 62 01 00       	callq  419d44 <caml_c_call>
  403a72:	4c 8d 1d 2f 94 22 00 	lea    0x22942f(%rip),%r11        # 62cea8 <caml_young_ptr>
  403a79:	4d 8b 3b             	mov    (%r11),%r15
  403a7c:	48 89 c3             	mov    %rax,%rbx
  403a7f:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  403a86:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  403a8d:	48 8b 3c 24          	mov    (%rsp),%rdi
  403a91:	48 89 da             	mov    %rbx,%rdx
  403a94:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
  403a99:	4d 89 e0             	mov    %r12,%r8
  403a9c:	e8 df 90 00 00       	callq  40cb80 <caml_blit_string>
  403aa1:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  403aa8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  403aad:	48 89 da             	mov    %rbx,%rdx
  403ab0:	4c 89 e1             	mov    %r12,%rcx
  403ab3:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  403ab8:	e8 c3 90 00 00       	callq  40cb80 <caml_blit_string>
  403abd:	48 89 d8             	mov    %rbx,%rax
  403ac0:	48 83 c4 28          	add    $0x28,%rsp
  403ac4:	c3                   	retq   
  403ac5:	90                   	nop
  403ac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  403acd:	00 00 00 

0000000000403ad0 <camlPervasives__char_of_int_1125>:
  403ad0:	48 83 f8 01          	cmp    $0x1,%rax
  403ad4:	7c 0a                	jl     403ae0 <camlPervasives__char_of_int_1125+0x10>
  403ad6:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
  403adc:	7f 02                	jg     403ae0 <camlPervasives__char_of_int_1125+0x10>
  403ade:	c3                   	retq   
  403adf:	90                   	nop
  403ae0:	48 8d 05 99 6f 22 00 	lea    0x226f99(%rip),%rax        # 62aa80 <camlPervasives__10>
  403ae7:	e9 04 fe ff ff       	jmpq   4038f0 <camlPervasives__invalid_arg_1007>
  403aec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000403af0 <camlPervasives__string_of_bool_1142>:
  403af0:	48 83 f8 01          	cmp    $0x1,%rax
  403af4:	74 0a                	je     403b00 <camlPervasives__string_of_bool_1142+0x10>
  403af6:	48 8d 05 9b 6f 22 00 	lea    0x226f9b(%rip),%rax        # 62aa98 <camlPervasives__11>
  403afd:	c3                   	retq   
  403afe:	66 90                	xchg   %ax,%ax
  403b00:	48 8d 05 a1 6f 22 00 	lea    0x226fa1(%rip),%rax        # 62aaa8 <camlPervasives__12>
  403b07:	c3                   	retq   
  403b08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  403b0f:	00 

0000000000403b10 <camlPervasives__bool_of_string_1144>:
  403b10:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
  403b14:	48 c1 eb 0a          	shr    $0xa,%rbx
  403b18:	48 83 fb 02          	cmp    $0x2,%rbx
  403b1c:	7d 32                	jge    403b50 <camlPervasives__bool_of_string_1144+0x40>
  403b1e:	48 8b 00             	mov    (%rax),%rax
  403b21:	48 bb 66 61 6c 73 65 	movabs $0x2000065736c6166,%rbx
  403b28:	00 00 02 
  403b2b:	48 39 d8             	cmp    %rbx,%rax
  403b2e:	75 08                	jne    403b38 <camlPervasives__bool_of_string_1144+0x28>
  403b30:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  403b37:	c3                   	retq   
  403b38:	48 bb 74 72 75 65 00 	movabs $0x300000065757274,%rbx
  403b3f:	00 00 03 
  403b42:	48 39 d8             	cmp    %rbx,%rax
  403b45:	75 09                	jne    403b50 <camlPervasives__bool_of_string_1144+0x40>
  403b47:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
  403b4e:	c3                   	retq   
  403b4f:	90                   	nop
  403b50:	48 8d 05 61 6f 22 00 	lea    0x226f61(%rip),%rax        # 62aab8 <camlPervasives__13>
  403b57:	e9 94 fd ff ff       	jmpq   4038f0 <camlPervasives__invalid_arg_1007>
  403b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000403b60 <camlPervasives__string_of_int_1146>:
  403b60:	48 83 ec 08          	sub    $0x8,%rsp
  403b64:	48 8d 3d 65 6f 22 00 	lea    0x226f65(%rip),%rdi        # 62aad0 <camlPervasives__14>
  403b6b:	48 89 c6             	mov    %rax,%rsi
  403b6e:	48 8d 05 fb 69 00 00 	lea    0x69fb(%rip),%rax        # 40a570 <caml_format_int>
  403b75:	e8 ca 61 01 00       	callq  419d44 <caml_c_call>
  403b7a:	4c 8d 1d 27 93 22 00 	lea    0x229327(%rip),%r11        # 62cea8 <caml_young_ptr>
  403b81:	4d 8b 3b             	mov    (%r11),%r15
  403b84:	48 83 c4 08          	add    $0x8,%rsp
  403b88:	c3                   	retq   
  403b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000403b90 <camlPervasives__valid_float_lexem_1150>:
  403b90:	48 83 ec 08          	sub    $0x8,%rsp
  403b94:	48 89 c7             	mov    %rax,%rdi
  403b97:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  403b9b:	48 c1 e8 0a          	shr    $0xa,%rax
  403b9f:	48 8d 04 c5 ff ff ff 	lea    -0x1(,%rax,8),%rax
  403ba6:	ff 
  403ba7:	48 0f b6 1c 07       	movzbq (%rdi,%rax,1),%rbx
  403bac:	48 29 d8             	sub    %rbx,%rax
  403baf:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  403bb4:	49 83 ef 28          	sub    $0x28,%r15
  403bb8:	48 8d 05 e1 92 22 00 	lea    0x2292e1(%rip),%rax        # 62cea0 <caml_young_limit>
  403bbf:	4c 3b 38             	cmp    (%rax),%r15
  403bc2:	72 36                	jb     403bfa <camlPervasives__valid_float_lexem_1150+0x6a>
  403bc4:	49 8d 5f 08          	lea    0x8(%r15),%rbx
  403bc8:	48 c7 43 f8 f7 10 00 	movq   $0x10f7,-0x8(%rbx)
  403bcf:	00 
  403bd0:	48 8d 05 39 00 00 00 	lea    0x39(%rip),%rax        # 403c10 <camlPervasives__loop_1153>
  403bd7:	48 89 03             	mov    %rax,(%rbx)
  403bda:	48 c7 43 08 03 00 00 	movq   $0x3,0x8(%rbx)
  403be1:	00 
  403be2:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
  403be6:	48 89 73 18          	mov    %rsi,0x18(%rbx)
  403bea:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  403bf1:	48 83 c4 08          	add    $0x8,%rsp
  403bf5:	e9 16 00 00 00       	jmpq   403c10 <camlPervasives__loop_1153>
  403bfa:	e8 21 5f 01 00       	callq  419b20 <caml_call_gc>
  403bff:	eb b3                	jmp    403bb4 <camlPervasives__valid_float_lexem_1150+0x24>
  403c01:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403c06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  403c0d:	00 00 00 

0000000000403c10 <camlPervasives__loop_1153>:
  403c10:	48 83 ec 08          	sub    $0x8,%rsp
  403c14:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
  403c18:	48 39 f8             	cmp    %rdi,%rax
  403c1b:	7c 17                	jl     403c34 <camlPervasives__loop_1153+0x24>
  403c1d:	48 8d 3d bc 6e 22 00 	lea    0x226ebc(%rip),%rdi        # 62aae0 <camlPervasives__16>
  403c24:	48 8b 43 10          	mov    0x10(%rbx),%rax
  403c28:	48 89 fb             	mov    %rdi,%rbx
  403c2b:	48 83 c4 08          	add    $0x8,%rsp
  403c2f:	e9 dc fd ff ff       	jmpq   403a10 <camlPervasives__$5e_1117>
  403c34:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
  403c38:	48 89 c6             	mov    %rax,%rsi
  403c3b:	48 d1 fe             	sar    %rsi
  403c3e:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
  403c42:	48 c1 ea 0a          	shr    $0xa,%rdx
  403c46:	48 8d 14 d5 ff ff ff 	lea    -0x1(,%rdx,8),%rdx
  403c4d:	ff 
  403c4e:	48 0f b6 0c 17       	movzbq (%rdi,%rdx,1),%rcx
  403c53:	48 29 ca             	sub    %rcx,%rdx
  403c56:	48 39 f2             	cmp    %rsi,%rdx
  403c59:	76 2f                	jbe    403c8a <camlPervasives__loop_1153+0x7a>
  403c5b:	48 0f b6 3c 37       	movzbq (%rdi,%rsi,1),%rdi
  403c60:	48 8d 7c 3f 01       	lea    0x1(%rdi,%rdi,1),%rdi
  403c65:	48 83 ff 61          	cmp    $0x61,%rdi
  403c69:	7c 09                	jl     403c74 <camlPervasives__loop_1153+0x64>
  403c6b:	48 83 ff 75          	cmp    $0x75,%rdi
  403c6f:	7c 13                	jl     403c84 <camlPervasives__loop_1153+0x74>
  403c71:	eb 07                	jmp    403c7a <camlPervasives__loop_1153+0x6a>
  403c73:	90                   	nop
  403c74:	48 83 ff 5b          	cmp    $0x5b,%rdi
  403c78:	74 0a                	je     403c84 <camlPervasives__loop_1153+0x74>
  403c7a:	48 8b 43 10          	mov    0x10(%rbx),%rax
  403c7e:	48 83 c4 08          	add    $0x8,%rsp
  403c82:	c3                   	retq   
  403c83:	90                   	nop
  403c84:	48 83 c0 02          	add    $0x2,%rax
  403c88:	eb 8a                	jmp    403c14 <camlPervasives__loop_1153+0x4>
  403c8a:	e8 75 62 01 00       	callq  419f04 <caml_ml_array_bound_error>
  403c8f:	90                   	nop

0000000000403c90 <camlPervasives__string_of_float_1155>:
  403c90:	48 83 ec 08          	sub    $0x8,%rsp
  403c94:	48 8d 3d 55 6e 22 00 	lea    0x226e55(%rip),%rdi        # 62aaf0 <camlPervasives__17>
  403c9b:	48 89 c6             	mov    %rax,%rsi
  403c9e:	48 8d 05 cb 79 00 00 	lea    0x79cb(%rip),%rax        # 40b670 <caml_format_float>
  403ca5:	e8 9a 60 01 00       	callq  419d44 <caml_c_call>
  403caa:	4c 8d 1d f7 91 22 00 	lea    0x2291f7(%rip),%r11        # 62cea8 <caml_young_ptr>
  403cb1:	4d 8b 3b             	mov    (%r11),%r15
  403cb4:	48 83 c4 08          	add    $0x8,%rsp
  403cb8:	e9 d3 fe ff ff       	jmpq   403b90 <camlPervasives__valid_float_lexem_1150>
  403cbd:	0f 1f 00             	nopl   (%rax)

0000000000403cc0 <camlPervasives__$40_1158>:
  403cc0:	48 83 ec 08          	sub    $0x8,%rsp
  403cc4:	48 83 f8 01          	cmp    $0x1,%rax
  403cc8:	74 42                	je     403d0c <camlPervasives__$40_1158+0x4c>
  403cca:	48 89 04 24          	mov    %rax,(%rsp)
  403cce:	48 8b 40 08          	mov    0x8(%rax),%rax
  403cd2:	e8 e9 ff ff ff       	callq  403cc0 <camlPervasives__$40_1158>
  403cd7:	48 89 c3             	mov    %rax,%rbx
  403cda:	49 83 ef 18          	sub    $0x18,%r15
  403cde:	48 8d 05 bb 91 22 00 	lea    0x2291bb(%rip),%rax        # 62cea0 <caml_young_limit>
  403ce5:	4c 3b 38             	cmp    (%rax),%r15
  403ce8:	72 2a                	jb     403d14 <camlPervasives__$40_1158+0x54>
  403cea:	49 8d 47 08          	lea    0x8(%r15),%rax
  403cee:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
  403cf5:	00 
  403cf6:	48 8b 3c 24          	mov    (%rsp),%rdi
  403cfa:	48 8b 3f             	mov    (%rdi),%rdi
  403cfd:	48 89 38             	mov    %rdi,(%rax)
  403d00:	48 89 58 08          	mov    %rbx,0x8(%rax)
  403d04:	48 83 c4 08          	add    $0x8,%rsp
  403d08:	c3                   	retq   
  403d09:	0f 1f 00             	nopl   (%rax)
  403d0c:	48 89 d8             	mov    %rbx,%rax
  403d0f:	48 83 c4 08          	add    $0x8,%rsp
  403d13:	c3                   	retq   
  403d14:	e8 07 5e 01 00       	callq  419b20 <caml_call_gc>
  403d19:	eb bf                	jmp    403cda <camlPervasives__$40_1158+0x1a>
  403d1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000403d20 <camlPervasives__open_out_gen_1182>:
  403d20:	48 83 ec 18          	sub    $0x18,%rsp
  403d24:	48 89 3c 24          	mov    %rdi,(%rsp)
  403d28:	48 89 c6             	mov    %rax,%rsi
  403d2b:	48 89 da             	mov    %rbx,%rdx
  403d2e:	48 8d 05 ab e0 00 00 	lea    0xe0ab(%rip),%rax        # 411de0 <caml_sys_open>
  403d35:	e8 0a 60 01 00       	callq  419d44 <caml_c_call>
  403d3a:	4c 8d 1d 67 91 22 00 	lea    0x229167(%rip),%r11        # 62cea8 <caml_young_ptr>
  403d41:	4d 8b 3b             	mov    (%r11),%r15
  403d44:	48 89 c7             	mov    %rax,%rdi
  403d47:	48 8d 05 12 9a 00 00 	lea    0x9a12(%rip),%rax        # 40d760 <caml_ml_open_descriptor_out>
  403d4e:	e8 f1 5f 01 00       	callq  419d44 <caml_c_call>
  403d53:	4c 8d 1d 4e 91 22 00 	lea    0x22914e(%rip),%r11        # 62cea8 <caml_young_ptr>
  403d5a:	4d 8b 3b             	mov    (%r11),%r15
  403d5d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  403d62:	48 89 c7             	mov    %rax,%rdi
  403d65:	48 8b 34 24          	mov    (%rsp),%rsi
  403d69:	48 8d 05 30 9a 00 00 	lea    0x9a30(%rip),%rax        # 40d7a0 <caml_ml_set_channel_name>
  403d70:	e8 cf 5f 01 00       	callq  419d44 <caml_c_call>
  403d75:	4c 8d 1d 2c 91 22 00 	lea    0x22912c(%rip),%r11        # 62cea8 <caml_young_ptr>
  403d7c:	4d 8b 3b             	mov    (%r11),%r15
  403d7f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  403d84:	48 83 c4 18          	add    $0x18,%rsp
  403d88:	c3                   	retq   
  403d89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000403d90 <camlPervasives__open_out_1187>:
  403d90:	48 89 c7             	mov    %rax,%rdi
  403d93:	48 c7 c3 6d 03 00 00 	mov    $0x36d,%rbx
  403d9a:	48 8d 05 a7 6d 22 00 	lea    0x226da7(%rip),%rax        # 62ab48 <camlPervasives__21>
  403da1:	e9 7a ff ff ff       	jmpq   403d20 <camlPervasives__open_out_gen_1182>
  403da6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  403dad:	00 00 00 

0000000000403db0 <camlPervasives__open_out_bin_1189>:
  403db0:	48 89 c7             	mov    %rax,%rdi
  403db3:	48 c7 c3 6d 03 00 00 	mov    $0x36d,%rbx
  403dba:	48 8d 05 e7 6d 22 00 	lea    0x226de7(%rip),%rax        # 62aba8 <camlPervasives__25>
  403dc1:	e9 5a ff ff ff       	jmpq   403d20 <camlPervasives__open_out_gen_1182>
  403dc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  403dcd:	00 00 00 

0000000000403dd0 <camlPervasives__flush_all_1193>:
  403dd0:	48 83 ec 08          	sub    $0x8,%rsp
  403dd4:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  403ddb:	48 8d 05 1e 9a 00 00 	lea    0x9a1e(%rip),%rax        # 40d800 <caml_ml_out_channels_list>
  403de2:	e8 5d 5f 01 00       	callq  419d44 <caml_c_call>
  403de7:	4c 8d 1d ba 90 22 00 	lea    0x2290ba(%rip),%r11        # 62cea8 <caml_young_ptr>
  403dee:	4d 8b 3b             	mov    (%r11),%r15
  403df1:	48 83 c4 08          	add    $0x8,%rsp
  403df5:	e9 06 00 00 00       	jmpq   403e00 <camlPervasives__iter_1194>
  403dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000403e00 <camlPervasives__iter_1194>:
  403e00:	48 83 ec 08          	sub    $0x8,%rsp
  403e04:	48 83 f8 01          	cmp    $0x1,%rax
  403e08:	74 3e                	je     403e48 <camlPervasives__iter_1194+0x48>
  403e0a:	48 89 04 24          	mov    %rax,(%rsp)
  403e0e:	e8 05 00 00 00       	callq  403e18 <camlPervasives__iter_1194+0x18>
  403e13:	eb 27                	jmp    403e3c <camlPervasives__iter_1194+0x3c>
  403e15:	0f 1f 00             	nopl   (%rax)
  403e18:	41 56                	push   %r14
  403e1a:	49 89 e6             	mov    %rsp,%r14
  403e1d:	48 8b 38             	mov    (%rax),%rdi
  403e20:	48 8d 05 39 9d 00 00 	lea    0x9d39(%rip),%rax        # 40db60 <caml_ml_flush>
  403e27:	e8 18 5f 01 00       	callq  419d44 <caml_c_call>
  403e2c:	4c 8d 1d 75 90 22 00 	lea    0x229075(%rip),%r11        # 62cea8 <caml_young_ptr>
  403e33:	4d 8b 3b             	mov    (%r11),%r15
  403e36:	41 5e                	pop    %r14
  403e38:	48 83 c4 08          	add    $0x8,%rsp
  403e3c:	48 8b 04 24          	mov    (%rsp),%rax
  403e40:	48 8b 40 08          	mov    0x8(%rax),%rax
  403e44:	eb be                	jmp    403e04 <camlPervasives__iter_1194+0x4>
  403e46:	66 90                	xchg   %ax,%ax
  403e48:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  403e4f:	48 83 c4 08          	add    $0x8,%rsp
  403e53:	c3                   	retq   
  403e54:	66 90                	xchg   %ax,%ax
  403e56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  403e5d:	00 00 00 

0000000000403e60 <camlPervasives__output_bytes_1200>:
  403e60:	48 83 ec 08          	sub    $0x8,%rsp
  403e64:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  403e68:	48 c1 ef 0a          	shr    $0xa,%rdi
  403e6c:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
  403e73:	ff 
  403e74:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
  403e79:	48 29 f7             	sub    %rsi,%rdi
  403e7c:	48 8d 4c 3f 01       	lea    0x1(%rdi,%rdi,1),%rcx
  403e81:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  403e88:	48 89 c7             	mov    %rax,%rdi
  403e8b:	48 89 de             	mov    %rbx,%rsi
  403e8e:	48 8d 05 1b a0 00 00 	lea    0xa01b(%rip),%rax        # 40deb0 <caml_ml_output_bytes>
  403e95:	e8 aa 5e 01 00       	callq  419d44 <caml_c_call>
  403e9a:	4c 8d 1d 07 90 22 00 	lea    0x229007(%rip),%r11        # 62cea8 <caml_young_ptr>
  403ea1:	4d 8b 3b             	mov    (%r11),%r15
  403ea4:	48 83 c4 08          	add    $0x8,%rsp
  403ea8:	c3                   	retq   
  403ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000403eb0 <camlPervasives__output_string_1203>:
  403eb0:	48 83 ec 08          	sub    $0x8,%rsp
  403eb4:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  403eb8:	48 c1 ef 0a          	shr    $0xa,%rdi
  403ebc:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
  403ec3:	ff 
  403ec4:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
  403ec9:	48 29 f7             	sub    %rsi,%rdi
  403ecc:	48 8d 4c 3f 01       	lea    0x1(%rdi,%rdi,1),%rcx
  403ed1:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  403ed8:	48 89 c7             	mov    %rax,%rdi
  403edb:	48 89 de             	mov    %rbx,%rsi
  403ede:	48 8d 05 cb a0 00 00 	lea    0xa0cb(%rip),%rax        # 40dfb0 <caml_ml_output>
  403ee5:	e8 5a 5e 01 00       	callq  419d44 <caml_c_call>
  403eea:	4c 8d 1d b7 8f 22 00 	lea    0x228fb7(%rip),%r11        # 62cea8 <caml_young_ptr>
  403ef1:	4d 8b 3b             	mov    (%r11),%r15
  403ef4:	48 83 c4 08          	add    $0x8,%rsp
  403ef8:	c3                   	retq   
  403ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000403f00 <camlPervasives__output_1206>:
  403f00:	48 83 ec 08          	sub    $0x8,%rsp
  403f04:	48 89 fa             	mov    %rdi,%rdx
  403f07:	48 89 f1             	mov    %rsi,%rcx
  403f0a:	48 83 fa 01          	cmp    $0x1,%rdx
  403f0e:	7c 50                	jl     403f60 <camlPervasives__output_1206+0x60>
  403f10:	48 83 f9 01          	cmp    $0x1,%rcx
  403f14:	7c 4a                	jl     403f60 <camlPervasives__output_1206+0x60>
  403f16:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  403f1a:	48 c1 ef 0a          	shr    $0xa,%rdi
  403f1e:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
  403f25:	ff 
  403f26:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
  403f2b:	48 29 f7             	sub    %rsi,%rdi
  403f2e:	48 d1 e7             	shl    %rdi
  403f31:	48 29 cf             	sub    %rcx,%rdi
  403f34:	48 83 c7 02          	add    $0x2,%rdi
  403f38:	48 39 fa             	cmp    %rdi,%rdx
  403f3b:	7f 23                	jg     403f60 <camlPervasives__output_1206+0x60>
  403f3d:	48 89 c7             	mov    %rax,%rdi
  403f40:	48 89 de             	mov    %rbx,%rsi
  403f43:	48 8d 05 66 9f 00 00 	lea    0x9f66(%rip),%rax        # 40deb0 <caml_ml_output_bytes>
  403f4a:	e8 f5 5d 01 00       	callq  419d44 <caml_c_call>
  403f4f:	4c 8d 1d 52 8f 22 00 	lea    0x228f52(%rip),%r11        # 62cea8 <caml_young_ptr>
  403f56:	4d 8b 3b             	mov    (%r11),%r15
  403f59:	48 83 c4 08          	add    $0x8,%rsp
  403f5d:	c3                   	retq   
  403f5e:	66 90                	xchg   %ax,%ax
  403f60:	48 8d 05 59 6c 22 00 	lea    0x226c59(%rip),%rax        # 62abc0 <camlPervasives__26>
  403f67:	48 83 c4 08          	add    $0x8,%rsp
  403f6b:	e9 80 f9 ff ff       	jmpq   4038f0 <camlPervasives__invalid_arg_1007>

0000000000403f70 <camlPervasives__output_substring_1211>:
  403f70:	48 83 ec 08          	sub    $0x8,%rsp
  403f74:	48 89 fa             	mov    %rdi,%rdx
  403f77:	48 89 f1             	mov    %rsi,%rcx
  403f7a:	48 83 fa 01          	cmp    $0x1,%rdx
  403f7e:	7c 50                	jl     403fd0 <camlPervasives__output_substring_1211+0x60>
  403f80:	48 83 f9 01          	cmp    $0x1,%rcx
  403f84:	7c 4a                	jl     403fd0 <camlPervasives__output_substring_1211+0x60>
  403f86:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  403f8a:	48 c1 ef 0a          	shr    $0xa,%rdi
  403f8e:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
  403f95:	ff 
  403f96:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
  403f9b:	48 29 f7             	sub    %rsi,%rdi
  403f9e:	48 d1 e7             	shl    %rdi
  403fa1:	48 29 cf             	sub    %rcx,%rdi
  403fa4:	48 83 c7 02          	add    $0x2,%rdi
  403fa8:	48 39 fa             	cmp    %rdi,%rdx
  403fab:	7f 23                	jg     403fd0 <camlPervasives__output_substring_1211+0x60>
  403fad:	48 89 c7             	mov    %rax,%rdi
  403fb0:	48 89 de             	mov    %rbx,%rsi
  403fb3:	48 8d 05 f6 9f 00 00 	lea    0x9ff6(%rip),%rax        # 40dfb0 <caml_ml_output>
  403fba:	e8 85 5d 01 00       	callq  419d44 <caml_c_call>
  403fbf:	4c 8d 1d e2 8e 22 00 	lea    0x228ee2(%rip),%r11        # 62cea8 <caml_young_ptr>
  403fc6:	4d 8b 3b             	mov    (%r11),%r15
  403fc9:	48 83 c4 08          	add    $0x8,%rsp
  403fcd:	c3                   	retq   
  403fce:	66 90                	xchg   %ax,%ax
  403fd0:	48 8d 05 f9 6b 22 00 	lea    0x226bf9(%rip),%rax        # 62abd0 <camlPervasives__27>
  403fd7:	48 83 c4 08          	add    $0x8,%rsp
  403fdb:	e9 10 f9 ff ff       	jmpq   4038f0 <camlPervasives__invalid_arg_1007>

0000000000403fe0 <camlPervasives__output_value_1219>:
  403fe0:	48 83 ec 08          	sub    $0x8,%rsp
  403fe4:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  403feb:	48 89 c7             	mov    %rax,%rdi
  403fee:	48 89 de             	mov    %rbx,%rsi
  403ff1:	48 8d 05 a8 bc 00 00 	lea    0xbca8(%rip),%rax        # 40fca0 <caml_output_value>
  403ff8:	e8 47 5d 01 00       	callq  419d44 <caml_c_call>
  403ffd:	4c 8d 1d a4 8e 22 00 	lea    0x228ea4(%rip),%r11        # 62cea8 <caml_young_ptr>
  404004:	4d 8b 3b             	mov    (%r11),%r15
  404007:	48 83 c4 08          	add    $0x8,%rsp
  40400b:	c3                   	retq   
  40400c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000404010 <camlPervasives__close_out_1226>:
  404010:	48 83 ec 08          	sub    $0x8,%rsp
  404014:	48 89 04 24          	mov    %rax,(%rsp)
  404018:	48 89 c7             	mov    %rax,%rdi
  40401b:	48 8d 05 3e 9b 00 00 	lea    0x9b3e(%rip),%rax        # 40db60 <caml_ml_flush>
  404022:	e8 1d 5d 01 00       	callq  419d44 <caml_c_call>
  404027:	4c 8d 1d 7a 8e 22 00 	lea    0x228e7a(%rip),%r11        # 62cea8 <caml_young_ptr>
  40402e:	4d 8b 3b             	mov    (%r11),%r15
  404031:	48 8b 3c 24          	mov    (%rsp),%rdi
  404035:	48 8d 05 44 99 00 00 	lea    0x9944(%rip),%rax        # 40d980 <caml_ml_close_channel>
  40403c:	e8 03 5d 01 00       	callq  419d44 <caml_c_call>
  404041:	4c 8d 1d 60 8e 22 00 	lea    0x228e60(%rip),%r11        # 62cea8 <caml_young_ptr>
  404048:	4d 8b 3b             	mov    (%r11),%r15
  40404b:	48 83 c4 08          	add    $0x8,%rsp
  40404f:	c3                   	retq   

0000000000404050 <camlPervasives__close_out_noerr_1228>:
  404050:	48 83 ec 08          	sub    $0x8,%rsp
  404054:	48 89 04 24          	mov    %rax,(%rsp)
  404058:	e8 03 00 00 00       	callq  404060 <camlPervasives__close_out_noerr_1228+0x10>
  40405d:	eb 25                	jmp    404084 <camlPervasives__close_out_noerr_1228+0x34>
  40405f:	90                   	nop
  404060:	41 56                	push   %r14
  404062:	49 89 e6             	mov    %rsp,%r14
  404065:	48 89 c7             	mov    %rax,%rdi
  404068:	48 8d 05 f1 9a 00 00 	lea    0x9af1(%rip),%rax        # 40db60 <caml_ml_flush>
  40406f:	e8 d0 5c 01 00       	callq  419d44 <caml_c_call>
  404074:	4c 8d 1d 2d 8e 22 00 	lea    0x228e2d(%rip),%r11        # 62cea8 <caml_young_ptr>
  40407b:	4d 8b 3b             	mov    (%r11),%r15
  40407e:	41 5e                	pop    %r14
  404080:	48 83 c4 08          	add    $0x8,%rsp
  404084:	e8 0f 00 00 00       	callq  404098 <camlPervasives__close_out_noerr_1228+0x48>
  404089:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404090:	48 83 c4 08          	add    $0x8,%rsp
  404094:	c3                   	retq   
  404095:	0f 1f 00             	nopl   (%rax)
  404098:	41 56                	push   %r14
  40409a:	49 89 e6             	mov    %rsp,%r14
  40409d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4040a2:	48 8d 05 d7 98 00 00 	lea    0x98d7(%rip),%rax        # 40d980 <caml_ml_close_channel>
  4040a9:	e8 96 5c 01 00       	callq  419d44 <caml_c_call>
  4040ae:	4c 8d 1d f3 8d 22 00 	lea    0x228df3(%rip),%r11        # 62cea8 <caml_young_ptr>
  4040b5:	4d 8b 3b             	mov    (%r11),%r15
  4040b8:	41 5e                	pop    %r14
  4040ba:	48 83 c4 08          	add    $0x8,%rsp
  4040be:	48 83 c4 08          	add    $0x8,%rsp
  4040c2:	c3                   	retq   
  4040c3:	0f 1f 00             	nopl   (%rax)
  4040c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4040cd:	00 00 00 

00000000004040d0 <camlPervasives__open_in_gen_1232>:
  4040d0:	48 83 ec 18          	sub    $0x18,%rsp
  4040d4:	48 89 3c 24          	mov    %rdi,(%rsp)
  4040d8:	48 89 c6             	mov    %rax,%rsi
  4040db:	48 89 da             	mov    %rbx,%rdx
  4040de:	48 8d 05 fb dc 00 00 	lea    0xdcfb(%rip),%rax        # 411de0 <caml_sys_open>
  4040e5:	e8 5a 5c 01 00       	callq  419d44 <caml_c_call>
  4040ea:	4c 8d 1d b7 8d 22 00 	lea    0x228db7(%rip),%r11        # 62cea8 <caml_young_ptr>
  4040f1:	4d 8b 3b             	mov    (%r11),%r15
  4040f4:	48 89 c7             	mov    %rax,%rdi
  4040f7:	48 8d 05 32 96 00 00 	lea    0x9632(%rip),%rax        # 40d730 <caml_ml_open_descriptor_in>
  4040fe:	e8 41 5c 01 00       	callq  419d44 <caml_c_call>
  404103:	4c 8d 1d 9e 8d 22 00 	lea    0x228d9e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40410a:	4d 8b 3b             	mov    (%r11),%r15
  40410d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  404112:	48 89 c7             	mov    %rax,%rdi
  404115:	48 8b 34 24          	mov    (%rsp),%rsi
  404119:	48 8d 05 80 96 00 00 	lea    0x9680(%rip),%rax        # 40d7a0 <caml_ml_set_channel_name>
  404120:	e8 1f 5c 01 00       	callq  419d44 <caml_c_call>
  404125:	4c 8d 1d 7c 8d 22 00 	lea    0x228d7c(%rip),%r11        # 62cea8 <caml_young_ptr>
  40412c:	4d 8b 3b             	mov    (%r11),%r15
  40412f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  404134:	48 83 c4 18          	add    $0x18,%rsp
  404138:	c3                   	retq   
  404139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000404140 <camlPervasives__open_in_1237>:
  404140:	48 89 c7             	mov    %rax,%rdi
  404143:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  40414a:	48 8d 05 9f 6a 22 00 	lea    0x226a9f(%rip),%rax        # 62abf0 <camlPervasives__28>
  404151:	e9 7a ff ff ff       	jmpq   4040d0 <camlPervasives__open_in_gen_1232>
  404156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40415d:	00 00 00 

0000000000404160 <camlPervasives__open_in_bin_1239>:
  404160:	48 89 c7             	mov    %rax,%rdi
  404163:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  40416a:	48 8d 05 97 6a 22 00 	lea    0x226a97(%rip),%rax        # 62ac08 <camlPervasives__29>
  404171:	e9 5a ff ff ff       	jmpq   4040d0 <camlPervasives__open_in_gen_1232>
  404176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40417d:	00 00 00 

0000000000404180 <camlPervasives__input_1243>:
  404180:	48 83 ec 08          	sub    $0x8,%rsp
  404184:	48 89 fa             	mov    %rdi,%rdx
  404187:	48 89 f1             	mov    %rsi,%rcx
  40418a:	48 83 fa 01          	cmp    $0x1,%rdx
  40418e:	7c 50                	jl     4041e0 <camlPervasives__input_1243+0x60>
  404190:	48 83 f9 01          	cmp    $0x1,%rcx
  404194:	7c 4a                	jl     4041e0 <camlPervasives__input_1243+0x60>
  404196:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  40419a:	48 c1 ef 0a          	shr    $0xa,%rdi
  40419e:	48 8d 3c fd ff ff ff 	lea    -0x1(,%rdi,8),%rdi
  4041a5:	ff 
  4041a6:	48 0f b6 34 3b       	movzbq (%rbx,%rdi,1),%rsi
  4041ab:	48 29 f7             	sub    %rsi,%rdi
  4041ae:	48 d1 e7             	shl    %rdi
  4041b1:	48 29 cf             	sub    %rcx,%rdi
  4041b4:	48 83 c7 02          	add    $0x2,%rdi
  4041b8:	48 39 fa             	cmp    %rdi,%rdx
  4041bb:	7f 23                	jg     4041e0 <camlPervasives__input_1243+0x60>
  4041bd:	48 89 c7             	mov    %rax,%rdi
  4041c0:	48 89 de             	mov    %rbx,%rsi
  4041c3:	48 8d 05 56 a1 00 00 	lea    0xa156(%rip),%rax        # 40e320 <caml_ml_input>
  4041ca:	e8 75 5b 01 00       	callq  419d44 <caml_c_call>
  4041cf:	4c 8d 1d d2 8c 22 00 	lea    0x228cd2(%rip),%r11        # 62cea8 <caml_young_ptr>
  4041d6:	4d 8b 3b             	mov    (%r11),%r15
  4041d9:	48 83 c4 08          	add    $0x8,%rsp
  4041dd:	c3                   	retq   
  4041de:	66 90                	xchg   %ax,%ax
  4041e0:	48 8d 05 39 6a 22 00 	lea    0x226a39(%rip),%rax        # 62ac20 <camlPervasives__30>
  4041e7:	48 83 c4 08          	add    $0x8,%rsp
  4041eb:	e9 00 f7 ff ff       	jmpq   4038f0 <camlPervasives__invalid_arg_1007>

00000000004041f0 <camlPervasives__unsafe_really_input_1248>:
  4041f0:	48 83 ec 28          	sub    $0x28,%rsp
  4041f4:	48 89 fa             	mov    %rdi,%rdx
  4041f7:	48 89 f1             	mov    %rsi,%rcx
  4041fa:	48 83 f9 01          	cmp    $0x1,%rcx
  4041fe:	7f 0c                	jg     40420c <camlPervasives__unsafe_really_input_1248+0x1c>
  404200:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404207:	48 83 c4 28          	add    $0x28,%rsp
  40420b:	c3                   	retq   
  40420c:	48 89 0c 24          	mov    %rcx,(%rsp)
  404210:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  404215:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
  40421a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  40421f:	48 89 c7             	mov    %rax,%rdi
  404222:	48 89 de             	mov    %rbx,%rsi
  404225:	48 8d 05 f4 a0 00 00 	lea    0xa0f4(%rip),%rax        # 40e320 <caml_ml_input>
  40422c:	e8 13 5b 01 00       	callq  419d44 <caml_c_call>
  404231:	4c 8d 1d 70 8c 22 00 	lea    0x228c70(%rip),%r11        # 62cea8 <caml_young_ptr>
  404238:	4d 8b 3b             	mov    (%r11),%r15
  40423b:	48 83 f8 01          	cmp    $0x1,%rax
  40423f:	75 1b                	jne    40425c <camlPervasives__unsafe_really_input_1248+0x6c>
  404241:	48 8d 05 10 90 23 00 	lea    0x239010(%rip),%rax        # 63d258 <caml_backtrace_pos>
  404248:	48 31 db             	xor    %rbx,%rbx
  40424b:	89 18                	mov    %ebx,(%rax)
  40424d:	48 8d 05 64 51 22 00 	lea    0x225164(%rip),%rax        # 6293b8 <caml_exn_End_of_file>
  404254:	e8 ab 5b 01 00       	callq  419e04 <caml_raise_exn>
  404259:	0f 1f 00             	nopl   (%rax)
  40425c:	48 8b 34 24          	mov    (%rsp),%rsi
  404260:	48 29 c6             	sub    %rax,%rsi
  404263:	48 ff c6             	inc    %rsi
  404266:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40426b:	48 8d 7c 03 ff       	lea    -0x1(%rbx,%rax,1),%rdi
  404270:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  404275:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  40427a:	e9 75 ff ff ff       	jmpq   4041f4 <camlPervasives__unsafe_really_input_1248+0x4>
  40427f:	90                   	nop

0000000000404280 <camlPervasives__really_input_1254>:
  404280:	48 83 ff 01          	cmp    $0x1,%rdi
  404284:	7c 32                	jl     4042b8 <camlPervasives__really_input_1254+0x38>
  404286:	48 83 fe 01          	cmp    $0x1,%rsi
  40428a:	7c 2c                	jl     4042b8 <camlPervasives__really_input_1254+0x38>
  40428c:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
  404290:	48 c1 ea 0a          	shr    $0xa,%rdx
  404294:	48 8d 14 d5 ff ff ff 	lea    -0x1(,%rdx,8),%rdx
  40429b:	ff 
  40429c:	48 0f b6 0c 13       	movzbq (%rbx,%rdx,1),%rcx
  4042a1:	48 29 ca             	sub    %rcx,%rdx
  4042a4:	48 d1 e2             	shl    %rdx
  4042a7:	48 29 f2             	sub    %rsi,%rdx
  4042aa:	48 83 c2 02          	add    $0x2,%rdx
  4042ae:	48 39 d7             	cmp    %rdx,%rdi
  4042b1:	7f 05                	jg     4042b8 <camlPervasives__really_input_1254+0x38>
  4042b3:	e9 38 ff ff ff       	jmpq   4041f0 <camlPervasives__unsafe_really_input_1248>
  4042b8:	48 8d 05 71 69 22 00 	lea    0x226971(%rip),%rax        # 62ac30 <camlPervasives__31>
  4042bf:	e9 2c f6 ff ff       	jmpq   4038f0 <camlPervasives__invalid_arg_1007>
  4042c4:	66 90                	xchg   %ax,%ax
  4042c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4042cd:	00 00 00 

00000000004042d0 <camlPervasives__really_input_string_1259>:
  4042d0:	48 83 ec 18          	sub    $0x18,%rsp
  4042d4:	48 89 04 24          	mov    %rax,(%rsp)
  4042d8:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
  4042dd:	48 89 df             	mov    %rbx,%rdi
  4042e0:	48 8d 05 59 83 00 00 	lea    0x8359(%rip),%rax        # 40c640 <caml_create_bytes>
  4042e7:	e8 58 5a 01 00       	callq  419d44 <caml_c_call>
  4042ec:	4c 8d 1d b5 8b 22 00 	lea    0x228bb5(%rip),%r11        # 62cea8 <caml_young_ptr>
  4042f3:	4d 8b 3b             	mov    (%r11),%r15
  4042f6:	48 89 c3             	mov    %rax,%rbx
  4042f9:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  4042fe:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  404305:	48 8b 04 24          	mov    (%rsp),%rax
  404309:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40430e:	e8 6d ff ff ff       	callq  404280 <camlPervasives__really_input_1254>
  404313:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  404318:	48 83 c4 18          	add    $0x18,%rsp
  40431c:	c3                   	retq   
  40431d:	0f 1f 00             	nopl   (%rax)

0000000000404320 <camlPervasives__input_line_1264>:
  404320:	48 83 ec 08          	sub    $0x8,%rsp
  404324:	48 89 c3             	mov    %rax,%rbx
  404327:	48 8d 35 2a 66 22 00 	lea    0x22662a(%rip),%rsi        # 62a958 <camlPervasives__114>
  40432e:	49 83 ef 30          	sub    $0x30,%r15
  404332:	48 8d 05 67 8b 22 00 	lea    0x228b67(%rip),%rax        # 62cea0 <caml_young_limit>
  404339:	4c 3b 38             	cmp    (%rax),%r15
  40433c:	72 48                	jb     404386 <camlPervasives__input_line_1264+0x66>
  40433e:	49 8d 7f 08          	lea    0x8(%r15),%rdi
  404342:	48 c7 47 f8 f7 14 00 	movq   $0x14f7,-0x8(%rdi)
  404349:	00 
  40434a:	48 8d 05 bf e0 ff ff 	lea    -0x1f41(%rip),%rax        # 402410 <caml_curry2>
  404351:	48 89 07             	mov    %rax,(%rdi)
  404354:	48 c7 47 08 05 00 00 	movq   $0x5,0x8(%rdi)
  40435b:	00 
  40435c:	48 8d 05 9d 00 00 00 	lea    0x9d(%rip),%rax        # 404400 <camlPervasives__scan_1272>
  404363:	48 89 47 10          	mov    %rax,0x10(%rdi)
  404367:	48 89 5f 18          	mov    %rbx,0x18(%rdi)
  40436b:	48 89 77 20          	mov    %rsi,0x20(%rdi)
  40436f:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  404376:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40437d:	48 83 c4 08          	add    $0x8,%rsp
  404381:	e9 7a 00 00 00       	jmpq   404400 <camlPervasives__scan_1272>
  404386:	e8 95 57 01 00       	callq  419b20 <caml_call_gc>
  40438b:	eb a1                	jmp    40432e <camlPervasives__input_line_1264+0xe>
  40438d:	0f 1f 00             	nopl   (%rax)

0000000000404390 <camlPervasives__build_result_1266>:
  404390:	48 83 ec 08          	sub    $0x8,%rsp
  404394:	48 89 c5             	mov    %rax,%rbp
  404397:	49 89 fc             	mov    %rdi,%r12
  40439a:	49 83 fc 01          	cmp    $0x1,%r12
  40439e:	74 4c                	je     4043ec <camlPervasives__build_result_1266+0x5c>
  4043a0:	49 8b 3c 24          	mov    (%r12),%rdi
  4043a4:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  4043a8:	48 c1 e8 0a          	shr    $0xa,%rax
  4043ac:	48 8d 04 c5 ff ff ff 	lea    -0x1(,%rax,8),%rax
  4043b3:	ff 
  4043b4:	48 0f b6 34 07       	movzbq (%rdi,%rax,1),%rsi
  4043b9:	48 29 f0             	sub    %rsi,%rax
  4043bc:	4c 8d 6c 00 01       	lea    0x1(%rax,%rax,1),%r13
  4043c1:	48 89 d9             	mov    %rbx,%rcx
  4043c4:	4c 29 e9             	sub    %r13,%rcx
  4043c7:	48 ff c1             	inc    %rcx
  4043ca:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  4043d1:	48 89 ea             	mov    %rbp,%rdx
  4043d4:	4d 89 e8             	mov    %r13,%r8
  4043d7:	e8 d4 87 00 00       	callq  40cbb0 <caml_blit_bytes>
  4043dc:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  4043e1:	4c 29 eb             	sub    %r13,%rbx
  4043e4:	48 ff c3             	inc    %rbx
  4043e7:	48 89 e8             	mov    %rbp,%rax
  4043ea:	eb a8                	jmp    404394 <camlPervasives__build_result_1266+0x4>
  4043ec:	48 89 e8             	mov    %rbp,%rax
  4043ef:	48 83 c4 08          	add    $0x8,%rsp
  4043f3:	c3                   	retq   
  4043f4:	66 90                	xchg   %ax,%ax
  4043f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4043fd:	00 00 00 

0000000000404400 <camlPervasives__scan_1272>:
  404400:	48 83 ec 28          	sub    $0x28,%rsp
  404404:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  404409:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
  40440e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  404413:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
  404417:	48 8d 05 62 a2 00 00 	lea    0xa262(%rip),%rax        # 40e680 <caml_ml_input_scan_line>
  40441e:	e8 21 59 01 00       	callq  419d44 <caml_c_call>
  404423:	4c 8d 1d 7e 8a 22 00 	lea    0x228a7e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40442a:	4d 8b 3b             	mov    (%r11),%r15
  40442d:	48 83 f8 01          	cmp    $0x1,%rax
  404431:	75 59                	jne    40448c <camlPervasives__scan_1272+0x8c>
  404433:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  404438:	48 83 f8 01          	cmp    $0x1,%rax
  40443c:	74 36                	je     404474 <camlPervasives__scan_1272+0x74>
  40443e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  404443:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  404448:	48 8d 05 f1 81 00 00 	lea    0x81f1(%rip),%rax        # 40c640 <caml_create_bytes>
  40444f:	e8 f0 58 01 00       	callq  419d44 <caml_c_call>
  404454:	4c 8d 1d 4d 8a 22 00 	lea    0x228a4d(%rip),%r11        # 62cea8 <caml_young_ptr>
  40445b:	4d 8b 3b             	mov    (%r11),%r15
  40445e:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  404463:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  404468:	48 83 c4 28          	add    $0x28,%rsp
  40446c:	e9 1f ff ff ff       	jmpq   404390 <camlPervasives__build_result_1266>
  404471:	0f 1f 00             	nopl   (%rax)
  404474:	48 8d 05 dd 8d 23 00 	lea    0x238ddd(%rip),%rax        # 63d258 <caml_backtrace_pos>
  40447b:	48 31 db             	xor    %rbx,%rbx
  40447e:	89 18                	mov    %ebx,(%rax)
  404480:	48 8d 05 31 4f 22 00 	lea    0x224f31(%rip),%rax        # 6293b8 <caml_exn_End_of_file>
  404487:	e8 78 59 01 00       	callq  419e04 <caml_raise_exn>
  40448c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  404491:	48 83 f8 01          	cmp    $0x1,%rax
  404495:	0f 8e f9 00 00 00    	jle    404594 <camlPervasives__scan_1272+0x194>
  40449b:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
  40449f:	48 89 c7             	mov    %rax,%rdi
  4044a2:	48 8d 05 97 81 00 00 	lea    0x8197(%rip),%rax        # 40c640 <caml_create_bytes>
  4044a9:	e8 96 58 01 00       	callq  419d44 <caml_c_call>
  4044ae:	4c 8d 1d f3 89 22 00 	lea    0x2289f3(%rip),%r11        # 62cea8 <caml_young_ptr>
  4044b5:	4d 8b 3b             	mov    (%r11),%r15
  4044b8:	48 89 04 24          	mov    %rax,(%rsp)
  4044bc:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
  4044c1:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
  4044c5:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  4044cc:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4044d1:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
  4044d5:	48 89 c6             	mov    %rax,%rsi
  4044d8:	48 8d 05 41 9e 00 00 	lea    0x9e41(%rip),%rax        # 40e320 <caml_ml_input>
  4044df:	e8 60 58 01 00       	callq  419d44 <caml_c_call>
  4044e4:	4c 8d 1d bd 89 22 00 	lea    0x2289bd(%rip),%r11        # 62cea8 <caml_young_ptr>
  4044eb:	4d 8b 3b             	mov    (%r11),%r15
  4044ee:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4044f3:	48 8b 78 18          	mov    0x18(%rax),%rdi
  4044f7:	48 8d 05 a2 9c 00 00 	lea    0x9ca2(%rip),%rax        # 40e1a0 <caml_ml_input_char>
  4044fe:	e8 41 58 01 00       	callq  419d44 <caml_c_call>
  404503:	4c 8d 1d 9e 89 22 00 	lea    0x22899e(%rip),%r11        # 62cea8 <caml_young_ptr>
  40450a:	4d 8b 3b             	mov    (%r11),%r15
  40450d:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
  404512:	48 83 fb 01          	cmp    $0x1,%rbx
  404516:	74 70                	je     404588 <camlPervasives__scan_1272+0x188>
  404518:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  40451d:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  404522:	48 8d 7c 07 fd       	lea    -0x3(%rdi,%rax,1),%rdi
  404527:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40452c:	49 83 ef 18          	sub    $0x18,%r15
  404530:	48 8d 05 69 89 22 00 	lea    0x228969(%rip),%rax        # 62cea0 <caml_young_limit>
  404537:	4c 3b 38             	cmp    (%rax),%r15
  40453a:	0f 82 fd 00 00 00    	jb     40463d <camlPervasives__scan_1272+0x23d>
  404540:	49 8d 47 08          	lea    0x8(%r15),%rax
  404544:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  404549:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
  404550:	00 
  404551:	48 8b 34 24          	mov    (%rsp),%rsi
  404555:	48 89 30             	mov    %rsi,(%rax)
  404558:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40455c:	48 8d 05 dd 80 00 00 	lea    0x80dd(%rip),%rax        # 40c640 <caml_create_bytes>
  404563:	e8 dc 57 01 00       	callq  419d44 <caml_c_call>
  404568:	4c 8d 1d 39 89 22 00 	lea    0x228939(%rip),%r11        # 62cea8 <caml_young_ptr>
  40456f:	4d 8b 3b             	mov    (%r11),%r15
  404572:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  404577:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40457c:	48 83 c4 28          	add    $0x28,%rsp
  404580:	e9 0b fe ff ff       	jmpq   404390 <camlPervasives__build_result_1266>
  404585:	0f 1f 00             	nopl   (%rax)
  404588:	48 8b 04 24          	mov    (%rsp),%rax
  40458c:	48 83 c4 28          	add    $0x28,%rsp
  404590:	c3                   	retq   
  404591:	0f 1f 00             	nopl   (%rax)
  404594:	48 c7 c7 02 00 00 00 	mov    $0x2,%rdi
  40459b:	48 29 c7             	sub    %rax,%rdi
  40459e:	48 8d 05 9b 80 00 00 	lea    0x809b(%rip),%rax        # 40c640 <caml_create_bytes>
  4045a5:	e8 9a 57 01 00       	callq  419d44 <caml_c_call>
  4045aa:	4c 8d 1d f7 88 22 00 	lea    0x2288f7(%rip),%r11        # 62cea8 <caml_young_ptr>
  4045b1:	4d 8b 3b             	mov    (%r11),%r15
  4045b4:	48 89 04 24          	mov    %rax,(%rsp)
  4045b8:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  4045bf:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
  4045c4:	48 29 d9             	sub    %rbx,%rcx
  4045c7:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  4045ce:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4045d3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
  4045d7:	48 89 c6             	mov    %rax,%rsi
  4045da:	48 8d 05 3f 9d 00 00 	lea    0x9d3f(%rip),%rax        # 40e320 <caml_ml_input>
  4045e1:	e8 5e 57 01 00       	callq  419d44 <caml_c_call>
  4045e6:	4c 8d 1d bb 88 22 00 	lea    0x2288bb(%rip),%r11        # 62cea8 <caml_young_ptr>
  4045ed:	4d 8b 3b             	mov    (%r11),%r15
  4045f0:	49 83 ef 18          	sub    $0x18,%r15
  4045f4:	48 8d 05 a5 88 22 00 	lea    0x2288a5(%rip),%rax        # 62cea0 <caml_young_limit>
  4045fb:	4c 3b 38             	cmp    (%rax),%r15
  4045fe:	72 36                	jb     404636 <camlPervasives__scan_1272+0x236>
  404600:	49 8d 47 08          	lea    0x8(%r15),%rax
  404604:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
  40460b:	00 
  40460c:	48 8b 1c 24          	mov    (%rsp),%rbx
  404610:	48 89 18             	mov    %rbx,(%rax)
  404613:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
  404618:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40461c:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  404621:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  404626:	48 29 fb             	sub    %rdi,%rbx
  404629:	48 ff c3             	inc    %rbx
  40462c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  404631:	e9 ce fd ff ff       	jmpq   404404 <camlPervasives__scan_1272+0x4>
  404636:	e8 e5 54 01 00       	callq  419b20 <caml_call_gc>
  40463b:	eb b3                	jmp    4045f0 <camlPervasives__scan_1272+0x1f0>
  40463d:	e8 de 54 01 00       	callq  419b20 <caml_call_gc>
  404642:	e9 e5 fe ff ff       	jmpq   40452c <camlPervasives__scan_1272+0x12c>
  404647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40464e:	00 00 

0000000000404650 <camlPervasives__close_in_noerr_1286>:
  404650:	48 83 ec 08          	sub    $0x8,%rsp
  404654:	e8 0f 00 00 00       	callq  404668 <camlPervasives__close_in_noerr_1286+0x18>
  404659:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404660:	48 83 c4 08          	add    $0x8,%rsp
  404664:	c3                   	retq   
  404665:	0f 1f 00             	nopl   (%rax)
  404668:	41 56                	push   %r14
  40466a:	49 89 e6             	mov    %rsp,%r14
  40466d:	48 89 c7             	mov    %rax,%rdi
  404670:	48 8d 05 09 93 00 00 	lea    0x9309(%rip),%rax        # 40d980 <caml_ml_close_channel>
  404677:	e8 c8 56 01 00       	callq  419d44 <caml_c_call>
  40467c:	4c 8d 1d 25 88 22 00 	lea    0x228825(%rip),%r11        # 62cea8 <caml_young_ptr>
  404683:	4d 8b 3b             	mov    (%r11),%r15
  404686:	41 5e                	pop    %r14
  404688:	48 83 c4 08          	add    $0x8,%rsp
  40468c:	48 83 c4 08          	add    $0x8,%rsp
  404690:	c3                   	retq   
  404691:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  404696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40469d:	00 00 00 

00000000004046a0 <camlPervasives__print_char_1289>:
  4046a0:	48 83 ec 08          	sub    $0x8,%rsp
  4046a4:	48 8d 1d dd 5f 22 00 	lea    0x225fdd(%rip),%rbx        # 62a688 <camlPervasives>
  4046ab:	48 8b bb b8 00 00 00 	mov    0xb8(%rbx),%rdi
  4046b2:	48 89 c6             	mov    %rax,%rsi
  4046b5:	48 8d 05 64 95 00 00 	lea    0x9564(%rip),%rax        # 40dc20 <caml_ml_output_char>
  4046bc:	e8 83 56 01 00       	callq  419d44 <caml_c_call>
  4046c1:	4c 8d 1d e0 87 22 00 	lea    0x2287e0(%rip),%r11        # 62cea8 <caml_young_ptr>
  4046c8:	4d 8b 3b             	mov    (%r11),%r15
  4046cb:	48 83 c4 08          	add    $0x8,%rsp
  4046cf:	c3                   	retq   

00000000004046d0 <camlPervasives__print_string_1291>:
  4046d0:	48 89 c3             	mov    %rax,%rbx
  4046d3:	48 8d 05 ae 5f 22 00 	lea    0x225fae(%rip),%rax        # 62a688 <camlPervasives>
  4046da:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  4046e1:	e9 ca f7 ff ff       	jmpq   403eb0 <camlPervasives__output_string_1203>
  4046e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4046ed:	00 00 00 

00000000004046f0 <camlPervasives__print_bytes_1293>:
  4046f0:	48 89 c3             	mov    %rax,%rbx
  4046f3:	48 8d 05 8e 5f 22 00 	lea    0x225f8e(%rip),%rax        # 62a688 <camlPervasives>
  4046fa:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  404701:	e9 5a f7 ff ff       	jmpq   403e60 <camlPervasives__output_bytes_1200>
  404706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40470d:	00 00 00 

0000000000404710 <camlPervasives__print_int_1295>:
  404710:	48 83 ec 08          	sub    $0x8,%rsp
  404714:	e8 47 f4 ff ff       	callq  403b60 <camlPervasives__string_of_int_1146>
  404719:	48 89 c3             	mov    %rax,%rbx
  40471c:	48 8d 05 65 5f 22 00 	lea    0x225f65(%rip),%rax        # 62a688 <camlPervasives>
  404723:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  40472a:	48 83 c4 08          	add    $0x8,%rsp
  40472e:	e9 7d f7 ff ff       	jmpq   403eb0 <camlPervasives__output_string_1203>
  404733:	0f 1f 00             	nopl   (%rax)
  404736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40473d:	00 00 00 

0000000000404740 <camlPervasives__print_float_1297>:
  404740:	48 83 ec 08          	sub    $0x8,%rsp
  404744:	e8 47 f5 ff ff       	callq  403c90 <camlPervasives__string_of_float_1155>
  404749:	48 89 c3             	mov    %rax,%rbx
  40474c:	48 8d 05 35 5f 22 00 	lea    0x225f35(%rip),%rax        # 62a688 <camlPervasives>
  404753:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  40475a:	48 83 c4 08          	add    $0x8,%rsp
  40475e:	e9 4d f7 ff ff       	jmpq   403eb0 <camlPervasives__output_string_1203>
  404763:	0f 1f 00             	nopl   (%rax)
  404766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40476d:	00 00 00 

0000000000404770 <camlPervasives__print_endline_1299>:
  404770:	48 83 ec 08          	sub    $0x8,%rsp
  404774:	48 89 c3             	mov    %rax,%rbx
  404777:	48 8d 05 0a 5f 22 00 	lea    0x225f0a(%rip),%rax        # 62a688 <camlPervasives>
  40477e:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  404785:	e8 26 f7 ff ff       	callq  403eb0 <camlPervasives__output_string_1203>
  40478a:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
  404791:	48 8d 05 f0 5e 22 00 	lea    0x225ef0(%rip),%rax        # 62a688 <camlPervasives>
  404798:	48 8b b8 b8 00 00 00 	mov    0xb8(%rax),%rdi
  40479f:	48 8d 05 7a 94 00 00 	lea    0x947a(%rip),%rax        # 40dc20 <caml_ml_output_char>
  4047a6:	e8 99 55 01 00       	callq  419d44 <caml_c_call>
  4047ab:	4c 8d 1d f6 86 22 00 	lea    0x2286f6(%rip),%r11        # 62cea8 <caml_young_ptr>
  4047b2:	4d 8b 3b             	mov    (%r11),%r15
  4047b5:	48 8d 05 cc 5e 22 00 	lea    0x225ecc(%rip),%rax        # 62a688 <camlPervasives>
  4047bc:	48 8b b8 b8 00 00 00 	mov    0xb8(%rax),%rdi
  4047c3:	48 8d 05 96 93 00 00 	lea    0x9396(%rip),%rax        # 40db60 <caml_ml_flush>
  4047ca:	e8 75 55 01 00       	callq  419d44 <caml_c_call>
  4047cf:	4c 8d 1d d2 86 22 00 	lea    0x2286d2(%rip),%r11        # 62cea8 <caml_young_ptr>
  4047d6:	4d 8b 3b             	mov    (%r11),%r15
  4047d9:	48 83 c4 08          	add    $0x8,%rsp
  4047dd:	c3                   	retq   
  4047de:	66 90                	xchg   %ax,%ax

00000000004047e0 <camlPervasives__print_newline_1301>:
  4047e0:	48 83 ec 08          	sub    $0x8,%rsp
  4047e4:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
  4047eb:	48 8d 05 96 5e 22 00 	lea    0x225e96(%rip),%rax        # 62a688 <camlPervasives>
  4047f2:	48 8b b8 b8 00 00 00 	mov    0xb8(%rax),%rdi
  4047f9:	48 8d 05 20 94 00 00 	lea    0x9420(%rip),%rax        # 40dc20 <caml_ml_output_char>
  404800:	e8 3f 55 01 00       	callq  419d44 <caml_c_call>
  404805:	4c 8d 1d 9c 86 22 00 	lea    0x22869c(%rip),%r11        # 62cea8 <caml_young_ptr>
  40480c:	4d 8b 3b             	mov    (%r11),%r15
  40480f:	48 8d 05 72 5e 22 00 	lea    0x225e72(%rip),%rax        # 62a688 <camlPervasives>
  404816:	48 8b b8 b8 00 00 00 	mov    0xb8(%rax),%rdi
  40481d:	48 8d 05 3c 93 00 00 	lea    0x933c(%rip),%rax        # 40db60 <caml_ml_flush>
  404824:	e8 1b 55 01 00       	callq  419d44 <caml_c_call>
  404829:	4c 8d 1d 78 86 22 00 	lea    0x228678(%rip),%r11        # 62cea8 <caml_young_ptr>
  404830:	4d 8b 3b             	mov    (%r11),%r15
  404833:	48 83 c4 08          	add    $0x8,%rsp
  404837:	c3                   	retq   
  404838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40483f:	00 

0000000000404840 <camlPervasives__prerr_char_1303>:
  404840:	48 83 ec 08          	sub    $0x8,%rsp
  404844:	48 8d 1d 3d 5e 22 00 	lea    0x225e3d(%rip),%rbx        # 62a688 <camlPervasives>
  40484b:	48 8b bb c0 00 00 00 	mov    0xc0(%rbx),%rdi
  404852:	48 89 c6             	mov    %rax,%rsi
  404855:	48 8d 05 c4 93 00 00 	lea    0x93c4(%rip),%rax        # 40dc20 <caml_ml_output_char>
  40485c:	e8 e3 54 01 00       	callq  419d44 <caml_c_call>
  404861:	4c 8d 1d 40 86 22 00 	lea    0x228640(%rip),%r11        # 62cea8 <caml_young_ptr>
  404868:	4d 8b 3b             	mov    (%r11),%r15
  40486b:	48 83 c4 08          	add    $0x8,%rsp
  40486f:	c3                   	retq   

0000000000404870 <camlPervasives__prerr_string_1305>:
  404870:	48 89 c3             	mov    %rax,%rbx
  404873:	48 8d 05 0e 5e 22 00 	lea    0x225e0e(%rip),%rax        # 62a688 <camlPervasives>
  40487a:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  404881:	e9 2a f6 ff ff       	jmpq   403eb0 <camlPervasives__output_string_1203>
  404886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40488d:	00 00 00 

0000000000404890 <camlPervasives__prerr_bytes_1307>:
  404890:	48 89 c3             	mov    %rax,%rbx
  404893:	48 8d 05 ee 5d 22 00 	lea    0x225dee(%rip),%rax        # 62a688 <camlPervasives>
  40489a:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  4048a1:	e9 ba f5 ff ff       	jmpq   403e60 <camlPervasives__output_bytes_1200>
  4048a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4048ad:	00 00 00 

00000000004048b0 <camlPervasives__prerr_int_1309>:
  4048b0:	48 83 ec 08          	sub    $0x8,%rsp
  4048b4:	e8 a7 f2 ff ff       	callq  403b60 <camlPervasives__string_of_int_1146>
  4048b9:	48 89 c3             	mov    %rax,%rbx
  4048bc:	48 8d 05 c5 5d 22 00 	lea    0x225dc5(%rip),%rax        # 62a688 <camlPervasives>
  4048c3:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  4048ca:	48 83 c4 08          	add    $0x8,%rsp
  4048ce:	e9 dd f5 ff ff       	jmpq   403eb0 <camlPervasives__output_string_1203>
  4048d3:	0f 1f 00             	nopl   (%rax)
  4048d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4048dd:	00 00 00 

00000000004048e0 <camlPervasives__prerr_float_1311>:
  4048e0:	48 83 ec 08          	sub    $0x8,%rsp
  4048e4:	e8 a7 f3 ff ff       	callq  403c90 <camlPervasives__string_of_float_1155>
  4048e9:	48 89 c3             	mov    %rax,%rbx
  4048ec:	48 8d 05 95 5d 22 00 	lea    0x225d95(%rip),%rax        # 62a688 <camlPervasives>
  4048f3:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  4048fa:	48 83 c4 08          	add    $0x8,%rsp
  4048fe:	e9 ad f5 ff ff       	jmpq   403eb0 <camlPervasives__output_string_1203>
  404903:	0f 1f 00             	nopl   (%rax)
  404906:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40490d:	00 00 00 

0000000000404910 <camlPervasives__prerr_endline_1313>:
  404910:	48 83 ec 08          	sub    $0x8,%rsp
  404914:	48 89 c3             	mov    %rax,%rbx
  404917:	48 8d 05 6a 5d 22 00 	lea    0x225d6a(%rip),%rax        # 62a688 <camlPervasives>
  40491e:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
  404925:	e8 86 f5 ff ff       	callq  403eb0 <camlPervasives__output_string_1203>
  40492a:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
  404931:	48 8d 05 50 5d 22 00 	lea    0x225d50(%rip),%rax        # 62a688 <camlPervasives>
  404938:	48 8b b8 c0 00 00 00 	mov    0xc0(%rax),%rdi
  40493f:	48 8d 05 da 92 00 00 	lea    0x92da(%rip),%rax        # 40dc20 <caml_ml_output_char>
  404946:	e8 f9 53 01 00       	callq  419d44 <caml_c_call>
  40494b:	4c 8d 1d 56 85 22 00 	lea    0x228556(%rip),%r11        # 62cea8 <caml_young_ptr>
  404952:	4d 8b 3b             	mov    (%r11),%r15
  404955:	48 8d 05 2c 5d 22 00 	lea    0x225d2c(%rip),%rax        # 62a688 <camlPervasives>
  40495c:	48 8b b8 c0 00 00 00 	mov    0xc0(%rax),%rdi
  404963:	48 8d 05 f6 91 00 00 	lea    0x91f6(%rip),%rax        # 40db60 <caml_ml_flush>
  40496a:	e8 d5 53 01 00       	callq  419d44 <caml_c_call>
  40496f:	4c 8d 1d 32 85 22 00 	lea    0x228532(%rip),%r11        # 62cea8 <caml_young_ptr>
  404976:	4d 8b 3b             	mov    (%r11),%r15
  404979:	48 83 c4 08          	add    $0x8,%rsp
  40497d:	c3                   	retq   
  40497e:	66 90                	xchg   %ax,%ax

0000000000404980 <camlPervasives__prerr_newline_1315>:
  404980:	48 83 ec 08          	sub    $0x8,%rsp
  404984:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
  40498b:	48 8d 05 f6 5c 22 00 	lea    0x225cf6(%rip),%rax        # 62a688 <camlPervasives>
  404992:	48 8b b8 c0 00 00 00 	mov    0xc0(%rax),%rdi
  404999:	48 8d 05 80 92 00 00 	lea    0x9280(%rip),%rax        # 40dc20 <caml_ml_output_char>
  4049a0:	e8 9f 53 01 00       	callq  419d44 <caml_c_call>
  4049a5:	4c 8d 1d fc 84 22 00 	lea    0x2284fc(%rip),%r11        # 62cea8 <caml_young_ptr>
  4049ac:	4d 8b 3b             	mov    (%r11),%r15
  4049af:	48 8d 05 d2 5c 22 00 	lea    0x225cd2(%rip),%rax        # 62a688 <camlPervasives>
  4049b6:	48 8b b8 c0 00 00 00 	mov    0xc0(%rax),%rdi
  4049bd:	48 8d 05 9c 91 00 00 	lea    0x919c(%rip),%rax        # 40db60 <caml_ml_flush>
  4049c4:	e8 7b 53 01 00       	callq  419d44 <caml_c_call>
  4049c9:	4c 8d 1d d8 84 22 00 	lea    0x2284d8(%rip),%r11        # 62cea8 <caml_young_ptr>
  4049d0:	4d 8b 3b             	mov    (%r11),%r15
  4049d3:	48 83 c4 08          	add    $0x8,%rsp
  4049d7:	c3                   	retq   
  4049d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4049df:	00 

00000000004049e0 <camlPervasives__read_line_1317>:
  4049e0:	48 83 ec 08          	sub    $0x8,%rsp
  4049e4:	48 8d 05 9d 5c 22 00 	lea    0x225c9d(%rip),%rax        # 62a688 <camlPervasives>
  4049eb:	48 8b b8 b8 00 00 00 	mov    0xb8(%rax),%rdi
  4049f2:	48 8d 05 67 91 00 00 	lea    0x9167(%rip),%rax        # 40db60 <caml_ml_flush>
  4049f9:	e8 46 53 01 00       	callq  419d44 <caml_c_call>
  4049fe:	4c 8d 1d a3 84 22 00 	lea    0x2284a3(%rip),%r11        # 62cea8 <caml_young_ptr>
  404a05:	4d 8b 3b             	mov    (%r11),%r15
  404a08:	48 8d 05 79 5c 22 00 	lea    0x225c79(%rip),%rax        # 62a688 <camlPervasives>
  404a0f:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  404a16:	48 83 c4 08          	add    $0x8,%rsp
  404a1a:	e9 01 f9 ff ff       	jmpq   404320 <camlPervasives__input_line_1264>
  404a1f:	90                   	nop

0000000000404a20 <camlPervasives__read_int_1319>:
  404a20:	48 83 ec 08          	sub    $0x8,%rsp
  404a24:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404a2b:	e8 b0 ff ff ff       	callq  4049e0 <camlPervasives__read_line_1317>
  404a30:	48 89 c7             	mov    %rax,%rdi
  404a33:	48 8d 05 16 5b 00 00 	lea    0x5b16(%rip),%rax        # 40a550 <caml_int_of_string>
  404a3a:	e8 05 53 01 00       	callq  419d44 <caml_c_call>
  404a3f:	4c 8d 1d 62 84 22 00 	lea    0x228462(%rip),%r11        # 62cea8 <caml_young_ptr>
  404a46:	4d 8b 3b             	mov    (%r11),%r15
  404a49:	48 83 c4 08          	add    $0x8,%rsp
  404a4d:	c3                   	retq   
  404a4e:	66 90                	xchg   %ax,%ax

0000000000404a50 <camlPervasives__read_float_1321>:
  404a50:	48 83 ec 08          	sub    $0x8,%rsp
  404a54:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404a5b:	e8 80 ff ff ff       	callq  4049e0 <camlPervasives__read_line_1317>
  404a60:	48 89 c7             	mov    %rax,%rdi
  404a63:	48 8d 05 a6 6f 00 00 	lea    0x6fa6(%rip),%rax        # 40ba10 <caml_float_of_string>
  404a6a:	e8 d5 52 01 00       	callq  419d44 <caml_c_call>
  404a6f:	4c 8d 1d 32 84 22 00 	lea    0x228432(%rip),%r11        # 62cea8 <caml_young_ptr>
  404a76:	4d 8b 3b             	mov    (%r11),%r15
  404a79:	48 83 c4 08          	add    $0x8,%rsp
  404a7d:	c3                   	retq   
  404a7e:	66 90                	xchg   %ax,%ax

0000000000404a80 <camlPervasives__fun_1720>:
  404a80:	48 83 ec 08          	sub    $0x8,%rsp
  404a84:	48 89 c7             	mov    %rax,%rdi
  404a87:	48 89 de             	mov    %rbx,%rsi
  404a8a:	48 8d 05 ef 95 00 00 	lea    0x95ef(%rip),%rax        # 40e080 <caml_ml_seek_out_64>
  404a91:	e8 ae 52 01 00       	callq  419d44 <caml_c_call>
  404a96:	4c 8d 1d 0b 84 22 00 	lea    0x22840b(%rip),%r11        # 62cea8 <caml_young_ptr>
  404a9d:	4d 8b 3b             	mov    (%r11),%r15
  404aa0:	48 83 c4 08          	add    $0x8,%rsp
  404aa4:	c3                   	retq   
  404aa5:	90                   	nop
  404aa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404aad:	00 00 00 

0000000000404ab0 <camlPervasives__fun_1722>:
  404ab0:	48 83 ec 08          	sub    $0x8,%rsp
  404ab4:	48 89 c7             	mov    %rax,%rdi
  404ab7:	48 8d 05 c2 96 00 00 	lea    0x96c2(%rip),%rax        # 40e180 <caml_ml_pos_out_64>
  404abe:	e8 81 52 01 00       	callq  419d44 <caml_c_call>
  404ac3:	4c 8d 1d de 83 22 00 	lea    0x2283de(%rip),%r11        # 62cea8 <caml_young_ptr>
  404aca:	4d 8b 3b             	mov    (%r11),%r15
  404acd:	48 83 c4 08          	add    $0x8,%rsp
  404ad1:	c3                   	retq   
  404ad2:	0f 1f 40 00          	nopl   0x0(%rax)
  404ad6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404add:	00 00 00 

0000000000404ae0 <camlPervasives__fun_1724>:
  404ae0:	48 83 ec 08          	sub    $0x8,%rsp
  404ae4:	48 89 c7             	mov    %rax,%rdi
  404ae7:	48 8d 05 62 8f 00 00 	lea    0x8f62(%rip),%rax        # 40da50 <caml_ml_channel_size_64>
  404aee:	e8 51 52 01 00       	callq  419d44 <caml_c_call>
  404af3:	4c 8d 1d ae 83 22 00 	lea    0x2283ae(%rip),%r11        # 62cea8 <caml_young_ptr>
  404afa:	4d 8b 3b             	mov    (%r11),%r15
  404afd:	48 83 c4 08          	add    $0x8,%rsp
  404b01:	c3                   	retq   
  404b02:	0f 1f 40 00          	nopl   0x0(%rax)
  404b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404b0d:	00 00 00 

0000000000404b10 <camlPervasives__fun_1726>:
  404b10:	48 83 ec 08          	sub    $0x8,%rsp
  404b14:	48 89 c7             	mov    %rax,%rdi
  404b17:	48 89 de             	mov    %rbx,%rsi
  404b1a:	48 8d 05 3f 9a 00 00 	lea    0x9a3f(%rip),%rax        # 40e560 <caml_ml_seek_in_64>
  404b21:	e8 1e 52 01 00       	callq  419d44 <caml_c_call>
  404b26:	4c 8d 1d 7b 83 22 00 	lea    0x22837b(%rip),%r11        # 62cea8 <caml_young_ptr>
  404b2d:	4d 8b 3b             	mov    (%r11),%r15
  404b30:	48 83 c4 08          	add    $0x8,%rsp
  404b34:	c3                   	retq   
  404b35:	90                   	nop
  404b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404b3d:	00 00 00 

0000000000404b40 <camlPervasives__fun_1728>:
  404b40:	48 83 ec 08          	sub    $0x8,%rsp
  404b44:	48 89 c7             	mov    %rax,%rdi
  404b47:	48 8d 05 12 9b 00 00 	lea    0x9b12(%rip),%rax        # 40e660 <caml_ml_pos_in_64>
  404b4e:	e8 f1 51 01 00       	callq  419d44 <caml_c_call>
  404b53:	4c 8d 1d 4e 83 22 00 	lea    0x22834e(%rip),%r11        # 62cea8 <caml_young_ptr>
  404b5a:	4d 8b 3b             	mov    (%r11),%r15
  404b5d:	48 83 c4 08          	add    $0x8,%rsp
  404b61:	c3                   	retq   
  404b62:	0f 1f 40 00          	nopl   0x0(%rax)
  404b66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404b6d:	00 00 00 

0000000000404b70 <camlPervasives__fun_1730>:
  404b70:	48 83 ec 08          	sub    $0x8,%rsp
  404b74:	48 89 c7             	mov    %rax,%rdi
  404b77:	48 8d 05 d2 8e 00 00 	lea    0x8ed2(%rip),%rax        # 40da50 <caml_ml_channel_size_64>
  404b7e:	e8 c1 51 01 00       	callq  419d44 <caml_c_call>
  404b83:	4c 8d 1d 1e 83 22 00 	lea    0x22831e(%rip),%r11        # 62cea8 <caml_young_ptr>
  404b8a:	4d 8b 3b             	mov    (%r11),%r15
  404b8d:	48 83 c4 08          	add    $0x8,%rsp
  404b91:	c3                   	retq   
  404b92:	0f 1f 40 00          	nopl   0x0(%rax)
  404b96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404b9d:	00 00 00 

0000000000404ba0 <camlPervasives__string_of_format_1355>:
  404ba0:	48 8b 40 08          	mov    0x8(%rax),%rax
  404ba4:	c3                   	retq   
  404ba5:	90                   	nop
  404ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404bad:	00 00 00 

0000000000404bb0 <camlPervasives__$5e$5e_1359>:
  404bb0:	48 83 ec 18          	sub    $0x18,%rsp
  404bb4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  404bb9:	48 89 1c 24          	mov    %rbx,(%rsp)
  404bbd:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  404bc1:	48 8d 05 88 60 22 00 	lea    0x226088(%rip),%rax        # 62ac50 <camlPervasives__33>
  404bc8:	e8 43 ee ff ff       	callq  403a10 <camlPervasives__$5e_1117>
  404bcd:	48 89 c3             	mov    %rax,%rbx
  404bd0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  404bd5:	48 8b 40 08          	mov    0x8(%rax),%rax
  404bd9:	e8 32 ee ff ff       	callq  403a10 <camlPervasives__$5e_1117>
  404bde:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  404be3:	48 8b 04 24          	mov    (%rsp),%rax
  404be7:	48 8b 18             	mov    (%rax),%rbx
  404bea:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  404bef:	48 8b 00             	mov    (%rax),%rax
  404bf2:	e8 c9 e1 ff ff       	callq  402dc0 <camlCamlinternalFormatBasics__concat_fmt_1337>
  404bf7:	48 89 c3             	mov    %rax,%rbx
  404bfa:	49 83 ef 18          	sub    $0x18,%r15
  404bfe:	48 8d 05 9b 82 22 00 	lea    0x22829b(%rip),%rax        # 62cea0 <caml_young_limit>
  404c05:	4c 3b 38             	cmp    (%rax),%r15
  404c08:	72 1d                	jb     404c27 <camlPervasives__$5e$5e_1359+0x77>
  404c0a:	49 8d 47 08          	lea    0x8(%r15),%rax
  404c0e:	48 c7 40 f8 00 08 00 	movq   $0x800,-0x8(%rax)
  404c15:	00 
  404c16:	48 89 18             	mov    %rbx,(%rax)
  404c19:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
  404c1e:	48 89 58 08          	mov    %rbx,0x8(%rax)
  404c22:	48 83 c4 18          	add    $0x18,%rsp
  404c26:	c3                   	retq   
  404c27:	e8 f4 4e 01 00       	callq  419b20 <caml_call_gc>
  404c2c:	eb cc                	jmp    404bfa <camlPervasives__$5e$5e_1359+0x4a>
  404c2e:	66 90                	xchg   %ax,%ax

0000000000404c30 <camlPervasives__at_exit_1366>:
  404c30:	48 83 ec 08          	sub    $0x8,%rsp
  404c34:	48 89 c3             	mov    %rax,%rbx
  404c37:	48 8d 3d 4a 5a 22 00 	lea    0x225a4a(%rip),%rdi        # 62a688 <camlPervasives>
  404c3e:	48 8b 87 b0 02 00 00 	mov    0x2b0(%rdi),%rax
  404c45:	48 8b 10             	mov    (%rax),%rdx
  404c48:	49 83 ef 28          	sub    $0x28,%r15
  404c4c:	48 8d 05 4d 82 22 00 	lea    0x22824d(%rip),%rax        # 62cea0 <caml_young_limit>
  404c53:	4c 3b 38             	cmp    (%rax),%r15
  404c56:	72 3e                	jb     404c96 <camlPervasives__at_exit_1366+0x66>
  404c58:	49 8d 77 08          	lea    0x8(%r15),%rsi
  404c5c:	48 c7 46 f8 f7 10 00 	movq   $0x10f7,-0x8(%rsi)
  404c63:	00 
  404c64:	48 8d 05 35 00 00 00 	lea    0x35(%rip),%rax        # 404ca0 <camlPervasives__fun_1735>
  404c6b:	48 89 06             	mov    %rax,(%rsi)
  404c6e:	48 c7 46 08 03 00 00 	movq   $0x3,0x8(%rsi)
  404c75:	00 
  404c76:	48 89 5e 10          	mov    %rbx,0x10(%rsi)
  404c7a:	48 89 56 18          	mov    %rdx,0x18(%rsi)
  404c7e:	48 8b bf b0 02 00 00 	mov    0x2b0(%rdi),%rdi
  404c85:	e8 86 4a 00 00       	callq  409710 <caml_modify>
  404c8a:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404c91:	48 83 c4 08          	add    $0x8,%rsp
  404c95:	c3                   	retq   
  404c96:	e8 85 4e 01 00       	callq  419b20 <caml_call_gc>
  404c9b:	eb ab                	jmp    404c48 <camlPervasives__at_exit_1366+0x18>
  404c9d:	0f 1f 00             	nopl   (%rax)

0000000000404ca0 <camlPervasives__fun_1735>:
  404ca0:	48 83 ec 08          	sub    $0x8,%rsp
  404ca4:	48 89 1c 24          	mov    %rbx,(%rsp)
  404ca8:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
  404cac:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404cb3:	48 8b 3b             	mov    (%rbx),%rdi
  404cb6:	ff d7                	callq  *%rdi
  404cb8:	48 8b 04 24          	mov    (%rsp),%rax
  404cbc:	48 8b 58 18          	mov    0x18(%rax),%rbx
  404cc0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404cc7:	48 8b 3b             	mov    (%rbx),%rdi
  404cca:	48 83 c4 08          	add    $0x8,%rsp
  404cce:	ff e7                	jmpq   *%rdi

0000000000404cd0 <camlPervasives__do_at_exit_1369>:
  404cd0:	48 8d 05 b1 59 22 00 	lea    0x2259b1(%rip),%rax        # 62a688 <camlPervasives>
  404cd7:	48 8b 80 b0 02 00 00 	mov    0x2b0(%rax),%rax
  404cde:	48 8b 18             	mov    (%rax),%rbx
  404ce1:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404ce8:	48 8b 3b             	mov    (%rbx),%rdi
  404ceb:	ff e7                	jmpq   *%rdi
  404ced:	0f 1f 00             	nopl   (%rax)

0000000000404cf0 <camlPervasives__exit_1371>:
  404cf0:	48 83 ec 08          	sub    $0x8,%rsp
  404cf4:	48 89 04 24          	mov    %rax,(%rsp)
  404cf8:	48 8d 05 89 59 22 00 	lea    0x225989(%rip),%rax        # 62a688 <camlPervasives>
  404cff:	48 8b 80 b0 02 00 00 	mov    0x2b0(%rax),%rax
  404d06:	48 8b 18             	mov    (%rax),%rbx
  404d09:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404d10:	48 8b 3b             	mov    (%rbx),%rdi
  404d13:	ff d7                	callq  *%rdi
  404d15:	48 8b 3c 24          	mov    (%rsp),%rdi
  404d19:	48 8d 05 d0 ce 00 00 	lea    0xced0(%rip),%rax        # 411bf0 <caml_sys_exit>
  404d20:	e8 1f 50 01 00       	callq  419d44 <caml_c_call>
  404d25:	4c 8d 1d 7c 81 22 00 	lea    0x22817c(%rip),%r11        # 62cea8 <caml_young_ptr>
  404d2c:	4d 8b 3b             	mov    (%r11),%r15
  404d2f:	48 83 c4 08          	add    $0x8,%rsp
  404d33:	c3                   	retq   
  404d34:	66 90                	xchg   %ax,%ax
  404d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  404d3d:	00 00 00 

0000000000404d40 <camlPervasives__entry>:
  404d40:	48 83 ec 08          	sub    $0x8,%rsp
  404d44:	48 8d 05 3d 59 22 00 	lea    0x22593d(%rip),%rax        # 62a688 <camlPervasives>
  404d4b:	48 8d 1d 3e 67 22 00 	lea    0x22673e(%rip),%rbx        # 62b490 <camlPervasives__113>
  404d52:	48 89 98 68 02 00 00 	mov    %rbx,0x268(%rax)
  404d59:	48 8d 1d 18 67 22 00 	lea    0x226718(%rip),%rbx        # 62b478 <camlPervasives__112>
  404d60:	48 89 98 58 02 00 00 	mov    %rbx,0x258(%rax)
  404d67:	48 8d 1d f2 66 22 00 	lea    0x2266f2(%rip),%rbx        # 62b460 <camlPervasives__111>
  404d6e:	48 89 98 50 02 00 00 	mov    %rbx,0x250(%rax)
  404d75:	48 8d 1d cc 66 22 00 	lea    0x2266cc(%rip),%rbx        # 62b448 <camlPervasives__110>
  404d7c:	48 89 98 48 02 00 00 	mov    %rbx,0x248(%rax)
  404d83:	48 8d 1d 9e 66 22 00 	lea    0x22669e(%rip),%rbx        # 62b428 <camlPervasives__109>
  404d8a:	48 89 98 40 02 00 00 	mov    %rbx,0x240(%rax)
  404d91:	48 8d 1d 78 66 22 00 	lea    0x226678(%rip),%rbx        # 62b410 <camlPervasives__108>
  404d98:	48 89 98 38 02 00 00 	mov    %rbx,0x238(%rax)
  404d9f:	48 8d 1d 52 66 22 00 	lea    0x226652(%rip),%rbx        # 62b3f8 <camlPervasives__107>
  404da6:	48 89 98 30 02 00 00 	mov    %rbx,0x230(%rax)
  404dad:	48 8d 1d 2c 66 22 00 	lea    0x22662c(%rip),%rbx        # 62b3e0 <camlPervasives__106>
  404db4:	48 89 98 28 02 00 00 	mov    %rbx,0x228(%rax)
  404dbb:	48 8d 1d 06 66 22 00 	lea    0x226606(%rip),%rbx        # 62b3c8 <camlPervasives__105>
  404dc2:	48 89 98 00 02 00 00 	mov    %rbx,0x200(%rax)
  404dc9:	48 8d 1d d8 65 22 00 	lea    0x2265d8(%rip),%rbx        # 62b3a8 <camlPervasives__104>
  404dd0:	48 89 98 e0 01 00 00 	mov    %rbx,0x1e0(%rax)
  404dd7:	48 8d 1d b2 65 22 00 	lea    0x2265b2(%rip),%rbx        # 62b390 <camlPervasives__103>
  404dde:	48 89 98 c8 01 00 00 	mov    %rbx,0x1c8(%rax)
  404de5:	48 8d 1d 8c 65 22 00 	lea    0x22658c(%rip),%rbx        # 62b378 <camlPervasives__102>
  404dec:	48 89 98 c0 01 00 00 	mov    %rbx,0x1c0(%rax)
  404df3:	48 8d 1d 5e 65 22 00 	lea    0x22655e(%rip),%rbx        # 62b358 <camlPervasives__101>
  404dfa:	48 89 98 b8 01 00 00 	mov    %rbx,0x1b8(%rax)
  404e01:	48 8d 1d 30 65 22 00 	lea    0x226530(%rip),%rbx        # 62b338 <camlPervasives__100>
  404e08:	48 89 98 a8 01 00 00 	mov    %rbx,0x1a8(%rax)
  404e0f:	48 8d 1d 02 65 22 00 	lea    0x226502(%rip),%rbx        # 62b318 <camlPervasives__99>
  404e16:	48 89 98 a0 01 00 00 	mov    %rbx,0x1a0(%rax)
  404e1d:	48 8d 1d d4 64 22 00 	lea    0x2264d4(%rip),%rbx        # 62b2f8 <camlPervasives__98>
  404e24:	48 89 98 78 01 00 00 	mov    %rbx,0x178(%rax)
  404e2b:	48 8d 1d ae 64 22 00 	lea    0x2264ae(%rip),%rbx        # 62b2e0 <camlPervasives__97>
  404e32:	48 89 98 68 01 00 00 	mov    %rbx,0x168(%rax)
  404e39:	e8 6a 4e 01 00       	callq  419ca8 <caml_alloc2>
  404e3e:	49 8d 77 08          	lea    0x8(%r15),%rsi
  404e42:	48 c7 46 f8 00 08 00 	movq   $0x800,-0x8(%rsi)
  404e49:	00 
  404e4a:	48 8d 05 2f 45 22 00 	lea    0x22452f(%rip),%rax        # 629380 <caml_exn_Invalid_argument>
  404e51:	48 89 06             	mov    %rax,(%rsi)
  404e54:	48 8d 05 5d 5b 22 00 	lea    0x225b5d(%rip),%rax        # 62a9b8 <camlPervasives__2>
  404e5b:	48 89 46 08          	mov    %rax,0x8(%rsi)
  404e5f:	48 8d 3d 2a 5b 22 00 	lea    0x225b2a(%rip),%rdi        # 62a990 <camlPervasives__1>
  404e66:	48 8d 05 43 09 01 00 	lea    0x10943(%rip),%rax        # 4157b0 <caml_register_named_value>
  404e6d:	e8 d2 4e 01 00       	callq  419d44 <caml_c_call>
  404e72:	4c 8d 1d 2f 80 22 00 	lea    0x22802f(%rip),%r11        # 62cea8 <caml_young_ptr>
  404e79:	4d 8b 3b             	mov    (%r11),%r15
  404e7c:	48 8d 05 45 64 22 00 	lea    0x226445(%rip),%rax        # 62b2c8 <camlPervasives__96>
  404e83:	48 8d 1d fe 57 22 00 	lea    0x2257fe(%rip),%rbx        # 62a688 <camlPervasives>
  404e8a:	48 89 43 08          	mov    %rax,0x8(%rbx)
  404e8e:	48 8d 05 1b 64 22 00 	lea    0x22641b(%rip),%rax        # 62b2b0 <camlPervasives__95>
  404e95:	48 89 03             	mov    %rax,(%rbx)
  404e98:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  404e9f:	e8 8c 03 01 00       	callq  415230 <caml_fresh_oo_id>
  404ea4:	48 89 c3             	mov    %rax,%rbx
  404ea7:	e8 fc 4d 01 00       	callq  419ca8 <caml_alloc2>
  404eac:	49 8d 47 08          	lea    0x8(%r15),%rax
  404eb0:	48 c7 40 f8 f8 08 00 	movq   $0x8f8,-0x8(%rax)
  404eb7:	00 
  404eb8:	48 8d 3d 19 5b 22 00 	lea    0x225b19(%rip),%rdi        # 62a9d8 <camlPervasives__3>
  404ebf:	48 89 38             	mov    %rdi,(%rax)
  404ec2:	48 89 58 08          	mov    %rbx,0x8(%rax)
  404ec6:	48 8d 1d bb 57 22 00 	lea    0x2257bb(%rip),%rbx        # 62a688 <camlPervasives>
  404ecd:	48 89 43 10          	mov    %rax,0x10(%rbx)
  404ed1:	48 8d 05 b8 63 22 00 	lea    0x2263b8(%rip),%rax        # 62b290 <camlPervasives__94>
  404ed8:	48 89 43 18          	mov    %rax,0x18(%rbx)
  404edc:	48 8d 05 8d 63 22 00 	lea    0x22638d(%rip),%rax        # 62b270 <camlPervasives__93>
  404ee3:	48 89 43 20          	mov    %rax,0x20(%rbx)
  404ee7:	48 8d 05 6a 63 22 00 	lea    0x22636a(%rip),%rax        # 62b258 <camlPervasives__92>
  404eee:	48 89 43 28          	mov    %rax,0x28(%rbx)
  404ef2:	48 8d 05 47 63 22 00 	lea    0x226347(%rip),%rax        # 62b240 <camlPervasives__91>
  404ef9:	48 89 43 40          	mov    %rax,0x40(%rbx)
  404efd:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  404f04:	ff ff 7f 
  404f07:	48 89 43 30          	mov    %rax,0x30(%rbx)
  404f0b:	48 b8 01 00 00 00 00 	movabs $0x8000000000000001,%rax
  404f12:	00 00 80 
  404f15:	48 89 43 38          	mov    %rax,0x38(%rbx)
  404f19:	48 8d 3d d0 5a 22 00 	lea    0x225ad0(%rip),%rdi        # 62a9f0 <camlPervasives__4>
  404f20:	48 8d 05 a9 61 00 00 	lea    0x61a9(%rip),%rax        # 40b0d0 <caml_int64_float_of_bits>
  404f27:	e8 18 4e 01 00       	callq  419d44 <caml_c_call>
  404f2c:	4c 8d 1d 75 7f 22 00 	lea    0x227f75(%rip),%r11        # 62cea8 <caml_young_ptr>
  404f33:	4d 8b 3b             	mov    (%r11),%r15
  404f36:	48 8d 1d 4b 57 22 00 	lea    0x22574b(%rip),%rbx        # 62a688 <camlPervasives>
  404f3d:	48 89 43 48          	mov    %rax,0x48(%rbx)
  404f41:	48 8d 3d c0 5a 22 00 	lea    0x225ac0(%rip),%rdi        # 62aa08 <camlPervasives__5>
  404f48:	48 8d 05 81 61 00 00 	lea    0x6181(%rip),%rax        # 40b0d0 <caml_int64_float_of_bits>
  404f4f:	e8 f0 4d 01 00       	callq  419d44 <caml_c_call>
  404f54:	4c 8d 1d 4d 7f 22 00 	lea    0x227f4d(%rip),%r11        # 62cea8 <caml_young_ptr>
  404f5b:	4d 8b 3b             	mov    (%r11),%r15
  404f5e:	48 8d 1d 23 57 22 00 	lea    0x225723(%rip),%rbx        # 62a688 <camlPervasives>
  404f65:	48 89 43 50          	mov    %rax,0x50(%rbx)
  404f69:	48 8d 3d b0 5a 22 00 	lea    0x225ab0(%rip),%rdi        # 62aa20 <camlPervasives__6>
  404f70:	48 8d 05 59 61 00 00 	lea    0x6159(%rip),%rax        # 40b0d0 <caml_int64_float_of_bits>
  404f77:	e8 c8 4d 01 00       	callq  419d44 <caml_c_call>
  404f7c:	4c 8d 1d 25 7f 22 00 	lea    0x227f25(%rip),%r11        # 62cea8 <caml_young_ptr>
  404f83:	4d 8b 3b             	mov    (%r11),%r15
  404f86:	48 8d 1d fb 56 22 00 	lea    0x2256fb(%rip),%rbx        # 62a688 <camlPervasives>
  404f8d:	48 89 43 58          	mov    %rax,0x58(%rbx)
  404f91:	48 8d 3d a0 5a 22 00 	lea    0x225aa0(%rip),%rdi        # 62aa38 <camlPervasives__7>
  404f98:	48 8d 05 31 61 00 00 	lea    0x6131(%rip),%rax        # 40b0d0 <caml_int64_float_of_bits>
  404f9f:	e8 a0 4d 01 00       	callq  419d44 <caml_c_call>
  404fa4:	4c 8d 1d fd 7e 22 00 	lea    0x227efd(%rip),%r11        # 62cea8 <caml_young_ptr>
  404fab:	4d 8b 3b             	mov    (%r11),%r15
  404fae:	48 8d 1d d3 56 22 00 	lea    0x2256d3(%rip),%rbx        # 62a688 <camlPervasives>
  404fb5:	48 89 43 60          	mov    %rax,0x60(%rbx)
  404fb9:	48 8d 3d 90 5a 22 00 	lea    0x225a90(%rip),%rdi        # 62aa50 <camlPervasives__8>
  404fc0:	48 8d 05 09 61 00 00 	lea    0x6109(%rip),%rax        # 40b0d0 <caml_int64_float_of_bits>
  404fc7:	e8 78 4d 01 00       	callq  419d44 <caml_c_call>
  404fcc:	4c 8d 1d d5 7e 22 00 	lea    0x227ed5(%rip),%r11        # 62cea8 <caml_young_ptr>
  404fd3:	4d 8b 3b             	mov    (%r11),%r15
  404fd6:	48 8d 1d ab 56 22 00 	lea    0x2256ab(%rip),%rbx        # 62a688 <camlPervasives>
  404fdd:	48 89 43 68          	mov    %rax,0x68(%rbx)
  404fe1:	48 8d 3d 80 5a 22 00 	lea    0x225a80(%rip),%rdi        # 62aa68 <camlPervasives__9>
  404fe8:	48 8d 05 e1 60 00 00 	lea    0x60e1(%rip),%rax        # 40b0d0 <caml_int64_float_of_bits>
  404fef:	e8 50 4d 01 00       	callq  419d44 <caml_c_call>
  404ff4:	4c 8d 1d ad 7e 22 00 	lea    0x227ead(%rip),%r11        # 62cea8 <caml_young_ptr>
  404ffb:	4d 8b 3b             	mov    (%r11),%r15
  404ffe:	48 8d 1d 83 56 22 00 	lea    0x225683(%rip),%rbx        # 62a688 <camlPervasives>
  405005:	48 89 43 70          	mov    %rax,0x70(%rbx)
  405009:	48 8d 05 10 62 22 00 	lea    0x226210(%rip),%rax        # 62b220 <camlPervasives__90>
  405010:	48 89 43 78          	mov    %rax,0x78(%rbx)
  405014:	48 8d 05 ed 61 22 00 	lea    0x2261ed(%rip),%rax        # 62b208 <camlPervasives__89>
  40501b:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
  405022:	48 8d 05 c7 61 22 00 	lea    0x2261c7(%rip),%rax        # 62b1f0 <camlPervasives__88>
  405029:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
  405030:	48 8d 05 a1 61 22 00 	lea    0x2261a1(%rip),%rax        # 62b1d8 <camlPervasives__87>
  405037:	48 89 83 90 00 00 00 	mov    %rax,0x90(%rbx)
  40503e:	48 8d 05 7b 61 22 00 	lea    0x22617b(%rip),%rax        # 62b1c0 <camlPervasives__86>
  405045:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
  40504c:	48 8d 05 55 61 22 00 	lea    0x226155(%rip),%rax        # 62b1a8 <camlPervasives__85>
  405053:	48 89 83 98 02 00 00 	mov    %rax,0x298(%rbx)
  40505a:	48 8d 05 2f 61 22 00 	lea    0x22612f(%rip),%rax        # 62b190 <camlPervasives__84>
  405061:	48 89 83 a0 00 00 00 	mov    %rax,0xa0(%rbx)
  405068:	48 8d 05 01 61 22 00 	lea    0x226101(%rip),%rax        # 62b170 <camlPervasives__83>
  40506f:	48 89 83 a8 00 00 00 	mov    %rax,0xa8(%rbx)
  405076:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  40507d:	48 8d 05 ac 86 00 00 	lea    0x86ac(%rip),%rax        # 40d730 <caml_ml_open_descriptor_in>
  405084:	e8 bb 4c 01 00       	callq  419d44 <caml_c_call>
  405089:	4c 8d 1d 18 7e 22 00 	lea    0x227e18(%rip),%r11        # 62cea8 <caml_young_ptr>
  405090:	4d 8b 3b             	mov    (%r11),%r15
  405093:	48 8d 1d ee 55 22 00 	lea    0x2255ee(%rip),%rbx        # 62a688 <camlPervasives>
  40509a:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
  4050a1:	48 c7 c7 03 00 00 00 	mov    $0x3,%rdi
  4050a8:	48 8d 05 b1 86 00 00 	lea    0x86b1(%rip),%rax        # 40d760 <caml_ml_open_descriptor_out>
  4050af:	e8 90 4c 01 00       	callq  419d44 <caml_c_call>
  4050b4:	4c 8d 1d ed 7d 22 00 	lea    0x227ded(%rip),%r11        # 62cea8 <caml_young_ptr>
  4050bb:	4d 8b 3b             	mov    (%r11),%r15
  4050be:	48 8d 1d c3 55 22 00 	lea    0x2255c3(%rip),%rbx        # 62a688 <camlPervasives>
  4050c5:	48 89 83 b8 00 00 00 	mov    %rax,0xb8(%rbx)
  4050cc:	48 c7 c7 05 00 00 00 	mov    $0x5,%rdi
  4050d3:	48 8d 05 86 86 00 00 	lea    0x8686(%rip),%rax        # 40d760 <caml_ml_open_descriptor_out>
  4050da:	e8 65 4c 01 00       	callq  419d44 <caml_c_call>
  4050df:	4c 8d 1d c2 7d 22 00 	lea    0x227dc2(%rip),%r11        # 62cea8 <caml_young_ptr>
  4050e6:	4d 8b 3b             	mov    (%r11),%r15
  4050e9:	48 8d 1d 98 55 22 00 	lea    0x225598(%rip),%rbx        # 62a688 <camlPervasives>
  4050f0:	48 89 83 c0 00 00 00 	mov    %rax,0xc0(%rbx)
  4050f7:	48 8d 05 52 60 22 00 	lea    0x226052(%rip),%rax        # 62b150 <camlPervasives__82>
  4050fe:	48 89 83 60 01 00 00 	mov    %rax,0x160(%rbx)
  405105:	48 8d 05 2c 60 22 00 	lea    0x22602c(%rip),%rax        # 62b138 <camlPervasives__81>
  40510c:	48 89 83 50 01 00 00 	mov    %rax,0x150(%rbx)
  405113:	48 8d 05 06 60 22 00 	lea    0x226006(%rip),%rax        # 62b120 <camlPervasives__80>
  40511a:	48 89 83 58 01 00 00 	mov    %rax,0x158(%rbx)
  405121:	48 8d 05 e0 5f 22 00 	lea    0x225fe0(%rip),%rax        # 62b108 <camlPervasives__79>
  405128:	48 89 83 70 01 00 00 	mov    %rax,0x170(%rbx)
  40512f:	48 8d 05 b2 5f 22 00 	lea    0x225fb2(%rip),%rax        # 62b0e8 <camlPervasives__78>
  405136:	48 89 83 88 01 00 00 	mov    %rax,0x188(%rbx)
  40513d:	48 8d 05 84 5f 22 00 	lea    0x225f84(%rip),%rax        # 62b0c8 <camlPervasives__77>
  405144:	48 89 83 80 01 00 00 	mov    %rax,0x180(%rbx)
  40514b:	48 8d 05 56 5f 22 00 	lea    0x225f56(%rip),%rax        # 62b0a8 <camlPervasives__76>
  405152:	48 89 83 90 01 00 00 	mov    %rax,0x190(%rbx)
  405159:	48 8d 05 28 5f 22 00 	lea    0x225f28(%rip),%rax        # 62b088 <camlPervasives__75>
  405160:	48 89 83 98 01 00 00 	mov    %rax,0x198(%rbx)
  405167:	48 8d 05 fa 5e 22 00 	lea    0x225efa(%rip),%rax        # 62b068 <camlPervasives__74>
  40516e:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
  405175:	48 8d 05 d4 5e 22 00 	lea    0x225ed4(%rip),%rax        # 62b050 <camlPervasives__73>
  40517c:	48 89 83 d0 01 00 00 	mov    %rax,0x1d0(%rbx)
  405183:	48 8d 05 ae 5e 22 00 	lea    0x225eae(%rip),%rax        # 62b038 <camlPervasives__72>
  40518a:	48 89 83 d8 01 00 00 	mov    %rax,0x1d8(%rbx)
  405191:	48 8d 05 80 5e 22 00 	lea    0x225e80(%rip),%rax        # 62b018 <camlPervasives__71>
  405198:	48 89 83 f8 01 00 00 	mov    %rax,0x1f8(%rbx)
  40519f:	48 8d 05 5a 5e 22 00 	lea    0x225e5a(%rip),%rax        # 62b000 <camlPervasives__70>
  4051a6:	48 89 83 e8 01 00 00 	mov    %rax,0x1e8(%rbx)
  4051ad:	48 8d 05 34 5e 22 00 	lea    0x225e34(%rip),%rax        # 62afe8 <camlPervasives__69>
  4051b4:	48 89 83 f0 01 00 00 	mov    %rax,0x1f0(%rbx)
  4051bb:	48 8d 05 06 5e 22 00 	lea    0x225e06(%rip),%rax        # 62afc8 <camlPervasives__68>
  4051c2:	48 89 83 10 02 00 00 	mov    %rax,0x210(%rbx)
  4051c9:	48 8d 05 d8 5d 22 00 	lea    0x225dd8(%rip),%rax        # 62afa8 <camlPervasives__67>
  4051d0:	48 89 83 a0 02 00 00 	mov    %rax,0x2a0(%rbx)
  4051d7:	48 8d 05 aa 5d 22 00 	lea    0x225daa(%rip),%rax        # 62af88 <camlPervasives__66>
  4051de:	48 89 83 18 02 00 00 	mov    %rax,0x218(%rbx)
  4051e5:	48 8d 05 7c 5d 22 00 	lea    0x225d7c(%rip),%rax        # 62af68 <camlPervasives__65>
  4051ec:	48 89 83 20 02 00 00 	mov    %rax,0x220(%rbx)
  4051f3:	48 8d 05 56 5d 22 00 	lea    0x225d56(%rip),%rax        # 62af50 <camlPervasives__64>
  4051fa:	48 89 83 08 02 00 00 	mov    %rax,0x208(%rbx)
  405201:	48 8d 05 30 5d 22 00 	lea    0x225d30(%rip),%rax        # 62af38 <camlPervasives__63>
  405208:	48 89 83 60 02 00 00 	mov    %rax,0x260(%rbx)
  40520f:	48 8d 05 0a 5d 22 00 	lea    0x225d0a(%rip),%rax        # 62af20 <camlPervasives__62>
  405216:	48 89 83 c8 00 00 00 	mov    %rax,0xc8(%rbx)
  40521d:	48 8d 05 e4 5c 22 00 	lea    0x225ce4(%rip),%rax        # 62af08 <camlPervasives__61>
  405224:	48 89 83 d0 00 00 00 	mov    %rax,0xd0(%rbx)
  40522b:	48 8d 05 be 5c 22 00 	lea    0x225cbe(%rip),%rax        # 62aef0 <camlPervasives__60>
  405232:	48 89 83 d8 00 00 00 	mov    %rax,0xd8(%rbx)
  405239:	48 8d 05 98 5c 22 00 	lea    0x225c98(%rip),%rax        # 62aed8 <camlPervasives__59>
  405240:	48 89 83 e0 00 00 00 	mov    %rax,0xe0(%rbx)
  405247:	48 8d 05 72 5c 22 00 	lea    0x225c72(%rip),%rax        # 62aec0 <camlPervasives__58>
  40524e:	48 89 83 e8 00 00 00 	mov    %rax,0xe8(%rbx)
  405255:	48 8d 05 4c 5c 22 00 	lea    0x225c4c(%rip),%rax        # 62aea8 <camlPervasives__57>
  40525c:	48 89 83 f0 00 00 00 	mov    %rax,0xf0(%rbx)
  405263:	48 8d 05 26 5c 22 00 	lea    0x225c26(%rip),%rax        # 62ae90 <camlPervasives__56>
  40526a:	48 89 83 f8 00 00 00 	mov    %rax,0xf8(%rbx)
  405271:	48 8d 05 00 5c 22 00 	lea    0x225c00(%rip),%rax        # 62ae78 <camlPervasives__55>
  405278:	48 89 83 00 01 00 00 	mov    %rax,0x100(%rbx)
  40527f:	48 8d 05 da 5b 22 00 	lea    0x225bda(%rip),%rax        # 62ae60 <camlPervasives__54>
  405286:	48 89 83 08 01 00 00 	mov    %rax,0x108(%rbx)
  40528d:	48 8d 05 b4 5b 22 00 	lea    0x225bb4(%rip),%rax        # 62ae48 <camlPervasives__53>
  405294:	48 89 83 10 01 00 00 	mov    %rax,0x110(%rbx)
  40529b:	48 8d 05 8e 5b 22 00 	lea    0x225b8e(%rip),%rax        # 62ae30 <camlPervasives__52>
  4052a2:	48 89 83 18 01 00 00 	mov    %rax,0x118(%rbx)
  4052a9:	48 8d 05 68 5b 22 00 	lea    0x225b68(%rip),%rax        # 62ae18 <camlPervasives__51>
  4052b0:	48 89 83 20 01 00 00 	mov    %rax,0x120(%rbx)
  4052b7:	48 8d 05 42 5b 22 00 	lea    0x225b42(%rip),%rax        # 62ae00 <camlPervasives__50>
  4052be:	48 89 83 28 01 00 00 	mov    %rax,0x128(%rbx)
  4052c5:	48 8d 05 1c 5b 22 00 	lea    0x225b1c(%rip),%rax        # 62ade8 <camlPervasives__49>
  4052cc:	48 89 83 30 01 00 00 	mov    %rax,0x130(%rbx)
  4052d3:	48 8d 05 f6 5a 22 00 	lea    0x225af6(%rip),%rax        # 62add0 <camlPervasives__48>
  4052da:	48 89 83 38 01 00 00 	mov    %rax,0x138(%rbx)
  4052e1:	48 8d 05 d0 5a 22 00 	lea    0x225ad0(%rip),%rax        # 62adb8 <camlPervasives__47>
  4052e8:	48 89 83 40 01 00 00 	mov    %rax,0x140(%rbx)
  4052ef:	48 8d 05 aa 5a 22 00 	lea    0x225aaa(%rip),%rax        # 62ada0 <camlPervasives__46>
  4052f6:	48 89 83 48 01 00 00 	mov    %rax,0x148(%rbx)
  4052fd:	48 c7 c0 48 00 00 00 	mov    $0x48,%rax
  405304:	e8 07 4a 01 00       	callq  419d10 <caml_allocN>
  405309:	49 8d 47 08          	lea    0x8(%r15),%rax
  40530d:	48 c7 40 f8 00 18 00 	movq   $0x1800,-0x8(%rax)
  405314:	00 
  405315:	48 8d 3d e4 59 22 00 	lea    0x2259e4(%rip),%rdi        # 62ad00 <camlPervasives__40>
  40531c:	48 89 38             	mov    %rdi,(%rax)
  40531f:	48 8d 3d fa 59 22 00 	lea    0x2259fa(%rip),%rdi        # 62ad20 <camlPervasives__41>
  405326:	48 89 78 08          	mov    %rdi,0x8(%rax)
  40532a:	48 8d 3d 07 5a 22 00 	lea    0x225a07(%rip),%rdi        # 62ad38 <camlPervasives__42>
  405331:	48 89 78 10          	mov    %rdi,0x10(%rax)
  405335:	48 8d 3d 14 5a 22 00 	lea    0x225a14(%rip),%rdi        # 62ad50 <camlPervasives__43>
  40533c:	48 89 78 18          	mov    %rdi,0x18(%rax)
  405340:	48 8d 3d 29 5a 22 00 	lea    0x225a29(%rip),%rdi        # 62ad70 <camlPervasives__44>
  405347:	48 89 78 20          	mov    %rdi,0x20(%rax)
  40534b:	48 8d 3d 36 5a 22 00 	lea    0x225a36(%rip),%rdi        # 62ad88 <camlPervasives__45>
  405352:	48 89 78 28          	mov    %rdi,0x28(%rax)
  405356:	48 89 83 70 02 00 00 	mov    %rax,0x270(%rbx)
  40535d:	48 8d 3d 84 59 22 00 	lea    0x225984(%rip),%rdi        # 62ace8 <camlPervasives__39>
  405364:	48 89 bb 78 02 00 00 	mov    %rdi,0x278(%rbx)
  40536b:	48 8d 3d 56 59 22 00 	lea    0x225956(%rip),%rdi        # 62acc8 <camlPervasives__38>
  405372:	48 89 bb 80 02 00 00 	mov    %rdi,0x280(%rbx)
  405379:	48 83 c0 38          	add    $0x38,%rax
  40537d:	48 c7 40 f8 00 04 00 	movq   $0x400,-0x8(%rax)
  405384:	00 
  405385:	48 8b bb 70 01 00 00 	mov    0x170(%rbx),%rdi
  40538c:	48 89 38             	mov    %rdi,(%rax)
  40538f:	48 89 83 b0 02 00 00 	mov    %rax,0x2b0(%rbx)
  405396:	48 8d 05 13 59 22 00 	lea    0x225913(%rip),%rax        # 62acb0 <camlPervasives__37>
  40539d:	48 89 83 90 02 00 00 	mov    %rax,0x290(%rbx)
  4053a4:	48 8d 05 ed 58 22 00 	lea    0x2258ed(%rip),%rax        # 62ac98 <camlPervasives__36>
  4053ab:	48 89 83 a8 02 00 00 	mov    %rax,0x2a8(%rbx)
  4053b2:	48 8d 05 c7 58 22 00 	lea    0x2258c7(%rip),%rax        # 62ac80 <camlPervasives__35>
  4053b9:	48 89 83 88 02 00 00 	mov    %rax,0x288(%rbx)
  4053c0:	48 8b b3 a8 02 00 00 	mov    0x2a8(%rbx),%rsi
  4053c7:	48 8d 3d 92 58 22 00 	lea    0x225892(%rip),%rdi        # 62ac60 <camlPervasives__34>
  4053ce:	48 8d 05 db 03 01 00 	lea    0x103db(%rip),%rax        # 4157b0 <caml_register_named_value>
  4053d5:	e8 6a 49 01 00       	callq  419d44 <caml_c_call>
  4053da:	4c 8d 1d c7 7a 22 00 	lea    0x227ac7(%rip),%r11        # 62cea8 <caml_young_ptr>
  4053e1:	4d 8b 3b             	mov    (%r11),%r15
  4053e4:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4053eb:	48 83 c4 08          	add    $0x8,%rsp
  4053ef:	c3                   	retq   

00000000004053f0 <fill_hashtable>:
  4053f0:	48 85 ff             	test   %rdi,%rdi
  4053f3:	0f 84 89 00 00 00    	je     405482 <fill_hashtable+0x92>
  4053f9:	4c 8b 07             	mov    (%rdi),%r8
  4053fc:	45 31 c9             	xor    %r9d,%r9d
  4053ff:	4d 8b 10             	mov    (%r8),%r10
  405402:	49 83 c0 08          	add    $0x8,%r8
  405406:	4d 85 d2             	test   %r10,%r10
  405409:	7e 68                	jle    405473 <fill_hashtable+0x83>
  40540b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  405410:	48 63 35 19 75 22 00 	movslq 0x227519(%rip),%rsi        # 62c930 <caml_frame_descriptors_mask>
  405417:	49 8b 00             	mov    (%r8),%rax
  40541a:	48 8b 0d 17 75 22 00 	mov    0x227517(%rip),%rcx        # 62c938 <caml_frame_descriptors>
  405421:	48 c1 e8 03          	shr    $0x3,%rax
  405425:	48 21 f0             	and    %rsi,%rax
  405428:	48 8d 14 c1          	lea    (%rcx,%rax,8),%rdx
  40542c:	48 83 3a 00          	cmpq   $0x0,(%rdx)
  405430:	74 17                	je     405449 <fill_hashtable+0x59>
  405432:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  405438:	48 83 c0 01          	add    $0x1,%rax
  40543c:	48 21 f0             	and    %rsi,%rax
  40543f:	48 8d 14 c1          	lea    (%rcx,%rax,8),%rdx
  405443:	48 83 3a 00          	cmpq   $0x0,(%rdx)
  405447:	75 ef                	jne    405438 <fill_hashtable+0x48>
  405449:	4c 89 02             	mov    %r8,(%rdx)
  40544c:	41 0f b7 40 0a       	movzwl 0xa(%r8),%eax
  405451:	49 8d 44 40 13       	lea    0x13(%r8,%rax,2),%rax
  405456:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
  40545a:	41 f6 40 08 01       	testb  $0x1,0x8(%r8)
  40545f:	48 8d 50 08          	lea    0x8(%rax),%rdx
  405463:	48 0f 45 c2          	cmovne %rdx,%rax
  405467:	49 83 c1 01          	add    $0x1,%r9
  40546b:	4d 39 ca             	cmp    %r9,%r10
  40546e:	49 89 c0             	mov    %rax,%r8
  405471:	75 9d                	jne    405410 <fill_hashtable+0x20>
  405473:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  405477:	48 85 ff             	test   %rdi,%rdi
  40547a:	0f 85 79 ff ff ff    	jne    4053f9 <fill_hashtable+0x9>
  405480:	f3 c3                	repz retq 
  405482:	f3 c3                	repz retq 
  405484:	66 90                	xchg   %ax,%ax
  405486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40548d:	00 00 00 

0000000000405490 <init_frame_descriptors>:
  405490:	48 85 ff             	test   %rdi,%rdi
  405493:	41 54                	push   %r12
  405495:	55                   	push   %rbp
  405496:	48 89 fd             	mov    %rdi,%rbp
  405499:	53                   	push   %rbx
  40549a:	0f 84 36 01 00 00    	je     4055d6 <init_frame_descriptors+0x146>
  4054a0:	49 89 fb             	mov    %rdi,%r11
  4054a3:	eb 06                	jmp    4054ab <init_frame_descriptors+0x1b>
  4054a5:	0f 1f 00             	nopl   (%rax)
  4054a8:	49 89 c3             	mov    %rax,%r11
  4054ab:	49 8b 43 08          	mov    0x8(%r11),%rax
  4054af:	48 85 c0             	test   %rax,%rax
  4054b2:	75 f4                	jne    4054a8 <init_frame_descriptors+0x18>
  4054b4:	48 89 e8             	mov    %rbp,%rax
  4054b7:	31 d2                	xor    %edx,%edx
  4054b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4054c0:	48 8b 08             	mov    (%rax),%rcx
  4054c3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4054c7:	48 03 11             	add    (%rcx),%rdx
  4054ca:	48 85 c0             	test   %rax,%rax
  4054cd:	75 f1                	jne    4054c0 <init_frame_descriptors+0x30>
  4054cf:	48 63 d2             	movslq %edx,%rdx
  4054d2:	48 03 15 a7 74 22 00 	add    0x2274a7(%rip),%rdx        # 62c980 <num_descr>
  4054d9:	8b 05 51 74 22 00    	mov    0x227451(%rip),%eax        # 62c930 <caml_frame_descriptors_mask>
  4054df:	83 c0 01             	add    $0x1,%eax
  4054e2:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  4054e6:	48 98                	cltq   
  4054e8:	48 39 c1             	cmp    %rax,%rcx
  4054eb:	0f 8e bf 00 00 00    	jle    4055b0 <init_frame_descriptors+0x120>
  4054f1:	48 8b 05 90 74 22 00 	mov    0x227490(%rip),%rax        # 62c988 <frametables>
  4054f8:	31 d2                	xor    %edx,%edx
  4054fa:	48 c7 05 83 74 22 00 	movq   $0x0,0x227483(%rip)        # 62c988 <frametables>
  405501:	00 00 00 00 
  405505:	49 89 43 08          	mov    %rax,0x8(%r11)
  405509:	48 89 e8             	mov    %rbp,%rax
  40550c:	0f 1f 40 00          	nopl   0x0(%rax)
  405510:	48 8b 08             	mov    (%rax),%rcx
  405513:	48 8b 40 08          	mov    0x8(%rax),%rax
  405517:	48 03 11             	add    (%rcx),%rdx
  40551a:	48 85 c0             	test   %rax,%rax
  40551d:	75 f1                	jne    405510 <init_frame_descriptors+0x80>
  40551f:	48 63 d2             	movslq %edx,%rdx
  405522:	48 89 15 57 74 22 00 	mov    %rdx,0x227457(%rip)        # 62c980 <num_descr>
  405529:	48 01 d2             	add    %rdx,%rdx
  40552c:	48 83 fa 04          	cmp    $0x4,%rdx
  405530:	0f 8e f8 00 00 00    	jle    40562e <init_frame_descriptors+0x19e>
  405536:	bb 04 00 00 00       	mov    $0x4,%ebx
  40553b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  405540:	48 01 db             	add    %rbx,%rbx
  405543:	48 39 d3             	cmp    %rdx,%rbx
  405546:	7c f8                	jl     405540 <init_frame_descriptors+0xb0>
  405548:	8d 43 ff             	lea    -0x1(%rbx),%eax
  40554b:	4c 8d 24 dd 00 00 00 	lea    0x0(,%rbx,8),%r12
  405552:	00 
  405553:	48 8b 3d de 73 22 00 	mov    0x2273de(%rip),%rdi        # 62c938 <caml_frame_descriptors>
  40555a:	89 05 d0 73 22 00    	mov    %eax,0x2273d0(%rip)        # 62c930 <caml_frame_descriptors_mask>
  405560:	48 85 ff             	test   %rdi,%rdi
  405563:	74 05                	je     40556a <init_frame_descriptors+0xda>
  405565:	e8 86 42 00 00       	callq  4097f0 <caml_stat_free>
  40556a:	4c 89 e7             	mov    %r12,%rdi
  40556d:	e8 5e 42 00 00       	callq  4097d0 <caml_stat_alloc>
  405572:	31 d2                	xor    %edx,%edx
  405574:	48 89 05 bd 73 22 00 	mov    %rax,0x2273bd(%rip)        # 62c938 <caml_frame_descriptors>
  40557b:	eb 0a                	jmp    405587 <init_frame_descriptors+0xf7>
  40557d:	0f 1f 00             	nopl   (%rax)
  405580:	48 8b 05 b1 73 22 00 	mov    0x2273b1(%rip),%rax        # 62c938 <caml_frame_descriptors>
  405587:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
  40558e:	00 
  40558f:	48 83 c2 01          	add    $0x1,%rdx
  405593:	48 39 da             	cmp    %rbx,%rdx
  405596:	75 e8                	jne    405580 <init_frame_descriptors+0xf0>
  405598:	48 89 ef             	mov    %rbp,%rdi
  40559b:	e8 50 fe ff ff       	callq  4053f0 <fill_hashtable>
  4055a0:	5b                   	pop    %rbx
  4055a1:	48 89 2d e0 73 22 00 	mov    %rbp,0x2273e0(%rip)        # 62c988 <frametables>
  4055a8:	5d                   	pop    %rbp
  4055a9:	41 5c                	pop    %r12
  4055ab:	c3                   	retq   
  4055ac:	0f 1f 40 00          	nopl   0x0(%rax)
  4055b0:	48 89 ef             	mov    %rbp,%rdi
  4055b3:	48 89 15 c6 73 22 00 	mov    %rdx,0x2273c6(%rip)        # 62c980 <num_descr>
  4055ba:	e8 31 fe ff ff       	callq  4053f0 <fill_hashtable>
  4055bf:	48 8b 05 c2 73 22 00 	mov    0x2273c2(%rip),%rax        # 62c988 <frametables>
  4055c6:	48 89 2d bb 73 22 00 	mov    %rbp,0x2273bb(%rip)        # 62c988 <frametables>
  4055cd:	49 89 43 08          	mov    %rax,0x8(%r11)
  4055d1:	5b                   	pop    %rbx
  4055d2:	5d                   	pop    %rbp
  4055d3:	41 5c                	pop    %r12
  4055d5:	c3                   	retq   
  4055d6:	48 8b 15 a3 73 22 00 	mov    0x2273a3(%rip),%rdx        # 62c980 <num_descr>
  4055dd:	8b 05 4d 73 22 00    	mov    0x22734d(%rip),%eax        # 62c930 <caml_frame_descriptors_mask>
  4055e3:	45 31 db             	xor    %r11d,%r11d
  4055e6:	83 c0 01             	add    $0x1,%eax
  4055e9:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  4055ed:	48 98                	cltq   
  4055ef:	48 39 c1             	cmp    %rax,%rcx
  4055f2:	7e bc                	jle    4055b0 <init_frame_descriptors+0x120>
  4055f4:	48 8b 05 8d 73 22 00 	mov    0x22738d(%rip),%rax        # 62c988 <frametables>
  4055fb:	41 bc 20 00 00 00    	mov    $0x20,%r12d
  405601:	bb 04 00 00 00       	mov    $0x4,%ebx
  405606:	48 89 04 25 08 00 00 	mov    %rax,0x8
  40560d:	00 
  40560e:	48 c7 05 6f 73 22 00 	movq   $0x0,0x22736f(%rip)        # 62c988 <frametables>
  405615:	00 00 00 00 
  405619:	b8 03 00 00 00       	mov    $0x3,%eax
  40561e:	48 c7 05 57 73 22 00 	movq   $0x0,0x227357(%rip)        # 62c980 <num_descr>
  405625:	00 00 00 00 
  405629:	e9 25 ff ff ff       	jmpq   405553 <init_frame_descriptors+0xc3>
  40562e:	41 bc 20 00 00 00    	mov    $0x20,%r12d
  405634:	b8 03 00 00 00       	mov    $0x3,%eax
  405639:	bb 04 00 00 00       	mov    $0x4,%ebx
  40563e:	e9 10 ff ff ff       	jmpq   405553 <init_frame_descriptors+0xc3>
  405643:	0f 1f 00             	nopl   (%rax)
  405646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40564d:	00 00 00 

0000000000405650 <caml_init_frame_descriptors>:
  405650:	41 54                	push   %r12
  405652:	55                   	push   %rbp
  405653:	53                   	push   %rbx
  405654:	48 8b 1d b5 40 22 00 	mov    0x2240b5(%rip),%rbx        # 629710 <caml_frametable>
  40565b:	48 85 db             	test   %rbx,%rbx
  40565e:	74 3d                	je     40569d <caml_init_frame_descriptors+0x4d>
  405660:	bd 10 97 62 00       	mov    $0x629710,%ebp
  405665:	45 31 e4             	xor    %r12d,%r12d
  405668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40566f:	00 
  405670:	48 83 c5 08          	add    $0x8,%rbp
  405674:	bf 10 00 00 00       	mov    $0x10,%edi
  405679:	e8 52 41 00 00       	callq  4097d0 <caml_stat_alloc>
  40567e:	4c 89 60 08          	mov    %r12,0x8(%rax)
  405682:	48 89 18             	mov    %rbx,(%rax)
  405685:	49 89 c4             	mov    %rax,%r12
  405688:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
  40568c:	48 85 db             	test   %rbx,%rbx
  40568f:	75 df                	jne    405670 <caml_init_frame_descriptors+0x20>
  405691:	5b                   	pop    %rbx
  405692:	5d                   	pop    %rbp
  405693:	41 5c                	pop    %r12
  405695:	48 89 c7             	mov    %rax,%rdi
  405698:	e9 f3 fd ff ff       	jmpq   405490 <init_frame_descriptors>
  40569d:	31 c0                	xor    %eax,%eax
  40569f:	eb f0                	jmp    405691 <caml_init_frame_descriptors+0x41>
  4056a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4056a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4056ad:	00 00 00 

00000000004056b0 <caml_register_frametable>:
  4056b0:	53                   	push   %rbx
  4056b1:	48 89 fb             	mov    %rdi,%rbx
  4056b4:	bf 10 00 00 00       	mov    $0x10,%edi
  4056b9:	e8 12 41 00 00       	callq  4097d0 <caml_stat_alloc>
  4056be:	48 89 18             	mov    %rbx,(%rax)
  4056c1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  4056c8:	00 
  4056c9:	48 89 c7             	mov    %rax,%rdi
  4056cc:	5b                   	pop    %rbx
  4056cd:	e9 be fd ff ff       	jmpq   405490 <init_frame_descriptors>
  4056d2:	0f 1f 40 00          	nopl   0x0(%rax)
  4056d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4056dd:	00 00 00 

00000000004056e0 <caml_unregister_frametable>:
  4056e0:	41 57                	push   %r15
  4056e2:	41 56                	push   %r14
  4056e4:	41 55                	push   %r13
  4056e6:	41 54                	push   %r12
  4056e8:	55                   	push   %rbp
  4056e9:	53                   	push   %rbx
  4056ea:	4c 8b 2f             	mov    (%rdi),%r13
  4056ed:	48 8b 2d 94 72 22 00 	mov    0x227294(%rip),%rbp        # 62c988 <frametables>
  4056f4:	4d 85 ed             	test   %r13,%r13
  4056f7:	0f 8e e6 00 00 00    	jle    4057e3 <caml_unregister_frametable+0x103>
  4056fd:	4c 63 0d 2c 72 22 00 	movslq 0x22722c(%rip),%r9        # 62c930 <caml_frame_descriptors_mask>
  405704:	4c 8b 15 2d 72 22 00 	mov    0x22722d(%rip),%r10        # 62c938 <caml_frame_descriptors>
  40570b:	4c 8d 5f 08          	lea    0x8(%rdi),%r11
  40570f:	31 db                	xor    %ebx,%ebx
  405711:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  405718:	4d 8b 03             	mov    (%r11),%r8
  40571b:	49 c1 e8 03          	shr    $0x3,%r8
  40571f:	4d 21 c8             	and    %r9,%r8
  405722:	4f 39 1c c2          	cmp    %r11,(%r10,%r8,8)
  405726:	74 15                	je     40573d <caml_unregister_frametable+0x5d>
  405728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40572f:	00 
  405730:	49 83 c0 01          	add    $0x1,%r8
  405734:	4d 21 c8             	and    %r9,%r8
  405737:	4f 39 1c c2          	cmp    %r11,(%r10,%r8,8)
  40573b:	75 f3                	jne    405730 <caml_unregister_frametable+0x50>
  40573d:	4b c7 04 c2 00 00 00 	movq   $0x0,(%r10,%r8,8)
  405744:	00 
  405745:	4c 63 0d e4 71 22 00 	movslq 0x2271e4(%rip),%r9        # 62c930 <caml_frame_descriptors_mask>
  40574c:	4e 8d 24 c5 00 00 00 	lea    0x0(,%r8,8),%r12
  405753:	00 
  405754:	4c 8b 15 dd 71 22 00 	mov    0x2271dd(%rip),%r10        # 62c938 <caml_frame_descriptors>
  40575b:	4c 89 c0             	mov    %r8,%rax
  40575e:	66 90                	xchg   %ax,%ax
  405760:	48 83 c0 01          	add    $0x1,%rax
  405764:	4c 21 c8             	and    %r9,%rax
  405767:	4d 8b 34 c2          	mov    (%r10,%rax,8),%r14
  40576b:	4d 85 f6             	test   %r14,%r14
  40576e:	74 48                	je     4057b8 <caml_unregister_frametable+0xd8>
  405770:	49 8b 16             	mov    (%r14),%rdx
  405773:	48 c1 ea 03          	shr    $0x3,%rdx
  405777:	4c 21 ca             	and    %r9,%rdx
  40577a:	48 39 d0             	cmp    %rdx,%rax
  40577d:	0f 93 c1             	setae  %cl
  405780:	49 39 c0             	cmp    %rax,%r8
  405783:	40 0f 97 c6          	seta   %sil
  405787:	41 89 cf             	mov    %ecx,%r15d
  40578a:	41 09 f7             	or     %esi,%r15d
  40578d:	49 39 d0             	cmp    %rdx,%r8
  405790:	0f 92 c2             	setb   %dl
  405793:	41 84 d7             	test   %dl,%r15b
  405796:	75 c8                	jne    405760 <caml_unregister_frametable+0x80>
  405798:	84 c9                	test   %cl,%cl
  40579a:	74 05                	je     4057a1 <caml_unregister_frametable+0xc1>
  40579c:	40 84 f6             	test   %sil,%sil
  40579f:	75 bf                	jne    405760 <caml_unregister_frametable+0x80>
  4057a1:	4f 89 34 22          	mov    %r14,(%r10,%r12,1)
  4057a5:	49 89 c0             	mov    %rax,%r8
  4057a8:	4c 8b 15 89 71 22 00 	mov    0x227189(%rip),%r10        # 62c938 <caml_frame_descriptors>
  4057af:	eb 8c                	jmp    40573d <caml_unregister_frametable+0x5d>
  4057b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4057b8:	41 0f b7 43 0a       	movzwl 0xa(%r11),%eax
  4057bd:	49 8d 44 43 13       	lea    0x13(%r11,%rax,2),%rax
  4057c2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
  4057c6:	41 f6 43 08 01       	testb  $0x1,0x8(%r11)
  4057cb:	48 8d 50 08          	lea    0x8(%rax),%rdx
  4057cf:	48 0f 45 c2          	cmovne %rdx,%rax
  4057d3:	48 83 c3 01          	add    $0x1,%rbx
  4057d7:	49 39 dd             	cmp    %rbx,%r13
  4057da:	49 89 c3             	mov    %rax,%r11
  4057dd:	0f 85 35 ff ff ff    	jne    405718 <caml_unregister_frametable+0x38>
  4057e3:	48 85 ed             	test   %rbp,%rbp
  4057e6:	74 19                	je     405801 <caml_unregister_frametable+0x121>
  4057e8:	48 3b 7d 00          	cmp    0x0(%rbp),%rdi
  4057ec:	75 0a                	jne    4057f8 <caml_unregister_frametable+0x118>
  4057ee:	eb 1c                	jmp    40580c <caml_unregister_frametable+0x12c>
  4057f0:	48 3b 38             	cmp    (%rax),%rdi
  4057f3:	74 1a                	je     40580f <caml_unregister_frametable+0x12f>
  4057f5:	48 89 c5             	mov    %rax,%rbp
  4057f8:	48 8b 45 08          	mov    0x8(%rbp),%rax
  4057fc:	48 85 c0             	test   %rax,%rax
  4057ff:	75 ef                	jne    4057f0 <caml_unregister_frametable+0x110>
  405801:	5b                   	pop    %rbx
  405802:	5d                   	pop    %rbp
  405803:	41 5c                	pop    %r12
  405805:	41 5d                	pop    %r13
  405807:	41 5e                	pop    %r14
  405809:	41 5f                	pop    %r15
  40580b:	c3                   	retq   
  40580c:	48 89 e8             	mov    %rbp,%rax
  40580f:	48 8b 50 08          	mov    0x8(%rax),%rdx
  405813:	48 89 c7             	mov    %rax,%rdi
  405816:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  40581a:	5b                   	pop    %rbx
  40581b:	5d                   	pop    %rbp
  40581c:	41 5c                	pop    %r12
  40581e:	41 5d                	pop    %r13
  405820:	41 5e                	pop    %r14
  405822:	41 5f                	pop    %r15
  405824:	e9 c7 3f 00 00       	jmpq   4097f0 <caml_stat_free>
  405829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000405830 <caml_register_dyn_global>:
  405830:	55                   	push   %rbp
  405831:	53                   	push   %rbx
  405832:	48 89 fd             	mov    %rdi,%rbp
  405835:	bf 10 00 00 00       	mov    $0x10,%edi
  40583a:	48 83 ec 08          	sub    $0x8,%rsp
  40583e:	48 8b 1d 2b 71 22 00 	mov    0x22712b(%rip),%rbx        # 62c970 <caml_dyn_globals>
  405845:	e8 86 3f 00 00       	callq  4097d0 <caml_stat_alloc>
  40584a:	48 89 28             	mov    %rbp,(%rax)
  40584d:	48 89 05 1c 71 22 00 	mov    %rax,0x22711c(%rip)        # 62c970 <caml_dyn_globals>
  405854:	48 89 58 08          	mov    %rbx,0x8(%rax)
  405858:	48 83 c4 08          	add    $0x8,%rsp
  40585c:	5b                   	pop    %rbx
  40585d:	5d                   	pop    %rbp
  40585e:	c3                   	retq   
  40585f:	90                   	nop

0000000000405860 <caml_oldify_local_roots>:
  405860:	48 8b 05 11 71 22 00 	mov    0x227111(%rip),%rax        # 62c978 <caml_globals_scanned>
  405867:	48 8b 0d b2 70 22 00 	mov    0x2270b2(%rip),%rcx        # 62c920 <caml_globals_inited>
  40586e:	41 56                	push   %r14
  405870:	41 55                	push   %r13
  405872:	41 54                	push   %r12
  405874:	55                   	push   %rbp
  405875:	89 c5                	mov    %eax,%ebp
  405877:	48 98                	cltq   
  405879:	53                   	push   %rbx
  40587a:	48 39 c1             	cmp    %rax,%rcx
  40587d:	0f 8c 9f 00 00 00    	jl     405922 <caml_oldify_local_roots+0xc2>
  405883:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  405888:	4c 8b 24 c5 48 95 62 	mov    0x629548(,%rax,8),%r12
  40588f:	00 
  405890:	4d 85 e4             	test   %r12,%r12
  405893:	0f 84 89 00 00 00    	je     405922 <caml_oldify_local_roots+0xc2>
  405899:	49 8b 14 24          	mov    (%r12),%rdx
  40589d:	48 85 d2             	test   %rdx,%rdx
  4058a0:	74 71                	je     405913 <caml_oldify_local_roots+0xb3>
  4058a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4058a8:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  4058ac:	31 c9                	xor    %ecx,%ecx
  4058ae:	31 db                	xor    %ebx,%ebx
  4058b0:	48 c1 e8 0a          	shr    $0xa,%rax
  4058b4:	48 85 c0             	test   %rax,%rax
  4058b7:	74 46                	je     4058ff <caml_oldify_local_roots+0x9f>
  4058b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4058c0:	48 8d 34 ca          	lea    (%rdx,%rcx,8),%rsi
  4058c4:	48 8b 3e             	mov    (%rsi),%rdi
  4058c7:	40 f6 c7 01          	test   $0x1,%dil
  4058cb:	75 1b                	jne    4058e8 <caml_oldify_local_roots+0x88>
  4058cd:	48 3b 3d f4 75 22 00 	cmp    0x2275f4(%rip),%rdi        # 62cec8 <caml_young_end>
  4058d4:	73 12                	jae    4058e8 <caml_oldify_local_roots+0x88>
  4058d6:	48 3b 3d f3 75 22 00 	cmp    0x2275f3(%rip),%rdi        # 62ced0 <caml_young_start>
  4058dd:	76 09                	jbe    4058e8 <caml_oldify_local_roots+0x88>
  4058df:	e8 5c 27 00 00       	callq  408040 <caml_oldify_one>
  4058e4:	0f 1f 40 00          	nopl   0x0(%rax)
  4058e8:	49 8b 14 24          	mov    (%r12),%rdx
  4058ec:	83 c3 01             	add    $0x1,%ebx
  4058ef:	48 63 cb             	movslq %ebx,%rcx
  4058f2:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  4058f6:	48 c1 e8 0a          	shr    $0xa,%rax
  4058fa:	48 39 c1             	cmp    %rax,%rcx
  4058fd:	72 c1                	jb     4058c0 <caml_oldify_local_roots+0x60>
  4058ff:	49 83 c4 08          	add    $0x8,%r12
  405903:	49 8b 14 24          	mov    (%r12),%rdx
  405907:	48 85 d2             	test   %rdx,%rdx
  40590a:	75 9c                	jne    4058a8 <caml_oldify_local_roots+0x48>
  40590c:	48 8b 0d 0d 70 22 00 	mov    0x22700d(%rip),%rcx        # 62c920 <caml_globals_inited>
  405913:	83 c5 01             	add    $0x1,%ebp
  405916:	48 63 c5             	movslq %ebp,%rax
  405919:	48 39 c8             	cmp    %rcx,%rax
  40591c:	0f 8e 66 ff ff ff    	jle    405888 <caml_oldify_local_roots+0x28>
  405922:	48 8b 2d 47 70 22 00 	mov    0x227047(%rip),%rbp        # 62c970 <caml_dyn_globals>
  405929:	48 89 0d 48 70 22 00 	mov    %rcx,0x227048(%rip)        # 62c978 <caml_globals_scanned>
  405930:	48 85 ed             	test   %rbp,%rbp
  405933:	0f 84 88 00 00 00    	je     4059c1 <caml_oldify_local_roots+0x161>
  405939:	4c 8b 65 00          	mov    0x0(%rbp),%r12
  40593d:	49 8b 14 24          	mov    (%r12),%rdx
  405941:	48 85 d2             	test   %rdx,%rdx
  405944:	74 6e                	je     4059b4 <caml_oldify_local_roots+0x154>
  405946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40594d:	00 00 00 
  405950:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  405954:	31 c9                	xor    %ecx,%ecx
  405956:	31 db                	xor    %ebx,%ebx
  405958:	48 c1 e8 0a          	shr    $0xa,%rax
  40595c:	48 85 c0             	test   %rax,%rax
  40595f:	74 46                	je     4059a7 <caml_oldify_local_roots+0x147>
  405961:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  405968:	48 8d 34 ca          	lea    (%rdx,%rcx,8),%rsi
  40596c:	48 8b 3e             	mov    (%rsi),%rdi
  40596f:	40 f6 c7 01          	test   $0x1,%dil
  405973:	75 1b                	jne    405990 <caml_oldify_local_roots+0x130>
  405975:	48 3b 3d 4c 75 22 00 	cmp    0x22754c(%rip),%rdi        # 62cec8 <caml_young_end>
  40597c:	73 12                	jae    405990 <caml_oldify_local_roots+0x130>
  40597e:	48 3b 3d 4b 75 22 00 	cmp    0x22754b(%rip),%rdi        # 62ced0 <caml_young_start>
  405985:	76 09                	jbe    405990 <caml_oldify_local_roots+0x130>
  405987:	e8 b4 26 00 00       	callq  408040 <caml_oldify_one>
  40598c:	0f 1f 40 00          	nopl   0x0(%rax)
  405990:	49 8b 14 24          	mov    (%r12),%rdx
  405994:	83 c3 01             	add    $0x1,%ebx
  405997:	48 63 cb             	movslq %ebx,%rcx
  40599a:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  40599e:	48 c1 e8 0a          	shr    $0xa,%rax
  4059a2:	48 39 c1             	cmp    %rax,%rcx
  4059a5:	72 c1                	jb     405968 <caml_oldify_local_roots+0x108>
  4059a7:	49 83 c4 08          	add    $0x8,%r12
  4059ab:	49 8b 14 24          	mov    (%r12),%rdx
  4059af:	48 85 d2             	test   %rdx,%rdx
  4059b2:	75 9c                	jne    405950 <caml_oldify_local_roots+0xf0>
  4059b4:	48 8b 6d 08          	mov    0x8(%rbp),%rbp
  4059b8:	48 85 ed             	test   %rbp,%rbp
  4059bb:	0f 85 78 ff ff ff    	jne    405939 <caml_oldify_local_roots+0xd9>
  4059c1:	4c 8b 25 60 6f 22 00 	mov    0x226f60(%rip),%r12        # 62c928 <caml_bottom_of_stack>
  4059c8:	48 8b 15 99 6c 22 00 	mov    0x226c99(%rip),%rdx        # 62c668 <caml_last_return_address>
  4059cf:	4c 8b 2d 02 ba 23 00 	mov    0x23ba02(%rip),%r13        # 6413d8 <caml_gc_regs>
  4059d6:	4d 85 e4             	test   %r12,%r12
  4059d9:	0f 84 f1 00 00 00    	je     405ad0 <caml_oldify_local_roots+0x270>
  4059df:	48 63 0d 4a 6f 22 00 	movslq 0x226f4a(%rip),%rcx        # 62c930 <caml_frame_descriptors_mask>
  4059e6:	48 8b 35 4b 6f 22 00 	mov    0x226f4b(%rip),%rsi        # 62c938 <caml_frame_descriptors>
  4059ed:	0f 1f 00             	nopl   (%rax)
  4059f0:	48 89 d0             	mov    %rdx,%rax
  4059f3:	48 c1 e8 03          	shr    $0x3,%rax
  4059f7:	48 21 c8             	and    %rcx,%rax
  4059fa:	48 8b 2c c6          	mov    (%rsi,%rax,8),%rbp
  4059fe:	48 3b 55 00          	cmp    0x0(%rbp),%rdx
  405a02:	74 15                	je     405a19 <caml_oldify_local_roots+0x1b9>
  405a04:	0f 1f 40 00          	nopl   0x0(%rax)
  405a08:	48 83 c0 01          	add    $0x1,%rax
  405a0c:	48 21 c8             	and    %rcx,%rax
  405a0f:	48 8b 2c c6          	mov    (%rsi,%rax,8),%rbp
  405a13:	48 3b 55 00          	cmp    0x0(%rbp),%rdx
  405a17:	75 ef                	jne    405a08 <caml_oldify_local_roots+0x1a8>
  405a19:	0f b7 45 08          	movzwl 0x8(%rbp),%eax
  405a1d:	66 83 f8 ff          	cmp    $0xffff,%ax
  405a21:	0f 84 8d 00 00 00    	je     405ab4 <caml_oldify_local_roots+0x254>
  405a27:	0f b7 55 0a          	movzwl 0xa(%rbp),%edx
  405a2b:	48 8d 5d 0c          	lea    0xc(%rbp),%rbx
  405a2f:	66 85 d2             	test   %dx,%dx
  405a32:	74 6e                	je     405aa2 <caml_oldify_local_roots+0x242>
  405a34:	8d 42 ff             	lea    -0x1(%rdx),%eax
  405a37:	4c 8d 74 43 02       	lea    0x2(%rbx,%rax,2),%r14
  405a3c:	eb 3b                	jmp    405a79 <caml_oldify_local_roots+0x219>
  405a3e:	66 90                	xchg   %ax,%ax
  405a40:	48 c1 e6 02          	shl    $0x2,%rsi
  405a44:	81 e6 f8 ff 03 00    	and    $0x3fff8,%esi
  405a4a:	4c 01 ee             	add    %r13,%rsi
  405a4d:	48 8b 3e             	mov    (%rsi),%rdi
  405a50:	40 f6 c7 01          	test   $0x1,%dil
  405a54:	75 1a                	jne    405a70 <caml_oldify_local_roots+0x210>
  405a56:	48 3b 3d 6b 74 22 00 	cmp    0x22746b(%rip),%rdi        # 62cec8 <caml_young_end>
  405a5d:	73 11                	jae    405a70 <caml_oldify_local_roots+0x210>
  405a5f:	48 3b 3d 6a 74 22 00 	cmp    0x22746a(%rip),%rdi        # 62ced0 <caml_young_start>
  405a66:	76 08                	jbe    405a70 <caml_oldify_local_roots+0x210>
  405a68:	e8 d3 25 00 00       	callq  408040 <caml_oldify_one>
  405a6d:	0f 1f 00             	nopl   (%rax)
  405a70:	48 83 c3 02          	add    $0x2,%rbx
  405a74:	4c 39 f3             	cmp    %r14,%rbx
  405a77:	74 17                	je     405a90 <caml_oldify_local_roots+0x230>
  405a79:	0f b7 33             	movzwl (%rbx),%esi
  405a7c:	40 f6 c6 01          	test   $0x1,%sil
  405a80:	75 be                	jne    405a40 <caml_oldify_local_roots+0x1e0>
  405a82:	4c 01 e6             	add    %r12,%rsi
  405a85:	eb c6                	jmp    405a4d <caml_oldify_local_roots+0x1ed>
  405a87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  405a8e:	00 00 
  405a90:	0f b7 45 08          	movzwl 0x8(%rbp),%eax
  405a94:	48 63 0d 95 6e 22 00 	movslq 0x226e95(%rip),%rcx        # 62c930 <caml_frame_descriptors_mask>
  405a9b:	48 8b 35 96 6e 22 00 	mov    0x226e96(%rip),%rsi        # 62c938 <caml_frame_descriptors>
  405aa2:	25 fc ff 00 00       	and    $0xfffc,%eax
  405aa7:	49 01 c4             	add    %rax,%r12
  405aaa:	49 8b 54 24 f8       	mov    -0x8(%r12),%rdx
  405aaf:	e9 3c ff ff ff       	jmpq   4059f0 <caml_oldify_local_roots+0x190>
  405ab4:	49 8b 44 24 10       	mov    0x10(%r12),%rax
  405ab9:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
  405abe:	4d 8b 6c 24 20       	mov    0x20(%r12),%r13
  405ac3:	48 85 c0             	test   %rax,%rax
  405ac6:	74 08                	je     405ad0 <caml_oldify_local_roots+0x270>
  405ac8:	49 89 c4             	mov    %rax,%r12
  405acb:	e9 20 ff ff ff       	jmpq   4059f0 <caml_oldify_local_roots+0x190>
  405ad0:	48 8b 2d 71 6e 22 00 	mov    0x226e71(%rip),%rbp        # 62c948 <caml_local_roots>
  405ad7:	48 85 ed             	test   %rbp,%rbp
  405ada:	74 76                	je     405b52 <caml_oldify_local_roots+0x2f2>
  405adc:	45 31 ed             	xor    %r13d,%r13d
  405adf:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
  405ae4:	7e 63                	jle    405b49 <caml_oldify_local_roots+0x2e9>
  405ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  405aed:	00 00 00 
  405af0:	31 db                	xor    %ebx,%ebx
  405af2:	31 c0                	xor    %eax,%eax
  405af4:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
  405af9:	4d 63 e5             	movslq %r13d,%r12
  405afc:	7e 3e                	jle    405b3c <caml_oldify_local_roots+0x2dc>
  405afe:	66 90                	xchg   %ax,%ax
  405b00:	4a 8b 54 e5 18       	mov    0x18(%rbp,%r12,8),%rdx
  405b05:	48 8d 34 c2          	lea    (%rdx,%rax,8),%rsi
  405b09:	48 8b 3e             	mov    (%rsi),%rdi
  405b0c:	40 f6 c7 01          	test   $0x1,%dil
  405b10:	75 1e                	jne    405b30 <caml_oldify_local_roots+0x2d0>
  405b12:	48 3b 3d af 73 22 00 	cmp    0x2273af(%rip),%rdi        # 62cec8 <caml_young_end>
  405b19:	73 15                	jae    405b30 <caml_oldify_local_roots+0x2d0>
  405b1b:	48 3b 3d ae 73 22 00 	cmp    0x2273ae(%rip),%rdi        # 62ced0 <caml_young_start>
  405b22:	76 0c                	jbe    405b30 <caml_oldify_local_roots+0x2d0>
  405b24:	e8 17 25 00 00       	callq  408040 <caml_oldify_one>
  405b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  405b30:	83 c3 01             	add    $0x1,%ebx
  405b33:	48 63 c3             	movslq %ebx,%rax
  405b36:	48 3b 45 10          	cmp    0x10(%rbp),%rax
  405b3a:	7c c4                	jl     405b00 <caml_oldify_local_roots+0x2a0>
  405b3c:	41 83 c5 01          	add    $0x1,%r13d
  405b40:	4d 63 e5             	movslq %r13d,%r12
  405b43:	4c 3b 65 08          	cmp    0x8(%rbp),%r12
  405b47:	7c a7                	jl     405af0 <caml_oldify_local_roots+0x290>
  405b49:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
  405b4d:	48 85 ed             	test   %rbp,%rbp
  405b50:	75 8a                	jne    405adc <caml_oldify_local_roots+0x27c>
  405b52:	bf 40 80 40 00       	mov    $0x408040,%edi
  405b57:	e8 d4 09 00 00       	callq  406530 <caml_scan_global_young_roots>
  405b5c:	31 c0                	xor    %eax,%eax
  405b5e:	e8 6d 2c 01 00       	callq  4187d0 <caml_final_oldify_young_roots>
  405b63:	48 8b 05 d6 6d 22 00 	mov    0x226dd6(%rip),%rax        # 62c940 <caml_scan_roots_hook>
  405b6a:	48 85 c0             	test   %rax,%rax
  405b6d:	74 0f                	je     405b7e <caml_oldify_local_roots+0x31e>
  405b6f:	5b                   	pop    %rbx
  405b70:	5d                   	pop    %rbp
  405b71:	41 5c                	pop    %r12
  405b73:	41 5d                	pop    %r13
  405b75:	41 5e                	pop    %r14
  405b77:	bf 40 80 40 00       	mov    $0x408040,%edi
  405b7c:	ff e0                	jmpq   *%rax
  405b7e:	5b                   	pop    %rbx
  405b7f:	5d                   	pop    %rbp
  405b80:	41 5c                	pop    %r12
  405b82:	41 5d                	pop    %r13
  405b84:	41 5e                	pop    %r14
  405b86:	c3                   	retq   
  405b87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  405b8e:	00 00 

0000000000405b90 <caml_darken_all_roots_slice>:
  405b90:	55                   	push   %rbp
  405b91:	53                   	push   %rbx
  405b92:	48 89 fb             	mov    %rdi,%rbx
  405b95:	48 83 ec 08          	sub    $0x8,%rsp
  405b99:	8b 15 cd 6d 22 00    	mov    0x226dcd(%rip),%edx        # 62c96c <do_resume.4179>
  405b9f:	85 d2                	test   %edx,%edx
  405ba1:	0f 85 b1 00 00 00    	jne    405c58 <caml_darken_all_roots_slice+0xc8>
  405ba7:	48 63 d2             	movslq %edx,%rdx
  405baa:	c7 05 b4 6d 22 00 00 	movl   $0x0,0x226db4(%rip)        # 62c968 <i.4176>
  405bb1:	00 00 00 
  405bb4:	48 89 fd             	mov    %rdi,%rbp
  405bb7:	48 8b 14 d5 48 95 62 	mov    0x629548(,%rdx,8),%rdx
  405bbe:	00 
  405bbf:	48 85 d2             	test   %rdx,%rdx
  405bc2:	74 5e                	je     405c22 <caml_darken_all_roots_slice+0x92>
  405bc4:	48 8b 3a             	mov    (%rdx),%rdi
  405bc7:	48 89 15 92 6d 22 00 	mov    %rdx,0x226d92(%rip)        # 62c960 <glob.4178>
  405bce:	48 85 ff             	test   %rdi,%rdi
  405bd1:	74 30                	je     405c03 <caml_darken_all_roots_slice+0x73>
  405bd3:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
  405bd7:	31 c9                	xor    %ecx,%ecx
  405bd9:	c7 05 75 6d 22 00 00 	movl   $0x0,0x226d75(%rip)        # 62c958 <j.4177>
  405be0:	00 00 00 
  405be3:	48 c1 ee 0a          	shr    $0xa,%rsi
  405be7:	48 39 ce             	cmp    %rcx,%rsi
  405bea:	0f 87 98 00 00 00    	ja     405c88 <caml_darken_all_roots_slice+0xf8>
  405bf0:	48 83 c2 08          	add    $0x8,%rdx
  405bf4:	48 8b 3a             	mov    (%rdx),%rdi
  405bf7:	48 89 15 62 6d 22 00 	mov    %rdx,0x226d62(%rip)        # 62c960 <glob.4178>
  405bfe:	48 85 ff             	test   %rdi,%rdi
  405c01:	75 d0                	jne    405bd3 <caml_darken_all_roots_slice+0x43>
  405c03:	8b 05 5f 6d 22 00    	mov    0x226d5f(%rip),%eax        # 62c968 <i.4176>
  405c09:	8d 50 01             	lea    0x1(%rax),%edx
  405c0c:	89 15 56 6d 22 00    	mov    %edx,0x226d56(%rip)        # 62c968 <i.4176>
  405c12:	48 63 d2             	movslq %edx,%rdx
  405c15:	48 8b 14 d5 48 95 62 	mov    0x629548(,%rdx,8),%rdx
  405c1c:	00 
  405c1d:	48 85 d2             	test   %rdx,%rdx
  405c20:	75 a2                	jne    405bc4 <caml_darken_all_roots_slice+0x34>
  405c22:	48 03 1d 27 6d 22 00 	add    0x226d27(%rip),%rbx        # 62c950 <roots_count.4180>
  405c29:	c7 05 39 6d 22 00 00 	movl   $0x0,0x226d39(%rip)        # 62c96c <do_resume.4179>
  405c30:	00 00 00 
  405c33:	48 89 e8             	mov    %rbp,%rax
  405c36:	48 c7 05 0f 6d 22 00 	movq   $0x0,0x226d0f(%rip)        # 62c950 <roots_count.4180>
  405c3d:	00 00 00 00 
  405c41:	48 29 eb             	sub    %rbp,%rbx
  405c44:	48 89 1d cd 6c 22 00 	mov    %rbx,0x226ccd(%rip)        # 62c918 <caml_incremental_roots_count>
  405c4b:	48 83 c4 08          	add    $0x8,%rsp
  405c4f:	5b                   	pop    %rbx
  405c50:	5d                   	pop    %rbp
  405c51:	c3                   	retq   
  405c52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  405c58:	48 89 fd             	mov    %rdi,%rbp
  405c5b:	8b 05 f7 6c 22 00    	mov    0x226cf7(%rip),%eax        # 62c958 <j.4177>
  405c61:	8d 50 01             	lea    0x1(%rax),%edx
  405c64:	48 63 ca             	movslq %edx,%rcx
  405c67:	89 15 eb 6c 22 00    	mov    %edx,0x226ceb(%rip)        # 62c958 <j.4177>
  405c6d:	48 8b 15 ec 6c 22 00 	mov    0x226cec(%rip),%rdx        # 62c960 <glob.4178>
  405c74:	48 8b 3a             	mov    (%rdx),%rdi
  405c77:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
  405c7b:	48 c1 ee 0a          	shr    $0xa,%rsi
  405c7f:	48 39 ce             	cmp    %rcx,%rsi
  405c82:	0f 86 68 ff ff ff    	jbe    405bf0 <caml_darken_all_roots_slice+0x60>
  405c88:	48 8d 04 cf          	lea    (%rdi,%rcx,8),%rax
  405c8c:	48 8b 38             	mov    (%rax),%rdi
  405c8f:	48 89 c6             	mov    %rax,%rsi
  405c92:	e8 19 16 00 00       	callq  4072b0 <caml_darken>
  405c97:	48 83 ed 01          	sub    $0x1,%rbp
  405c9b:	75 be                	jne    405c5b <caml_darken_all_roots_slice+0xcb>
  405c9d:	48 01 1d ac 6c 22 00 	add    %rbx,0x226cac(%rip)        # 62c950 <roots_count.4180>
  405ca4:	c7 05 be 6c 22 00 01 	movl   $0x1,0x226cbe(%rip)        # 62c96c <do_resume.4179>
  405cab:	00 00 00 
  405cae:	48 83 c4 08          	add    $0x8,%rsp
  405cb2:	48 89 e8             	mov    %rbp,%rax
  405cb5:	5b                   	pop    %rbx
  405cb6:	5d                   	pop    %rbp
  405cb7:	c3                   	retq   
  405cb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  405cbf:	00 

0000000000405cc0 <caml_do_local_roots>:
  405cc0:	41 57                	push   %r15
  405cc2:	41 56                	push   %r14
  405cc4:	41 55                	push   %r13
  405cc6:	41 54                	push   %r12
  405cc8:	49 89 fc             	mov    %rdi,%r12
  405ccb:	55                   	push   %rbp
  405ccc:	53                   	push   %rbx
  405ccd:	4c 89 c5             	mov    %r8,%rbp
  405cd0:	48 83 ec 18          	sub    $0x18,%rsp
  405cd4:	48 85 f6             	test   %rsi,%rsi
  405cd7:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  405cdc:	0f 84 b0 00 00 00    	je     405d92 <caml_do_local_roots+0xd2>
  405ce2:	49 89 f5             	mov    %rsi,%r13
  405ce5:	48 63 35 44 6c 22 00 	movslq 0x226c44(%rip),%rsi        # 62c930 <caml_frame_descriptors_mask>
  405cec:	48 8b 3d 45 6c 22 00 	mov    0x226c45(%rip),%rdi        # 62c938 <caml_frame_descriptors>
  405cf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  405cf8:	48 89 d0             	mov    %rdx,%rax
  405cfb:	48 c1 e8 03          	shr    $0x3,%rax
  405cff:	48 21 f0             	and    %rsi,%rax
  405d02:	4c 8b 34 c7          	mov    (%rdi,%rax,8),%r14
  405d06:	49 3b 16             	cmp    (%r14),%rdx
  405d09:	74 15                	je     405d20 <caml_do_local_roots+0x60>
  405d0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  405d10:	48 83 c0 01          	add    $0x1,%rax
  405d14:	48 21 f0             	and    %rsi,%rax
  405d17:	4c 8b 34 c7          	mov    (%rdi,%rax,8),%r14
  405d1b:	49 3b 16             	cmp    (%r14),%rdx
  405d1e:	75 f0                	jne    405d10 <caml_do_local_roots+0x50>
  405d20:	41 0f b7 46 08       	movzwl 0x8(%r14),%eax
  405d25:	66 83 f8 ff          	cmp    $0xffff,%ax
  405d29:	0f 84 e5 00 00 00    	je     405e14 <caml_do_local_roots+0x154>
  405d2f:	41 0f b7 56 0a       	movzwl 0xa(%r14),%edx
  405d34:	4d 8d 7e 0c          	lea    0xc(%r14),%r15
  405d38:	66 85 d2             	test   %dx,%dx
  405d3b:	0f 84 c2 00 00 00    	je     405e03 <caml_do_local_roots+0x143>
  405d41:	8d 42 ff             	lea    -0x1(%rdx),%eax
  405d44:	49 8d 5c 47 02       	lea    0x2(%r15,%rax,2),%rbx
  405d49:	eb 29                	jmp    405d74 <caml_do_local_roots+0xb4>
  405d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  405d50:	48 c1 e0 02          	shl    $0x2,%rax
  405d54:	25 f8 ff 03 00       	and    $0x3fff8,%eax
  405d59:	48 03 44 24 08       	add    0x8(%rsp),%rax
  405d5e:	49 83 c7 02          	add    $0x2,%r15
  405d62:	48 89 c6             	mov    %rax,%rsi
  405d65:	48 8b 38             	mov    (%rax),%rdi
  405d68:	41 ff d4             	callq  *%r12
  405d6b:	49 39 df             	cmp    %rbx,%r15
  405d6e:	0f 84 7c 00 00 00    	je     405df0 <caml_do_local_roots+0x130>
  405d74:	41 0f b7 07          	movzwl (%r15),%eax
  405d78:	a8 01                	test   $0x1,%al
  405d7a:	75 d4                	jne    405d50 <caml_do_local_roots+0x90>
  405d7c:	4c 01 e8             	add    %r13,%rax
  405d7f:	eb dd                	jmp    405d5e <caml_do_local_roots+0x9e>
  405d81:	41 83 c5 01          	add    $0x1,%r13d
  405d85:	4d 63 f5             	movslq %r13d,%r14
  405d88:	4c 3b 75 08          	cmp    0x8(%rbp),%r14
  405d8c:	7c 1a                	jl     405da8 <caml_do_local_roots+0xe8>
  405d8e:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
  405d92:	48 85 ed             	test   %rbp,%rbp
  405d95:	0f 84 9b 00 00 00    	je     405e36 <caml_do_local_roots+0x176>
  405d9b:	45 31 ed             	xor    %r13d,%r13d
  405d9e:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
  405da3:	7e e9                	jle    405d8e <caml_do_local_roots+0xce>
  405da5:	0f 1f 00             	nopl   (%rax)
  405da8:	31 db                	xor    %ebx,%ebx
  405daa:	31 c0                	xor    %eax,%eax
  405dac:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
  405db1:	4d 63 f5             	movslq %r13d,%r14
  405db4:	7e cb                	jle    405d81 <caml_do_local_roots+0xc1>
  405db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  405dbd:	00 00 00 
  405dc0:	4a 8b 54 f5 18       	mov    0x18(%rbp,%r14,8),%rdx
  405dc5:	83 c3 01             	add    $0x1,%ebx
  405dc8:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
  405dcc:	48 89 c6             	mov    %rax,%rsi
  405dcf:	48 8b 38             	mov    (%rax),%rdi
  405dd2:	41 ff d4             	callq  *%r12
  405dd5:	48 63 c3             	movslq %ebx,%rax
  405dd8:	48 3b 45 10          	cmp    0x10(%rbp),%rax
  405ddc:	7c e2                	jl     405dc0 <caml_do_local_roots+0x100>
  405dde:	41 83 c5 01          	add    $0x1,%r13d
  405de2:	4d 63 f5             	movslq %r13d,%r14
  405de5:	4c 3b 75 08          	cmp    0x8(%rbp),%r14
  405de9:	7c bd                	jl     405da8 <caml_do_local_roots+0xe8>
  405deb:	eb a1                	jmp    405d8e <caml_do_local_roots+0xce>
  405ded:	0f 1f 00             	nopl   (%rax)
  405df0:	41 0f b7 46 08       	movzwl 0x8(%r14),%eax
  405df5:	48 63 35 34 6b 22 00 	movslq 0x226b34(%rip),%rsi        # 62c930 <caml_frame_descriptors_mask>
  405dfc:	48 8b 3d 35 6b 22 00 	mov    0x226b35(%rip),%rdi        # 62c938 <caml_frame_descriptors>
  405e03:	25 fc ff 00 00       	and    $0xfffc,%eax
  405e08:	49 01 c5             	add    %rax,%r13
  405e0b:	49 8b 55 f8          	mov    -0x8(%r13),%rdx
  405e0f:	e9 e4 fe ff ff       	jmpq   405cf8 <caml_do_local_roots+0x38>
  405e14:	49 8b 45 10          	mov    0x10(%r13),%rax
  405e18:	49 8b 4d 20          	mov    0x20(%r13),%rcx
  405e1c:	49 8b 55 18          	mov    0x18(%r13),%rdx
  405e20:	48 85 c0             	test   %rax,%rax
  405e23:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  405e28:	0f 84 64 ff ff ff    	je     405d92 <caml_do_local_roots+0xd2>
  405e2e:	49 89 c5             	mov    %rax,%r13
  405e31:	e9 c2 fe ff ff       	jmpq   405cf8 <caml_do_local_roots+0x38>
  405e36:	48 83 c4 18          	add    $0x18,%rsp
  405e3a:	5b                   	pop    %rbx
  405e3b:	5d                   	pop    %rbp
  405e3c:	41 5c                	pop    %r12
  405e3e:	41 5d                	pop    %r13
  405e40:	41 5e                	pop    %r14
  405e42:	41 5f                	pop    %r15
  405e44:	c3                   	retq   
  405e45:	90                   	nop
  405e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  405e4d:	00 00 00 

0000000000405e50 <caml_do_roots>:
  405e50:	41 55                	push   %r13
  405e52:	41 54                	push   %r12
  405e54:	55                   	push   %rbp
  405e55:	53                   	push   %rbx
  405e56:	48 89 fb             	mov    %rdi,%rbx
  405e59:	48 83 ec 08          	sub    $0x8,%rsp
  405e5d:	85 f6                	test   %esi,%esi
  405e5f:	74 7c                	je     405edd <caml_do_roots+0x8d>
  405e61:	48 8b 2d e0 36 22 00 	mov    0x2236e0(%rip),%rbp        # 629548 <caml_globals>
  405e68:	45 31 e4             	xor    %r12d,%r12d
  405e6b:	48 85 ed             	test   %rbp,%rbp
  405e6e:	74 6d                	je     405edd <caml_do_roots+0x8d>
  405e70:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  405e74:	48 85 d2             	test   %rdx,%rdx
  405e77:	74 50                	je     405ec9 <caml_do_roots+0x79>
  405e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  405e80:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  405e84:	31 c9                	xor    %ecx,%ecx
  405e86:	45 31 ed             	xor    %r13d,%r13d
  405e89:	48 c1 e8 0a          	shr    $0xa,%rax
  405e8d:	48 85 c0             	test   %rax,%rax
  405e90:	74 2a                	je     405ebc <caml_do_roots+0x6c>
  405e92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  405e98:	48 8d 04 ca          	lea    (%rdx,%rcx,8),%rax
  405e9c:	41 83 c5 01          	add    $0x1,%r13d
  405ea0:	48 89 c6             	mov    %rax,%rsi
  405ea3:	48 8b 38             	mov    (%rax),%rdi
  405ea6:	ff d3                	callq  *%rbx
  405ea8:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  405eac:	49 63 cd             	movslq %r13d,%rcx
  405eaf:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  405eb3:	48 c1 e8 0a          	shr    $0xa,%rax
  405eb7:	48 39 c1             	cmp    %rax,%rcx
  405eba:	72 dc                	jb     405e98 <caml_do_roots+0x48>
  405ebc:	48 83 c5 08          	add    $0x8,%rbp
  405ec0:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  405ec4:	48 85 d2             	test   %rdx,%rdx
  405ec7:	75 b7                	jne    405e80 <caml_do_roots+0x30>
  405ec9:	41 83 c4 01          	add    $0x1,%r12d
  405ecd:	49 63 c4             	movslq %r12d,%rax
  405ed0:	48 8b 2c c5 48 95 62 	mov    0x629548(,%rax,8),%rbp
  405ed7:	00 
  405ed8:	48 85 ed             	test   %rbp,%rbp
  405edb:	75 93                	jne    405e70 <caml_do_roots+0x20>
  405edd:	4c 8b 25 8c 6a 22 00 	mov    0x226a8c(%rip),%r12        # 62c970 <caml_dyn_globals>
  405ee4:	4d 85 e4             	test   %r12,%r12
  405ee7:	74 6a                	je     405f53 <caml_do_roots+0x103>
  405ee9:	49 8b 2c 24          	mov    (%r12),%rbp
  405eed:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  405ef1:	48 85 d2             	test   %rdx,%rdx
  405ef4:	74 53                	je     405f49 <caml_do_roots+0xf9>
  405ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  405efd:	00 00 00 
  405f00:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  405f04:	31 c9                	xor    %ecx,%ecx
  405f06:	45 31 ed             	xor    %r13d,%r13d
  405f09:	48 c1 e8 0a          	shr    $0xa,%rax
  405f0d:	48 85 c0             	test   %rax,%rax
  405f10:	74 2a                	je     405f3c <caml_do_roots+0xec>
  405f12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  405f18:	48 8d 04 ca          	lea    (%rdx,%rcx,8),%rax
  405f1c:	41 83 c5 01          	add    $0x1,%r13d
  405f20:	48 89 c6             	mov    %rax,%rsi
  405f23:	48 8b 38             	mov    (%rax),%rdi
  405f26:	ff d3                	callq  *%rbx
  405f28:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  405f2c:	49 63 cd             	movslq %r13d,%rcx
  405f2f:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  405f33:	48 c1 e8 0a          	shr    $0xa,%rax
  405f37:	48 39 c1             	cmp    %rax,%rcx
  405f3a:	72 dc                	jb     405f18 <caml_do_roots+0xc8>
  405f3c:	48 83 c5 08          	add    $0x8,%rbp
  405f40:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  405f44:	48 85 d2             	test   %rdx,%rdx
  405f47:	75 b7                	jne    405f00 <caml_do_roots+0xb0>
  405f49:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
  405f4e:	4d 85 e4             	test   %r12,%r12
  405f51:	75 96                	jne    405ee9 <caml_do_roots+0x99>
  405f53:	4c 8b 05 ee 69 22 00 	mov    0x2269ee(%rip),%r8        # 62c948 <caml_local_roots>
  405f5a:	48 8b 0d 77 b4 23 00 	mov    0x23b477(%rip),%rcx        # 6413d8 <caml_gc_regs>
  405f61:	48 89 df             	mov    %rbx,%rdi
  405f64:	48 8b 15 fd 66 22 00 	mov    0x2266fd(%rip),%rdx        # 62c668 <caml_last_return_address>
  405f6b:	48 8b 35 b6 69 22 00 	mov    0x2269b6(%rip),%rsi        # 62c928 <caml_bottom_of_stack>
  405f72:	e8 49 fd ff ff       	callq  405cc0 <caml_do_local_roots>
  405f77:	48 89 df             	mov    %rbx,%rdi
  405f7a:	e8 31 05 00 00       	callq  4064b0 <caml_scan_global_roots>
  405f7f:	48 89 df             	mov    %rbx,%rdi
  405f82:	e8 e9 26 01 00       	callq  418670 <caml_final_do_roots>
  405f87:	48 8b 05 b2 69 22 00 	mov    0x2269b2(%rip),%rax        # 62c940 <caml_scan_roots_hook>
  405f8e:	48 85 c0             	test   %rax,%rax
  405f91:	74 0f                	je     405fa2 <caml_do_roots+0x152>
  405f93:	48 83 c4 08          	add    $0x8,%rsp
  405f97:	48 89 df             	mov    %rbx,%rdi
  405f9a:	5b                   	pop    %rbx
  405f9b:	5d                   	pop    %rbp
  405f9c:	41 5c                	pop    %r12
  405f9e:	41 5d                	pop    %r13
  405fa0:	ff e0                	jmpq   *%rax
  405fa2:	48 83 c4 08          	add    $0x8,%rsp
  405fa6:	5b                   	pop    %rbx
  405fa7:	5d                   	pop    %rbp
  405fa8:	41 5c                	pop    %r12
  405faa:	41 5d                	pop    %r13
  405fac:	c3                   	retq   
  405fad:	0f 1f 00             	nopl   (%rax)

0000000000405fb0 <caml_darken_all_roots_start>:
  405fb0:	31 f6                	xor    %esi,%esi
  405fb2:	bf b0 72 40 00       	mov    $0x4072b0,%edi
  405fb7:	e9 94 fe ff ff       	jmpq   405e50 <caml_do_roots>
  405fbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000405fc0 <caml_stack_usage>:
  405fc0:	53                   	push   %rbx
  405fc1:	48 8b 1d 08 b4 23 00 	mov    0x23b408(%rip),%rbx        # 6413d0 <caml_top_of_stack>
  405fc8:	48 2b 1d 59 69 22 00 	sub    0x226959(%rip),%rbx        # 62c928 <caml_bottom_of_stack>
  405fcf:	48 8b 05 3a 69 22 00 	mov    0x22693a(%rip),%rax        # 62c910 <caml_stack_usage_hook>
  405fd6:	48 c1 fb 03          	sar    $0x3,%rbx
  405fda:	48 85 c0             	test   %rax,%rax
  405fdd:	74 05                	je     405fe4 <caml_stack_usage+0x24>
  405fdf:	ff d0                	callq  *%rax
  405fe1:	48 01 c3             	add    %rax,%rbx
  405fe4:	48 89 d8             	mov    %rbx,%rax
  405fe7:	5b                   	pop    %rbx
  405fe8:	c3                   	retq   
  405fe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000405ff0 <caml_insert_global_root>:
  405ff0:	55                   	push   %rbp
  405ff1:	53                   	push   %rbx
  405ff2:	49 89 f9             	mov    %rdi,%r9
  405ff5:	48 89 f3             	mov    %rsi,%rbx
  405ff8:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  405fff:	44 8b 87 90 00 00 00 	mov    0x90(%rdi),%r8d
  406006:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40600d:	00 00 
  40600f:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  406016:	00 
  406017:	31 c0                	xor    %eax,%eax
  406019:	45 85 c0             	test   %r8d,%r8d
  40601c:	0f 88 21 01 00 00    	js     406143 <caml_insert_global_root+0x153>
  406022:	44 89 c6             	mov    %r8d,%esi
  406025:	48 89 fa             	mov    %rdi,%rdx
  406028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40602f:	00 
  406030:	48 63 ce             	movslq %esi,%rcx
  406033:	eb 0b                	jmp    406040 <caml_insert_global_root+0x50>
  406035:	0f 1f 00             	nopl   (%rax)
  406038:	48 39 18             	cmp    %rbx,(%rax)
  40603b:	73 0d                	jae    40604a <caml_insert_global_root+0x5a>
  40603d:	48 89 c2             	mov    %rax,%rdx
  406040:	48 8b 44 ca 08       	mov    0x8(%rdx,%rcx,8),%rax
  406045:	48 85 c0             	test   %rax,%rax
  406048:	75 ee                	jne    406038 <caml_insert_global_root+0x48>
  40604a:	83 ee 01             	sub    $0x1,%esi
  40604d:	48 89 14 cc          	mov    %rdx,(%rsp,%rcx,8)
  406051:	83 fe ff             	cmp    $0xffffffff,%esi
  406054:	75 da                	jne    406030 <caml_insert_global_root+0x40>
  406056:	48 8b 42 08          	mov    0x8(%rdx),%rax
  40605a:	48 85 c0             	test   %rax,%rax
  40605d:	74 09                	je     406068 <caml_insert_global_root+0x78>
  40605f:	48 3b 18             	cmp    (%rax),%rbx
  406062:	0f 84 ad 00 00 00    	je     406115 <caml_insert_global_root+0x125>
  406068:	69 05 06 6b 22 00 cd 	imul   $0x10dcd,0x226b06(%rip),%eax        # 62cb78 <random_seed>
  40606f:	0d 01 00 
  406072:	05 55 62 00 00       	add    $0x6255,%eax
  406077:	89 c2                	mov    %eax,%edx
  406079:	89 05 f9 6a 22 00    	mov    %eax,0x226af9(%rip)        # 62cb78 <random_seed>
  40607f:	81 e2 00 00 00 c0    	and    $0xc0000000,%edx
  406085:	81 fa 00 00 00 c0    	cmp    $0xc0000000,%edx
  40608b:	0f 85 a1 00 00 00    	jne    406132 <caml_insert_global_root+0x142>
  406091:	31 ed                	xor    %ebp,%ebp
  406093:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  406098:	c1 e0 02             	shl    $0x2,%eax
  40609b:	83 c5 01             	add    $0x1,%ebp
  40609e:	89 c2                	mov    %eax,%edx
  4060a0:	81 e2 00 00 00 c0    	and    $0xc0000000,%edx
  4060a6:	81 fa 00 00 00 c0    	cmp    $0xc0000000,%edx
  4060ac:	74 ea                	je     406098 <caml_insert_global_root+0xa8>
  4060ae:	48 63 c5             	movslq %ebp,%rax
  4060b1:	41 39 e8             	cmp    %ebp,%r8d
  4060b4:	48 8d 3c c5 10 00 00 	lea    0x10(,%rax,8),%rdi
  4060bb:	00 
  4060bc:	7d 27                	jge    4060e5 <caml_insert_global_root+0xf5>
  4060be:	41 8d 40 01          	lea    0x1(%r8),%eax
  4060c2:	39 e8                	cmp    %ebp,%eax
  4060c4:	7f 18                	jg     4060de <caml_insert_global_root+0xee>
  4060c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4060cd:	00 00 00 
  4060d0:	48 63 d0             	movslq %eax,%rdx
  4060d3:	83 c0 01             	add    $0x1,%eax
  4060d6:	39 e8                	cmp    %ebp,%eax
  4060d8:	4c 89 0c d4          	mov    %r9,(%rsp,%rdx,8)
  4060dc:	7e f2                	jle    4060d0 <caml_insert_global_root+0xe0>
  4060de:	41 89 a9 90 00 00 00 	mov    %ebp,0x90(%r9)
  4060e5:	e8 e6 36 00 00       	callq  4097d0 <caml_stat_alloc>
  4060ea:	85 ed                	test   %ebp,%ebp
  4060ec:	48 89 18             	mov    %rbx,(%rax)
  4060ef:	78 24                	js     406115 <caml_insert_global_root+0x125>
  4060f1:	31 d2                	xor    %edx,%edx
  4060f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4060f8:	48 8b 0c d4          	mov    (%rsp,%rdx,8),%rcx
  4060fc:	48 8d 0c d1          	lea    (%rcx,%rdx,8),%rcx
  406100:	48 8b 71 08          	mov    0x8(%rcx),%rsi
  406104:	48 89 74 d0 08       	mov    %rsi,0x8(%rax,%rdx,8)
  406109:	48 83 c2 01          	add    $0x1,%rdx
  40610d:	48 89 41 08          	mov    %rax,0x8(%rcx)
  406111:	39 d5                	cmp    %edx,%ebp
  406113:	7d e3                	jge    4060f8 <caml_insert_global_root+0x108>
  406115:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
  40611c:	00 
  40611d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  406124:	00 00 
  406126:	75 34                	jne    40615c <caml_insert_global_root+0x16c>
  406128:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  40612f:	5b                   	pop    %rbx
  406130:	5d                   	pop    %rbp
  406131:	c3                   	retq   
  406132:	45 85 c0             	test   %r8d,%r8d
  406135:	79 14                	jns    40614b <caml_insert_global_root+0x15b>
  406137:	bf 10 00 00 00       	mov    $0x10,%edi
  40613c:	31 ed                	xor    %ebp,%ebp
  40613e:	e9 7b ff ff ff       	jmpq   4060be <caml_insert_global_root+0xce>
  406143:	48 89 fa             	mov    %rdi,%rdx
  406146:	e9 0b ff ff ff       	jmpq   406056 <caml_insert_global_root+0x66>
  40614b:	bf 10 00 00 00       	mov    $0x10,%edi
  406150:	31 ed                	xor    %ebp,%ebp
  406152:	e8 79 36 00 00       	callq  4097d0 <caml_stat_alloc>
  406157:	48 89 18             	mov    %rbx,(%rax)
  40615a:	eb 95                	jmp    4060f1 <caml_insert_global_root+0x101>
  40615c:	e8 0f b9 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  406161:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  406166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40616d:	00 00 00 

0000000000406170 <caml_delete_global_root>:
  406170:	53                   	push   %rbx
  406171:	48 89 fb             	mov    %rdi,%rbx
  406174:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  40617b:	44 8b 87 90 00 00 00 	mov    0x90(%rdi),%r8d
  406182:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  406189:	00 00 
  40618b:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  406192:	00 
  406193:	31 c0                	xor    %eax,%eax
  406195:	45 85 c0             	test   %r8d,%r8d
  406198:	0f 88 fc 00 00 00    	js     40629a <caml_delete_global_root+0x12a>
  40619e:	44 89 c7             	mov    %r8d,%edi
  4061a1:	48 89 da             	mov    %rbx,%rdx
  4061a4:	0f 1f 40 00          	nopl   0x0(%rax)
  4061a8:	48 63 cf             	movslq %edi,%rcx
  4061ab:	eb 0b                	jmp    4061b8 <caml_delete_global_root+0x48>
  4061ad:	0f 1f 00             	nopl   (%rax)
  4061b0:	48 39 30             	cmp    %rsi,(%rax)
  4061b3:	73 0d                	jae    4061c2 <caml_delete_global_root+0x52>
  4061b5:	48 89 c2             	mov    %rax,%rdx
  4061b8:	48 8b 44 ca 08       	mov    0x8(%rdx,%rcx,8),%rax
  4061bd:	48 85 c0             	test   %rax,%rax
  4061c0:	75 ee                	jne    4061b0 <caml_delete_global_root+0x40>
  4061c2:	83 ef 01             	sub    $0x1,%edi
  4061c5:	48 89 14 cc          	mov    %rdx,(%rsp,%rcx,8)
  4061c9:	83 ff ff             	cmp    $0xffffffff,%edi
  4061cc:	75 da                	jne    4061a8 <caml_delete_global_root+0x38>
  4061ce:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
  4061d2:	48 85 ff             	test   %rdi,%rdi
  4061d5:	74 05                	je     4061dc <caml_delete_global_root+0x6c>
  4061d7:	48 3b 37             	cmp    (%rdi),%rsi
  4061da:	74 20                	je     4061fc <caml_delete_global_root+0x8c>
  4061dc:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
  4061e3:	00 
  4061e4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4061eb:	00 00 
  4061ed:	0f 85 af 00 00 00    	jne    4062a2 <caml_delete_global_root+0x132>
  4061f3:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  4061fa:	5b                   	pop    %rbx
  4061fb:	c3                   	retq   
  4061fc:	31 c9                	xor    %ecx,%ecx
  4061fe:	31 c0                	xor    %eax,%eax
  406200:	45 85 c0             	test   %r8d,%r8d
  406203:	79 1a                	jns    40621f <caml_delete_global_root+0xaf>
  406205:	eb 41                	jmp    406248 <caml_delete_global_root+0xd8>
  406207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40620e:	00 00 
  406210:	83 c0 01             	add    $0x1,%eax
  406213:	48 83 c1 08          	add    $0x8,%rcx
  406217:	39 83 90 00 00 00    	cmp    %eax,0x90(%rbx)
  40621d:	7c 29                	jl     406248 <caml_delete_global_root+0xd8>
  40621f:	48 8b 34 0c          	mov    (%rsp,%rcx,1),%rsi
  406223:	48 63 d0             	movslq %eax,%rdx
  406226:	48 8d 14 d6          	lea    (%rsi,%rdx,8),%rdx
  40622a:	48 3b 7a 08          	cmp    0x8(%rdx),%rdi
  40622e:	75 e0                	jne    406210 <caml_delete_global_root+0xa0>
  406230:	48 8b 74 0f 08       	mov    0x8(%rdi,%rcx,1),%rsi
  406235:	83 c0 01             	add    $0x1,%eax
  406238:	48 83 c1 08          	add    $0x8,%rcx
  40623c:	48 89 72 08          	mov    %rsi,0x8(%rdx)
  406240:	39 83 90 00 00 00    	cmp    %eax,0x90(%rbx)
  406246:	7d d7                	jge    40621f <caml_delete_global_root+0xaf>
  406248:	e8 a3 35 00 00       	callq  4097f0 <caml_stat_free>
  40624d:	8b 83 90 00 00 00    	mov    0x90(%rbx),%eax
  406253:	85 c0                	test   %eax,%eax
  406255:	7e 85                	jle    4061dc <caml_delete_global_root+0x6c>
  406257:	48 63 d0             	movslq %eax,%rdx
  40625a:	48 83 7c d3 08 00    	cmpq   $0x0,0x8(%rbx,%rdx,8)
  406260:	74 19                	je     40627b <caml_delete_global_root+0x10b>
  406262:	e9 75 ff ff ff       	jmpq   4061dc <caml_delete_global_root+0x6c>
  406267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40626e:	00 00 
  406270:	48 63 d0             	movslq %eax,%rdx
  406273:	48 83 7c d3 08 00    	cmpq   $0x0,0x8(%rbx,%rdx,8)
  406279:	75 14                	jne    40628f <caml_delete_global_root+0x11f>
  40627b:	83 e8 01             	sub    $0x1,%eax
  40627e:	75 f0                	jne    406270 <caml_delete_global_root+0x100>
  406280:	c7 83 90 00 00 00 00 	movl   $0x0,0x90(%rbx)
  406287:	00 00 00 
  40628a:	e9 4d ff ff ff       	jmpq   4061dc <caml_delete_global_root+0x6c>
  40628f:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
  406295:	e9 42 ff ff ff       	jmpq   4061dc <caml_delete_global_root+0x6c>
  40629a:	48 89 fa             	mov    %rdi,%rdx
  40629d:	e9 2c ff ff ff       	jmpq   4061ce <caml_delete_global_root+0x5e>
  4062a2:	e8 c9 b7 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  4062a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4062ae:	00 00 

00000000004062b0 <caml_register_global_root>:
  4062b0:	48 89 fe             	mov    %rdi,%rsi
  4062b3:	bf e0 ca 62 00       	mov    $0x62cae0,%edi
  4062b8:	e9 33 fd ff ff       	jmpq   405ff0 <caml_insert_global_root>
  4062bd:	0f 1f 00             	nopl   (%rax)

00000000004062c0 <caml_remove_global_root>:
  4062c0:	48 89 fe             	mov    %rdi,%rsi
  4062c3:	bf e0 ca 62 00       	mov    $0x62cae0,%edi
  4062c8:	e9 a3 fe ff ff       	jmpq   406170 <caml_delete_global_root>
  4062cd:	0f 1f 00             	nopl   (%rax)

00000000004062d0 <caml_register_generational_global_root>:
  4062d0:	53                   	push   %rbx
  4062d1:	48 8b 07             	mov    (%rdi),%rax
  4062d4:	a8 01                	test   $0x1,%al
  4062d6:	75 37                	jne    40630f <caml_register_generational_global_root+0x3f>
  4062d8:	48 3b 05 e9 6b 22 00 	cmp    0x226be9(%rip),%rax        # 62cec8 <caml_young_end>
  4062df:	73 1f                	jae    406300 <caml_register_generational_global_root+0x30>
  4062e1:	48 3b 05 e8 6b 22 00 	cmp    0x226be8(%rip),%rax        # 62ced0 <caml_young_start>
  4062e8:	76 16                	jbe    406300 <caml_register_generational_global_root+0x30>
  4062ea:	5b                   	pop    %rbx
  4062eb:	48 89 fe             	mov    %rdi,%rsi
  4062ee:	bf 40 ca 62 00       	mov    $0x62ca40,%edi
  4062f3:	e9 f8 fc ff ff       	jmpq   405ff0 <caml_insert_global_root>
  4062f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4062ff:	00 
  406300:	48 89 fb             	mov    %rdi,%rbx
  406303:	48 89 c7             	mov    %rax,%rdi
  406306:	e8 35 2a 00 00       	callq  408d40 <caml_page_table_lookup>
  40630b:	a8 01                	test   $0x1,%al
  40630d:	75 09                	jne    406318 <caml_register_generational_global_root+0x48>
  40630f:	5b                   	pop    %rbx
  406310:	c3                   	retq   
  406311:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  406318:	48 89 de             	mov    %rbx,%rsi
  40631b:	bf a0 c9 62 00       	mov    $0x62c9a0,%edi
  406320:	5b                   	pop    %rbx
  406321:	e9 ca fc ff ff       	jmpq   405ff0 <caml_insert_global_root>
  406326:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40632d:	00 00 00 

0000000000406330 <caml_remove_generational_global_root>:
  406330:	55                   	push   %rbp
  406331:	53                   	push   %rbx
  406332:	48 83 ec 08          	sub    $0x8,%rsp
  406336:	48 8b 2f             	mov    (%rdi),%rbp
  406339:	40 f6 c5 01          	test   $0x1,%bpl
  40633d:	74 11                	je     406350 <caml_remove_generational_global_root+0x20>
  40633f:	48 83 c4 08          	add    $0x8,%rsp
  406343:	5b                   	pop    %rbx
  406344:	5d                   	pop    %rbp
  406345:	c3                   	retq   
  406346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40634d:	00 00 00 
  406350:	48 89 fb             	mov    %rdi,%rbx
  406353:	48 89 ef             	mov    %rbp,%rdi
  406356:	e8 e5 29 00 00       	callq  408d40 <caml_page_table_lookup>
  40635b:	a8 03                	test   $0x3,%al
  40635d:	75 21                	jne    406380 <caml_remove_generational_global_root+0x50>
  40635f:	48 89 ef             	mov    %rbp,%rdi
  406362:	e8 d9 29 00 00       	callq  408d40 <caml_page_table_lookup>
  406367:	a8 01                	test   $0x1,%al
  406369:	74 d4                	je     40633f <caml_remove_generational_global_root+0xf>
  40636b:	48 83 c4 08          	add    $0x8,%rsp
  40636f:	48 89 de             	mov    %rbx,%rsi
  406372:	bf a0 c9 62 00       	mov    $0x62c9a0,%edi
  406377:	5b                   	pop    %rbx
  406378:	5d                   	pop    %rbp
  406379:	e9 f2 fd ff ff       	jmpq   406170 <caml_delete_global_root>
  40637e:	66 90                	xchg   %ax,%ax
  406380:	48 89 de             	mov    %rbx,%rsi
  406383:	bf 40 ca 62 00       	mov    $0x62ca40,%edi
  406388:	e8 e3 fd ff ff       	callq  406170 <caml_delete_global_root>
  40638d:	eb d0                	jmp    40635f <caml_remove_generational_global_root+0x2f>
  40638f:	90                   	nop

0000000000406390 <caml_modify_generational_global_root>:
  406390:	41 54                	push   %r12
  406392:	55                   	push   %rbp
  406393:	48 89 fd             	mov    %rdi,%rbp
  406396:	53                   	push   %rbx
  406397:	48 89 f3             	mov    %rsi,%rbx
  40639a:	83 e6 01             	and    $0x1,%esi
  40639d:	4c 8b 27             	mov    (%rdi),%r12
  4063a0:	75 46                	jne    4063e8 <caml_modify_generational_global_root+0x58>
  4063a2:	48 3b 1d 1f 6b 22 00 	cmp    0x226b1f(%rip),%rbx        # 62cec8 <caml_young_end>
  4063a9:	73 75                	jae    406420 <caml_modify_generational_global_root+0x90>
  4063ab:	48 3b 1d 1e 6b 22 00 	cmp    0x226b1e(%rip),%rbx        # 62ced0 <caml_young_start>
  4063b2:	0f 86 90 00 00 00    	jbe    406448 <caml_modify_generational_global_root+0xb8>
  4063b8:	41 f6 c4 01          	test   $0x1,%r12b
  4063bc:	0f 84 9e 00 00 00    	je     406460 <caml_modify_generational_global_root+0xd0>
  4063c2:	48 3b 1d 07 6b 22 00 	cmp    0x226b07(%rip),%rbx        # 62ced0 <caml_young_start>
  4063c9:	76 5b                	jbe    406426 <caml_modify_generational_global_root+0x96>
  4063cb:	48 89 ee             	mov    %rbp,%rsi
  4063ce:	bf 40 ca 62 00       	mov    $0x62ca40,%edi
  4063d3:	e8 18 fc ff ff       	callq  405ff0 <caml_insert_global_root>
  4063d8:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
  4063dc:	5b                   	pop    %rbx
  4063dd:	5d                   	pop    %rbp
  4063de:	41 5c                	pop    %r12
  4063e0:	c3                   	retq   
  4063e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4063e8:	41 f6 c4 01          	test   $0x1,%r12b
  4063ec:	75 ea                	jne    4063d8 <caml_modify_generational_global_root+0x48>
  4063ee:	4c 89 e7             	mov    %r12,%rdi
  4063f1:	e8 4a 29 00 00       	callq  408d40 <caml_page_table_lookup>
  4063f6:	a8 03                	test   $0x3,%al
  4063f8:	0f 85 92 00 00 00    	jne    406490 <caml_modify_generational_global_root+0x100>
  4063fe:	4c 89 e7             	mov    %r12,%rdi
  406401:	e8 3a 29 00 00       	callq  408d40 <caml_page_table_lookup>
  406406:	a8 01                	test   $0x1,%al
  406408:	74 ce                	je     4063d8 <caml_modify_generational_global_root+0x48>
  40640a:	48 89 ee             	mov    %rbp,%rsi
  40640d:	bf a0 c9 62 00       	mov    $0x62c9a0,%edi
  406412:	e8 59 fd ff ff       	callq  406170 <caml_delete_global_root>
  406417:	eb bf                	jmp    4063d8 <caml_modify_generational_global_root+0x48>
  406419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  406420:	41 83 e4 01          	and    $0x1,%r12d
  406424:	74 b2                	je     4063d8 <caml_modify_generational_global_root+0x48>
  406426:	48 89 df             	mov    %rbx,%rdi
  406429:	e8 12 29 00 00       	callq  408d40 <caml_page_table_lookup>
  40642e:	a8 01                	test   $0x1,%al
  406430:	74 a6                	je     4063d8 <caml_modify_generational_global_root+0x48>
  406432:	48 89 ee             	mov    %rbp,%rsi
  406435:	bf a0 c9 62 00       	mov    $0x62c9a0,%edi
  40643a:	e8 b1 fb ff ff       	callq  405ff0 <caml_insert_global_root>
  40643f:	eb 97                	jmp    4063d8 <caml_modify_generational_global_root+0x48>
  406441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  406448:	41 83 e4 01          	and    $0x1,%r12d
  40644c:	0f 85 70 ff ff ff    	jne    4063c2 <caml_modify_generational_global_root+0x32>
  406452:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
  406456:	5b                   	pop    %rbx
  406457:	5d                   	pop    %rbp
  406458:	41 5c                	pop    %r12
  40645a:	c3                   	retq   
  40645b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  406460:	4c 89 e7             	mov    %r12,%rdi
  406463:	e8 d8 28 00 00       	callq  408d40 <caml_page_table_lookup>
  406468:	a8 01                	test   $0x1,%al
  40646a:	0f 84 68 ff ff ff    	je     4063d8 <caml_modify_generational_global_root+0x48>
  406470:	48 89 ee             	mov    %rbp,%rsi
  406473:	bf a0 c9 62 00       	mov    $0x62c9a0,%edi
  406478:	e8 f3 fc ff ff       	callq  406170 <caml_delete_global_root>
  40647d:	48 89 ee             	mov    %rbp,%rsi
  406480:	bf 40 ca 62 00       	mov    $0x62ca40,%edi
  406485:	e8 66 fb ff ff       	callq  405ff0 <caml_insert_global_root>
  40648a:	e9 49 ff ff ff       	jmpq   4063d8 <caml_modify_generational_global_root+0x48>
  40648f:	90                   	nop
  406490:	48 89 ee             	mov    %rbp,%rsi
  406493:	bf 40 ca 62 00       	mov    $0x62ca40,%edi
  406498:	e8 d3 fc ff ff       	callq  406170 <caml_delete_global_root>
  40649d:	e9 5c ff ff ff       	jmpq   4063fe <caml_modify_generational_global_root+0x6e>
  4064a2:	0f 1f 40 00          	nopl   0x0(%rax)
  4064a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4064ad:	00 00 00 

00000000004064b0 <caml_scan_global_roots>:
  4064b0:	55                   	push   %rbp
  4064b1:	53                   	push   %rbx
  4064b2:	48 89 fd             	mov    %rdi,%rbp
  4064b5:	48 83 ec 08          	sub    $0x8,%rsp
  4064b9:	48 8b 1d 28 66 22 00 	mov    0x226628(%rip),%rbx        # 62cae8 <caml_global_roots+0x8>
  4064c0:	48 85 db             	test   %rbx,%rbx
  4064c3:	74 17                	je     4064dc <caml_scan_global_roots+0x2c>
  4064c5:	0f 1f 00             	nopl   (%rax)
  4064c8:	48 8b 03             	mov    (%rbx),%rax
  4064cb:	48 89 c6             	mov    %rax,%rsi
  4064ce:	48 8b 38             	mov    (%rax),%rdi
  4064d1:	ff d5                	callq  *%rbp
  4064d3:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  4064d7:	48 85 db             	test   %rbx,%rbx
  4064da:	75 ec                	jne    4064c8 <caml_scan_global_roots+0x18>
  4064dc:	48 8b 1d 65 65 22 00 	mov    0x226565(%rip),%rbx        # 62ca48 <caml_global_roots_young+0x8>
  4064e3:	48 85 db             	test   %rbx,%rbx
  4064e6:	74 1c                	je     406504 <caml_scan_global_roots+0x54>
  4064e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4064ef:	00 
  4064f0:	48 8b 03             	mov    (%rbx),%rax
  4064f3:	48 89 c6             	mov    %rax,%rsi
  4064f6:	48 8b 38             	mov    (%rax),%rdi
  4064f9:	ff d5                	callq  *%rbp
  4064fb:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  4064ff:	48 85 db             	test   %rbx,%rbx
  406502:	75 ec                	jne    4064f0 <caml_scan_global_roots+0x40>
  406504:	48 8b 1d 9d 64 22 00 	mov    0x22649d(%rip),%rbx        # 62c9a8 <caml_global_roots_old+0x8>
  40650b:	48 85 db             	test   %rbx,%rbx
  40650e:	74 14                	je     406524 <caml_scan_global_roots+0x74>
  406510:	48 8b 03             	mov    (%rbx),%rax
  406513:	48 89 c6             	mov    %rax,%rsi
  406516:	48 8b 38             	mov    (%rax),%rdi
  406519:	ff d5                	callq  *%rbp
  40651b:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  40651f:	48 85 db             	test   %rbx,%rbx
  406522:	75 ec                	jne    406510 <caml_scan_global_roots+0x60>
  406524:	48 83 c4 08          	add    $0x8,%rsp
  406528:	5b                   	pop    %rbx
  406529:	5d                   	pop    %rbp
  40652a:	c3                   	retq   
  40652b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000406530 <caml_scan_global_young_roots>:
  406530:	55                   	push   %rbp
  406531:	53                   	push   %rbx
  406532:	48 89 fd             	mov    %rdi,%rbp
  406535:	48 83 ec 08          	sub    $0x8,%rsp
  406539:	48 8b 1d a8 65 22 00 	mov    0x2265a8(%rip),%rbx        # 62cae8 <caml_global_roots+0x8>
  406540:	48 85 db             	test   %rbx,%rbx
  406543:	74 17                	je     40655c <caml_scan_global_young_roots+0x2c>
  406545:	0f 1f 00             	nopl   (%rax)
  406548:	48 8b 03             	mov    (%rbx),%rax
  40654b:	48 89 c6             	mov    %rax,%rsi
  40654e:	48 8b 38             	mov    (%rax),%rdi
  406551:	ff d5                	callq  *%rbp
  406553:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  406557:	48 85 db             	test   %rbx,%rbx
  40655a:	75 ec                	jne    406548 <caml_scan_global_young_roots+0x18>
  40655c:	48 8b 1d e5 64 22 00 	mov    0x2264e5(%rip),%rbx        # 62ca48 <caml_global_roots_young+0x8>
  406563:	48 85 db             	test   %rbx,%rbx
  406566:	74 61                	je     4065c9 <caml_scan_global_young_roots+0x99>
  406568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40656f:	00 
  406570:	48 8b 03             	mov    (%rbx),%rax
  406573:	48 89 c6             	mov    %rax,%rsi
  406576:	48 8b 38             	mov    (%rax),%rdi
  406579:	ff d5                	callq  *%rbp
  40657b:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  40657f:	48 85 db             	test   %rbx,%rbx
  406582:	75 ec                	jne    406570 <caml_scan_global_young_roots+0x40>
  406584:	48 8b 1d bd 64 22 00 	mov    0x2264bd(%rip),%rbx        # 62ca48 <caml_global_roots_young+0x8>
  40658b:	48 85 db             	test   %rbx,%rbx
  40658e:	74 39                	je     4065c9 <caml_scan_global_young_roots+0x99>
  406590:	48 8b 33             	mov    (%rbx),%rsi
  406593:	bf a0 c9 62 00       	mov    $0x62c9a0,%edi
  406598:	e8 53 fa ff ff       	callq  405ff0 <caml_insert_global_root>
  40659d:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  4065a1:	48 85 db             	test   %rbx,%rbx
  4065a4:	75 ea                	jne    406590 <caml_scan_global_young_roots+0x60>
  4065a6:	48 8b 3d 9b 64 22 00 	mov    0x22649b(%rip),%rdi        # 62ca48 <caml_global_roots_young+0x8>
  4065ad:	48 85 ff             	test   %rdi,%rdi
  4065b0:	74 17                	je     4065c9 <caml_scan_global_young_roots+0x99>
  4065b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4065b8:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  4065bc:	e8 2f 32 00 00       	callq  4097f0 <caml_stat_free>
  4065c1:	48 85 db             	test   %rbx,%rbx
  4065c4:	48 89 df             	mov    %rbx,%rdi
  4065c7:	75 ef                	jne    4065b8 <caml_scan_global_young_roots+0x88>
  4065c9:	8b 15 01 65 22 00    	mov    0x226501(%rip),%edx        # 62cad0 <caml_global_roots_young+0x90>
  4065cf:	31 c0                	xor    %eax,%eax
  4065d1:	85 d2                	test   %edx,%edx
  4065d3:	78 17                	js     4065ec <caml_scan_global_young_roots+0xbc>
  4065d5:	0f 1f 00             	nopl   (%rax)
  4065d8:	48 c7 04 c5 48 ca 62 	movq   $0x0,0x62ca48(,%rax,8)
  4065df:	00 00 00 00 00 
  4065e4:	48 83 c0 01          	add    $0x1,%rax
  4065e8:	39 c2                	cmp    %eax,%edx
  4065ea:	7d ec                	jge    4065d8 <caml_scan_global_young_roots+0xa8>
  4065ec:	c7 05 da 64 22 00 00 	movl   $0x0,0x2264da(%rip)        # 62cad0 <caml_global_roots_young+0x90>
  4065f3:	00 00 00 
  4065f6:	48 83 c4 08          	add    $0x8,%rsp
  4065fa:	5b                   	pop    %rbx
  4065fb:	5d                   	pop    %rbp
  4065fc:	c3                   	retq   
  4065fd:	0f 1f 00             	nopl   (%rax)

0000000000406600 <start_cycle>:
  406600:	48 83 ec 08          	sub    $0x8,%rsp
  406604:	31 d2                	xor    %edx,%edx
  406606:	be d0 d9 41 00       	mov    $0x41d9d0,%esi
  40660b:	bf 01 00 00 00       	mov    $0x1,%edi
  406610:	e8 9b 56 01 00       	callq  41bcb0 <caml_gc_message>
  406615:	e8 96 f9 ff ff       	callq  405fb0 <caml_darken_all_roots_start>
  40661a:	c7 05 e4 ad 23 00 00 	movl   $0x0,0x23ade4(%rip)        # 641408 <caml_gc_phase>
  406621:	00 00 00 
  406624:	c7 05 ba ad 23 00 0a 	movl   $0xa,0x23adba(%rip)        # 6413e8 <caml_gc_subphase>
  40662b:	00 00 00 
  40662e:	48 c7 05 4f 67 22 00 	movq   $0x0,0x22674f(%rip)        # 62cd88 <markhp>
  406635:	00 00 00 00 
  406639:	c7 05 2d 67 22 00 01 	movl   $0x1,0x22672d(%rip)        # 62cd70 <ephe_list_pure>
  406640:	00 00 00 
  406643:	48 c7 05 1a 67 22 00 	movq   $0x63d1c8,0x22671a(%rip)        # 62cd68 <ephes_checked_if_pure>
  40664a:	c8 d1 63 00 
  40664e:	48 c7 05 07 67 22 00 	movq   $0x63d1c8,0x226707(%rip)        # 62cd60 <ephes_to_check>
  406655:	c8 d1 63 00 
  406659:	48 83 c4 08          	add    $0x8,%rsp
  40665d:	c3                   	retq   
  40665e:	66 90                	xchg   %ax,%ax

0000000000406660 <init_sweep_phase>:
  406660:	48 83 ec 08          	sub    $0x8,%rsp
  406664:	48 8b 05 95 ad 23 00 	mov    0x23ad95(%rip),%rax        # 641400 <caml_heap_start>
  40666b:	48 89 05 9e ad 23 00 	mov    %rax,0x23ad9e(%rip)        # 641410 <caml_gc_sweep_hp>
  406672:	e8 69 51 01 00       	callq  41b7e0 <caml_fl_init_merge>
  406677:	48 8b 05 82 ad 23 00 	mov    0x23ad82(%rip),%rax        # 641400 <caml_heap_start>
  40667e:	c7 05 80 ad 23 00 02 	movl   $0x2,0x23ad80(%rip)        # 641408 <caml_gc_phase>
  406685:	00 00 00 
  406688:	48 89 05 f1 66 22 00 	mov    %rax,0x2266f1(%rip)        # 62cd80 <chunk>
  40668f:	48 89 05 7a ad 23 00 	mov    %rax,0x23ad7a(%rip)        # 641410 <caml_gc_sweep_hp>
  406696:	48 03 40 f0          	add    -0x10(%rax),%rax
  40669a:	48 89 05 d7 66 22 00 	mov    %rax,0x2266d7(%rip)        # 62cd78 <limit>
  4066a1:	48 8b 05 60 8d 23 00 	mov    0x238d60(%rip),%rax        # 63f408 <caml_fl_cur_wsz>
  4066a8:	48 89 05 e1 64 22 00 	mov    %rax,0x2264e1(%rip)        # 62cb90 <caml_fl_wsz_at_phase_change>
  4066af:	48 8b 05 ca 64 22 00 	mov    0x2264ca(%rip),%rax        # 62cb80 <caml_major_gc_hook>
  4066b6:	48 85 c0             	test   %rax,%rax
  4066b9:	74 0d                	je     4066c8 <init_sweep_phase+0x68>
  4066bb:	48 83 c4 08          	add    $0x8,%rsp
  4066bf:	ff e0                	jmpq   *%rax
  4066c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4066c8:	48 83 c4 08          	add    $0x8,%rsp
  4066cc:	c3                   	retq   
  4066cd:	0f 1f 00             	nopl   (%rax)

00000000004066d0 <clean_slice>:
  4066d0:	41 57                	push   %r15
  4066d2:	41 56                	push   %r14
  4066d4:	49 89 ff             	mov    %rdi,%r15
  4066d7:	41 55                	push   %r13
  4066d9:	41 54                	push   %r12
  4066db:	48 89 fa             	mov    %rdi,%rdx
  4066de:	55                   	push   %rbp
  4066df:	53                   	push   %rbx
  4066e0:	be ed d9 41 00       	mov    $0x41d9ed,%esi
  4066e5:	bf 40 00 00 00       	mov    $0x40,%edi
  4066ea:	48 83 ec 18          	sub    $0x18,%rsp
  4066ee:	e8 bd 55 01 00       	callq  41bcb0 <caml_gc_message>
  4066f3:	4d 85 ff             	test   %r15,%r15
  4066f6:	7e 2c                	jle    406724 <clean_slice+0x54>
  4066f8:	48 8b 05 61 66 22 00 	mov    0x226661(%rip),%rax        # 62cd60 <ephes_to_check>
  4066ff:	48 8b 28             	mov    (%rax),%rbp
  406702:	48 85 ed             	test   %rbp,%rbp
  406705:	74 31                	je     406738 <clean_slice+0x68>
  406707:	4c 8b 75 f8          	mov    -0x8(%rbp),%r14
  40670b:	41 f7 c6 00 03 00 00 	test   $0x300,%r14d
  406712:	75 3c                	jne    406750 <clean_slice+0x80>
  406714:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  406718:	49 83 ef 01          	sub    $0x1,%r15
  40671c:	4d 85 ff             	test   %r15,%r15
  40671f:	48 89 10             	mov    %rdx,(%rax)
  406722:	7f d4                	jg     4066f8 <clean_slice+0x28>
  406724:	48 83 c4 18          	add    $0x18,%rsp
  406728:	5b                   	pop    %rbx
  406729:	5d                   	pop    %rbp
  40672a:	41 5c                	pop    %r12
  40672c:	41 5d                	pop    %r13
  40672e:	41 5e                	pop    %r14
  406730:	41 5f                	pop    %r15
  406732:	c3                   	retq   
  406733:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  406738:	48 83 c4 18          	add    $0x18,%rsp
  40673c:	5b                   	pop    %rbx
  40673d:	5d                   	pop    %rbp
  40673e:	41 5c                	pop    %r12
  406740:	41 5d                	pop    %r13
  406742:	41 5e                	pop    %r14
  406744:	41 5f                	pop    %r15
  406746:	e9 15 ff ff ff       	jmpq   406660 <init_sweep_phase>
  40674b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  406750:	49 c1 ee 0a          	shr    $0xa,%r14
  406754:	49 83 fe 02          	cmp    $0x2,%r14
  406758:	4c 89 34 24          	mov    %r14,(%rsp)
  40675c:	0f 86 75 01 00 00    	jbe    4068d7 <clean_slice+0x207>
  406762:	48 8b 05 a7 60 22 00 	mov    0x2260a7(%rip),%rax        # 62c810 <caml_ephe_none>
  406769:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  406770:	00 
  406771:	bb 02 00 00 00       	mov    $0x2,%ebx
  406776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40677d:	00 00 00 
  406780:	4c 8b 74 dd 00       	mov    0x0(%rbp,%rbx,8),%r14
  406785:	eb 22                	jmp    4067a9 <clean_slice+0xd9>
  406787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40678e:	00 00 
  406790:	48 8d 48 10          	lea    0x10(%rax),%rcx
  406794:	48 89 0d 9d 66 22 00 	mov    %rcx,0x22669d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  40679b:	48 89 28             	mov    %rbp,(%rax)
  40679e:	48 89 58 08          	mov    %rbx,0x8(%rax)
  4067a2:	48 8b 05 67 60 22 00 	mov    0x226067(%rip),%rax        # 62c810 <caml_ephe_none>
  4067a9:	49 39 c6             	cmp    %rax,%r14
  4067ac:	0f 84 cd 00 00 00    	je     40687f <clean_slice+0x1af>
  4067b2:	41 f6 c6 01          	test   $0x1,%r14b
  4067b6:	0f 85 c3 00 00 00    	jne    40687f <clean_slice+0x1af>
  4067bc:	4c 89 f7             	mov    %r14,%rdi
  4067bf:	4d 89 f5             	mov    %r14,%r13
  4067c2:	e8 79 25 00 00       	callq  408d40 <caml_page_table_lookup>
  4067c7:	a8 03                	test   $0x3,%al
  4067c9:	0f 84 f1 00 00 00    	je     4068c0 <clean_slice+0x1f0>
  4067cf:	41 80 7e f8 fa       	cmpb   $0xfa,-0x8(%r14)
  4067d4:	4d 8d 66 f8          	lea    -0x8(%r14),%r12
  4067d8:	75 6e                	jne    406848 <clean_slice+0x178>
  4067da:	4d 8b 36             	mov    (%r14),%r14
  4067dd:	41 f6 c6 01          	test   $0x1,%r14b
  4067e1:	75 65                	jne    406848 <clean_slice+0x178>
  4067e3:	4c 89 f7             	mov    %r14,%rdi
  4067e6:	e8 55 25 00 00       	callq  408d40 <caml_page_table_lookup>
  4067eb:	a8 07                	test   $0x7,%al
  4067ed:	74 59                	je     406848 <clean_slice+0x178>
  4067ef:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
  4067f4:	8d 48 0a             	lea    0xa(%rax),%ecx
  4067f7:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  4067fd:	74 49                	je     406848 <clean_slice+0x178>
  4067ff:	3c fd                	cmp    $0xfd,%al
  406801:	74 45                	je     406848 <clean_slice+0x178>
  406803:	4c 89 74 dd 00       	mov    %r14,0x0(%rbp,%rbx,8)
  406808:	4c 3b 35 b9 66 22 00 	cmp    0x2266b9(%rip),%r14        # 62cec8 <caml_young_end>
  40680f:	73 91                	jae    4067a2 <clean_slice+0xd2>
  406811:	4c 3b 35 b8 66 22 00 	cmp    0x2266b8(%rip),%r14        # 62ced0 <caml_young_start>
  406818:	76 88                	jbe    4067a2 <clean_slice+0xd2>
  40681a:	48 8b 05 17 66 22 00 	mov    0x226617(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  406821:	48 3b 05 18 66 22 00 	cmp    0x226618(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  406828:	0f 82 62 ff ff ff    	jb     406790 <clean_slice+0xc0>
  40682e:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  406833:	e8 c8 22 00 00       	callq  408b00 <caml_realloc_ephe_ref_table>
  406838:	48 8b 05 f9 65 22 00 	mov    0x2265f9(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  40683f:	e9 4c ff ff ff       	jmpq   406790 <clean_slice+0xc0>
  406844:	0f 1f 40 00          	nopl   0x0(%rax)
  406848:	49 f7 04 24 00 03 00 	testq  $0x300,(%r12)
  40684f:	00 
  406850:	75 6e                	jne    4068c0 <clean_slice+0x1f0>
  406852:	4c 3b 2d 6f 66 22 00 	cmp    0x22666f(%rip),%r13        # 62cec8 <caml_young_end>
  406859:	48 8b 05 b0 5f 22 00 	mov    0x225fb0(%rip),%rax        # 62c810 <caml_ephe_none>
  406860:	73 09                	jae    40686b <clean_slice+0x19b>
  406862:	4c 3b 2d 67 66 22 00 	cmp    0x226667(%rip),%r13        # 62ced0 <caml_young_start>
  406869:	77 14                	ja     40687f <clean_slice+0x1af>
  40686b:	48 89 44 dd 00       	mov    %rax,0x0(%rbp,%rbx,8)
  406870:	48 8b 05 99 5f 22 00 	mov    0x225f99(%rip),%rax        # 62c810 <caml_ephe_none>
  406877:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
  40687e:	00 
  40687f:	48 83 c3 01          	add    $0x1,%rbx
  406883:	48 39 1c 24          	cmp    %rbx,(%rsp)
  406887:	0f 85 f3 fe ff ff    	jne    406780 <clean_slice+0xb0>
  40688d:	48 39 45 08          	cmp    %rax,0x8(%rbp)
  406891:	74 0c                	je     40689f <clean_slice+0x1cf>
  406893:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  406897:	85 d2                	test   %edx,%edx
  406899:	74 04                	je     40689f <clean_slice+0x1cf>
  40689b:	48 89 45 08          	mov    %rax,0x8(%rbp)
  40689f:	4c 8b 75 f8          	mov    -0x8(%rbp),%r14
  4068a3:	49 c1 ee 0a          	shr    $0xa,%r14
  4068a7:	49 f7 d6             	not    %r14
  4068aa:	48 89 2d af 64 22 00 	mov    %rbp,0x2264af(%rip)        # 62cd60 <ephes_to_check>
  4068b1:	4d 01 f7             	add    %r14,%r15
  4068b4:	e9 3a fe ff ff       	jmpq   4066f3 <clean_slice+0x23>
  4068b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4068c0:	48 83 c3 01          	add    $0x1,%rbx
  4068c4:	48 39 1c 24          	cmp    %rbx,(%rsp)
  4068c8:	48 8b 05 41 5f 22 00 	mov    0x225f41(%rip),%rax        # 62c810 <caml_ephe_none>
  4068cf:	0f 85 ab fe ff ff    	jne    406780 <clean_slice+0xb0>
  4068d5:	eb b6                	jmp    40688d <clean_slice+0x1bd>
  4068d7:	4c 8b 34 24          	mov    (%rsp),%r14
  4068db:	eb ca                	jmp    4068a7 <clean_slice+0x1d7>
  4068dd:	0f 1f 00             	nopl   (%rax)

00000000004068e0 <sweep_slice>:
  4068e0:	41 54                	push   %r12
  4068e2:	55                   	push   %rbp
  4068e3:	49 89 fc             	mov    %rdi,%r12
  4068e6:	53                   	push   %rbx
  4068e7:	48 89 fa             	mov    %rdi,%rdx
  4068ea:	be 01 da 41 00       	mov    $0x41da01,%esi
  4068ef:	bf 40 00 00 00       	mov    $0x40,%edi
  4068f4:	e8 b7 53 01 00       	callq  41bcb0 <caml_gc_message>
  4068f9:	4d 85 e4             	test   %r12,%r12
  4068fc:	7e 58                	jle    406956 <sweep_slice+0x76>
  4068fe:	66 90                	xchg   %ax,%ax
  406900:	48 8b 3d 09 ab 23 00 	mov    0x23ab09(%rip),%rdi        # 641410 <caml_gc_sweep_hp>
  406907:	48 3b 3d 6a 64 22 00 	cmp    0x22646a(%rip),%rdi        # 62cd78 <limit>
  40690e:	73 50                	jae    406960 <sweep_slice+0x80>
  406910:	48 8b 07             	mov    (%rdi),%rax
  406913:	48 89 c2             	mov    %rax,%rdx
  406916:	48 c1 ea 0a          	shr    $0xa,%rdx
  40691a:	48 89 d5             	mov    %rdx,%rbp
  40691d:	48 8d 54 d7 08       	lea    0x8(%rdi,%rdx,8),%rdx
  406922:	48 f7 d5             	not    %rbp
  406925:	48 89 15 e4 aa 23 00 	mov    %rdx,0x23aae4(%rip)        # 641410 <caml_gc_sweep_hp>
  40692c:	48 89 c2             	mov    %rax,%rdx
  40692f:	4c 01 e5             	add    %r12,%rbp
  406932:	81 e2 00 03 00 00    	and    $0x300,%edx
  406938:	49 89 ec             	mov    %rbp,%r12
  40693b:	74 63                	je     4069a0 <sweep_slice+0xc0>
  40693d:	48 81 fa 00 02 00 00 	cmp    $0x200,%rdx
  406944:	75 4a                	jne    406990 <sweep_slice+0xb0>
  406946:	48 83 c7 08          	add    $0x8,%rdi
  40694a:	48 89 3d 4f 5f 22 00 	mov    %rdi,0x225f4f(%rip)        # 62c8a0 <caml_fl_merge>
  406951:	48 85 ed             	test   %rbp,%rbp
  406954:	7f aa                	jg     406900 <sweep_slice+0x20>
  406956:	5b                   	pop    %rbx
  406957:	5d                   	pop    %rbp
  406958:	41 5c                	pop    %r12
  40695a:	c3                   	retq   
  40695b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  406960:	48 8b 05 19 64 22 00 	mov    0x226419(%rip),%rax        # 62cd80 <chunk>
  406967:	48 8b 40 f8          	mov    -0x8(%rax),%rax
  40696b:	48 85 c0             	test   %rax,%rax
  40696e:	48 89 05 0b 64 22 00 	mov    %rax,0x22640b(%rip)        # 62cd80 <chunk>
  406975:	74 69                	je     4069e0 <sweep_slice+0x100>
  406977:	48 89 05 92 aa 23 00 	mov    %rax,0x23aa92(%rip)        # 641410 <caml_gc_sweep_hp>
  40697e:	48 03 40 f0          	add    -0x10(%rax),%rax
  406982:	48 89 05 ef 63 22 00 	mov    %rax,0x2263ef(%rip)        # 62cd78 <limit>
  406989:	e9 72 ff ff ff       	jmpq   406900 <sweep_slice+0x20>
  40698e:	66 90                	xchg   %ax,%ax
  406990:	80 e4 fc             	and    $0xfc,%ah
  406993:	48 89 07             	mov    %rax,(%rdi)
  406996:	eb b9                	jmp    406951 <sweep_slice+0x71>
  406998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40699f:	00 
  4069a0:	0f b6 c0             	movzbl %al,%eax
  4069a3:	48 8d 5f 08          	lea    0x8(%rdi),%rbx
  4069a7:	3d ff 00 00 00       	cmp    $0xff,%eax
  4069ac:	74 12                	je     4069c0 <sweep_slice+0xe0>
  4069ae:	48 89 df             	mov    %rbx,%rdi
  4069b1:	e8 ba 4e 01 00       	callq  41b870 <caml_fl_merge_block>
  4069b6:	48 89 05 53 aa 23 00 	mov    %rax,0x23aa53(%rip)        # 641410 <caml_gc_sweep_hp>
  4069bd:	eb 92                	jmp    406951 <sweep_slice+0x71>
  4069bf:	90                   	nop
  4069c0:	48 8b 47 08          	mov    0x8(%rdi),%rax
  4069c4:	48 8d 5f 08          	lea    0x8(%rdi),%rbx
  4069c8:	48 8b 40 08          	mov    0x8(%rax),%rax
  4069cc:	48 85 c0             	test   %rax,%rax
  4069cf:	74 dd                	je     4069ae <sweep_slice+0xce>
  4069d1:	48 89 df             	mov    %rbx,%rdi
  4069d4:	ff d0                	callq  *%rax
  4069d6:	eb d6                	jmp    4069ae <sweep_slice+0xce>
  4069d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4069df:	00 
  4069e0:	5b                   	pop    %rbx
  4069e1:	48 83 05 1f e7 22 00 	addq   $0x1,0x22e71f(%rip)        # 635108 <caml_stat_major_collections>
  4069e8:	01 
  4069e9:	c7 05 15 aa 23 00 03 	movl   $0x3,0x23aa15(%rip)        # 641408 <caml_gc_phase>
  4069f0:	00 00 00 
  4069f3:	5d                   	pop    %rbp
  4069f4:	41 5c                	pop    %r12
  4069f6:	e9 a5 40 01 00       	jmpq   41aaa0 <caml_request_minor_gc>
  4069fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000406a00 <realloc_gray_vals>:
  406a00:	48 8b 0d f9 e6 22 00 	mov    0x22e6f9(%rip),%rcx        # 635100 <caml_stat_heap_wsz>
  406a07:	48 8b 15 8a 63 22 00 	mov    0x22638a(%rip),%rdx        # 62cd98 <gray_vals_size>
  406a0e:	48 8d 41 1f          	lea    0x1f(%rcx),%rax
  406a12:	48 85 c9             	test   %rcx,%rcx
  406a15:	48 0f 49 c1          	cmovns %rcx,%rax
  406a19:	48 c1 f8 05          	sar    $0x5,%rax
  406a1d:	48 39 d0             	cmp    %rdx,%rax
  406a20:	77 26                	ja     406a48 <realloc_gray_vals+0x48>
  406a22:	48 8b 05 87 63 22 00 	mov    0x226387(%rip),%rax        # 62cdb0 <gray_vals>
  406a29:	48 d1 ea             	shr    %rdx
  406a2c:	c7 05 5a 63 22 00 00 	movl   $0x0,0x22635a(%rip)        # 62cd90 <heap_is_pure>
  406a33:	00 00 00 
  406a36:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
  406a3a:	48 89 05 67 63 22 00 	mov    %rax,0x226367(%rip)        # 62cda8 <gray_vals_cur>
  406a41:	c3                   	retq   
  406a42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  406a48:	53                   	push   %rbx
  406a49:	48 c1 e2 03          	shl    $0x3,%rdx
  406a4d:	be f0 da 41 00       	mov    $0x41daf0,%esi
  406a52:	48 c1 ea 09          	shr    $0x9,%rdx
  406a56:	bf 08 00 00 00       	mov    $0x8,%edi
  406a5b:	e8 50 52 01 00       	callq  41bcb0 <caml_gc_message>
  406a60:	48 8b 1d 31 63 22 00 	mov    0x226331(%rip),%rbx        # 62cd98 <gray_vals_size>
  406a67:	48 8b 3d 42 63 22 00 	mov    0x226342(%rip),%rdi        # 62cdb0 <gray_vals>
  406a6e:	48 89 de             	mov    %rbx,%rsi
  406a71:	48 c1 e6 04          	shl    $0x4,%rsi
  406a75:	e8 86 b2 ff ff       	callq  401d00 <realloc@plt>
  406a7a:	48 85 c0             	test   %rax,%rax
  406a7d:	74 31                	je     406ab0 <realloc_gray_vals+0xb0>
  406a7f:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
  406a86:	00 
  406a87:	48 89 05 22 63 22 00 	mov    %rax,0x226322(%rip)        # 62cdb0 <gray_vals>
  406a8e:	48 01 db             	add    %rbx,%rbx
  406a91:	48 89 1d 00 63 22 00 	mov    %rbx,0x226300(%rip)        # 62cd98 <gray_vals_size>
  406a98:	48 01 d0             	add    %rdx,%rax
  406a9b:	48 89 05 06 63 22 00 	mov    %rax,0x226306(%rip)        # 62cda8 <gray_vals_cur>
  406aa2:	48 01 d0             	add    %rdx,%rax
  406aa5:	48 89 05 f4 62 22 00 	mov    %rax,0x2262f4(%rip)        # 62cda0 <gray_vals_end>
  406aac:	5b                   	pop    %rbx
  406aad:	c3                   	retq   
  406aae:	66 90                	xchg   %ax,%ax
  406ab0:	31 d2                	xor    %edx,%edx
  406ab2:	be 18 db 41 00       	mov    $0x41db18,%esi
  406ab7:	bf 08 00 00 00       	mov    $0x8,%edi
  406abc:	e8 ef 51 01 00       	callq  41bcb0 <caml_gc_message>
  406ac1:	48 8b 05 e8 62 22 00 	mov    0x2262e8(%rip),%rax        # 62cdb0 <gray_vals>
  406ac8:	c7 05 be 62 22 00 00 	movl   $0x0,0x2262be(%rip)        # 62cd90 <heap_is_pure>
  406acf:	00 00 00 
  406ad2:	5b                   	pop    %rbx
  406ad3:	48 89 05 ce 62 22 00 	mov    %rax,0x2262ce(%rip)        # 62cda8 <gray_vals_cur>
  406ada:	c3                   	retq   
  406adb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000406ae0 <mark_slice>:
  406ae0:	41 57                	push   %r15
  406ae2:	41 56                	push   %r14
  406ae4:	48 89 fa             	mov    %rdi,%rdx
  406ae7:	41 55                	push   %r13
  406ae9:	41 54                	push   %r12
  406aeb:	be 15 da 41 00       	mov    $0x41da15,%esi
  406af0:	55                   	push   %rbp
  406af1:	53                   	push   %rbx
  406af2:	48 89 fb             	mov    %rdi,%rbx
  406af5:	48 83 ec 48          	sub    $0x48,%rsp
  406af9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  406afe:	bf 40 00 00 00       	mov    $0x40,%edi
  406b03:	e8 a8 51 01 00       	callq  41bcb0 <caml_gc_message>
  406b08:	48 63 15 d9 a8 23 00 	movslq 0x23a8d9(%rip),%rdx        # 6413e8 <caml_gc_subphase>
  406b0f:	be 28 da 41 00       	mov    $0x41da28,%esi
  406b14:	bf 40 00 00 00       	mov    $0x40,%edi
  406b19:	e8 92 51 01 00       	callq  41bcb0 <caml_gc_message>
  406b1e:	48 85 db             	test   %rbx,%rbx
  406b21:	4c 8b 2d 80 62 22 00 	mov    0x226280(%rip),%r13        # 62cda8 <gray_vals_cur>
  406b28:	4c 8b 3d 29 62 22 00 	mov    0x226229(%rip),%r15        # 62cd58 <current_value>
  406b2f:	4c 8b 35 1a 62 22 00 	mov    0x22621a(%rip),%r14        # 62cd50 <current_index>
  406b36:	0f 8e 7f 01 00 00    	jle    406cbb <mark_slice+0x1db>
  406b3c:	4d 85 ff             	test   %r15,%r15
  406b3f:	75 6e                	jne    406baf <mark_slice+0xcf>
  406b41:	4c 39 2d 68 62 22 00 	cmp    %r13,0x226268(%rip)        # 62cdb0 <gray_vals>
  406b48:	0f 83 92 01 00 00    	jae    406ce0 <mark_slice+0x200>
  406b4e:	49 8b 45 f8          	mov    -0x8(%r13),%rax
  406b52:	49 8d 5d f8          	lea    -0x8(%r13),%rbx
  406b56:	48 85 c0             	test   %rax,%rax
  406b59:	0f 85 11 06 00 00    	jne    407170 <mark_slice+0x690>
  406b5f:	48 8b 05 22 62 22 00 	mov    0x226222(%rip),%rax        # 62cd88 <markhp>
  406b66:	48 85 c0             	test   %rax,%rax
  406b69:	0f 84 84 01 00 00    	je     406cf3 <mark_slice+0x213>
  406b6f:	48 3b 05 02 62 22 00 	cmp    0x226202(%rip),%rax        # 62cd78 <limit>
  406b76:	0f 84 a4 02 00 00    	je     406e20 <mark_slice+0x340>
  406b7c:	48 8b 10             	mov    (%rax),%rdx
  406b7f:	48 8d 70 08          	lea    0x8(%rax),%rsi
  406b83:	49 89 dd             	mov    %rbx,%r13
  406b86:	48 89 d7             	mov    %rdx,%rdi
  406b89:	81 e7 00 03 00 00    	and    $0x300,%edi
  406b8f:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
  406b96:	4c 0f 44 fe          	cmove  %rsi,%r15
  406b9a:	48 c1 ea 0a          	shr    $0xa,%rdx
  406b9e:	48 8d 44 d0 08       	lea    0x8(%rax,%rdx,8),%rax
  406ba3:	4d 85 ff             	test   %r15,%r15
  406ba6:	48 89 05 db 61 22 00 	mov    %rax,0x2261db(%rip)        # 62cd88 <markhp>
  406bad:	74 92                	je     406b41 <mark_slice+0x61>
  406baf:	49 8d 47 f8          	lea    -0x8(%r15),%rax
  406bb3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  406bb8:	49 8b 47 f8          	mov    -0x8(%r15),%rax
  406bbc:	48 89 c1             	mov    %rax,%rcx
  406bbf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  406bc4:	48 c1 e9 0a          	shr    $0xa,%rcx
  406bc8:	3c fa                	cmp    $0xfa,%al
  406bca:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
  406bcf:	0f 87 a3 01 00 00    	ja     406d78 <mark_slice+0x298>
  406bd5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  406bda:	4c 39 f1             	cmp    %r14,%rcx
  406bdd:	48 89 ce             	mov    %rcx,%rsi
  406be0:	49 0f 47 f6          	cmova  %r14,%rsi
  406be4:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  406be9:	4e 8d 04 32          	lea    (%rdx,%r14,1),%r8
  406bed:	4c 39 c1             	cmp    %r8,%rcx
  406bf0:	4c 0f 46 c1          	cmovbe %rcx,%r8
  406bf4:	4c 39 c6             	cmp    %r8,%rsi
  406bf7:	4d 89 c6             	mov    %r8,%r14
  406bfa:	0f 83 b0 00 00 00    	jae    406cb0 <mark_slice+0x1d0>
  406c00:	48 89 f3             	mov    %rsi,%rbx
  406c03:	eb 10                	jmp    406c15 <mark_slice+0x135>
  406c05:	0f 1f 00             	nopl   (%rax)
  406c08:	48 83 c3 01          	add    $0x1,%rbx
  406c0c:	49 39 de             	cmp    %rbx,%r14
  406c0f:	0f 84 9b 00 00 00    	je     406cb0 <mark_slice+0x1d0>
  406c15:	48 63 c3             	movslq %ebx,%rax
  406c18:	4d 8d 24 c7          	lea    (%r15,%rax,8),%r12
  406c1c:	49 8b 2c 24          	mov    (%r12),%rbp
  406c20:	40 f6 c5 01          	test   $0x1,%bpl
  406c24:	75 e2                	jne    406c08 <mark_slice+0x128>
  406c26:	48 89 ef             	mov    %rbp,%rdi
  406c29:	e8 12 21 00 00       	callq  408d40 <caml_page_table_lookup>
  406c2e:	a8 01                	test   $0x1,%al
  406c30:	74 d6                	je     406c08 <mark_slice+0x128>
  406c32:	4c 8b 4d f8          	mov    -0x8(%rbp),%r9
  406c36:	41 0f b6 c1          	movzbl %r9b,%eax
  406c3a:	3d fa 00 00 00       	cmp    $0xfa,%eax
  406c3f:	0f 84 6b 01 00 00    	je     406db0 <mark_slice+0x2d0>
  406c45:	3d f9 00 00 00       	cmp    $0xf9,%eax
  406c4a:	0f 84 b0 01 00 00    	je     406e00 <mark_slice+0x320>
  406c50:	41 f7 c1 00 03 00 00 	test   $0x300,%r9d
  406c57:	75 af                	jne    406c08 <mark_slice+0x128>
  406c59:	49 81 e1 ff fc ff ff 	and    $0xfffffffffffffcff,%r9
  406c60:	49 83 c5 08          	add    $0x8,%r13
  406c64:	c7 05 02 61 22 00 00 	movl   $0x0,0x226102(%rip)        # 62cd70 <ephe_list_pure>
  406c6b:	00 00 00 
  406c6e:	49 81 c9 00 01 00 00 	or     $0x100,%r9
  406c75:	4c 89 4d f8          	mov    %r9,-0x8(%rbp)
  406c79:	49 89 6d f8          	mov    %rbp,-0x8(%r13)
  406c7d:	4c 3b 2d 1c 61 22 00 	cmp    0x22611c(%rip),%r13        # 62cda0 <gray_vals_end>
  406c84:	72 82                	jb     406c08 <mark_slice+0x128>
  406c86:	48 83 c3 01          	add    $0x1,%rbx
  406c8a:	4c 89 2d 17 61 22 00 	mov    %r13,0x226117(%rip)        # 62cda8 <gray_vals_cur>
  406c91:	e8 6a fd ff ff       	callq  406a00 <realloc_gray_vals>
  406c96:	49 39 de             	cmp    %rbx,%r14
  406c99:	4c 8b 2d 08 61 22 00 	mov    0x226108(%rip),%r13        # 62cda8 <gray_vals_cur>
  406ca0:	0f 85 6f ff ff ff    	jne    406c15 <mark_slice+0x135>
  406ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  406cad:	00 00 00 
  406cb0:	4c 39 74 24 10       	cmp    %r14,0x10(%rsp)
  406cb5:	0f 86 15 01 00 00    	jbe    406dd0 <mark_slice+0x2f0>
  406cbb:	4c 89 2d e6 60 22 00 	mov    %r13,0x2260e6(%rip)        # 62cda8 <gray_vals_cur>
  406cc2:	4c 89 3d 8f 60 22 00 	mov    %r15,0x22608f(%rip)        # 62cd58 <current_value>
  406cc9:	4c 89 35 80 60 22 00 	mov    %r14,0x226080(%rip)        # 62cd50 <current_index>
  406cd0:	48 83 c4 48          	add    $0x48,%rsp
  406cd4:	5b                   	pop    %rbx
  406cd5:	5d                   	pop    %rbp
  406cd6:	41 5c                	pop    %r12
  406cd8:	41 5d                	pop    %r13
  406cda:	41 5e                	pop    %r14
  406cdc:	41 5f                	pop    %r15
  406cde:	c3                   	retq   
  406cdf:	90                   	nop
  406ce0:	48 8b 05 a1 60 22 00 	mov    0x2260a1(%rip),%rax        # 62cd88 <markhp>
  406ce7:	4c 89 eb             	mov    %r13,%rbx
  406cea:	48 85 c0             	test   %rax,%rax
  406ced:	0f 85 7c fe ff ff    	jne    406b6f <mark_slice+0x8f>
  406cf3:	8b 15 97 60 22 00    	mov    0x226097(%rip),%edx        # 62cd90 <heap_is_pure>
  406cf9:	85 d2                	test   %edx,%edx
  406cfb:	0f 84 57 01 00 00    	je     406e58 <mark_slice+0x378>
  406d01:	8b 35 e1 a6 23 00    	mov    0x23a6e1(%rip),%esi        # 6413e8 <caml_gc_subphase>
  406d07:	83 fe 0a             	cmp    $0xa,%esi
  406d0a:	0f 84 9a 02 00 00    	je     406faa <mark_slice+0x4ca>
  406d10:	48 8b 05 49 60 22 00 	mov    0x226049(%rip),%rax        # 62cd60 <ephes_to_check>
  406d17:	4c 8b 28             	mov    (%rax),%r13
  406d1a:	4d 85 ed             	test   %r13,%r13
  406d1d:	0f 85 27 02 00 00    	jne    406f4a <mark_slice+0x46a>
  406d23:	8b 05 47 60 22 00    	mov    0x226047(%rip),%eax        # 62cd70 <ephe_list_pure>
  406d29:	85 c0                	test   %eax,%eax
  406d2b:	0f 84 dc 01 00 00    	je     406f0d <mark_slice+0x42d>
  406d31:	83 fe 0b             	cmp    $0xb,%esi
  406d34:	0f 84 a5 02 00 00    	je     406fdf <mark_slice+0x4ff>
  406d3a:	83 fe 0c             	cmp    $0xc,%esi
  406d3d:	0f 85 0a 01 00 00    	jne    406e4d <mark_slice+0x36d>
  406d43:	c7 05 bb a6 23 00 01 	movl   $0x1,0x23a6bb(%rip)        # 641408 <caml_gc_phase>
  406d4a:	00 00 00 
  406d4d:	e8 0e 18 01 00       	callq  418560 <caml_final_update_clean_phase>
  406d52:	48 83 3d 6e 64 23 00 	cmpq   $0x0,0x23646e(%rip)        # 63d1c8 <caml_ephe_list_head>
  406d59:	00 
  406d5a:	0f 84 fa 03 00 00    	je     40715a <mark_slice+0x67a>
  406d60:	48 c7 05 f5 5f 22 00 	movq   $0x63d1c8,0x225ff5(%rip)        # 62cd60 <ephes_to_check>
  406d67:	c8 d1 63 00 
  406d6b:	49 89 dd             	mov    %rbx,%r13
  406d6e:	e9 48 ff ff ff       	jmpq   406cbb <mark_slice+0x1db>
  406d73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  406d78:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
  406d7d:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
  406d82:	49 83 ec 01          	sub    $0x1,%r12
  406d86:	4c 2b 64 24 10       	sub    0x10(%rsp),%r12
  406d8b:	48 81 cd 00 03 00 00 	or     $0x300,%rbp
  406d92:	49 89 6f f8          	mov    %rbp,-0x8(%r15)
  406d96:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
  406d9b:	45 31 ff             	xor    %r15d,%r15d
  406d9e:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
  406da4:	0f 8f 97 fd ff ff    	jg     406b41 <mark_slice+0x61>
  406daa:	e9 0c ff ff ff       	jmpq   406cbb <mark_slice+0x1db>
  406daf:	90                   	nop
  406db0:	4c 8b 5d 00          	mov    0x0(%rbp),%r11
  406db4:	41 f6 c3 01          	test   $0x1,%r11b
  406db8:	0f 84 ba 00 00 00    	je     406e78 <mark_slice+0x398>
  406dbe:	4d 89 1c 24          	mov    %r11,(%r12)
  406dc2:	e9 89 fe ff ff       	jmpq   406c50 <mark_slice+0x170>
  406dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  406dce:	00 00 
  406dd0:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
  406dd5:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  406dda:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  406ddf:	48 81 cd 00 03 00 00 	or     $0x300,%rbp
  406de6:	48 89 28             	mov    %rbp,(%rax)
  406de9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  406dee:	4c 8d 64 10 ff       	lea    -0x1(%rax,%rdx,1),%r12
  406df3:	4d 29 f4             	sub    %r14,%r12
  406df6:	45 31 f6             	xor    %r14d,%r14d
  406df9:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
  406dfe:	eb 9b                	jmp    406d9b <mark_slice+0x2bb>
  406e00:	49 c1 e9 0a          	shr    $0xa,%r9
  406e04:	48 89 ea             	mov    %rbp,%rdx
  406e07:	49 c1 e1 03          	shl    $0x3,%r9
  406e0b:	4c 29 ca             	sub    %r9,%rdx
  406e0e:	48 89 d5             	mov    %rdx,%rbp
  406e11:	4c 8b 4a f8          	mov    -0x8(%rdx),%r9
  406e15:	e9 36 fe ff ff       	jmpq   406c50 <mark_slice+0x170>
  406e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  406e20:	48 8b 05 59 5f 22 00 	mov    0x225f59(%rip),%rax        # 62cd80 <chunk>
  406e27:	48 8b 40 f8          	mov    -0x8(%rax),%rax
  406e2b:	48 85 c0             	test   %rax,%rax
  406e2e:	48 89 05 4b 5f 22 00 	mov    %rax,0x225f4b(%rip)        # 62cd80 <chunk>
  406e35:	0f 84 5c 01 00 00    	je     406f97 <mark_slice+0x4b7>
  406e3b:	48 89 05 46 5f 22 00 	mov    %rax,0x225f46(%rip)        # 62cd88 <markhp>
  406e42:	48 03 40 f0          	add    -0x10(%rax),%rax
  406e46:	48 89 05 2b 5f 22 00 	mov    %rax,0x225f2b(%rip)        # 62cd78 <limit>
  406e4d:	49 89 dd             	mov    %rbx,%r13
  406e50:	e9 ec fc ff ff       	jmpq   406b41 <mark_slice+0x61>
  406e55:	0f 1f 00             	nopl   (%rax)
  406e58:	48 8b 05 a1 a5 23 00 	mov    0x23a5a1(%rip),%rax        # 641400 <caml_heap_start>
  406e5f:	c7 05 27 5f 22 00 01 	movl   $0x1,0x225f27(%rip)        # 62cd90 <heap_is_pure>
  406e66:	00 00 00 
  406e69:	48 89 05 10 5f 22 00 	mov    %rax,0x225f10(%rip)        # 62cd80 <chunk>
  406e70:	eb c9                	jmp    406e3b <mark_slice+0x35b>
  406e72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  406e78:	4c 89 df             	mov    %r11,%rdi
  406e7b:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
  406e80:	4c 89 5c 24 38       	mov    %r11,0x38(%rsp)
  406e85:	e8 b6 1e 00 00       	callq  408d40 <caml_page_table_lookup>
  406e8a:	a8 07                	test   $0x7,%al
  406e8c:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
  406e91:	0f 84 b9 fd ff ff    	je     406c50 <mark_slice+0x170>
  406e97:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
  406e9c:	41 0f b6 43 f8       	movzbl -0x8(%r11),%eax
  406ea1:	8d 78 0a             	lea    0xa(%rax),%edi
  406ea4:	81 e7 fb 00 00 00    	and    $0xfb,%edi
  406eaa:	0f 84 a0 fd ff ff    	je     406c50 <mark_slice+0x170>
  406eb0:	3c fd                	cmp    $0xfd,%al
  406eb2:	0f 84 98 fd ff ff    	je     406c50 <mark_slice+0x170>
  406eb8:	4d 89 1c 24          	mov    %r11,(%r12)
  406ebc:	48 8b 05 05 60 22 00 	mov    0x226005(%rip),%rax        # 62cec8 <caml_young_end>
  406ec3:	49 39 c3             	cmp    %rax,%r11
  406ec6:	0f 83 84 fd ff ff    	jae    406c50 <mark_slice+0x170>
  406ecc:	48 8b 3d fd 5f 22 00 	mov    0x225ffd(%rip),%rdi        # 62ced0 <caml_young_start>
  406ed3:	49 39 fb             	cmp    %rdi,%r11
  406ed6:	0f 86 74 fd ff ff    	jbe    406c50 <mark_slice+0x170>
  406edc:	48 39 c5             	cmp    %rax,%rbp
  406edf:	73 09                	jae    406eea <mark_slice+0x40a>
  406ee1:	48 39 fd             	cmp    %rdi,%rbp
  406ee4:	0f 87 66 fd ff ff    	ja     406c50 <mark_slice+0x170>
  406eea:	48 8b 05 87 5f 22 00 	mov    0x225f87(%rip),%rax        # 62ce78 <caml_ref_table+0x18>
  406ef1:	48 3b 05 88 5f 22 00 	cmp    0x225f88(%rip),%rax        # 62ce80 <caml_ref_table+0x20>
  406ef8:	73 33                	jae    406f2d <mark_slice+0x44d>
  406efa:	48 8d 78 08          	lea    0x8(%rax),%rdi
  406efe:	48 89 3d 73 5f 22 00 	mov    %rdi,0x225f73(%rip)        # 62ce78 <caml_ref_table+0x18>
  406f05:	4c 89 20             	mov    %r12,(%rax)
  406f08:	e9 43 fd ff ff       	jmpq   406c50 <mark_slice+0x170>
  406f0d:	48 8b 05 54 5e 22 00 	mov    0x225e54(%rip),%rax        # 62cd68 <ephes_checked_if_pure>
  406f14:	c7 05 52 5e 22 00 01 	movl   $0x1,0x225e52(%rip)        # 62cd70 <ephe_list_pure>
  406f1b:	00 00 00 
  406f1e:	49 89 dd             	mov    %rbx,%r13
  406f21:	48 89 05 38 5e 22 00 	mov    %rax,0x225e38(%rip)        # 62cd60 <ephes_to_check>
  406f28:	e9 14 fc ff ff       	jmpq   406b41 <mark_slice+0x61>
  406f2d:	bf 60 ce 62 00       	mov    $0x62ce60,%edi
  406f32:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
  406f37:	e8 a4 1b 00 00       	callq  408ae0 <caml_realloc_ref_table>
  406f3c:	48 8b 05 35 5f 22 00 	mov    0x225f35(%rip),%rax        # 62ce78 <caml_ref_table+0x18>
  406f43:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
  406f48:	eb b0                	jmp    406efa <mark_slice+0x41a>
  406f4a:	49 8b 6d 08          	mov    0x8(%r13),%rbp
  406f4e:	48 3b 2d bb 58 22 00 	cmp    0x2258bb(%rip),%rbp        # 62c810 <caml_ephe_none>
  406f55:	74 0a                	je     406f61 <mark_slice+0x481>
  406f57:	40 f6 c5 01          	test   $0x1,%bpl
  406f5b:	0f 84 bf 00 00 00    	je     407020 <mark_slice+0x540>
  406f61:	48 83 6c 24 08 01    	subq   $0x1,0x8(%rsp)
  406f67:	48 8b 0d fa 5d 22 00 	mov    0x225dfa(%rip),%rcx        # 62cd68 <ephes_checked_if_pure>
  406f6e:	48 39 c1             	cmp    %rax,%rcx
  406f71:	0f 84 f0 01 00 00    	je     407167 <mark_slice+0x687>
  406f77:	49 8b 75 00          	mov    0x0(%r13),%rsi
  406f7b:	4c 89 2d e6 5d 22 00 	mov    %r13,0x225de6(%rip)        # 62cd68 <ephes_checked_if_pure>
  406f82:	48 89 30             	mov    %rsi,(%rax)
  406f85:	48 8b 01             	mov    (%rcx),%rax
  406f88:	49 89 45 00          	mov    %rax,0x0(%r13)
  406f8c:	4c 89 29             	mov    %r13,(%rcx)
  406f8f:	49 89 dd             	mov    %rbx,%r13
  406f92:	e9 04 fe ff ff       	jmpq   406d9b <mark_slice+0x2bb>
  406f97:	48 c7 05 e6 5d 22 00 	movq   $0x0,0x225de6(%rip)        # 62cd88 <markhp>
  406f9e:	00 00 00 00 
  406fa2:	49 89 dd             	mov    %rbx,%r13
  406fa5:	e9 97 fb ff ff       	jmpq   406b41 <mark_slice+0x61>
  406faa:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  406faf:	48 89 1d f2 5d 22 00 	mov    %rbx,0x225df2(%rip)        # 62cda8 <gray_vals_cur>
  406fb6:	e8 d5 eb ff ff       	callq  405b90 <caml_darken_all_roots_slice>
  406fbb:	48 85 c0             	test   %rax,%rax
  406fbe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  406fc3:	4c 8b 2d de 5d 22 00 	mov    0x225dde(%rip),%r13        # 62cda8 <gray_vals_cur>
  406fca:	0f 8e eb fc ff ff    	jle    406cbb <mark_slice+0x1db>
  406fd0:	c7 05 0e a4 23 00 0b 	movl   $0xb,0x23a40e(%rip)        # 6413e8 <caml_gc_subphase>
  406fd7:	00 00 00 
  406fda:	e9 62 fb ff ff       	jmpq   406b41 <mark_slice+0x61>
  406fdf:	48 89 1d c2 5d 22 00 	mov    %rbx,0x225dc2(%rip)        # 62cda8 <gray_vals_cur>
  406fe6:	e8 65 15 01 00       	callq  418550 <caml_final_update_mark_phase>
  406feb:	4c 8b 2d b6 5d 22 00 	mov    0x225db6(%rip),%r13        # 62cda8 <gray_vals_cur>
  406ff2:	4c 3b 2d b7 5d 22 00 	cmp    0x225db7(%rip),%r13        # 62cdb0 <gray_vals>
  406ff9:	76 08                	jbe    407003 <mark_slice+0x523>
  406ffb:	4d 8b 7d f8          	mov    -0x8(%r13),%r15
  406fff:	49 83 ed 08          	sub    $0x8,%r13
  407003:	48 8b 05 5e 5d 22 00 	mov    0x225d5e(%rip),%rax        # 62cd68 <ephes_checked_if_pure>
  40700a:	c7 05 d4 a3 23 00 0c 	movl   $0xc,0x23a3d4(%rip)        # 6413e8 <caml_gc_subphase>
  407011:	00 00 00 
  407014:	48 89 05 45 5d 22 00 	mov    %rax,0x225d45(%rip)        # 62cd60 <ephes_to_check>
  40701b:	e9 1c fb ff ff       	jmpq   406b3c <mark_slice+0x5c>
  407020:	48 89 ef             	mov    %rbp,%rdi
  407023:	4d 8b 65 f8          	mov    -0x8(%r13),%r12
  407027:	e8 14 1d 00 00       	callq  408d40 <caml_page_table_lookup>
  40702c:	a8 01                	test   $0x1,%al
  40702e:	0f 84 1a 01 00 00    	je     40714e <mark_slice+0x66e>
  407034:	48 f7 45 f8 00 03 00 	testq  $0x300,-0x8(%rbp)
  40703b:	00 
  40703c:	0f 85 0c 01 00 00    	jne    40714e <mark_slice+0x66e>
  407042:	4c 89 e0             	mov    %r12,%rax
  407045:	49 c1 ec 0a          	shr    $0xa,%r12
  407049:	bd 02 00 00 00       	mov    $0x2,%ebp
  40704e:	25 00 03 00 00       	and    $0x300,%eax
  407053:	49 83 fc 02          	cmp    $0x2,%r12
  407057:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40705c:	0f 86 93 00 00 00    	jbe    4070f5 <mark_slice+0x615>
  407062:	48 85 c0             	test   %rax,%rax
  407065:	0f 84 8a 00 00 00    	je     4070f5 <mark_slice+0x615>
  40706b:	4d 8b 7c ed 00       	mov    0x0(%r13,%rbp,8),%r15
  407070:	4c 3b 3d 99 57 22 00 	cmp    0x225799(%rip),%r15        # 62c810 <caml_ephe_none>
  407077:	74 6f                	je     4070e8 <mark_slice+0x608>
  407079:	41 f6 c7 01          	test   $0x1,%r15b
  40707d:	74 5d                	je     4070dc <mark_slice+0x5fc>
  40707f:	eb 67                	jmp    4070e8 <mark_slice+0x608>
  407081:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  407088:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
  40708d:	49 8d 4f f8          	lea    -0x8(%r15),%rcx
  407091:	0f 85 8d 00 00 00    	jne    407124 <mark_slice+0x644>
  407097:	4d 8b 3f             	mov    (%r15),%r15
  40709a:	41 f6 c7 01          	test   $0x1,%r15b
  40709e:	0f 85 80 00 00 00    	jne    407124 <mark_slice+0x644>
  4070a4:	4c 89 ff             	mov    %r15,%rdi
  4070a7:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
  4070ac:	e8 8f 1c 00 00       	callq  408d40 <caml_page_table_lookup>
  4070b1:	a8 07                	test   $0x7,%al
  4070b3:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
  4070b8:	74 6a                	je     407124 <mark_slice+0x644>
  4070ba:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  4070bf:	8d 70 0a             	lea    0xa(%rax),%esi
  4070c2:	81 e6 fb 00 00 00    	and    $0xfb,%esi
  4070c8:	74 5a                	je     407124 <mark_slice+0x644>
  4070ca:	3c fd                	cmp    $0xfd,%al
  4070cc:	74 56                	je     407124 <mark_slice+0x644>
  4070ce:	4d 89 7c ed 00       	mov    %r15,0x0(%r13,%rbp,8)
  4070d3:	4c 39 3d 36 57 22 00 	cmp    %r15,0x225736(%rip)        # 62c810 <caml_ephe_none>
  4070da:	74 0c                	je     4070e8 <mark_slice+0x608>
  4070dc:	4c 89 ff             	mov    %r15,%rdi
  4070df:	e8 5c 1c 00 00       	callq  408d40 <caml_page_table_lookup>
  4070e4:	a8 01                	test   $0x1,%al
  4070e6:	75 a0                	jne    407088 <mark_slice+0x5a8>
  4070e8:	48 83 c5 01          	add    $0x1,%rbp
  4070ec:	49 39 ec             	cmp    %rbp,%r12
  4070ef:	0f 87 76 ff ff ff    	ja     40706b <mark_slice+0x58b>
  4070f5:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
  4070fa:	49 83 ec 01          	sub    $0x1,%r12
  4070fe:	49 29 ec             	sub    %rbp,%r12
  407101:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
  407107:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
  40710c:	74 31                	je     40713f <mark_slice+0x65f>
  40710e:	49 8b 6d 08          	mov    0x8(%r13),%rbp
  407112:	40 f6 c5 01          	test   $0x1,%bpl
  407116:	74 63                	je     40717b <mark_slice+0x69b>
  407118:	48 8b 05 41 5c 22 00 	mov    0x225c41(%rip),%rax        # 62cd60 <ephes_to_check>
  40711f:	e9 43 fe ff ff       	jmpq   406f67 <mark_slice+0x487>
  407124:	48 f7 01 00 03 00 00 	testq  $0x300,(%rcx)
  40712b:	75 bb                	jne    4070e8 <mark_slice+0x608>
  40712d:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
  407132:	49 29 ec             	sub    %rbp,%r12
  407135:	49 8d 44 24 fe       	lea    -0x2(%r12),%rax
  40713a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40713f:	4c 89 2d 1a 5c 22 00 	mov    %r13,0x225c1a(%rip)        # 62cd60 <ephes_to_check>
  407146:	49 89 dd             	mov    %rbx,%r13
  407149:	e9 4d fc ff ff       	jmpq   406d9b <mark_slice+0x2bb>
  40714e:	48 8b 05 0b 5c 22 00 	mov    0x225c0b(%rip),%rax        # 62cd60 <ephes_to_check>
  407155:	e9 07 fe ff ff       	jmpq   406f61 <mark_slice+0x481>
  40715a:	e8 01 f5 ff ff       	callq  406660 <init_sweep_phase>
  40715f:	49 89 dd             	mov    %rbx,%r13
  407162:	e9 54 fb ff ff       	jmpq   406cbb <mark_slice+0x1db>
  407167:	4c 89 2d fa 5b 22 00 	mov    %r13,0x225bfa(%rip)        # 62cd68 <ephes_checked_if_pure>
  40716e:	eb cf                	jmp    40713f <mark_slice+0x65f>
  407170:	49 89 c7             	mov    %rax,%r15
  407173:	49 89 dd             	mov    %rbx,%r13
  407176:	e9 34 fa ff ff       	jmpq   406baf <mark_slice+0xcf>
  40717b:	48 89 ef             	mov    %rbp,%rdi
  40717e:	e8 bd 1b 00 00       	callq  408d40 <caml_page_table_lookup>
  407183:	a8 01                	test   $0x1,%al
  407185:	74 91                	je     407118 <mark_slice+0x638>
  407187:	4c 8b 65 f8          	mov    -0x8(%rbp),%r12
  40718b:	41 0f b6 c4          	movzbl %r12b,%eax
  40718f:	3d fa 00 00 00       	cmp    $0xfa,%eax
  407194:	74 60                	je     4071f6 <mark_slice+0x716>
  407196:	3d f9 00 00 00       	cmp    $0xf9,%eax
  40719b:	75 12                	jne    4071af <mark_slice+0x6cf>
  40719d:	4c 89 e0             	mov    %r12,%rax
  4071a0:	48 c1 e8 0a          	shr    $0xa,%rax
  4071a4:	48 c1 e0 03          	shl    $0x3,%rax
  4071a8:	48 29 c5             	sub    %rax,%rbp
  4071ab:	4c 8b 65 f8          	mov    -0x8(%rbp),%r12
  4071af:	41 f7 c4 00 03 00 00 	test   $0x300,%r12d
  4071b6:	0f 85 5c ff ff ff    	jne    407118 <mark_slice+0x638>
  4071bc:	4c 89 e0             	mov    %r12,%rax
  4071bf:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
  4071c3:	c7 05 a3 5b 22 00 00 	movl   $0x0,0x225ba3(%rip)        # 62cd70 <ephe_list_pure>
  4071ca:	00 00 00 
  4071cd:	80 e4 fc             	and    $0xfc,%ah
  4071d0:	80 cc 01             	or     $0x1,%ah
  4071d3:	48 3b 0d c6 5b 22 00 	cmp    0x225bc6(%rip),%rcx        # 62cda0 <gray_vals_end>
  4071da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4071de:	48 89 2b             	mov    %rbp,(%rbx)
  4071e1:	0f 83 a9 00 00 00    	jae    407290 <mark_slice+0x7b0>
  4071e7:	48 8b 05 72 5b 22 00 	mov    0x225b72(%rip),%rax        # 62cd60 <ephes_to_check>
  4071ee:	48 89 cb             	mov    %rcx,%rbx
  4071f1:	e9 71 fd ff ff       	jmpq   406f67 <mark_slice+0x487>
  4071f6:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
  4071fa:	41 f6 c7 01          	test   $0x1,%r15b
  4071fe:	75 af                	jne    4071af <mark_slice+0x6cf>
  407200:	4c 89 ff             	mov    %r15,%rdi
  407203:	e8 38 1b 00 00       	callq  408d40 <caml_page_table_lookup>
  407208:	a8 07                	test   $0x7,%al
  40720a:	74 a3                	je     4071af <mark_slice+0x6cf>
  40720c:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  407211:	8d 48 0a             	lea    0xa(%rax),%ecx
  407214:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  40721a:	74 93                	je     4071af <mark_slice+0x6cf>
  40721c:	3c fd                	cmp    $0xfd,%al
  40721e:	74 8f                	je     4071af <mark_slice+0x6cf>
  407220:	4d 89 7d 08          	mov    %r15,0x8(%r13)
  407224:	48 8b 05 9d 5c 22 00 	mov    0x225c9d(%rip),%rax        # 62cec8 <caml_young_end>
  40722b:	49 39 c7             	cmp    %rax,%r15
  40722e:	0f 83 7b ff ff ff    	jae    4071af <mark_slice+0x6cf>
  407234:	48 8b 0d 95 5c 22 00 	mov    0x225c95(%rip),%rcx        # 62ced0 <caml_young_start>
  40723b:	49 39 cf             	cmp    %rcx,%r15
  40723e:	0f 86 6b ff ff ff    	jbe    4071af <mark_slice+0x6cf>
  407244:	48 39 c5             	cmp    %rax,%rbp
  407247:	72 3c                	jb     407285 <mark_slice+0x7a5>
  407249:	48 8b 05 e8 5b 22 00 	mov    0x225be8(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  407250:	48 3b 05 e9 5b 22 00 	cmp    0x225be9(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  407257:	72 11                	jb     40726a <mark_slice+0x78a>
  407259:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  40725e:	e8 9d 18 00 00       	callq  408b00 <caml_realloc_ephe_ref_table>
  407263:	48 8b 05 ce 5b 22 00 	mov    0x225bce(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  40726a:	48 8d 48 10          	lea    0x10(%rax),%rcx
  40726e:	48 89 0d c3 5b 22 00 	mov    %rcx,0x225bc3(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  407275:	4c 89 28             	mov    %r13,(%rax)
  407278:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
  40727f:	00 
  407280:	e9 2a ff ff ff       	jmpq   4071af <mark_slice+0x6cf>
  407285:	48 39 cd             	cmp    %rcx,%rbp
  407288:	0f 87 21 ff ff ff    	ja     4071af <mark_slice+0x6cf>
  40728e:	eb b9                	jmp    407249 <mark_slice+0x769>
  407290:	48 89 0d 11 5b 22 00 	mov    %rcx,0x225b11(%rip)        # 62cda8 <gray_vals_cur>
  407297:	e8 64 f7 ff ff       	callq  406a00 <realloc_gray_vals>
  40729c:	48 8b 1d 05 5b 22 00 	mov    0x225b05(%rip),%rbx        # 62cda8 <gray_vals_cur>
  4072a3:	e9 70 fe ff ff       	jmpq   407118 <mark_slice+0x638>
  4072a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4072af:	00 

00000000004072b0 <caml_darken>:
  4072b0:	40 f6 c7 01          	test   $0x1,%dil
  4072b4:	74 0a                	je     4072c0 <caml_darken+0x10>
  4072b6:	c3                   	retq   
  4072b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4072be:	00 00 
  4072c0:	53                   	push   %rbx
  4072c1:	48 89 fb             	mov    %rdi,%rbx
  4072c4:	e8 77 1a 00 00       	callq  408d40 <caml_page_table_lookup>
  4072c9:	a8 01                	test   $0x1,%al
  4072cb:	74 53                	je     407320 <caml_darken+0x70>
  4072cd:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  4072d1:	0f b6 d0             	movzbl %al,%edx
  4072d4:	81 fa f9 00 00 00    	cmp    $0xf9,%edx
  4072da:	74 4c                	je     407328 <caml_darken+0x78>
  4072dc:	f6 c4 03             	test   $0x3,%ah
  4072df:	75 3f                	jne    407320 <caml_darken+0x70>
  4072e1:	81 fa fa 00 00 00    	cmp    $0xfa,%edx
  4072e7:	c7 05 7f 5a 22 00 00 	movl   $0x0,0x225a7f(%rip)        # 62cd70 <ephe_list_pure>
  4072ee:	00 00 00 
  4072f1:	77 4d                	ja     407340 <caml_darken+0x90>
  4072f3:	48 8b 15 ae 5a 22 00 	mov    0x225aae(%rip),%rdx        # 62cda8 <gray_vals_cur>
  4072fa:	80 e4 fc             	and    $0xfc,%ah
  4072fd:	80 cc 01             	or     $0x1,%ah
  407300:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
  407304:	48 8d 42 08          	lea    0x8(%rdx),%rax
  407308:	48 3b 05 91 5a 22 00 	cmp    0x225a91(%rip),%rax        # 62cda0 <gray_vals_end>
  40730f:	48 89 1a             	mov    %rbx,(%rdx)
  407312:	48 89 05 8f 5a 22 00 	mov    %rax,0x225a8f(%rip)        # 62cda8 <gray_vals_cur>
  407319:	73 35                	jae    407350 <caml_darken+0xa0>
  40731b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407320:	5b                   	pop    %rbx
  407321:	f3 c3                	repz retq 
  407323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407328:	48 c1 e8 0a          	shr    $0xa,%rax
  40732c:	48 c1 e0 03          	shl    $0x3,%rax
  407330:	48 29 c3             	sub    %rax,%rbx
  407333:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  407337:	0f b6 d0             	movzbl %al,%edx
  40733a:	eb a0                	jmp    4072dc <caml_darken+0x2c>
  40733c:	0f 1f 40 00          	nopl   0x0(%rax)
  407340:	80 cc 03             	or     $0x3,%ah
  407343:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
  407347:	5b                   	pop    %rbx
  407348:	eb d7                	jmp    407321 <caml_darken+0x71>
  40734a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  407350:	5b                   	pop    %rbx
  407351:	e9 aa f6 ff ff       	jmpq   406a00 <realloc_gray_vals>
  407356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40735d:	00 00 00 

0000000000407360 <caml_major_collection_slice>:
  407360:	55                   	push   %rbp
  407361:	53                   	push   %rbx
  407362:	48 89 fb             	mov    %rdi,%rbx
  407365:	48 83 ec 28          	sub    $0x28,%rsp
  407369:	48 8b 05 50 a0 23 00 	mov    0x23a050(%rip),%rax        # 6413c0 <caml_major_slice_begin_hook>
  407370:	48 85 c0             	test   %rax,%rax
  407373:	74 02                	je     407377 <caml_major_collection_slice+0x17>
  407375:	ff d0                	callq  *%rax
  407377:	48 8b 15 a2 a0 23 00 	mov    0x23a0a2(%rip),%rdx        # 641420 <caml_percent_free>
  40737e:	48 89 d1             	mov    %rdx,%rcx
  407381:	48 83 c1 64          	add    $0x64,%rcx
  407385:	0f 88 30 05 00 00    	js     4078bb <caml_major_collection_slice+0x55b>
  40738b:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40738f:	48 85 d2             	test   %rdx,%rdx
  407392:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
  407397:	0f 88 40 05 00 00    	js     4078dd <caml_major_collection_slice+0x57d>
  40739d:	66 0f ef db          	pxor   %xmm3,%xmm3
  4073a1:	f2 48 0f 2a da       	cvtsi2sd %rdx,%xmm3
  4073a6:	48 8b 15 33 a0 23 00 	mov    0x23a033(%rip),%rdx        # 6413e0 <caml_allocated_words>
  4073ad:	48 85 d2             	test   %rdx,%rdx
  4073b0:	0f 88 50 05 00 00    	js     407906 <caml_major_collection_slice+0x5a6>
  4073b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4073ba:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  4073bf:	f2 0f 59 05 21 68 01 	mulsd  0x16821(%rip),%xmm0        # 41dbe8 <caml_absf_mask+0x228>
  4073c6:	00 
  4073c7:	48 8b 05 5a a0 23 00 	mov    0x23a05a(%rip),%rax        # 641428 <caml_dependent_size>
  4073ce:	66 0f ef d2          	pxor   %xmm2,%xmm2
  4073d2:	48 85 c0             	test   %rax,%rax
  4073d5:	f2 48 0f 2a 15 22 dd 	cvtsi2sdq 0x22dd22(%rip),%xmm2        # 635100 <caml_stat_heap_wsz>
  4073dc:	22 00 
  4073de:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  4073e2:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
  4073e6:	f2 0f 5e c3          	divsd  %xmm3,%xmm0
  4073ea:	f2 0f 59 05 fe 67 01 	mulsd  0x167fe(%rip),%xmm0        # 41dbf0 <caml_absf_mask+0x230>
  4073f1:	00 
  4073f2:	74 43                	je     407437 <caml_major_collection_slice+0xd7>
  4073f4:	48 8b 15 fd 9f 23 00 	mov    0x239ffd(%rip),%rdx        # 6413f8 <caml_dependent_allocated>
  4073fb:	48 85 d2             	test   %rdx,%rdx
  4073fe:	0f 88 3e 05 00 00    	js     407942 <caml_major_collection_slice+0x5e2>
  407404:	66 0f ef d2          	pxor   %xmm2,%xmm2
  407408:	48 85 c0             	test   %rax,%rax
  40740b:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
  407410:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
  407414:	0f 88 4e 05 00 00    	js     407968 <caml_major_collection_slice+0x608>
  40741a:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40741e:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  407423:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
  407427:	66 0f ef e4          	pxor   %xmm4,%xmm4
  40742b:	f2 0f 5e d3          	divsd  %xmm3,%xmm2
  40742f:	f2 0f 11 64 24 10    	movsd  %xmm4,0x10(%rsp)
  407435:	eb 0e                	jmp    407445 <caml_major_collection_slice+0xe5>
  407437:	66 0f ef f6          	pxor   %xmm6,%xmm6
  40743b:	f2 0f 11 74 24 10    	movsd  %xmm6,0x10(%rsp)
  407441:	66 0f 28 d6          	movapd %xmm6,%xmm2
  407445:	f2 0f 5f d0          	maxsd  %xmm0,%xmm2
  407449:	f2 0f 10 0d c7 9f 23 	movsd  0x239fc7(%rip),%xmm1        # 641418 <caml_extra_heap_resources>
  407450:	00 
  407451:	f2 0f 10 05 87 67 01 	movsd  0x16787(%rip),%xmm0        # 41dbe0 <caml_absf_mask+0x220>
  407458:	00 
  407459:	48 89 da             	mov    %rbx,%rdx
  40745c:	be 38 da 41 00       	mov    $0x41da38,%esi
  407461:	bf 40 00 00 00       	mov    $0x40,%edi
  407466:	f2 0f 5f ca          	maxsd  %xmm2,%xmm1
  40746a:	f2 0f 5d c1          	minsd  %xmm1,%xmm0
  40746e:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
  407474:	e8 37 48 01 00       	callq  41bcb0 <caml_gc_message>
  407479:	48 8b 15 60 9f 23 00 	mov    0x239f60(%rip),%rdx        # 6413e0 <caml_allocated_words>
  407480:	be 52 da 41 00       	mov    $0x41da52,%esi
  407485:	bf 40 00 00 00       	mov    $0x40,%edi
  40748a:	e8 21 48 01 00       	callq  41bcb0 <caml_gc_message>
  40748f:	f2 0f 10 05 61 67 01 	movsd  0x16761(%rip),%xmm0        # 41dbf8 <caml_absf_mask+0x238>
  407496:	00 
  407497:	f2 0f 10 15 61 67 01 	movsd  0x16761(%rip),%xmm2        # 41dc00 <caml_absf_mask+0x240>
  40749e:	00 
  40749f:	f2 0f 59 05 71 9f 23 	mulsd  0x239f71(%rip),%xmm0        # 641418 <caml_extra_heap_resources>
  4074a6:	00 
  4074a7:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
  4074ad:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
  4074b1:	0f 83 32 03 00 00    	jae    4077e9 <caml_major_collection_slice+0x489>
  4074b7:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
  4074bc:	be 69 da 41 00       	mov    $0x41da69,%esi
  4074c1:	bf 40 00 00 00       	mov    $0x40,%edi
  4074c6:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
  4074cc:	e8 df 47 01 00       	callq  41bcb0 <caml_gc_message>
  4074d1:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
  4074d7:	be 86 da 41 00       	mov    $0x41da86,%esi
  4074dc:	f2 0f 10 05 14 67 01 	movsd  0x16714(%rip),%xmm0        # 41dbf8 <caml_absf_mask+0x238>
  4074e3:	00 
  4074e4:	bf 40 00 00 00       	mov    $0x40,%edi
  4074e9:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  4074ed:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
  4074f2:	e8 b9 47 01 00       	callq  41bcb0 <caml_gc_message>
  4074f7:	8b 0d 73 51 22 00    	mov    0x225173(%rip),%ecx        # 62c670 <caml_major_window>
  4074fd:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
  407503:	85 c9                	test   %ecx,%ecx
  407505:	7e 38                	jle    40753f <caml_major_collection_slice+0x1df>
  407507:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40750b:	8d 51 ff             	lea    -0x1(%rcx),%edx
  40750e:	b8 c0 cb 62 00       	mov    $0x62cbc0,%eax
  407513:	48 8d 14 d5 c8 cb 62 	lea    0x62cbc8(,%rdx,8),%rdx
  40751a:	00 
  40751b:	f2 0f 2a c1          	cvtsi2sd %ecx,%xmm0
  40751f:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
  407523:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407528:	48 83 c0 08          	add    $0x8,%rax
  40752c:	f2 0f 10 40 f8       	movsd  -0x8(%rax),%xmm0
  407531:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  407535:	f2 0f 11 40 f8       	movsd  %xmm0,-0x8(%rax)
  40753a:	48 39 d0             	cmp    %rdx,%rax
  40753d:	75 e9                	jne    407528 <caml_major_collection_slice+0x1c8>
  40753f:	f2 0f 10 05 41 56 22 	movsd  0x225641(%rip),%xmm0        # 62cb88 <caml_gc_clock>
  407546:	00 
  407547:	f2 0f 10 0d b9 66 01 	movsd  0x166b9(%rip),%xmm1        # 41dc08 <caml_absf_mask+0x248>
  40754e:	00 
  40754f:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  407553:	72 25                	jb     40757a <caml_major_collection_slice+0x21a>
  407555:	8b 05 45 56 22 00    	mov    0x225645(%rip),%eax        # 62cba0 <caml_major_ring_index>
  40755b:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
  40755f:	ba 00 00 00 00       	mov    $0x0,%edx
  407564:	83 c0 01             	add    $0x1,%eax
  407567:	39 c8                	cmp    %ecx,%eax
  407569:	f2 0f 11 05 17 56 22 	movsd  %xmm0,0x225617(%rip)        # 62cb88 <caml_gc_clock>
  407570:	00 
  407571:	0f 4d c2             	cmovge %edx,%eax
  407574:	89 05 26 56 22 00    	mov    %eax,0x225626(%rip)        # 62cba0 <caml_major_ring_index>
  40757a:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
  40757e:	0f 84 cc 02 00 00    	je     407850 <caml_major_collection_slice+0x4f0>
  407584:	48 85 db             	test   %rbx,%rbx
  407587:	0f 84 77 02 00 00    	je     407804 <caml_major_collection_slice+0x4a4>
  40758d:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407591:	48 8b 15 88 9e 23 00 	mov    0x239e88(%rip),%rdx        # 641420 <caml_percent_free>
  407598:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
  40759d:	48 89 d1             	mov    %rdx,%rcx
  4075a0:	48 83 c1 64          	add    $0x64,%rcx
  4075a4:	f2 0f 59 05 3c 66 01 	mulsd  0x1663c(%rip),%xmm0        # 41dbe8 <caml_absf_mask+0x228>
  4075ab:	00 
  4075ac:	0f 88 86 04 00 00    	js     407a38 <caml_major_collection_slice+0x6d8>
  4075b2:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4075b6:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
  4075bb:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
  4075bf:	48 85 d2             	test   %rdx,%rdx
  4075c2:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4075c6:	f2 48 0f 2a 0d 31 db 	cvtsi2sdq 0x22db31(%rip),%xmm1        # 635100 <caml_stat_heap_wsz>
  4075cd:	22 00 
  4075cf:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  4075d3:	0f 88 41 04 00 00    	js     407a1a <caml_major_collection_slice+0x6ba>
  4075d9:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4075dd:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  4075e2:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  4075e6:	f2 0f 59 05 02 66 01 	mulsd  0x16602(%rip),%xmm0        # 41dbf0 <caml_absf_mask+0x230>
  4075ed:	00 
  4075ee:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
  4075f4:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
  4075fa:	f2 0f 58 05 96 55 22 	addsd  0x225596(%rip),%xmm0        # 62cb98 <caml_major_work_credit>
  407601:	00 
  407602:	f2 0f 11 05 8e 55 22 	movsd  %xmm0,0x22558e(%rip)        # 62cb98 <caml_major_work_credit>
  407609:	00 
  40760a:	f2 0f 10 05 e6 65 01 	movsd  0x165e6(%rip),%xmm0        # 41dbf8 <caml_absf_mask+0x238>
  407611:	00 
  407612:	be 9d da 41 00       	mov    $0x41da9d,%esi
  407617:	bf 40 00 00 00       	mov    $0x40,%edi
  40761c:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
  407622:	f2 48 0f 2c d8       	cvttsd2si %xmm0,%rbx
  407627:	48 89 da             	mov    %rbx,%rdx
  40762a:	e8 81 46 01 00       	callq  41bcb0 <caml_gc_message>
  40762f:	8b 05 d3 9d 23 00    	mov    0x239dd3(%rip),%eax        # 641408 <caml_gc_phase>
  407635:	83 f8 03             	cmp    $0x3,%eax
  407638:	0f 84 ef 01 00 00    	je     40782d <caml_major_collection_slice+0x4cd>
  40763e:	f2 0f 10 74 24 10    	movsd  0x10(%rsp),%xmm6
  407644:	66 0f 2e 74 24 08    	ucomisd 0x8(%rsp),%xmm6
  40764a:	0f 87 36 03 00 00    	ja     407986 <caml_major_collection_slice+0x626>
  407650:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407654:	83 f8 01             	cmp    $0x1,%eax
  407657:	f2 48 0f 2a 05 a0 da 	cvtsi2sdq 0x22daa0(%rip),%xmm0        # 635100 <caml_stat_heap_wsz>
  40765e:	22 00 
  407660:	0f 86 42 03 00 00    	jbe    4079a8 <caml_major_collection_slice+0x648>
  407666:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
  40766c:	f2 0f 59 05 a4 65 01 	mulsd  0x165a4(%rip),%xmm0        # 41dc18 <caml_absf_mask+0x258>
  407673:	00 
  407674:	f2 0f 5e 05 6c 65 01 	divsd  0x1656c(%rip),%xmm0        # 41dbe8 <caml_absf_mask+0x228>
  40767b:	00 
  40767c:	f2 48 0f 2c e8       	cvttsd2si %xmm0,%rbp
  407681:	bf 40 00 00 00       	mov    $0x40,%edi
  407686:	48 89 ea             	mov    %rbp,%rdx
  407689:	be b9 da 41 00       	mov    $0x41dab9,%esi
  40768e:	e8 1d 46 01 00       	callq  41bcb0 <caml_gc_message>
  407693:	8b 05 6f 9d 23 00    	mov    0x239d6f(%rip),%eax        # 641408 <caml_gc_phase>
  407699:	48 89 ef             	mov    %rbp,%rdi
  40769c:	85 c0                	test   %eax,%eax
  40769e:	0f 84 e9 02 00 00    	je     40798d <caml_major_collection_slice+0x62d>
  4076a4:	83 f8 01             	cmp    $0x1,%eax
  4076a7:	0f 84 52 03 00 00    	je     4079ff <caml_major_collection_slice+0x69f>
  4076ad:	e8 2e f2 ff ff       	callq  4068e0 <sweep_slice>
  4076b2:	31 d2                	xor    %edx,%edx
  4076b4:	be d9 da 41 00       	mov    $0x41dad9,%esi
  4076b9:	bf 02 00 00 00       	mov    $0x2,%edi
  4076be:	e8 ed 45 01 00       	callq  41bcb0 <caml_gc_message>
  4076c3:	83 3d 3e 9d 23 00 03 	cmpl   $0x3,0x239d3e(%rip)        # 641408 <caml_gc_phase>
  4076ca:	f2 0f 10 7c 24 08    	movsd  0x8(%rsp),%xmm7
  4076d0:	f2 0f 11 7c 24 10    	movsd  %xmm7,0x10(%rsp)
  4076d6:	0f 84 7a 03 00 00    	je     407a56 <caml_major_collection_slice+0x6f6>
  4076dc:	48 89 da             	mov    %rbx,%rdx
  4076df:	be db da 41 00       	mov    $0x41dadb,%esi
  4076e4:	bf 40 00 00 00       	mov    $0x40,%edi
  4076e9:	e8 c2 45 01 00       	callq  41bcb0 <caml_gc_message>
  4076ee:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
  4076f4:	f2 0f 10 1d 9c 54 22 	movsd  0x22549c(%rip),%xmm3        # 62cb98 <caml_major_work_credit>
  4076fb:	00 
  4076fc:	f2 0f 5c 54 24 10    	subsd  0x10(%rsp),%xmm2
  407702:	66 0f 28 cb          	movapd %xmm3,%xmm1
  407706:	f2 0f 11 5c 24 10    	movsd  %xmm3,0x10(%rsp)
  40770c:	66 0f 28 c2          	movapd %xmm2,%xmm0
  407710:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
  407716:	e8 15 a5 ff ff       	callq  401c30 <fmin@plt>
  40771b:	f2 0f 10 5c 24 10    	movsd  0x10(%rsp),%xmm3
  407721:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
  407727:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
  40772b:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
  40772f:	f2 0f 11 1d 61 54 22 	movsd  %xmm3,0x225461(%rip)        # 62cb98 <caml_major_work_credit>
  407736:	00 
  407737:	76 4e                	jbe    407787 <caml_major_collection_slice+0x427>
  407739:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
  40773d:	8b 15 2d 4f 22 00    	mov    0x224f2d(%rip),%edx        # 62c670 <caml_major_window>
  407743:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407747:	85 d2                	test   %edx,%edx
  407749:	f2 0f 2a c2          	cvtsi2sd %edx,%xmm0
  40774d:	66 0f 28 ca          	movapd %xmm2,%xmm1
  407751:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
  407755:	7e 30                	jle    407787 <caml_major_collection_slice+0x427>
  407757:	83 ea 01             	sub    $0x1,%edx
  40775a:	b8 c0 cb 62 00       	mov    $0x62cbc0,%eax
  40775f:	48 8d 14 d5 c8 cb 62 	lea    0x62cbc8(,%rdx,8),%rdx
  407766:	00 
  407767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40776e:	00 00 
  407770:	48 83 c0 08          	add    $0x8,%rax
  407774:	f2 0f 10 40 f8       	movsd  -0x8(%rax),%xmm0
  407779:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  40777d:	f2 0f 11 40 f8       	movsd  %xmm0,-0x8(%rax)
  407782:	48 39 c2             	cmp    %rax,%rdx
  407785:	75 e9                	jne    407770 <caml_major_collection_slice+0x410>
  407787:	48 8b 15 52 9c 23 00 	mov    0x239c52(%rip),%rdx        # 6413e0 <caml_allocated_words>
  40778e:	48 85 d2             	test   %rdx,%rdx
  407791:	0f 88 8d 01 00 00    	js     407924 <caml_major_collection_slice+0x5c4>
  407797:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40779b:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  4077a0:	f2 0f 58 05 70 d9 22 	addsd  0x22d970(%rip),%xmm0        # 635118 <caml_stat_major_words>
  4077a7:	00 
  4077a8:	48 8b 05 09 9c 23 00 	mov    0x239c09(%rip),%rax        # 6413b8 <caml_major_slice_end_hook>
  4077af:	48 c7 05 26 9c 23 00 	movq   $0x0,0x239c26(%rip)        # 6413e0 <caml_allocated_words>
  4077b6:	00 00 00 00 
  4077ba:	48 c7 05 33 9c 23 00 	movq   $0x0,0x239c33(%rip)        # 6413f8 <caml_dependent_allocated>
  4077c1:	00 00 00 00 
  4077c5:	48 c7 05 48 9c 23 00 	movq   $0x0,0x239c48(%rip)        # 641418 <caml_extra_heap_resources>
  4077cc:	00 00 00 00 
  4077d0:	48 85 c0             	test   %rax,%rax
  4077d3:	f2 0f 11 05 3d d9 22 	movsd  %xmm0,0x22d93d(%rip)        # 635118 <caml_stat_major_words>
  4077da:	00 
  4077db:	0f 84 d3 00 00 00    	je     4078b4 <caml_major_collection_slice+0x554>
  4077e1:	48 83 c4 28          	add    $0x28,%rsp
  4077e5:	5b                   	pop    %rbx
  4077e6:	5d                   	pop    %rbp
  4077e7:	ff e0                	jmpq   *%rax
  4077e9:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
  4077ed:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  4077f4:	00 00 80 
  4077f7:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
  4077fc:	48 31 c2             	xor    %rax,%rdx
  4077ff:	e9 b8 fc ff ff       	jmpq   4074bc <caml_major_collection_slice+0x15c>
  407804:	8b 05 96 53 22 00    	mov    0x225396(%rip),%eax        # 62cba0 <caml_major_ring_index>
  40780a:	ba 00 00 00 00       	mov    $0x0,%edx
  40780f:	83 c0 01             	add    $0x1,%eax
  407812:	39 c8                	cmp    %ecx,%eax
  407814:	0f 4d c2             	cmovge %edx,%eax
  407817:	48 98                	cltq   
  407819:	f2 0f 10 2c c5 c0 cb 	movsd  0x62cbc0(,%rax,8),%xmm5
  407820:	62 00 
  407822:	f2 0f 11 6c 24 08    	movsd  %xmm5,0x8(%rsp)
  407828:	e9 c7 fd ff ff       	jmpq   4075f4 <caml_major_collection_slice+0x294>
  40782d:	31 db                	xor    %ebx,%ebx
  40782f:	48 8b 05 7a 56 22 00 	mov    0x22567a(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  407836:	48 39 05 6b 56 22 00 	cmp    %rax,0x22566b(%rip)        # 62cea8 <caml_young_ptr>
  40783d:	0f 85 99 fe ff ff    	jne    4076dc <caml_major_collection_slice+0x37c>
  407843:	e8 b8 ed ff ff       	callq  406600 <start_cycle>
  407848:	e9 8f fe ff ff       	jmpq   4076dc <caml_major_collection_slice+0x37c>
  40784d:	0f 1f 00             	nopl   (%rax)
  407850:	48 63 1d 49 53 22 00 	movslq 0x225349(%rip),%rbx        # 62cba0 <caml_major_ring_index>
  407857:	f2 0f 10 15 39 53 22 	movsd  0x225339(%rip),%xmm2        # 62cb98 <caml_major_work_credit>
  40785e:	00 
  40785f:	66 0f 28 c2          	movapd %xmm2,%xmm0
  407863:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
  407869:	f2 0f 10 1c dd c0 cb 	movsd  0x62cbc0(,%rbx,8),%xmm3
  407870:	62 00 
  407872:	66 0f 28 cb          	movapd %xmm3,%xmm1
  407876:	f2 0f 11 5c 24 18    	movsd  %xmm3,0x18(%rsp)
  40787c:	e8 af a3 ff ff       	callq  401c30 <fmin@plt>
  407881:	f2 0f 10 54 24 08    	movsd  0x8(%rsp),%xmm2
  407887:	48 c7 04 dd c0 cb 62 	movq   $0x0,0x62cbc0(,%rbx,8)
  40788e:	00 00 00 00 00 
  407893:	f2 0f 10 5c 24 18    	movsd  0x18(%rsp),%xmm3
  407899:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
  40789d:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
  4078a1:	f2 0f 11 15 ef 52 22 	movsd  %xmm2,0x2252ef(%rip)        # 62cb98 <caml_major_work_credit>
  4078a8:	00 
  4078a9:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
  4078af:	e9 56 fd ff ff       	jmpq   40760a <caml_major_collection_slice+0x2aa>
  4078b4:	48 83 c4 28          	add    $0x28,%rsp
  4078b8:	5b                   	pop    %rbx
  4078b9:	5d                   	pop    %rbp
  4078ba:	c3                   	retq   
  4078bb:	48 89 c8             	mov    %rcx,%rax
  4078be:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4078c2:	48 d1 e8             	shr    %rax
  4078c5:	83 e1 01             	and    $0x1,%ecx
  4078c8:	48 09 c8             	or     %rcx,%rax
  4078cb:	48 85 d2             	test   %rdx,%rdx
  4078ce:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  4078d3:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  4078d7:	0f 89 c0 fa ff ff    	jns    40739d <caml_major_collection_slice+0x3d>
  4078dd:	48 89 d0             	mov    %rdx,%rax
  4078e0:	66 0f ef db          	pxor   %xmm3,%xmm3
  4078e4:	83 e2 01             	and    $0x1,%edx
  4078e7:	48 d1 e8             	shr    %rax
  4078ea:	48 09 d0             	or     %rdx,%rax
  4078ed:	48 8b 15 ec 9a 23 00 	mov    0x239aec(%rip),%rdx        # 6413e0 <caml_allocated_words>
  4078f4:	f2 48 0f 2a d8       	cvtsi2sd %rax,%xmm3
  4078f9:	48 85 d2             	test   %rdx,%rdx
  4078fc:	f2 0f 58 db          	addsd  %xmm3,%xmm3
  407900:	0f 89 b0 fa ff ff    	jns    4073b6 <caml_major_collection_slice+0x56>
  407906:	48 89 d0             	mov    %rdx,%rax
  407909:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40790d:	48 d1 e8             	shr    %rax
  407910:	83 e2 01             	and    $0x1,%edx
  407913:	48 09 d0             	or     %rdx,%rax
  407916:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  40791b:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  40791f:	e9 9b fa ff ff       	jmpq   4073bf <caml_major_collection_slice+0x5f>
  407924:	48 89 d0             	mov    %rdx,%rax
  407927:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40792b:	48 d1 e8             	shr    %rax
  40792e:	83 e2 01             	and    $0x1,%edx
  407931:	48 09 d0             	or     %rdx,%rax
  407934:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  407939:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  40793d:	e9 5e fe ff ff       	jmpq   4077a0 <caml_major_collection_slice+0x440>
  407942:	48 89 d1             	mov    %rdx,%rcx
  407945:	66 0f ef d2          	pxor   %xmm2,%xmm2
  407949:	48 d1 e9             	shr    %rcx
  40794c:	83 e2 01             	and    $0x1,%edx
  40794f:	48 09 d1             	or     %rdx,%rcx
  407952:	48 85 c0             	test   %rax,%rax
  407955:	f2 48 0f 2a d1       	cvtsi2sd %rcx,%xmm2
  40795a:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
  40795e:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
  407962:	0f 89 b2 fa ff ff    	jns    40741a <caml_major_collection_slice+0xba>
  407968:	48 89 c2             	mov    %rax,%rdx
  40796b:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40796f:	48 d1 ea             	shr    %rdx
  407972:	83 e0 01             	and    $0x1,%eax
  407975:	48 09 c2             	or     %rax,%rdx
  407978:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  40797d:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  407981:	e9 9d fa ff ff       	jmpq   407423 <caml_major_collection_slice+0xc3>
  407986:	31 db                	xor    %ebx,%ebx
  407988:	e9 4f fd ff ff       	jmpq   4076dc <caml_major_collection_slice+0x37c>
  40798d:	e8 4e f1 ff ff       	callq  406ae0 <mark_slice>
  407992:	31 d2                	xor    %edx,%edx
  407994:	be d4 da 41 00       	mov    $0x41dad4,%esi
  407999:	bf 02 00 00 00       	mov    $0x2,%edi
  40799e:	e8 0d 43 01 00       	callq  41bcb0 <caml_gc_message>
  4079a3:	e9 1b fd ff ff       	jmpq   4076c3 <caml_major_collection_slice+0x363>
  4079a8:	48 8b 05 71 9a 23 00 	mov    0x239a71(%rip),%rax        # 641420 <caml_percent_free>
  4079af:	f2 0f 59 05 59 62 01 	mulsd  0x16259(%rip),%xmm0        # 41dc10 <caml_absf_mask+0x250>
  4079b6:	00 
  4079b7:	48 83 c0 64          	add    $0x64,%rax
  4079bb:	0f 88 cd 00 00 00    	js     407a8e <caml_major_collection_slice+0x72e>
  4079c1:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4079c5:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  4079ca:	48 8b 15 47 4f 22 00 	mov    0x224f47(%rip),%rdx        # 62c918 <caml_incremental_roots_count>
  4079d1:	66 0f 28 d0          	movapd %xmm0,%xmm2
  4079d5:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
  4079d9:	48 85 d2             	test   %rdx,%rdx
  4079dc:	0f 88 8a 00 00 00    	js     407a6c <caml_major_collection_slice+0x70c>
  4079e2:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4079e6:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  4079eb:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
  4079ef:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
  4079f5:	f2 48 0f 2c e8       	cvttsd2si %xmm0,%rbp
  4079fa:	e9 82 fc ff ff       	jmpq   407681 <caml_major_collection_slice+0x321>
  4079ff:	e8 cc ec ff ff       	callq  4066d0 <clean_slice>
  407a04:	31 d2                	xor    %edx,%edx
  407a06:	be d6 da 41 00       	mov    $0x41dad6,%esi
  407a0b:	bf 02 00 00 00       	mov    $0x2,%edi
  407a10:	e8 9b 42 01 00       	callq  41bcb0 <caml_gc_message>
  407a15:	e9 a9 fc ff ff       	jmpq   4076c3 <caml_major_collection_slice+0x363>
  407a1a:	48 89 d0             	mov    %rdx,%rax
  407a1d:	66 0f ef c9          	pxor   %xmm1,%xmm1
  407a21:	48 d1 e8             	shr    %rax
  407a24:	83 e2 01             	and    $0x1,%edx
  407a27:	48 09 d0             	or     %rdx,%rax
  407a2a:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  407a2f:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  407a33:	e9 aa fb ff ff       	jmpq   4075e2 <caml_major_collection_slice+0x282>
  407a38:	48 89 c8             	mov    %rcx,%rax
  407a3b:	66 0f ef c9          	pxor   %xmm1,%xmm1
  407a3f:	48 d1 e8             	shr    %rax
  407a42:	83 e1 01             	and    $0x1,%ecx
  407a45:	48 09 c8             	or     %rcx,%rax
  407a48:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  407a4d:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  407a51:	e9 65 fb ff ff       	jmpq   4075bb <caml_major_collection_slice+0x25b>
  407a56:	e8 e5 03 01 00       	callq  417e40 <caml_compact_heap_maybe>
  407a5b:	f2 0f 10 6c 24 08    	movsd  0x8(%rsp),%xmm5
  407a61:	f2 0f 11 6c 24 10    	movsd  %xmm5,0x10(%rsp)
  407a67:	e9 70 fc ff ff       	jmpq   4076dc <caml_major_collection_slice+0x37c>
  407a6c:	48 89 d0             	mov    %rdx,%rax
  407a6f:	66 0f ef c9          	pxor   %xmm1,%xmm1
  407a73:	48 d1 e8             	shr    %rax
  407a76:	83 e2 01             	and    $0x1,%edx
  407a79:	48 09 d0             	or     %rdx,%rax
  407a7c:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  407a81:	66 0f 28 c1          	movapd %xmm1,%xmm0
  407a85:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  407a89:	e9 5d ff ff ff       	jmpq   4079eb <caml_major_collection_slice+0x68b>
  407a8e:	48 89 c2             	mov    %rax,%rdx
  407a91:	66 0f ef c9          	pxor   %xmm1,%xmm1
  407a95:	48 d1 ea             	shr    %rdx
  407a98:	83 e0 01             	and    $0x1,%eax
  407a9b:	48 09 c2             	or     %rax,%rdx
  407a9e:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  407aa3:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  407aa7:	e9 1e ff ff ff       	jmpq   4079ca <caml_major_collection_slice+0x66a>
  407aac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407ab0 <caml_finish_major_cycle>:
  407ab0:	48 83 ec 08          	sub    $0x8,%rsp
  407ab4:	8b 05 4e 99 23 00    	mov    0x23994e(%rip),%eax        # 641408 <caml_gc_phase>
  407aba:	83 f8 03             	cmp    $0x3,%eax
  407abd:	75 1e                	jne    407add <caml_finish_major_cycle+0x2d>
  407abf:	e9 bc 00 00 00       	jmpq   407b80 <caml_finish_major_cycle+0xd0>
  407ac4:	0f 1f 40 00          	nopl   0x0(%rax)
  407ac8:	48 bf ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdi
  407acf:	ff ff 7f 
  407ad2:	e8 09 f0 ff ff       	callq  406ae0 <mark_slice>
  407ad7:	8b 05 2b 99 23 00    	mov    0x23992b(%rip),%eax        # 641408 <caml_gc_phase>
  407add:	85 c0                	test   %eax,%eax
  407adf:	74 e7                	je     407ac8 <caml_finish_major_cycle+0x18>
  407ae1:	83 f8 01             	cmp    $0x1,%eax
  407ae4:	75 24                	jne    407b0a <caml_finish_major_cycle+0x5a>
  407ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  407aed:	00 00 00 
  407af0:	48 bf ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdi
  407af7:	ff ff 7f 
  407afa:	e8 d1 eb ff ff       	callq  4066d0 <clean_slice>
  407aff:	8b 05 03 99 23 00    	mov    0x239903(%rip),%eax        # 641408 <caml_gc_phase>
  407b05:	83 f8 01             	cmp    $0x1,%eax
  407b08:	74 e6                	je     407af0 <caml_finish_major_cycle+0x40>
  407b0a:	83 f8 02             	cmp    $0x2,%eax
  407b0d:	75 19                	jne    407b28 <caml_finish_major_cycle+0x78>
  407b0f:	90                   	nop
  407b10:	48 bf ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdi
  407b17:	ff ff 7f 
  407b1a:	e8 c1 ed ff ff       	callq  4068e0 <sweep_slice>
  407b1f:	83 3d e2 98 23 00 02 	cmpl   $0x2,0x2398e2(%rip)        # 641408 <caml_gc_phase>
  407b26:	74 e8                	je     407b10 <caml_finish_major_cycle+0x60>
  407b28:	48 8b 05 b1 98 23 00 	mov    0x2398b1(%rip),%rax        # 6413e0 <caml_allocated_words>
  407b2f:	48 85 c0             	test   %rax,%rax
  407b32:	78 2c                	js     407b60 <caml_finish_major_cycle+0xb0>
  407b34:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407b38:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  407b3d:	f2 0f 58 05 d3 d5 22 	addsd  0x22d5d3(%rip),%xmm0        # 635118 <caml_stat_major_words>
  407b44:	00 
  407b45:	48 c7 05 90 98 23 00 	movq   $0x0,0x239890(%rip)        # 6413e0 <caml_allocated_words>
  407b4c:	00 00 00 00 
  407b50:	f2 0f 11 05 c0 d5 22 	movsd  %xmm0,0x22d5c0(%rip)        # 635118 <caml_stat_major_words>
  407b57:	00 
  407b58:	48 83 c4 08          	add    $0x8,%rsp
  407b5c:	c3                   	retq   
  407b5d:	0f 1f 00             	nopl   (%rax)
  407b60:	48 89 c2             	mov    %rax,%rdx
  407b63:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407b67:	48 d1 ea             	shr    %rdx
  407b6a:	83 e0 01             	and    $0x1,%eax
  407b6d:	48 09 c2             	or     %rax,%rdx
  407b70:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  407b75:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  407b79:	eb c2                	jmp    407b3d <caml_finish_major_cycle+0x8d>
  407b7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407b80:	e8 7b ea ff ff       	callq  406600 <start_cycle>
  407b85:	8b 05 7d 98 23 00    	mov    0x23987d(%rip),%eax        # 641408 <caml_gc_phase>
  407b8b:	e9 4d ff ff ff       	jmpq   407add <caml_finish_major_cycle+0x2d>

0000000000407b90 <caml_clip_heap_chunk_wsz>:
  407b90:	48 8b 0d 59 98 23 00 	mov    0x239859(%rip),%rcx        # 6413f0 <caml_major_heap_increment>
  407b97:	48 81 f9 e8 03 00 00 	cmp    $0x3e8,%rcx
  407b9e:	77 29                	ja     407bc9 <caml_clip_heap_chunk_wsz+0x39>
  407ba0:	48 8b 35 59 d5 22 00 	mov    0x22d559(%rip),%rsi        # 635100 <caml_stat_heap_wsz>
  407ba7:	48 ba 0b d7 a3 70 3d 	movabs $0xa3d70a3d70a3d70b,%rdx
  407bae:	0a d7 a3 
  407bb1:	48 89 f0             	mov    %rsi,%rax
  407bb4:	48 f7 ea             	imul   %rdx
  407bb7:	48 01 f2             	add    %rsi,%rdx
  407bba:	48 c1 fe 3f          	sar    $0x3f,%rsi
  407bbe:	48 c1 fa 06          	sar    $0x6,%rdx
  407bc2:	48 29 f2             	sub    %rsi,%rdx
  407bc5:	48 0f af ca          	imul   %rdx,%rcx
  407bc9:	48 39 f9             	cmp    %rdi,%rcx
  407bcc:	48 89 f8             	mov    %rdi,%rax
  407bcf:	ba 00 f0 00 00       	mov    $0xf000,%edx
  407bd4:	48 0f 43 c1          	cmovae %rcx,%rax
  407bd8:	48 3d ff ef 00 00    	cmp    $0xefff,%rax
  407bde:	48 0f 46 c2          	cmovbe %rdx,%rax
  407be2:	c3                   	retq   
  407be3:	0f 1f 00             	nopl   (%rax)
  407be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  407bed:	00 00 00 

0000000000407bf0 <caml_init_major_heap>:
  407bf0:	48 83 ec 08          	sub    $0x8,%rsp
  407bf4:	48 8b 0d f5 97 23 00 	mov    0x2397f5(%rip),%rcx        # 6413f0 <caml_major_heap_increment>
  407bfb:	48 c1 ef 03          	shr    $0x3,%rdi
  407bff:	48 81 f9 e8 03 00 00 	cmp    $0x3e8,%rcx
  407c06:	77 29                	ja     407c31 <caml_init_major_heap+0x41>
  407c08:	48 8b 35 f1 d4 22 00 	mov    0x22d4f1(%rip),%rsi        # 635100 <caml_stat_heap_wsz>
  407c0f:	48 ba 0b d7 a3 70 3d 	movabs $0xa3d70a3d70a3d70b,%rdx
  407c16:	0a d7 a3 
  407c19:	48 89 f0             	mov    %rsi,%rax
  407c1c:	48 f7 ea             	imul   %rdx
  407c1f:	48 01 f2             	add    %rsi,%rdx
  407c22:	48 c1 fe 3f          	sar    $0x3f,%rsi
  407c26:	48 c1 fa 06          	sar    $0x6,%rdx
  407c2a:	48 29 f2             	sub    %rsi,%rdx
  407c2d:	48 0f af ca          	imul   %rdx,%rcx
  407c31:	48 39 cf             	cmp    %rcx,%rdi
  407c34:	48 89 c8             	mov    %rcx,%rax
  407c37:	48 0f 43 c7          	cmovae %rdi,%rax
  407c3b:	48 3d ff ef 00 00    	cmp    $0xefff,%rax
  407c41:	0f 86 11 01 00 00    	jbe    407d58 <caml_init_major_heap+0x168>
  407c47:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
  407c4e:	00 
  407c4f:	48 89 05 aa d4 22 00 	mov    %rax,0x22d4aa(%rip)        # 635100 <caml_stat_heap_wsz>
  407c56:	48 89 05 9b d4 22 00 	mov    %rax,0x22d49b(%rip)        # 6350f8 <caml_stat_top_heap_wsz>
  407c5d:	e8 be 12 00 00       	callq  408f20 <caml_alloc_for_heap>
  407c62:	48 85 c0             	test   %rax,%rax
  407c65:	48 89 05 94 97 23 00 	mov    %rax,0x239794(%rip)        # 641400 <caml_heap_start>
  407c6c:	0f 84 f5 00 00 00    	je     407d67 <caml_init_major_heap+0x177>
  407c72:	48 c7 40 f8 00 00 00 	movq   $0x0,-0x8(%rax)
  407c79:	00 
  407c7a:	48 8b 35 7f 97 23 00 	mov    0x23977f(%rip),%rsi        # 641400 <caml_heap_start>
  407c81:	bf 01 00 00 00       	mov    $0x1,%edi
  407c86:	48 8b 46 f0          	mov    -0x10(%rsi),%rax
  407c8a:	48 c7 05 53 d4 22 00 	movq   $0x1,0x22d453(%rip)        # 6350e8 <caml_stat_heap_chunks>
  407c91:	01 00 00 00 
  407c95:	48 c1 e8 03          	shr    $0x3,%rax
  407c99:	48 8d 14 c6          	lea    (%rsi,%rax,8),%rdx
  407c9d:	48 89 05 5c d4 22 00 	mov    %rax,0x22d45c(%rip)        # 635100 <caml_stat_heap_wsz>
  407ca4:	48 89 05 4d d4 22 00 	mov    %rax,0x22d44d(%rip)        # 6350f8 <caml_stat_top_heap_wsz>
  407cab:	e8 a0 11 00 00       	callq  408e50 <caml_page_table_add>
  407cb0:	85 c0                	test   %eax,%eax
  407cb2:	0f 85 c3 00 00 00    	jne    407d7b <caml_init_major_heap+0x18b>
  407cb8:	e8 23 3b 01 00       	callq  41b7e0 <caml_fl_init_merge>
  407cbd:	48 8b 35 3c d4 22 00 	mov    0x22d43c(%rip),%rsi        # 635100 <caml_stat_heap_wsz>
  407cc4:	48 8b 3d 35 97 23 00 	mov    0x239735(%rip),%rdi        # 641400 <caml_heap_start>
  407ccb:	31 c9                	xor    %ecx,%ecx
  407ccd:	ba 01 00 00 00       	mov    $0x1,%edx
  407cd2:	e8 19 3f 01 00       	callq  41bbf0 <caml_make_free_blocks>
  407cd7:	bf 00 40 00 00       	mov    $0x4000,%edi
  407cdc:	c7 05 22 97 23 00 03 	movl   $0x3,0x239722(%rip)        # 641408 <caml_gc_phase>
  407ce3:	00 00 00 
  407ce6:	48 c7 05 a7 50 22 00 	movq   $0x800,0x2250a7(%rip)        # 62cd98 <gray_vals_size>
  407ced:	00 08 00 00 
  407cf1:	e8 9a 9f ff ff       	callq  401c90 <malloc@plt>
  407cf6:	48 85 c0             	test   %rax,%rax
  407cf9:	48 89 05 b0 50 22 00 	mov    %rax,0x2250b0(%rip)        # 62cdb0 <gray_vals>
  407d00:	74 6f                	je     407d71 <caml_init_major_heap+0x181>
  407d02:	48 89 05 9f 50 22 00 	mov    %rax,0x22509f(%rip)        # 62cda8 <gray_vals_cur>
  407d09:	48 05 00 40 00 00    	add    $0x4000,%rax
  407d0f:	c7 05 77 50 22 00 01 	movl   $0x1,0x225077(%rip)        # 62cd90 <heap_is_pure>
  407d16:	00 00 00 
  407d19:	48 89 05 80 50 22 00 	mov    %rax,0x225080(%rip)        # 62cda0 <gray_vals_end>
  407d20:	48 c7 05 b5 96 23 00 	movq   $0x0,0x2396b5(%rip)        # 6413e0 <caml_allocated_words>
  407d27:	00 00 00 00 
  407d2b:	b8 c0 cb 62 00       	mov    $0x62cbc0,%eax
  407d30:	48 c7 05 dd 96 23 00 	movq   $0x0,0x2396dd(%rip)        # 641418 <caml_extra_heap_resources>
  407d37:	00 00 00 00 
  407d3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  407d40:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  407d47:	48 83 c0 08          	add    $0x8,%rax
  407d4b:	48 3d 50 cd 62 00    	cmp    $0x62cd50,%rax
  407d51:	75 ed                	jne    407d40 <caml_init_major_heap+0x150>
  407d53:	48 83 c4 08          	add    $0x8,%rsp
  407d57:	c3                   	retq   
  407d58:	bf 00 80 07 00       	mov    $0x78000,%edi
  407d5d:	b8 00 f0 00 00       	mov    $0xf000,%eax
  407d62:	e9 e8 fe ff ff       	jmpq   407c4f <caml_init_major_heap+0x5f>
  407d67:	bf 38 db 41 00       	mov    $0x41db38,%edi
  407d6c:	e8 7f 3f 01 00       	callq  41bcf0 <caml_fatal_error>
  407d71:	bf a8 db 41 00       	mov    $0x41dba8,%edi
  407d76:	e8 75 3f 01 00       	callq  41bcf0 <caml_fatal_error>
  407d7b:	bf 70 db 41 00       	mov    $0x41db70,%edi
  407d80:	e8 6b 3f 01 00       	callq  41bcf0 <caml_fatal_error>
  407d85:	90                   	nop
  407d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  407d8d:	00 00 00 

0000000000407d90 <caml_set_major_window>:
  407d90:	8b 05 da 48 22 00    	mov    0x2248da(%rip),%eax        # 62c670 <caml_major_window>
  407d96:	39 f8                	cmp    %edi,%eax
  407d98:	0f 84 cd 00 00 00    	je     407e6b <caml_set_major_window+0xdb>
  407d9e:	85 c0                	test   %eax,%eax
  407da0:	0f 8e e2 00 00 00    	jle    407e88 <caml_set_major_window+0xf8>
  407da6:	83 e8 01             	sub    $0x1,%eax
  407da9:	ba c0 cb 62 00       	mov    $0x62cbc0,%edx
  407dae:	49 b8 00 00 00 00 00 	movabs $0x8000000000000000,%r8
  407db5:	00 00 80 
  407db8:	48 8d 0c c5 c8 cb 62 	lea    0x62cbc8(,%rax,8),%rcx
  407dbf:	00 
  407dc0:	f2 0f 10 0d 38 5e 01 	movsd  0x15e38(%rip),%xmm1        # 41dc00 <caml_absf_mask+0x240>
  407dc7:	00 
  407dc8:	31 c0                	xor    %eax,%eax
  407dca:	eb 12                	jmp    407dde <caml_set_major_window+0x4e>
  407dcc:	0f 1f 40 00          	nopl   0x0(%rax)
  407dd0:	48 83 c2 08          	add    $0x8,%rdx
  407dd4:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  407dd9:	48 39 ca             	cmp    %rcx,%rdx
  407ddc:	74 2d                	je     407e0b <caml_set_major_window+0x7b>
  407dde:	48 85 c0             	test   %rax,%rax
  407de1:	78 6d                	js     407e50 <caml_set_major_window+0xc0>
  407de3:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407de7:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  407dec:	f2 0f 58 02          	addsd  (%rdx),%xmm0
  407df0:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  407df4:	72 da                	jb     407dd0 <caml_set_major_window+0x40>
  407df6:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
  407dfa:	48 83 c2 08          	add    $0x8,%rdx
  407dfe:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  407e03:	4c 31 c0             	xor    %r8,%rax
  407e06:	48 39 ca             	cmp    %rcx,%rdx
  407e09:	75 d3                	jne    407dde <caml_set_major_window+0x4e>
  407e0b:	85 ff                	test   %edi,%edi
  407e0d:	7e 36                	jle    407e45 <caml_set_major_window+0xb5>
  407e0f:	31 d2                	xor    %edx,%edx
  407e11:	48 63 cf             	movslq %edi,%rcx
  407e14:	48 f7 f1             	div    %rcx
  407e17:	48 85 c0             	test   %rax,%rax
  407e1a:	78 51                	js     407e6d <caml_set_major_window+0xdd>
  407e1c:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407e20:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  407e25:	8d 57 ff             	lea    -0x1(%rdi),%edx
  407e28:	b8 c0 cb 62 00       	mov    $0x62cbc0,%eax
  407e2d:	48 8d 14 d5 c8 cb 62 	lea    0x62cbc8(,%rdx,8),%rdx
  407e34:	00 
  407e35:	0f 1f 00             	nopl   (%rax)
  407e38:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  407e3c:	48 83 c0 08          	add    $0x8,%rax
  407e40:	48 39 d0             	cmp    %rdx,%rax
  407e43:	75 f3                	jne    407e38 <caml_set_major_window+0xa8>
  407e45:	89 3d 25 48 22 00    	mov    %edi,0x224825(%rip)        # 62c670 <caml_major_window>
  407e4b:	c3                   	retq   
  407e4c:	0f 1f 40 00          	nopl   0x0(%rax)
  407e50:	48 89 c6             	mov    %rax,%rsi
  407e53:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407e57:	48 d1 ee             	shr    %rsi
  407e5a:	83 e0 01             	and    $0x1,%eax
  407e5d:	48 09 c6             	or     %rax,%rsi
  407e60:	f2 48 0f 2a c6       	cvtsi2sd %rsi,%xmm0
  407e65:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  407e69:	eb 81                	jmp    407dec <caml_set_major_window+0x5c>
  407e6b:	f3 c3                	repz retq 
  407e6d:	48 89 c2             	mov    %rax,%rdx
  407e70:	66 0f ef c0          	pxor   %xmm0,%xmm0
  407e74:	48 d1 ea             	shr    %rdx
  407e77:	83 e0 01             	and    $0x1,%eax
  407e7a:	48 09 c2             	or     %rax,%rdx
  407e7d:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  407e82:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  407e86:	eb 9d                	jmp    407e25 <caml_set_major_window+0x95>
  407e88:	31 c0                	xor    %eax,%eax
  407e8a:	e9 7c ff ff ff       	jmpq   407e0b <caml_set_major_window+0x7b>
  407e8f:	90                   	nop

0000000000407e90 <alloc_generic_table>:
  407e90:	41 54                	push   %r12
  407e92:	55                   	push   %rbp
  407e93:	48 89 cd             	mov    %rcx,%rbp
  407e96:	53                   	push   %rbx
  407e97:	48 89 fb             	mov    %rdi,%rbx
  407e9a:	48 89 77 28          	mov    %rsi,0x28(%rdi)
  407e9e:	48 89 57 30          	mov    %rdx,0x30(%rdi)
  407ea2:	48 8d 3c 16          	lea    (%rsi,%rdx,1),%rdi
  407ea6:	48 0f af f9          	imul   %rcx,%rdi
  407eaa:	e8 21 19 00 00       	callq  4097d0 <caml_stat_alloc>
  407eaf:	48 8b 3b             	mov    (%rbx),%rdi
  407eb2:	49 89 c4             	mov    %rax,%r12
  407eb5:	48 85 ff             	test   %rdi,%rdi
  407eb8:	74 05                	je     407ebf <alloc_generic_table+0x2f>
  407eba:	e8 31 19 00 00       	callq  4097f0 <caml_stat_free>
  407ebf:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
  407ec3:	48 89 e8             	mov    %rbp,%rax
  407ec6:	4c 89 23             	mov    %r12,(%rbx)
  407ec9:	4c 89 63 18          	mov    %r12,0x18(%rbx)
  407ecd:	48 0f af c1          	imul   %rcx,%rax
  407ed1:	48 03 4b 30          	add    0x30(%rbx),%rcx
  407ed5:	48 0f af e9          	imul   %rcx,%rbp
  407ed9:	4c 01 e0             	add    %r12,%rax
  407edc:	48 89 43 10          	mov    %rax,0x10(%rbx)
  407ee0:	48 89 43 20          	mov    %rax,0x20(%rbx)
  407ee4:	4c 01 e5             	add    %r12,%rbp
  407ee7:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
  407eeb:	5b                   	pop    %rbx
  407eec:	5d                   	pop    %rbp
  407eed:	41 5c                	pop    %r12
  407eef:	c3                   	retq   

0000000000407ef0 <realloc_generic_table.isra.1>:
  407ef0:	41 56                	push   %r14
  407ef2:	41 55                	push   %r13
  407ef4:	41 54                	push   %r12
  407ef6:	55                   	push   %rbp
  407ef7:	53                   	push   %rbx
  407ef8:	48 89 fb             	mov    %rdi,%rbx
  407efb:	48 89 f7             	mov    %rsi,%rdi
  407efe:	4c 8b 0b             	mov    (%rbx),%r9
  407f01:	4d 85 c9             	test   %r9,%r9
  407f04:	0f 84 ce 00 00 00    	je     407fd8 <realloc_generic_table.isra.1+0xe8>
  407f0a:	48 89 ce             	mov    %rcx,%rsi
  407f0d:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
  407f11:	48 39 4b 20          	cmp    %rcx,0x20(%rbx)
  407f15:	4d 89 c5             	mov    %r8,%r13
  407f18:	48 89 d0             	mov    %rdx,%rax
  407f1b:	49 89 fe             	mov    %rdi,%r14
  407f1e:	0f 84 8c 00 00 00    	je     407fb0 <realloc_generic_table.isra.1+0xc0>
  407f24:	48 8b 43 28          	mov    0x28(%rbx),%rax
  407f28:	4c 8b 63 18          	mov    0x18(%rbx),%r12
  407f2c:	48 8d 2c 00          	lea    (%rax,%rax,1),%rbp
  407f30:	4d 29 cc             	sub    %r9,%r12
  407f33:	48 89 6b 28          	mov    %rbp,0x28(%rbx)
  407f37:	48 03 6b 30          	add    0x30(%rbx),%rbp
  407f3b:	48 0f af ef          	imul   %rdi,%rbp
  407f3f:	bf 08 00 00 00       	mov    $0x8,%edi
  407f44:	48 8d 95 ff 03 00 00 	lea    0x3ff(%rbp),%rdx
  407f4b:	48 85 ed             	test   %rbp,%rbp
  407f4e:	48 0f 49 d5          	cmovns %rbp,%rdx
  407f52:	48 c1 fa 0a          	sar    $0xa,%rdx
  407f56:	e8 55 3d 01 00       	callq  41bcb0 <caml_gc_message>
  407f5b:	48 8b 3b             	mov    (%rbx),%rdi
  407f5e:	48 89 ee             	mov    %rbp,%rsi
  407f61:	e8 9a 9d ff ff       	callq  401d00 <realloc@plt>
  407f66:	48 85 c0             	test   %rax,%rax
  407f69:	48 89 03             	mov    %rax,(%rbx)
  407f6c:	0f 84 89 00 00 00    	je     407ffb <realloc_generic_table.isra.1+0x10b>
  407f72:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
  407f76:	48 89 fa             	mov    %rdi,%rdx
  407f79:	48 03 53 30          	add    0x30(%rbx),%rdx
  407f7d:	49 0f af fe          	imul   %r14,%rdi
  407f81:	49 0f af d6          	imul   %r14,%rdx
  407f85:	48 01 c7             	add    %rax,%rdi
  407f88:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
  407f8c:	48 01 c2             	add    %rax,%rdx
  407f8f:	4c 01 e0             	add    %r12,%rax
  407f92:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  407f96:	48 89 43 18          	mov    %rax,0x18(%rbx)
  407f9a:	48 89 53 20          	mov    %rdx,0x20(%rbx)
  407f9e:	5b                   	pop    %rbx
  407f9f:	5d                   	pop    %rbp
  407fa0:	41 5c                	pop    %r12
  407fa2:	41 5d                	pop    %r13
  407fa4:	41 5e                	pop    %r14
  407fa6:	c3                   	retq   
  407fa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  407fae:	00 00 
  407fb0:	48 89 c6             	mov    %rax,%rsi
  407fb3:	31 d2                	xor    %edx,%edx
  407fb5:	bf 08 00 00 00       	mov    $0x8,%edi
  407fba:	e8 f1 3c 01 00       	callq  41bcb0 <caml_gc_message>
  407fbf:	48 8b 43 08          	mov    0x8(%rbx),%rax
  407fc3:	48 89 43 20          	mov    %rax,0x20(%rbx)
  407fc7:	5b                   	pop    %rbx
  407fc8:	5d                   	pop    %rbp
  407fc9:	41 5c                	pop    %r12
  407fcb:	41 5d                	pop    %r13
  407fcd:	41 5e                	pop    %r14
  407fcf:	e9 cc 2a 01 00       	jmpq   41aaa0 <caml_request_minor_gc>
  407fd4:	0f 1f 40 00          	nopl   0x0(%rax)
  407fd8:	48 8b 35 51 94 23 00 	mov    0x239451(%rip),%rsi        # 641430 <caml_minor_heap_wsz>
  407fdf:	48 89 f9             	mov    %rdi,%rcx
  407fe2:	48 89 df             	mov    %rbx,%rdi
  407fe5:	5b                   	pop    %rbx
  407fe6:	5d                   	pop    %rbp
  407fe7:	41 5c                	pop    %r12
  407fe9:	41 5d                	pop    %r13
  407feb:	41 5e                	pop    %r14
  407fed:	48 c1 ee 03          	shr    $0x3,%rsi
  407ff1:	ba 00 01 00 00       	mov    $0x100,%edx
  407ff6:	e9 95 fe ff ff       	jmpq   407e90 <alloc_generic_table>
  407ffb:	4c 89 ef             	mov    %r13,%rdi
  407ffe:	e8 ed 3c 01 00       	callq  41bcf0 <caml_fatal_error>
  408003:	0f 1f 00             	nopl   (%rax)
  408006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40800d:	00 00 00 

0000000000408010 <caml_alloc_table>:
  408010:	b9 08 00 00 00       	mov    $0x8,%ecx
  408015:	e9 76 fe ff ff       	jmpq   407e90 <alloc_generic_table>
  40801a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000408020 <caml_alloc_ephe_table>:
  408020:	b9 10 00 00 00       	mov    $0x10,%ecx
  408025:	e9 66 fe ff ff       	jmpq   407e90 <alloc_generic_table>
  40802a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000408030 <caml_alloc_custom_table>:
  408030:	b9 18 00 00 00       	mov    $0x18,%ecx
  408035:	e9 56 fe ff ff       	jmpq   407e90 <alloc_generic_table>
  40803a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000408040 <caml_oldify_one>:
  408040:	41 55                	push   %r13
  408042:	41 54                	push   %r12
  408044:	49 89 f4             	mov    %rsi,%r12
  408047:	55                   	push   %rbp
  408048:	53                   	push   %rbx
  408049:	48 89 fb             	mov    %rdi,%rbx
  40804c:	48 83 ec 08          	sub    $0x8,%rsp
  408050:	f6 c3 01             	test   $0x1,%bl
  408053:	75 0f                	jne    408064 <caml_oldify_one+0x24>
  408055:	48 8b 05 6c 4e 22 00 	mov    0x224e6c(%rip),%rax        # 62cec8 <caml_young_end>
  40805c:	48 89 dd             	mov    %rbx,%rbp
  40805f:	48 39 c3             	cmp    %rax,%rbx
  408062:	72 14                	jb     408078 <caml_oldify_one+0x38>
  408064:	49 89 1c 24          	mov    %rbx,(%r12)
  408068:	48 83 c4 08          	add    $0x8,%rsp
  40806c:	5b                   	pop    %rbx
  40806d:	5d                   	pop    %rbp
  40806e:	41 5c                	pop    %r12
  408070:	41 5d                	pop    %r13
  408072:	c3                   	retq   
  408073:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408078:	48 8b 15 51 4e 22 00 	mov    0x224e51(%rip),%rdx        # 62ced0 <caml_young_start>
  40807f:	48 39 d3             	cmp    %rdx,%rbx
  408082:	76 e0                	jbe    408064 <caml_oldify_one+0x24>
  408084:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  408088:	4c 8d 6b f8          	lea    -0x8(%rbx),%r13
  40808c:	48 85 ff             	test   %rdi,%rdi
  40808f:	0f 84 eb 00 00 00    	je     408180 <caml_oldify_one+0x140>
  408095:	40 0f b6 f7          	movzbl %dil,%esi
  408099:	81 fe f8 00 00 00    	cmp    $0xf8,%esi
  40809f:	0f 86 8b 00 00 00    	jbe    408130 <caml_oldify_one+0xf0>
  4080a5:	81 fe fa 00 00 00    	cmp    $0xfa,%esi
  4080ab:	0f 87 e7 00 00 00    	ja     408198 <caml_oldify_one+0x158>
  4080b1:	81 fe f9 00 00 00    	cmp    $0xf9,%esi
  4080b7:	0f 84 23 01 00 00    	je     4081e0 <caml_oldify_one+0x1a0>
  4080bd:	48 8b 1b             	mov    (%rbx),%rbx
  4080c0:	f6 c3 01             	test   $0x1,%bl
  4080c3:	75 8b                	jne    408050 <caml_oldify_one+0x10>
  4080c5:	48 39 d8             	cmp    %rbx,%rax
  4080c8:	0f 86 9a 00 00 00    	jbe    408168 <caml_oldify_one+0x128>
  4080ce:	48 39 da             	cmp    %rbx,%rdx
  4080d1:	0f 83 91 00 00 00    	jae    408168 <caml_oldify_one+0x128>
  4080d7:	48 83 7b f8 00       	cmpq   $0x0,-0x8(%rbx)
  4080dc:	48 8d 43 f8          	lea    -0x8(%rbx),%rax
  4080e0:	75 07                	jne    4080e9 <caml_oldify_one+0xa9>
  4080e2:	48 8b 03             	mov    (%rbx),%rax
  4080e5:	48 83 e8 08          	sub    $0x8,%rax
  4080e9:	0f b6 00             	movzbl (%rax),%eax
  4080ec:	8d 90 0a ff ff ff    	lea    -0xf6(%rax),%edx
  4080f2:	83 e2 fb             	and    $0xfffffffb,%edx
  4080f5:	74 0b                	je     408102 <caml_oldify_one+0xc2>
  4080f7:	3d fd 00 00 00       	cmp    $0xfd,%eax
  4080fc:	0f 85 4e ff ff ff    	jne    408050 <caml_oldify_one+0x10>
  408102:	be fa 00 00 00       	mov    $0xfa,%esi
  408107:	bf 01 00 00 00       	mov    $0x1,%edi
  40810c:	e8 ff 12 00 00       	callq  409410 <caml_alloc_shr>
  408111:	49 89 04 24          	mov    %rax,(%r12)
  408115:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
  40811c:	00 
  40811d:	49 89 c4             	mov    %rax,%r12
  408120:	48 89 45 00          	mov    %rax,0x0(%rbp)
  408124:	e9 27 ff ff ff       	jmpq   408050 <caml_oldify_one+0x10>
  408129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  408130:	48 c1 ef 0a          	shr    $0xa,%rdi
  408134:	48 89 fd             	mov    %rdi,%rbp
  408137:	e8 d4 12 00 00       	callq  409410 <caml_alloc_shr>
  40813c:	48 83 fd 01          	cmp    $0x1,%rbp
  408140:	49 89 04 24          	mov    %rax,(%r12)
  408144:	48 8b 13             	mov    (%rbx),%rdx
  408147:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
  40814e:	00 
  40814f:	48 89 03             	mov    %rax,(%rbx)
  408152:	0f 87 b1 00 00 00    	ja     408209 <caml_oldify_one+0x1c9>
  408158:	49 89 c4             	mov    %rax,%r12
  40815b:	48 89 d3             	mov    %rdx,%rbx
  40815e:	e9 ed fe ff ff       	jmpq   408050 <caml_oldify_one+0x10>
  408163:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408168:	48 89 df             	mov    %rbx,%rdi
  40816b:	e8 d0 0b 00 00       	callq  408d40 <caml_page_table_lookup>
  408170:	a8 07                	test   $0x7,%al
  408172:	74 8e                	je     408102 <caml_oldify_one+0xc2>
  408174:	0f b6 43 f8          	movzbl -0x8(%rbx),%eax
  408178:	e9 6f ff ff ff       	jmpq   4080ec <caml_oldify_one+0xac>
  40817d:	0f 1f 00             	nopl   (%rax)
  408180:	48 8b 03             	mov    (%rbx),%rax
  408183:	49 89 04 24          	mov    %rax,(%r12)
  408187:	48 83 c4 08          	add    $0x8,%rsp
  40818b:	5b                   	pop    %rbx
  40818c:	5d                   	pop    %rbp
  40818d:	41 5c                	pop    %r12
  40818f:	41 5d                	pop    %r13
  408191:	c3                   	retq   
  408192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408198:	48 c1 ef 0a          	shr    $0xa,%rdi
  40819c:	48 89 fd             	mov    %rdi,%rbp
  40819f:	e8 6c 12 00 00       	callq  409410 <caml_alloc_shr>
  4081a4:	31 d2                	xor    %edx,%edx
  4081a6:	48 85 ed             	test   %rbp,%rbp
  4081a9:	74 16                	je     4081c1 <caml_oldify_one+0x181>
  4081ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4081b0:	48 8b 0c d3          	mov    (%rbx,%rdx,8),%rcx
  4081b4:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
  4081b8:	48 83 c2 01          	add    $0x1,%rdx
  4081bc:	48 39 d5             	cmp    %rdx,%rbp
  4081bf:	75 ef                	jne    4081b0 <caml_oldify_one+0x170>
  4081c1:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
  4081c8:	00 
  4081c9:	48 89 03             	mov    %rax,(%rbx)
  4081cc:	49 89 04 24          	mov    %rax,(%r12)
  4081d0:	48 83 c4 08          	add    $0x8,%rsp
  4081d4:	5b                   	pop    %rbx
  4081d5:	5d                   	pop    %rbp
  4081d6:	41 5c                	pop    %r12
  4081d8:	41 5d                	pop    %r13
  4081da:	c3                   	retq   
  4081db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4081e0:	48 c1 ef 0a          	shr    $0xa,%rdi
  4081e4:	4c 89 e6             	mov    %r12,%rsi
  4081e7:	48 8d 2c fd 00 00 00 	lea    0x0(,%rdi,8),%rbp
  4081ee:	00 
  4081ef:	48 89 df             	mov    %rbx,%rdi
  4081f2:	48 29 ef             	sub    %rbp,%rdi
  4081f5:	e8 46 fe ff ff       	callq  408040 <caml_oldify_one>
  4081fa:	49 01 2c 24          	add    %rbp,(%r12)
  4081fe:	48 83 c4 08          	add    $0x8,%rsp
  408202:	5b                   	pop    %rbx
  408203:	5d                   	pop    %rbp
  408204:	41 5c                	pop    %r12
  408206:	41 5d                	pop    %r13
  408208:	c3                   	retq   
  408209:	48 89 10             	mov    %rdx,(%rax)
  40820c:	48 8b 15 c5 4c 22 00 	mov    0x224cc5(%rip),%rdx        # 62ced8 <oldify_todo_list>
  408213:	48 89 1d be 4c 22 00 	mov    %rbx,0x224cbe(%rip)        # 62ced8 <oldify_todo_list>
  40821a:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40821e:	e9 45 fe ff ff       	jmpq   408068 <caml_oldify_one+0x28>
  408223:	0f 1f 00             	nopl   (%rax)
  408226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40822d:	00 00 00 

0000000000408230 <caml_oldify_mopup>:
  408230:	41 56                	push   %r14
  408232:	41 55                	push   %r13
  408234:	41 54                	push   %r12
  408236:	55                   	push   %rbp
  408237:	53                   	push   %rbx
  408238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40823f:	00 
  408240:	4c 8b 25 91 4c 22 00 	mov    0x224c91(%rip),%r12        # 62ced8 <oldify_todo_list>
  408247:	4d 85 e4             	test   %r12,%r12
  40824a:	0f 84 a8 00 00 00    	je     4082f8 <caml_oldify_mopup+0xc8>
  408250:	4d 8b 34 24          	mov    (%r12),%r14
  408254:	49 8b 3e             	mov    (%r14),%rdi
  408257:	49 8b 46 08          	mov    0x8(%r14),%rax
  40825b:	49 8d 5e 08          	lea    0x8(%r14),%rbx
  40825f:	40 f6 c7 01          	test   $0x1,%dil
  408263:	48 89 05 6e 4c 22 00 	mov    %rax,0x224c6e(%rip)        # 62ced8 <oldify_todo_list>
  40826a:	75 24                	jne    408290 <caml_oldify_mopup+0x60>
  40826c:	48 3b 3d 55 4c 22 00 	cmp    0x224c55(%rip),%rdi        # 62cec8 <caml_young_end>
  408273:	73 1b                	jae    408290 <caml_oldify_mopup+0x60>
  408275:	48 3b 3d 54 4c 22 00 	cmp    0x224c54(%rip),%rdi        # 62ced0 <caml_young_start>
  40827c:	76 12                	jbe    408290 <caml_oldify_mopup+0x60>
  40827e:	4c 89 f6             	mov    %r14,%rsi
  408281:	e8 ba fd ff ff       	callq  408040 <caml_oldify_one>
  408286:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40828d:	00 00 00 
  408290:	4d 29 f4             	sub    %r14,%r12
  408293:	49 81 7e f8 ff 07 00 	cmpq   $0x7ff,-0x8(%r14)
  40829a:	00 
  40829b:	4d 8d 6e f8          	lea    -0x8(%r14),%r13
  40829f:	bd 01 00 00 00       	mov    $0x1,%ebp
  4082a4:	77 43                	ja     4082e9 <caml_oldify_mopup+0xb9>
  4082a6:	eb 98                	jmp    408240 <caml_oldify_mopup+0x10>
  4082a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4082af:	00 
  4082b0:	48 3b 3d 11 4c 22 00 	cmp    0x224c11(%rip),%rdi        # 62cec8 <caml_young_end>
  4082b7:	73 3a                	jae    4082f3 <caml_oldify_mopup+0xc3>
  4082b9:	48 3b 3d 10 4c 22 00 	cmp    0x224c10(%rip),%rdi        # 62ced0 <caml_young_start>
  4082c0:	76 31                	jbe    4082f3 <caml_oldify_mopup+0xc3>
  4082c2:	48 89 de             	mov    %rbx,%rsi
  4082c5:	e8 76 fd ff ff       	callq  408040 <caml_oldify_one>
  4082ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4082d0:	49 8b 45 00          	mov    0x0(%r13),%rax
  4082d4:	48 83 c5 01          	add    $0x1,%rbp
  4082d8:	48 83 c3 08          	add    $0x8,%rbx
  4082dc:	48 c1 e8 0a          	shr    $0xa,%rax
  4082e0:	48 39 e8             	cmp    %rbp,%rax
  4082e3:	0f 86 57 ff ff ff    	jbe    408240 <caml_oldify_mopup+0x10>
  4082e9:	49 8b 3c 1c          	mov    (%r12,%rbx,1),%rdi
  4082ed:	40 f6 c7 01          	test   $0x1,%dil
  4082f1:	74 bd                	je     4082b0 <caml_oldify_mopup+0x80>
  4082f3:	48 89 3b             	mov    %rdi,(%rbx)
  4082f6:	eb d8                	jmp    4082d0 <caml_oldify_mopup+0xa0>
  4082f8:	48 8b 1d 21 4b 22 00 	mov    0x224b21(%rip),%rbx        # 62ce20 <caml_ephe_ref_table>
  4082ff:	48 3b 1d 32 4b 22 00 	cmp    0x224b32(%rip),%rbx        # 62ce38 <caml_ephe_ref_table+0x18>
  408306:	73 75                	jae    40837d <caml_oldify_mopup+0x14d>
  408308:	45 31 d2             	xor    %r10d,%r10d
  40830b:	eb 10                	jmp    40831d <caml_oldify_mopup+0xed>
  40830d:	0f 1f 00             	nopl   (%rax)
  408310:	48 83 c3 10          	add    $0x10,%rbx
  408314:	48 39 1d 1d 4b 22 00 	cmp    %rbx,0x224b1d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  40831b:	76 57                	jbe    408374 <caml_oldify_mopup+0x144>
  40831d:	48 83 7b 08 01       	cmpq   $0x1,0x8(%rbx)
  408322:	75 ec                	jne    408310 <caml_oldify_mopup+0xe0>
  408324:	48 8b 13             	mov    (%rbx),%rdx
  408327:	48 8b 0d e2 44 22 00 	mov    0x2244e2(%rip),%rcx        # 62c810 <caml_ephe_none>
  40832e:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
  408332:	48 8d 72 08          	lea    0x8(%rdx),%rsi
  408336:	48 39 cf             	cmp    %rcx,%rdi
  408339:	74 d5                	je     408310 <caml_oldify_mopup+0xe0>
  40833b:	40 f6 c7 01          	test   $0x1,%dil
  40833f:	75 cf                	jne    408310 <caml_oldify_mopup+0xe0>
  408341:	4c 8b 05 80 4b 22 00 	mov    0x224b80(%rip),%r8        # 62cec8 <caml_young_end>
  408348:	4c 39 c7             	cmp    %r8,%rdi
  40834b:	73 c3                	jae    408310 <caml_oldify_mopup+0xe0>
  40834d:	4c 8b 1d 7c 4b 22 00 	mov    0x224b7c(%rip),%r11        # 62ced0 <caml_young_start>
  408354:	4c 39 df             	cmp    %r11,%rdi
  408357:	76 b7                	jbe    408310 <caml_oldify_mopup+0xe0>
  408359:	48 83 7f f8 00       	cmpq   $0x0,-0x8(%rdi)
  40835e:	75 26                	jne    408386 <caml_oldify_mopup+0x156>
  408360:	48 8b 07             	mov    (%rdi),%rax
  408363:	48 83 c3 10          	add    $0x10,%rbx
  408367:	48 89 42 08          	mov    %rax,0x8(%rdx)
  40836b:	48 39 1d c6 4a 22 00 	cmp    %rbx,0x224ac6(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  408372:	77 a9                	ja     40831d <caml_oldify_mopup+0xed>
  408374:	45 85 d2             	test   %r10d,%r10d
  408377:	0f 85 c3 fe ff ff    	jne    408240 <caml_oldify_mopup+0x10>
  40837d:	5b                   	pop    %rbx
  40837e:	5d                   	pop    %rbp
  40837f:	41 5c                	pop    %r12
  408381:	41 5d                	pop    %r13
  408383:	41 5e                	pop    %r14
  408385:	c3                   	retq   
  408386:	48 8b 6a f8          	mov    -0x8(%rdx),%rbp
  40838a:	48 8d 42 10          	lea    0x10(%rdx),%rax
  40838e:	48 c1 ed 0a          	shr    $0xa,%rbp
  408392:	48 83 fd 02          	cmp    $0x2,%rbp
  408396:	4c 8d 0c ea          	lea    (%rdx,%rbp,8),%r9
  40839a:	76 35                	jbe    4083d1 <caml_oldify_mopup+0x1a1>
  40839c:	0f 1f 40 00          	nopl   0x0(%rax)
  4083a0:	48 8b 10             	mov    (%rax),%rdx
  4083a3:	48 39 d1             	cmp    %rdx,%rcx
  4083a6:	74 20                	je     4083c8 <caml_oldify_mopup+0x198>
  4083a8:	f6 c2 01             	test   $0x1,%dl
  4083ab:	75 1b                	jne    4083c8 <caml_oldify_mopup+0x198>
  4083ad:	49 39 d0             	cmp    %rdx,%r8
  4083b0:	76 16                	jbe    4083c8 <caml_oldify_mopup+0x198>
  4083b2:	49 39 d3             	cmp    %rdx,%r11
  4083b5:	73 11                	jae    4083c8 <caml_oldify_mopup+0x198>
  4083b7:	48 83 7a f8 00       	cmpq   $0x0,-0x8(%rdx)
  4083bc:	0f 85 4e ff ff ff    	jne    408310 <caml_oldify_mopup+0xe0>
  4083c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4083c8:	48 83 c0 08          	add    $0x8,%rax
  4083cc:	4c 39 c8             	cmp    %r9,%rax
  4083cf:	75 cf                	jne    4083a0 <caml_oldify_mopup+0x170>
  4083d1:	e8 6a fc ff ff       	callq  408040 <caml_oldify_one>
  4083d6:	41 ba 01 00 00 00    	mov    $0x1,%r10d
  4083dc:	e9 2f ff ff ff       	jmpq   408310 <caml_oldify_mopup+0xe0>
  4083e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4083e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4083ed:	00 00 00 

00000000004083f0 <caml_empty_minor_heap>:
  4083f0:	48 8b 05 b9 4a 22 00 	mov    0x224ab9(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  4083f7:	48 39 05 aa 4a 22 00 	cmp    %rax,0x224aaa(%rip)        # 62cea8 <caml_young_ptr>
  4083fe:	0f 84 ca 02 00 00    	je     4086ce <caml_empty_minor_heap+0x2de>
  408404:	55                   	push   %rbp
  408405:	53                   	push   %rbx
  408406:	48 83 ec 08          	sub    $0x8,%rsp
  40840a:	48 8b 05 9f 8f 23 00 	mov    0x238f9f(%rip),%rax        # 6413b0 <caml_minor_gc_begin_hook>
  408411:	48 85 c0             	test   %rax,%rax
  408414:	74 02                	je     408418 <caml_empty_minor_heap+0x28>
  408416:	ff d0                	callq  *%rax
  408418:	31 d2                	xor    %edx,%edx
  40841a:	be 20 dc 41 00       	mov    $0x41dc20,%esi
  40841f:	bf 02 00 00 00       	mov    $0x2,%edi
  408424:	48 8b 2d b5 8f 23 00 	mov    0x238fb5(%rip),%rbp        # 6413e0 <caml_allocated_words>
  40842b:	c7 05 8b 49 22 00 01 	movl   $0x1,0x22498b(%rip)        # 62cdc0 <caml_in_minor_collection>
  408432:	00 00 00 
  408435:	e8 76 38 01 00       	callq  41bcb0 <caml_gc_message>
  40843a:	e8 21 d4 ff ff       	callq  405860 <caml_oldify_local_roots>
  40843f:	48 8b 1d 1a 4a 22 00 	mov    0x224a1a(%rip),%rbx        # 62ce60 <caml_ref_table>
  408446:	48 3b 1d 2b 4a 22 00 	cmp    0x224a2b(%rip),%rbx        # 62ce78 <caml_ref_table+0x18>
  40844d:	73 1c                	jae    40846b <caml_empty_minor_heap+0x7b>
  40844f:	90                   	nop
  408450:	48 8b 03             	mov    (%rbx),%rax
  408453:	48 83 c3 08          	add    $0x8,%rbx
  408457:	48 8b 38             	mov    (%rax),%rdi
  40845a:	48 89 c6             	mov    %rax,%rsi
  40845d:	e8 de fb ff ff       	callq  408040 <caml_oldify_one>
  408462:	48 39 1d 0f 4a 22 00 	cmp    %rbx,0x224a0f(%rip)        # 62ce78 <caml_ref_table+0x18>
  408469:	77 e5                	ja     408450 <caml_empty_minor_heap+0x60>
  40846b:	e8 c0 fd ff ff       	callq  408230 <caml_oldify_mopup>
  408470:	48 8b 05 a9 49 22 00 	mov    0x2249a9(%rip),%rax        # 62ce20 <caml_ephe_ref_table>
  408477:	48 3b 05 ba 49 22 00 	cmp    0x2249ba(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  40847e:	73 5d                	jae    4084dd <caml_empty_minor_heap+0xed>
  408480:	48 8b 08             	mov    (%rax),%rcx
  408483:	48 8b 70 08          	mov    0x8(%rax),%rsi
  408487:	48 8b 51 f8          	mov    -0x8(%rcx),%rdx
  40848b:	48 c1 ea 0a          	shr    $0xa,%rdx
  40848f:	48 39 d6             	cmp    %rdx,%rsi
  408492:	73 3c                	jae    4084d0 <caml_empty_minor_heap+0xe0>
  408494:	48 8d 0c f1          	lea    (%rcx,%rsi,8),%rcx
  408498:	48 8b 35 71 43 22 00 	mov    0x224371(%rip),%rsi        # 62c810 <caml_ephe_none>
  40849f:	48 8b 11             	mov    (%rcx),%rdx
  4084a2:	48 39 f2             	cmp    %rsi,%rdx
  4084a5:	74 29                	je     4084d0 <caml_empty_minor_heap+0xe0>
  4084a7:	f6 c2 01             	test   $0x1,%dl
  4084aa:	75 24                	jne    4084d0 <caml_empty_minor_heap+0xe0>
  4084ac:	48 3b 15 15 4a 22 00 	cmp    0x224a15(%rip),%rdx        # 62cec8 <caml_young_end>
  4084b3:	73 1b                	jae    4084d0 <caml_empty_minor_heap+0xe0>
  4084b5:	48 3b 15 14 4a 22 00 	cmp    0x224a14(%rip),%rdx        # 62ced0 <caml_young_start>
  4084bc:	76 12                	jbe    4084d0 <caml_empty_minor_heap+0xe0>
  4084be:	48 83 7a f8 00       	cmpq   $0x0,-0x8(%rdx)
  4084c3:	0f 85 8f 01 00 00    	jne    408658 <caml_empty_minor_heap+0x268>
  4084c9:	48 8b 12             	mov    (%rdx),%rdx
  4084cc:	48 89 11             	mov    %rdx,(%rcx)
  4084cf:	90                   	nop
  4084d0:	48 83 c0 10          	add    $0x10,%rax
  4084d4:	48 39 05 5d 49 22 00 	cmp    %rax,0x22495d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  4084db:	77 a3                	ja     408480 <caml_empty_minor_heap+0x90>
  4084dd:	e8 9e 03 01 00       	callq  418880 <caml_final_update_minor_roots>
  4084e2:	48 8b 1d f7 48 22 00 	mov    0x2248f7(%rip),%rbx        # 62cde0 <caml_custom_table>
  4084e9:	48 39 1d 08 49 22 00 	cmp    %rbx,0x224908(%rip)        # 62cdf8 <caml_custom_table+0x18>
  4084f0:	77 21                	ja     408513 <caml_empty_minor_heap+0x123>
  4084f2:	eb 4a                	jmp    40853e <caml_empty_minor_heap+0x14e>
  4084f4:	0f 1f 40 00          	nopl   0x0(%rax)
  4084f8:	48 8b 07             	mov    (%rdi),%rax
  4084fb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4084ff:	48 85 c0             	test   %rax,%rax
  408502:	74 02                	je     408506 <caml_empty_minor_heap+0x116>
  408504:	ff d0                	callq  *%rax
  408506:	48 83 c3 18          	add    $0x18,%rbx
  40850a:	48 39 1d e7 48 22 00 	cmp    %rbx,0x2248e7(%rip)        # 62cdf8 <caml_custom_table+0x18>
  408511:	76 24                	jbe    408537 <caml_empty_minor_heap+0x147>
  408513:	48 8b 3b             	mov    (%rbx),%rdi
  408516:	48 83 7f f8 00       	cmpq   $0x0,-0x8(%rdi)
  40851b:	75 db                	jne    4084f8 <caml_empty_minor_heap+0x108>
  40851d:	48 8b 73 10          	mov    0x10(%rbx),%rsi
  408521:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  408525:	48 83 c3 18          	add    $0x18,%rbx
  408529:	e8 32 10 00 00       	callq  409560 <caml_adjust_gc_speed>
  40852e:	48 39 1d c3 48 22 00 	cmp    %rbx,0x2248c3(%rip)        # 62cdf8 <caml_custom_table+0x18>
  408535:	77 dc                	ja     408513 <caml_empty_minor_heap+0x123>
  408537:	48 8b 1d a2 48 22 00 	mov    0x2248a2(%rip),%rbx        # 62cde0 <caml_custom_table>
  40853e:	48 8b 15 6b 49 22 00 	mov    0x22496b(%rip),%rdx        # 62ceb0 <caml_young_alloc_end>
  408545:	66 0f ef c0          	pxor   %xmm0,%xmm0
  408549:	f2 0f 10 0d d7 cb 22 	movsd  0x22cbd7(%rip),%xmm1        # 635128 <caml_stat_minor_words>
  408550:	00 
  408551:	48 89 d0             	mov    %rdx,%rax
  408554:	48 2b 05 4d 49 22 00 	sub    0x22494d(%rip),%rax        # 62cea8 <caml_young_ptr>
  40855b:	48 c1 f8 03          	sar    $0x3,%rax
  40855f:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  408564:	48 8b 05 c5 8e 23 00 	mov    0x238ec5(%rip),%rax        # 641430 <caml_minor_heap_wsz>
  40856b:	48 85 c0             	test   %rax,%rax
  40856e:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
  408572:	f2 0f 11 0d ae cb 22 	movsd  %xmm1,0x22cbae(%rip)        # 635128 <caml_stat_minor_words>
  408579:	00 
  40857a:	0f 88 30 01 00 00    	js     4086b0 <caml_empty_minor_heap+0x2c0>
  408580:	66 0f ef c9          	pxor   %xmm1,%xmm1
  408584:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  408589:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  40858d:	48 8b 05 cc 48 22 00 	mov    0x2248cc(%rip),%rax        # 62ce60 <caml_ref_table>
  408594:	48 89 15 0d 49 22 00 	mov    %rdx,0x22490d(%rip)        # 62cea8 <caml_young_ptr>
  40859b:	be 63 f2 41 00       	mov    $0x41f263,%esi
  4085a0:	31 d2                	xor    %edx,%edx
  4085a2:	bf 02 00 00 00       	mov    $0x2,%edi
  4085a7:	48 89 1d 4a 48 22 00 	mov    %rbx,0x22484a(%rip)        # 62cdf8 <caml_custom_table+0x18>
  4085ae:	48 89 05 c3 48 22 00 	mov    %rax,0x2248c3(%rip)        # 62ce78 <caml_ref_table+0x18>
  4085b5:	48 8b 05 b4 48 22 00 	mov    0x2248b4(%rip),%rax        # 62ce70 <caml_ref_table+0x10>
  4085bc:	48 89 05 bd 48 22 00 	mov    %rax,0x2248bd(%rip)        # 62ce80 <caml_ref_table+0x20>
  4085c3:	48 8b 05 56 48 22 00 	mov    0x224856(%rip),%rax        # 62ce20 <caml_ephe_ref_table>
  4085ca:	48 89 05 67 48 22 00 	mov    %rax,0x224867(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  4085d1:	48 8b 05 58 48 22 00 	mov    0x224858(%rip),%rax        # 62ce30 <caml_ephe_ref_table+0x10>
  4085d8:	48 89 05 61 48 22 00 	mov    %rax,0x224861(%rip)        # 62ce40 <caml_ephe_ref_table+0x20>
  4085df:	48 8b 05 0a 48 22 00 	mov    0x22480a(%rip),%rax        # 62cdf0 <caml_custom_table+0x10>
  4085e6:	48 89 05 13 48 22 00 	mov    %rax,0x224813(%rip)        # 62ce00 <caml_custom_table+0x20>
  4085ed:	f2 0f 58 05 93 45 22 	addsd  0x224593(%rip),%xmm0        # 62cb88 <caml_gc_clock>
  4085f4:	00 
  4085f5:	f2 0f 11 05 8b 45 22 	movsd  %xmm0,0x22458b(%rip)        # 62cb88 <caml_gc_clock>
  4085fc:	00 
  4085fd:	e8 ae 36 01 00       	callq  41bcb0 <caml_gc_message>
  408602:	c7 05 b4 47 22 00 00 	movl   $0x0,0x2247b4(%rip)        # 62cdc0 <caml_in_minor_collection>
  408609:	00 00 00 
  40860c:	e8 1f 04 01 00       	callq  418a30 <caml_final_empty_young>
  408611:	48 8b 05 c8 8d 23 00 	mov    0x238dc8(%rip),%rax        # 6413e0 <caml_allocated_words>
  408618:	48 29 e8             	sub    %rbp,%rax
  40861b:	78 73                	js     408690 <caml_empty_minor_heap+0x2a0>
  40861d:	66 0f ef c0          	pxor   %xmm0,%xmm0
  408621:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  408626:	f2 0f 58 05 f2 ca 22 	addsd  0x22caf2(%rip),%xmm0        # 635120 <caml_stat_promoted_words>
  40862d:	00 
  40862e:	48 8b 05 73 8d 23 00 	mov    0x238d73(%rip),%rax        # 6413a8 <caml_minor_gc_end_hook>
  408635:	48 83 05 d3 ca 22 00 	addq   $0x1,0x22cad3(%rip)        # 635110 <caml_stat_minor_collections>
  40863c:	01 
  40863d:	48 85 c0             	test   %rax,%rax
  408640:	f2 0f 11 05 d8 ca 22 	movsd  %xmm0,0x22cad8(%rip)        # 635120 <caml_stat_promoted_words>
  408647:	00 
  408648:	74 36                	je     408680 <caml_empty_minor_heap+0x290>
  40864a:	48 83 c4 08          	add    $0x8,%rsp
  40864e:	5b                   	pop    %rbx
  40864f:	5d                   	pop    %rbp
  408650:	ff e0                	jmpq   *%rax
  408652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408658:	48 89 31             	mov    %rsi,(%rcx)
  40865b:	48 8b 10             	mov    (%rax),%rdx
  40865e:	48 83 c0 10          	add    $0x10,%rax
  408662:	48 8b 0d a7 41 22 00 	mov    0x2241a7(%rip),%rcx        # 62c810 <caml_ephe_none>
  408669:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  40866d:	48 39 05 c4 47 22 00 	cmp    %rax,0x2247c4(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  408674:	0f 87 06 fe ff ff    	ja     408480 <caml_empty_minor_heap+0x90>
  40867a:	e9 5e fe ff ff       	jmpq   4084dd <caml_empty_minor_heap+0xed>
  40867f:	90                   	nop
  408680:	48 83 c4 08          	add    $0x8,%rsp
  408684:	5b                   	pop    %rbx
  408685:	5d                   	pop    %rbp
  408686:	c3                   	retq   
  408687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40868e:	00 00 
  408690:	48 89 c2             	mov    %rax,%rdx
  408693:	66 0f ef c0          	pxor   %xmm0,%xmm0
  408697:	48 d1 ea             	shr    %rdx
  40869a:	83 e0 01             	and    $0x1,%eax
  40869d:	48 09 c2             	or     %rax,%rdx
  4086a0:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  4086a5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  4086a9:	e9 78 ff ff ff       	jmpq   408626 <caml_empty_minor_heap+0x236>
  4086ae:	66 90                	xchg   %ax,%ax
  4086b0:	48 89 c1             	mov    %rax,%rcx
  4086b3:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4086b7:	48 d1 e9             	shr    %rcx
  4086ba:	83 e0 01             	and    $0x1,%eax
  4086bd:	48 09 c1             	or     %rax,%rcx
  4086c0:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
  4086c5:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  4086c9:	e9 bb fe ff ff       	jmpq   408589 <caml_empty_minor_heap+0x199>
  4086ce:	e9 5d 03 01 00       	jmpq   418a30 <caml_final_empty_young>
  4086d3:	0f 1f 00             	nopl   (%rax)
  4086d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4086dd:	00 00 00 

00000000004086e0 <caml_set_minor_heap_size>:
  4086e0:	41 54                	push   %r12
  4086e2:	55                   	push   %rbp
  4086e3:	48 89 fd             	mov    %rdi,%rbp
  4086e6:	53                   	push   %rbx
  4086e7:	48 83 ec 10          	sub    $0x10,%rsp
  4086eb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4086f2:	00 00 
  4086f4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4086f9:	31 c0                	xor    %eax,%eax
  4086fb:	48 8b 05 ae 47 22 00 	mov    0x2247ae(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  408702:	48 39 05 9f 47 22 00 	cmp    %rax,0x22479f(%rip)        # 62cea8 <caml_young_ptr>
  408709:	74 24                	je     40872f <caml_set_minor_heap_size+0x4f>
  40870b:	48 8b 05 a6 47 22 00 	mov    0x2247a6(%rip),%rax        # 62ceb8 <caml_young_alloc_mid>
  408712:	c7 05 94 4c 23 00 00 	movl   $0x0,0x234c94(%rip)        # 63d3b0 <caml_requested_minor_gc>
  408719:	00 00 00 
  40871c:	48 89 05 75 47 22 00 	mov    %rax,0x224775(%rip)        # 62ce98 <caml_young_trigger>
  408723:	48 89 05 76 47 22 00 	mov    %rax,0x224776(%rip)        # 62cea0 <caml_young_limit>
  40872a:	e8 c1 fc ff ff       	callq  4083f0 <caml_empty_minor_heap>
  40872f:	31 f6                	xor    %esi,%esi
  408731:	48 89 e2             	mov    %rsp,%rdx
  408734:	48 89 ef             	mov    %rbp,%rdi
  408737:	e8 54 36 01 00       	callq  41bd90 <caml_aligned_malloc>
  40873c:	48 85 c0             	test   %rax,%rax
  40873f:	48 89 c3             	mov    %rax,%rbx
  408742:	0f 84 d1 01 00 00    	je     408919 <caml_set_minor_heap_size+0x239>
  408748:	4c 8d 24 28          	lea    (%rax,%rbp,1),%r12
  40874c:	48 89 c6             	mov    %rax,%rsi
  40874f:	bf 02 00 00 00       	mov    $0x2,%edi
  408754:	4c 89 e2             	mov    %r12,%rdx
  408757:	e8 f4 06 00 00       	callq  408e50 <caml_page_table_add>
  40875c:	85 c0                	test   %eax,%eax
  40875e:	0f 85 b5 01 00 00    	jne    408919 <caml_set_minor_heap_size+0x239>
  408764:	48 8b 35 65 47 22 00 	mov    0x224765(%rip),%rsi        # 62ced0 <caml_young_start>
  40876b:	48 85 f6             	test   %rsi,%rsi
  40876e:	74 1d                	je     40878d <caml_set_minor_heap_size+0xad>
  408770:	48 8b 15 51 47 22 00 	mov    0x224751(%rip),%rdx        # 62cec8 <caml_young_end>
  408777:	bf 02 00 00 00       	mov    $0x2,%edi
  40877c:	e8 2f 07 00 00       	callq  408eb0 <caml_page_table_remove>
  408781:	48 8b 3d 58 47 22 00 	mov    0x224758(%rip),%rdi        # 62cee0 <caml_young_base>
  408788:	e8 d3 91 ff ff       	callq  401960 <free@plt>
  40878d:	48 8b 04 24          	mov    (%rsp),%rax
  408791:	48 8b 3d c8 46 22 00 	mov    0x2246c8(%rip),%rdi        # 62ce60 <caml_ref_table>
  408798:	48 89 1d 31 47 22 00 	mov    %rbx,0x224731(%rip)        # 62ced0 <caml_young_start>
  40879f:	4c 89 25 22 47 22 00 	mov    %r12,0x224722(%rip)        # 62cec8 <caml_young_end>
  4087a6:	48 89 1d 13 47 22 00 	mov    %rbx,0x224713(%rip)        # 62cec0 <caml_young_alloc_start>
  4087ad:	4c 89 25 fc 46 22 00 	mov    %r12,0x2246fc(%rip)        # 62ceb0 <caml_young_alloc_end>
  4087b4:	48 89 05 25 47 22 00 	mov    %rax,0x224725(%rip)        # 62cee0 <caml_young_base>
  4087bb:	48 89 e8             	mov    %rbp,%rax
  4087be:	48 c1 ed 03          	shr    $0x3,%rbp
  4087c2:	48 c1 e8 04          	shr    $0x4,%rax
  4087c6:	48 85 ff             	test   %rdi,%rdi
  4087c9:	48 89 1d c8 46 22 00 	mov    %rbx,0x2246c8(%rip)        # 62ce98 <caml_young_trigger>
  4087d0:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
  4087d4:	48 89 1d c5 46 22 00 	mov    %rbx,0x2246c5(%rip)        # 62cea0 <caml_young_limit>
  4087db:	4c 89 25 c6 46 22 00 	mov    %r12,0x2246c6(%rip)        # 62cea8 <caml_young_ptr>
  4087e2:	48 89 2d 47 8c 23 00 	mov    %rbp,0x238c47(%rip)        # 641430 <caml_minor_heap_wsz>
  4087e9:	48 c7 05 94 46 22 00 	movq   $0x0,0x224694(%rip)        # 62ce88 <caml_ref_table+0x28>
  4087f0:	00 00 00 00 
  4087f4:	48 89 05 bd 46 22 00 	mov    %rax,0x2246bd(%rip)        # 62ceb8 <caml_young_alloc_mid>
  4087fb:	48 c7 05 8a 46 22 00 	movq   $0x0,0x22468a(%rip)        # 62ce90 <caml_ref_table+0x30>
  408802:	00 00 00 00 
  408806:	74 05                	je     40880d <caml_set_minor_heap_size+0x12d>
  408808:	e8 e3 0f 00 00       	callq  4097f0 <caml_stat_free>
  40880d:	48 8b 3d 0c 46 22 00 	mov    0x22460c(%rip),%rdi        # 62ce20 <caml_ephe_ref_table>
  408814:	48 c7 05 49 46 22 00 	movq   $0x0,0x224649(%rip)        # 62ce68 <caml_ref_table+0x8>
  40881b:	00 00 00 00 
  40881f:	48 c7 05 56 46 22 00 	movq   $0x0,0x224656(%rip)        # 62ce80 <caml_ref_table+0x20>
  408826:	00 00 00 00 
  40882a:	48 c7 05 3b 46 22 00 	movq   $0x0,0x22463b(%rip)        # 62ce70 <caml_ref_table+0x10>
  408831:	00 00 00 00 
  408835:	48 c7 05 38 46 22 00 	movq   $0x0,0x224638(%rip)        # 62ce78 <caml_ref_table+0x18>
  40883c:	00 00 00 00 
  408840:	48 c7 05 15 46 22 00 	movq   $0x0,0x224615(%rip)        # 62ce60 <caml_ref_table>
  408847:	00 00 00 00 
  40884b:	48 85 ff             	test   %rdi,%rdi
  40884e:	48 c7 05 ef 45 22 00 	movq   $0x0,0x2245ef(%rip)        # 62ce48 <caml_ephe_ref_table+0x28>
  408855:	00 00 00 00 
  408859:	48 c7 05 ec 45 22 00 	movq   $0x0,0x2245ec(%rip)        # 62ce50 <caml_ephe_ref_table+0x30>
  408860:	00 00 00 00 
  408864:	74 05                	je     40886b <caml_set_minor_heap_size+0x18b>
  408866:	e8 85 0f 00 00       	callq  4097f0 <caml_stat_free>
  40886b:	48 8b 3d 6e 45 22 00 	mov    0x22456e(%rip),%rdi        # 62cde0 <caml_custom_table>
  408872:	48 c7 05 ab 45 22 00 	movq   $0x0,0x2245ab(%rip)        # 62ce28 <caml_ephe_ref_table+0x8>
  408879:	00 00 00 00 
  40887d:	48 c7 05 b8 45 22 00 	movq   $0x0,0x2245b8(%rip)        # 62ce40 <caml_ephe_ref_table+0x20>
  408884:	00 00 00 00 
  408888:	48 c7 05 9d 45 22 00 	movq   $0x0,0x22459d(%rip)        # 62ce30 <caml_ephe_ref_table+0x10>
  40888f:	00 00 00 00 
  408893:	48 c7 05 9a 45 22 00 	movq   $0x0,0x22459a(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  40889a:	00 00 00 00 
  40889e:	48 c7 05 77 45 22 00 	movq   $0x0,0x224577(%rip)        # 62ce20 <caml_ephe_ref_table>
  4088a5:	00 00 00 00 
  4088a9:	48 85 ff             	test   %rdi,%rdi
  4088ac:	48 c7 05 51 45 22 00 	movq   $0x0,0x224551(%rip)        # 62ce08 <caml_custom_table+0x28>
  4088b3:	00 00 00 00 
  4088b7:	48 c7 05 4e 45 22 00 	movq   $0x0,0x22454e(%rip)        # 62ce10 <caml_custom_table+0x30>
  4088be:	00 00 00 00 
  4088c2:	74 05                	je     4088c9 <caml_set_minor_heap_size+0x1e9>
  4088c4:	e8 27 0f 00 00       	callq  4097f0 <caml_stat_free>
  4088c9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4088ce:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4088d5:	00 00 
  4088d7:	48 c7 05 06 45 22 00 	movq   $0x0,0x224506(%rip)        # 62cde8 <caml_custom_table+0x8>
  4088de:	00 00 00 00 
  4088e2:	48 c7 05 13 45 22 00 	movq   $0x0,0x224513(%rip)        # 62ce00 <caml_custom_table+0x20>
  4088e9:	00 00 00 00 
  4088ed:	48 c7 05 f8 44 22 00 	movq   $0x0,0x2244f8(%rip)        # 62cdf0 <caml_custom_table+0x10>
  4088f4:	00 00 00 00 
  4088f8:	48 c7 05 f5 44 22 00 	movq   $0x0,0x2244f5(%rip)        # 62cdf8 <caml_custom_table+0x18>
  4088ff:	00 00 00 00 
  408903:	48 c7 05 d2 44 22 00 	movq   $0x0,0x2244d2(%rip)        # 62cde0 <caml_custom_table>
  40890a:	00 00 00 00 
  40890e:	75 0e                	jne    40891e <caml_set_minor_heap_size+0x23e>
  408910:	48 83 c4 10          	add    $0x10,%rsp
  408914:	5b                   	pop    %rbx
  408915:	5d                   	pop    %rbp
  408916:	41 5c                	pop    %r12
  408918:	c3                   	retq   
  408919:	e8 e2 1d 01 00       	callq  41a700 <caml_raise_out_of_memory>
  40891e:	e8 4d 91 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  408923:	0f 1f 00             	nopl   (%rax)
  408926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40892d:	00 00 00 

0000000000408930 <caml_gc_dispatch>:
  408930:	53                   	push   %rbx
  408931:	48 8b 15 88 45 22 00 	mov    0x224588(%rip),%rdx        # 62cec0 <caml_young_alloc_start>
  408938:	48 8b 1d 59 45 22 00 	mov    0x224559(%rip),%rbx        # 62ce98 <caml_young_trigger>
  40893f:	48 39 d3             	cmp    %rdx,%rbx
  408942:	74 0e                	je     408952 <caml_gc_dispatch+0x22>
  408944:	8b 05 66 4a 23 00    	mov    0x234a66(%rip),%eax        # 63d3b0 <caml_requested_minor_gc>
  40894a:	85 c0                	test   %eax,%eax
  40894c:	0f 84 93 00 00 00    	je     4089e5 <caml_gc_dispatch+0xb5>
  408952:	48 8b 05 5f 45 22 00 	mov    0x22455f(%rip),%rax        # 62ceb8 <caml_young_alloc_mid>
  408959:	c7 05 4d 4a 23 00 00 	movl   $0x0,0x234a4d(%rip)        # 63d3b0 <caml_requested_minor_gc>
  408960:	00 00 00 
  408963:	48 89 05 2e 45 22 00 	mov    %rax,0x22452e(%rip)        # 62ce98 <caml_young_trigger>
  40896a:	48 89 05 2f 45 22 00 	mov    %rax,0x22452f(%rip)        # 62cea0 <caml_young_limit>
  408971:	e8 7a fa ff ff       	callq  4083f0 <caml_empty_minor_heap>
  408976:	83 3d 8b 8a 23 00 03 	cmpl   $0x3,0x238a8b(%rip)        # 641408 <caml_gc_phase>
  40897d:	0f 84 9d 00 00 00    	je     408a20 <caml_gc_dispatch+0xf0>
  408983:	e8 e8 fb 00 00       	callq  418570 <caml_final_do_calls>
  408988:	eb 33                	jmp    4089bd <caml_gc_dispatch+0x8d>
  40898a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408990:	48 8b 05 21 45 22 00 	mov    0x224521(%rip),%rax        # 62ceb8 <caml_young_alloc_mid>
  408997:	c7 05 0f 4a 23 00 00 	movl   $0x0,0x234a0f(%rip)        # 63d3b0 <caml_requested_minor_gc>
  40899e:	00 00 00 
  4089a1:	48 89 05 f0 44 22 00 	mov    %rax,0x2244f0(%rip)        # 62ce98 <caml_young_trigger>
  4089a8:	48 89 05 f1 44 22 00 	mov    %rax,0x2244f1(%rip)        # 62cea0 <caml_young_limit>
  4089af:	e8 3c fa ff ff       	callq  4083f0 <caml_empty_minor_heap>
  4089b4:	83 3d 4d 8a 23 00 03 	cmpl   $0x3,0x238a4d(%rip)        # 641408 <caml_gc_phase>
  4089bb:	74 53                	je     408a10 <caml_gc_dispatch+0xe0>
  4089bd:	48 8b 15 fc 44 22 00 	mov    0x2244fc(%rip),%rdx        # 62cec0 <caml_young_alloc_start>
  4089c4:	48 8b 05 dd 44 22 00 	mov    0x2244dd(%rip),%rax        # 62cea8 <caml_young_ptr>
  4089cb:	48 29 d0             	sub    %rdx,%rax
  4089ce:	48 3d 07 08 00 00    	cmp    $0x807,%rax
  4089d4:	7e ba                	jle    408990 <caml_gc_dispatch+0x60>
  4089d6:	48 39 d3             	cmp    %rdx,%rbx
  4089d9:	75 0a                	jne    4089e5 <caml_gc_dispatch+0xb5>
  4089db:	8b 05 d3 49 23 00    	mov    0x2349d3(%rip),%eax        # 63d3b4 <caml_requested_major_slice>
  4089e1:	85 c0                	test   %eax,%eax
  4089e3:	74 39                	je     408a1e <caml_gc_dispatch+0xee>
  4089e5:	5b                   	pop    %rbx
  4089e6:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
  4089ed:	c7 05 bd 49 23 00 00 	movl   $0x0,0x2349bd(%rip)        # 63d3b4 <caml_requested_major_slice>
  4089f4:	00 00 00 
  4089f7:	48 89 15 9a 44 22 00 	mov    %rdx,0x22449a(%rip)        # 62ce98 <caml_young_trigger>
  4089fe:	48 89 15 9b 44 22 00 	mov    %rdx,0x22449b(%rip)        # 62cea0 <caml_young_limit>
  408a05:	e9 56 e9 ff ff       	jmpq   407360 <caml_major_collection_slice>
  408a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408a10:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
  408a17:	e8 44 e9 ff ff       	callq  407360 <caml_major_collection_slice>
  408a1c:	eb 9f                	jmp    4089bd <caml_gc_dispatch+0x8d>
  408a1e:	5b                   	pop    %rbx
  408a1f:	c3                   	retq   
  408a20:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
  408a27:	e8 34 e9 ff ff       	callq  407360 <caml_major_collection_slice>
  408a2c:	e9 52 ff ff ff       	jmpq   408983 <caml_gc_dispatch+0x53>
  408a31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408a36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  408a3d:	00 00 00 

0000000000408a40 <caml_minor_collection>:
  408a40:	c7 05 66 49 23 00 01 	movl   $0x1,0x234966(%rip)        # 63d3b0 <caml_requested_minor_gc>
  408a47:	00 00 00 
  408a4a:	e9 e1 fe ff ff       	jmpq   408930 <caml_gc_dispatch>
  408a4f:	90                   	nop

0000000000408a50 <caml_check_urgent_gc>:
  408a50:	53                   	push   %rbx
  408a51:	48 83 ec 60          	sub    $0x60,%rsp
  408a55:	48 8b 1d ec 3e 22 00 	mov    0x223eec(%rip),%rbx        # 62c948 <caml_local_roots>
  408a5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  408a63:	00 00 
  408a65:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  408a6a:	31 c0                	xor    %eax,%eax
  408a6c:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  408a71:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  408a76:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  408a7d:	00 00 
  408a7f:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  408a84:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  408a8b:	00 00 
  408a8d:	48 89 05 b4 3e 22 00 	mov    %rax,0x223eb4(%rip)        # 62c948 <caml_local_roots>
  408a94:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  408a99:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  408a9e:	8b 05 10 49 23 00    	mov    0x234910(%rip),%eax        # 63d3b4 <caml_requested_major_slice>
  408aa4:	85 c0                	test   %eax,%eax
  408aa6:	75 0a                	jne    408ab2 <caml_check_urgent_gc+0x62>
  408aa8:	8b 05 02 49 23 00    	mov    0x234902(%rip),%eax        # 63d3b0 <caml_requested_minor_gc>
  408aae:	85 c0                	test   %eax,%eax
  408ab0:	74 05                	je     408ab7 <caml_check_urgent_gc+0x67>
  408ab2:	e8 79 fe ff ff       	callq  408930 <caml_gc_dispatch>
  408ab7:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
  408abc:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  408ac3:	00 00 
  408ac5:	48 89 1d 7c 3e 22 00 	mov    %rbx,0x223e7c(%rip)        # 62c948 <caml_local_roots>
  408acc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  408ad1:	75 06                	jne    408ad9 <caml_check_urgent_gc+0x89>
  408ad3:	48 83 c4 60          	add    $0x60,%rsp
  408ad7:	5b                   	pop    %rbx
  408ad8:	c3                   	retq   
  408ad9:	e8 92 8f ff ff       	callq  401a70 <__stack_chk_fail@plt>
  408ade:	66 90                	xchg   %ax,%ax

0000000000408ae0 <caml_realloc_ref_table>:
  408ae0:	41 b8 40 dc 41 00    	mov    $0x41dc40,%r8d
  408ae6:	b9 68 dc 41 00       	mov    $0x41dc68,%ecx
  408aeb:	ba 22 dc 41 00       	mov    $0x41dc22,%edx
  408af0:	be 08 00 00 00       	mov    $0x8,%esi
  408af5:	e9 f6 f3 ff ff       	jmpq   407ef0 <realloc_generic_table.isra.1>
  408afa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000408b00 <caml_realloc_ephe_ref_table>:
  408b00:	41 b8 90 dc 41 00    	mov    $0x41dc90,%r8d
  408b06:	b9 b8 dc 41 00       	mov    $0x41dcb8,%ecx
  408b0b:	ba e0 dc 41 00       	mov    $0x41dce0,%edx
  408b10:	be 10 00 00 00       	mov    $0x10,%esi
  408b15:	e9 d6 f3 ff ff       	jmpq   407ef0 <realloc_generic_table.isra.1>
  408b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000408b20 <caml_realloc_custom_table>:
  408b20:	41 b8 08 dd 41 00    	mov    $0x41dd08,%r8d
  408b26:	b9 30 dd 41 00       	mov    $0x41dd30,%ecx
  408b2b:	ba 58 dd 41 00       	mov    $0x41dd58,%edx
  408b30:	be 18 00 00 00       	mov    $0x18,%esi
  408b35:	e9 b6 f3 ff ff       	jmpq   407ef0 <realloc_generic_table.isra.1>
  408b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000408b40 <caml_page_table_modify>:
  408b40:	41 57                	push   %r15
  408b42:	41 56                	push   %r14
  408b44:	41 55                	push   %r13
  408b46:	41 54                	push   %r12
  408b48:	41 89 f5             	mov    %esi,%r13d
  408b4b:	55                   	push   %rbp
  408b4c:	53                   	push   %rbx
  408b4d:	48 89 fd             	mov    %rdi,%rbp
  408b50:	4c 63 e2             	movslq %edx,%r12
  408b53:	48 83 ec 28          	sub    $0x28,%rsp
  408b57:	4c 8b 0d da 43 22 00 	mov    0x2243da(%rip),%r9        # 62cf38 <caml_page_table+0x18>
  408b5e:	4c 8b 3d bb 43 22 00 	mov    0x2243bb(%rip),%r15        # 62cf20 <caml_page_table>
  408b65:	4b 8d 04 09          	lea    (%r9,%r9,1),%rax
  408b69:	4c 39 f8             	cmp    %r15,%rax
  408b6c:	0f 83 be 00 00 00    	jae    408c30 <caml_page_table_modify+0xf0>
  408b72:	8b 0d b0 43 22 00    	mov    0x2243b0(%rip),%ecx        # 62cf28 <caml_page_table+0x8>
  408b78:	48 8b 1d c1 43 22 00 	mov    0x2243c1(%rip),%rbx        # 62cf40 <caml_page_table+0x20>
  408b7f:	48 89 e8             	mov    %rbp,%rax
  408b82:	48 ba 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rdx
  408b89:	79 37 9e 
  408b8c:	48 c1 e8 0c          	shr    $0xc,%rax
  408b90:	48 0f af d0          	imul   %rax,%rdx
  408b94:	48 d3 ea             	shr    %cl,%rdx
  408b97:	48 8d 34 d3          	lea    (%rbx,%rdx,8),%rsi
  408b9b:	48 8b 0e             	mov    (%rsi),%rcx
  408b9e:	48 85 c9             	test   %rcx,%rcx
  408ba1:	74 3f                	je     408be2 <caml_page_table_modify+0xa2>
  408ba3:	48 89 e8             	mov    %rbp,%rax
  408ba6:	48 31 c8             	xor    %rcx,%rax
  408ba9:	48 a9 00 f0 ff ff    	test   $0xfffffffffffff000,%rax
  408baf:	74 57                	je     408c08 <caml_page_table_modify+0xc8>
  408bb1:	48 8b 05 78 43 22 00 	mov    0x224378(%rip),%rax        # 62cf30 <caml_page_table+0x10>
  408bb8:	eb 15                	jmp    408bcf <caml_page_table_modify+0x8f>
  408bba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408bc0:	48 89 ef             	mov    %rbp,%rdi
  408bc3:	48 31 cf             	xor    %rcx,%rdi
  408bc6:	48 f7 c7 00 f0 ff ff 	test   $0xfffffffffffff000,%rdi
  408bcd:	74 39                	je     408c08 <caml_page_table_modify+0xc8>
  408bcf:	48 83 c2 01          	add    $0x1,%rdx
  408bd3:	48 21 c2             	and    %rax,%rdx
  408bd6:	48 8d 34 d3          	lea    (%rbx,%rdx,8),%rsi
  408bda:	48 8b 0e             	mov    (%rsi),%rcx
  408bdd:	48 85 c9             	test   %rcx,%rcx
  408be0:	75 de                	jne    408bc0 <caml_page_table_modify+0x80>
  408be2:	48 83 05 4e 43 22 00 	addq   $0x1,0x22434e(%rip)        # 62cf38 <caml_page_table+0x18>
  408be9:	01 
  408bea:	4c 09 e5             	or     %r12,%rbp
  408bed:	31 c0                	xor    %eax,%eax
  408bef:	48 89 2e             	mov    %rbp,(%rsi)
  408bf2:	48 83 c4 28          	add    $0x28,%rsp
  408bf6:	5b                   	pop    %rbx
  408bf7:	5d                   	pop    %rbp
  408bf8:	41 5c                	pop    %r12
  408bfa:	41 5d                	pop    %r13
  408bfc:	41 5e                	pop    %r14
  408bfe:	41 5f                	pop    %r15
  408c00:	c3                   	retq   
  408c01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  408c08:	41 f7 d5             	not    %r13d
  408c0b:	31 c0                	xor    %eax,%eax
  408c0d:	4d 63 ed             	movslq %r13d,%r13
  408c10:	4c 21 e9             	and    %r13,%rcx
  408c13:	4c 09 e1             	or     %r12,%rcx
  408c16:	48 89 0e             	mov    %rcx,(%rsi)
  408c19:	48 83 c4 28          	add    $0x28,%rsp
  408c1d:	5b                   	pop    %rbx
  408c1e:	5d                   	pop    %rbp
  408c1f:	41 5c                	pop    %r12
  408c21:	41 5d                	pop    %r13
  408c23:	41 5e                	pop    %r14
  408c25:	41 5f                	pop    %r15
  408c27:	c3                   	retq   
  408c28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  408c2f:	00 
  408c30:	8b 05 f2 42 22 00    	mov    0x2242f2(%rip),%eax        # 62cf28 <caml_page_table+0x8>
  408c36:	4c 89 fa             	mov    %r15,%rdx
  408c39:	be 78 dd 41 00       	mov    $0x41dd78,%esi
  408c3e:	bf 08 00 00 00       	mov    $0x8,%edi
  408c43:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
  408c48:	4c 8b 35 f1 42 22 00 	mov    0x2242f1(%rip),%r14        # 62cf40 <caml_page_table+0x20>
  408c4f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  408c53:	e8 58 30 01 00       	callq  41bcb0 <caml_gc_message>
  408c58:	4b 8d 14 3f          	lea    (%r15,%r15,1),%rdx
  408c5c:	be 08 00 00 00       	mov    $0x8,%esi
  408c61:	48 89 d7             	mov    %rdx,%rdi
  408c64:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  408c69:	e8 42 8f ff ff       	callq  401bb0 <calloc@plt>
  408c6e:	48 85 c0             	test   %rax,%rax
  408c71:	48 89 c3             	mov    %rax,%rbx
  408c74:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  408c79:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
  408c7e:	0f 84 9e 00 00 00    	je     408d22 <caml_page_table_modify+0x1e2>
  408c84:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  408c88:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
  408c8c:	4c 89 0d a5 42 22 00 	mov    %r9,0x2242a5(%rip)        # 62cf38 <caml_page_table+0x18>
  408c93:	48 89 15 86 42 22 00 	mov    %rdx,0x224286(%rip)        # 62cf20 <caml_page_table>
  408c9a:	48 89 1d 9f 42 22 00 	mov    %rbx,0x22429f(%rip)        # 62cf40 <caml_page_table+0x20>
  408ca1:	4c 89 f6             	mov    %r14,%rsi
  408ca4:	48 89 05 85 42 22 00 	mov    %rax,0x224285(%rip)        # 62cf30 <caml_page_table+0x10>
  408cab:	4b 8d 3c fe          	lea    (%r14,%r15,8),%rdi
  408caf:	49 b9 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%r9
  408cb6:	79 37 9e 
  408cb9:	83 e9 01             	sub    $0x1,%ecx
  408cbc:	4d 85 ff             	test   %r15,%r15
  408cbf:	89 0d 63 42 22 00    	mov    %ecx,0x224263(%rip)        # 62cf28 <caml_page_table+0x8>
  408cc5:	74 46                	je     408d0d <caml_page_table_modify+0x1cd>
  408cc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  408cce:	00 00 
  408cd0:	4c 8b 06             	mov    (%rsi),%r8
  408cd3:	4d 85 c0             	test   %r8,%r8
  408cd6:	74 2c                	je     408d04 <caml_page_table_modify+0x1c4>
  408cd8:	4c 89 c2             	mov    %r8,%rdx
  408cdb:	48 c1 ea 0c          	shr    $0xc,%rdx
  408cdf:	49 0f af d1          	imul   %r9,%rdx
  408ce3:	48 d3 ea             	shr    %cl,%rdx
  408ce6:	4c 8d 14 d3          	lea    (%rbx,%rdx,8),%r10
  408cea:	49 83 3a 00          	cmpq   $0x0,(%r10)
  408cee:	74 11                	je     408d01 <caml_page_table_modify+0x1c1>
  408cf0:	48 83 c2 01          	add    $0x1,%rdx
  408cf4:	48 21 c2             	and    %rax,%rdx
  408cf7:	4c 8d 14 d3          	lea    (%rbx,%rdx,8),%r10
  408cfb:	49 83 3a 00          	cmpq   $0x0,(%r10)
  408cff:	75 ef                	jne    408cf0 <caml_page_table_modify+0x1b0>
  408d01:	4d 89 02             	mov    %r8,(%r10)
  408d04:	48 83 c6 08          	add    $0x8,%rsi
  408d08:	48 39 f7             	cmp    %rsi,%rdi
  408d0b:	75 c3                	jne    408cd0 <caml_page_table_modify+0x190>
  408d0d:	4c 89 f7             	mov    %r14,%rdi
  408d10:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
  408d14:	e8 47 8c ff ff       	callq  401960 <free@plt>
  408d19:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  408d1d:	e9 5d fe ff ff       	jmpq   408b7f <caml_page_table_modify+0x3f>
  408d22:	31 d2                	xor    %edx,%edx
  408d24:	be a0 dd 41 00       	mov    $0x41dda0,%esi
  408d29:	bf 08 00 00 00       	mov    $0x8,%edi
  408d2e:	e8 7d 2f 01 00       	callq  41bcb0 <caml_gc_message>
  408d33:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  408d38:	e9 b5 fe ff ff       	jmpq   408bf2 <caml_page_table_modify+0xb2>
  408d3d:	0f 1f 00             	nopl   (%rax)

0000000000408d40 <caml_page_table_lookup>:
  408d40:	48 89 fa             	mov    %rdi,%rdx
  408d43:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
  408d4a:	79 37 9e 
  408d4d:	8b 0d d5 41 22 00    	mov    0x2241d5(%rip),%ecx        # 62cf28 <caml_page_table+0x8>
  408d53:	48 c1 ea 0c          	shr    $0xc,%rdx
  408d57:	48 8b 35 e2 41 22 00 	mov    0x2241e2(%rip),%rsi        # 62cf40 <caml_page_table+0x20>
  408d5e:	48 0f af d0          	imul   %rax,%rdx
  408d62:	48 d3 ea             	shr    %cl,%rdx
  408d65:	48 89 f9             	mov    %rdi,%rcx
  408d68:	48 8b 04 d6          	mov    (%rsi,%rdx,8),%rax
  408d6c:	48 31 c1             	xor    %rax,%rcx
  408d6f:	48 f7 c1 00 f0 ff ff 	test   $0xfffffffffffff000,%rcx
  408d76:	74 37                	je     408daf <caml_page_table_lookup+0x6f>
  408d78:	48 85 c0             	test   %rax,%rax
  408d7b:	74 3b                	je     408db8 <caml_page_table_lookup+0x78>
  408d7d:	48 83 c2 01          	add    $0x1,%rdx
  408d81:	4c 8b 05 a8 41 22 00 	mov    0x2241a8(%rip),%r8        # 62cf30 <caml_page_table+0x10>
  408d88:	eb 0f                	jmp    408d99 <caml_page_table_lookup+0x59>
  408d8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408d90:	48 85 c0             	test   %rax,%rax
  408d93:	74 23                	je     408db8 <caml_page_table_lookup+0x78>
  408d95:	48 83 c2 01          	add    $0x1,%rdx
  408d99:	4c 21 c2             	and    %r8,%rdx
  408d9c:	48 89 f9             	mov    %rdi,%rcx
  408d9f:	48 8b 04 d6          	mov    (%rsi,%rdx,8),%rax
  408da3:	48 31 c1             	xor    %rax,%rcx
  408da6:	48 f7 c1 00 f0 ff ff 	test   $0xfffffffffffff000,%rcx
  408dad:	75 e1                	jne    408d90 <caml_page_table_lookup+0x50>
  408daf:	0f b6 c0             	movzbl %al,%eax
  408db2:	c3                   	retq   
  408db3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408db8:	31 c0                	xor    %eax,%eax
  408dba:	c3                   	retq   
  408dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000408dc0 <caml_page_table_initialize>:
  408dc0:	48 c1 ef 0c          	shr    $0xc,%rdi
  408dc4:	48 83 ec 08          	sub    $0x8,%rsp
  408dc8:	48 c7 05 4d 41 22 00 	movq   $0x1,0x22414d(%rip)        # 62cf20 <caml_page_table>
  408dcf:	01 00 00 00 
  408dd3:	48 8d 14 3f          	lea    (%rdi,%rdi,1),%rdx
  408dd7:	c7 05 47 41 22 00 40 	movl   $0x40,0x224147(%rip)        # 62cf28 <caml_page_table+0x8>
  408dde:	00 00 00 
  408de1:	48 83 fa 01          	cmp    $0x1,%rdx
  408de5:	76 60                	jbe    408e47 <caml_page_table_initialize+0x87>
  408de7:	b8 40 00 00 00       	mov    $0x40,%eax
  408dec:	bf 01 00 00 00       	mov    $0x1,%edi
  408df1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  408df8:	48 01 ff             	add    %rdi,%rdi
  408dfb:	83 e8 01             	sub    $0x1,%eax
  408dfe:	48 39 d7             	cmp    %rdx,%rdi
  408e01:	72 f5                	jb     408df8 <caml_page_table_initialize+0x38>
  408e03:	89 05 1f 41 22 00    	mov    %eax,0x22411f(%rip)        # 62cf28 <caml_page_table+0x8>
  408e09:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  408e0d:	48 89 3d 0c 41 22 00 	mov    %rdi,0x22410c(%rip)        # 62cf20 <caml_page_table>
  408e14:	be 08 00 00 00       	mov    $0x8,%esi
  408e19:	48 89 05 10 41 22 00 	mov    %rax,0x224110(%rip)        # 62cf30 <caml_page_table+0x10>
  408e20:	48 c7 05 0d 41 22 00 	movq   $0x0,0x22410d(%rip)        # 62cf38 <caml_page_table+0x18>
  408e27:	00 00 00 00 
  408e2b:	e8 80 8d ff ff       	callq  401bb0 <calloc@plt>
  408e30:	48 85 c0             	test   %rax,%rax
  408e33:	48 89 05 06 41 22 00 	mov    %rax,0x224106(%rip)        # 62cf40 <caml_page_table+0x20>
  408e3a:	0f 94 c0             	sete   %al
  408e3d:	48 83 c4 08          	add    $0x8,%rsp
  408e41:	0f b6 c0             	movzbl %al,%eax
  408e44:	f7 d8                	neg    %eax
  408e46:	c3                   	retq   
  408e47:	31 c0                	xor    %eax,%eax
  408e49:	bf 01 00 00 00       	mov    $0x1,%edi
  408e4e:	eb c4                	jmp    408e14 <caml_page_table_initialize+0x54>

0000000000408e50 <caml_page_table_add>:
  408e50:	41 54                	push   %r12
  408e52:	55                   	push   %rbp
  408e53:	48 8d 6a ff          	lea    -0x1(%rdx),%rbp
  408e57:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
  408e5e:	53                   	push   %rbx
  408e5f:	41 89 fc             	mov    %edi,%r12d
  408e62:	48 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%rbp
  408e69:	48 89 f3             	mov    %rsi,%rbx
  408e6c:	48 39 ee             	cmp    %rbp,%rsi
  408e6f:	76 13                	jbe    408e84 <caml_page_table_add+0x34>
  408e71:	eb 2d                	jmp    408ea0 <caml_page_table_add+0x50>
  408e73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408e78:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
  408e7f:	48 39 dd             	cmp    %rbx,%rbp
  408e82:	72 1c                	jb     408ea0 <caml_page_table_add+0x50>
  408e84:	31 f6                	xor    %esi,%esi
  408e86:	44 89 e2             	mov    %r12d,%edx
  408e89:	48 89 df             	mov    %rbx,%rdi
  408e8c:	e8 af fc ff ff       	callq  408b40 <caml_page_table_modify>
  408e91:	85 c0                	test   %eax,%eax
  408e93:	74 e3                	je     408e78 <caml_page_table_add+0x28>
  408e95:	5b                   	pop    %rbx
  408e96:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  408e9b:	5d                   	pop    %rbp
  408e9c:	41 5c                	pop    %r12
  408e9e:	c3                   	retq   
  408e9f:	90                   	nop
  408ea0:	5b                   	pop    %rbx
  408ea1:	31 c0                	xor    %eax,%eax
  408ea3:	5d                   	pop    %rbp
  408ea4:	41 5c                	pop    %r12
  408ea6:	c3                   	retq   
  408ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  408eae:	00 00 

0000000000408eb0 <caml_page_table_remove>:
  408eb0:	41 54                	push   %r12
  408eb2:	55                   	push   %rbp
  408eb3:	48 8d 6a ff          	lea    -0x1(%rdx),%rbp
  408eb7:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
  408ebe:	53                   	push   %rbx
  408ebf:	41 89 fc             	mov    %edi,%r12d
  408ec2:	48 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%rbp
  408ec9:	48 89 f3             	mov    %rsi,%rbx
  408ecc:	48 39 ee             	cmp    %rbp,%rsi
  408ecf:	76 13                	jbe    408ee4 <caml_page_table_remove+0x34>
  408ed1:	eb 2d                	jmp    408f00 <caml_page_table_remove+0x50>
  408ed3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408ed8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
  408edf:	48 39 dd             	cmp    %rbx,%rbp
  408ee2:	72 1c                	jb     408f00 <caml_page_table_remove+0x50>
  408ee4:	31 d2                	xor    %edx,%edx
  408ee6:	44 89 e6             	mov    %r12d,%esi
  408ee9:	48 89 df             	mov    %rbx,%rdi
  408eec:	e8 4f fc ff ff       	callq  408b40 <caml_page_table_modify>
  408ef1:	85 c0                	test   %eax,%eax
  408ef3:	74 e3                	je     408ed8 <caml_page_table_remove+0x28>
  408ef5:	5b                   	pop    %rbx
  408ef6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  408efb:	5d                   	pop    %rbp
  408efc:	41 5c                	pop    %r12
  408efe:	c3                   	retq   
  408eff:	90                   	nop
  408f00:	5b                   	pop    %rbx
  408f01:	31 c0                	xor    %eax,%eax
  408f03:	5d                   	pop    %rbp
  408f04:	41 5c                	pop    %r12
  408f06:	c3                   	retq   
  408f07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  408f0e:	00 00 

0000000000408f10 <caml_init_alloc_for_heap>:
  408f10:	31 c0                	xor    %eax,%eax
  408f12:	c3                   	retq   
  408f13:	0f 1f 00             	nopl   (%rax)
  408f16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  408f1d:	00 00 00 

0000000000408f20 <caml_alloc_for_heap>:
  408f20:	53                   	push   %rbx
  408f21:	48 83 ec 10          	sub    $0x10,%rsp
  408f25:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  408f2c:	00 00 
  408f2e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  408f33:	31 c0                	xor    %eax,%eax
  408f35:	48 83 3d c3 3f 22 00 	cmpq   $0x0,0x223fc3(%rip)        # 62cf00 <caml_use_huge_pages>
  408f3c:	00 
  408f3d:	74 59                	je     408f98 <caml_alloc_for_heap+0x78>
  408f3f:	48 8d 9f 1f 00 40 00 	lea    0x40001f(%rdi),%rbx
  408f46:	45 31 c9             	xor    %r9d,%r9d
  408f49:	31 ff                	xor    %edi,%edi
  408f4b:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
  408f51:	b9 22 00 04 00       	mov    $0x40022,%ecx
  408f56:	ba 03 00 00 00       	mov    $0x3,%edx
  408f5b:	48 81 e3 00 00 c0 ff 	and    $0xffffffffffc00000,%rbx
  408f62:	48 89 de             	mov    %rbx,%rsi
  408f65:	e8 16 8d ff ff       	callq  401c80 <mmap64@plt>
  408f6a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  408f6e:	74 60                	je     408fd0 <caml_alloc_for_heap+0xb0>
  408f70:	48 83 eb 20          	sub    $0x20,%rbx
  408f74:	48 89 00             	mov    %rax,(%rax)
  408f77:	48 83 c0 20          	add    $0x20,%rax
  408f7b:	48 89 58 f0          	mov    %rbx,-0x10(%rax)
  408f7f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  408f84:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  408f8b:	00 00 
  408f8d:	75 45                	jne    408fd4 <caml_alloc_for_heap+0xb4>
  408f8f:	48 83 c4 10          	add    $0x10,%rsp
  408f93:	5b                   	pop    %rbx
  408f94:	c3                   	retq   
  408f95:	0f 1f 00             	nopl   (%rax)
  408f98:	48 8d 9f ff 0f 00 00 	lea    0xfff(%rdi),%rbx
  408f9f:	48 89 e2             	mov    %rsp,%rdx
  408fa2:	be 20 00 00 00       	mov    $0x20,%esi
  408fa7:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
  408fae:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
  408fb2:	e8 d9 2d 01 00       	callq  41bd90 <caml_aligned_malloc>
  408fb7:	48 85 c0             	test   %rax,%rax
  408fba:	74 14                	je     408fd0 <caml_alloc_for_heap+0xb0>
  408fbc:	48 8b 14 24          	mov    (%rsp),%rdx
  408fc0:	48 89 58 10          	mov    %rbx,0x10(%rax)
  408fc4:	48 83 c0 20          	add    $0x20,%rax
  408fc8:	48 89 50 e0          	mov    %rdx,-0x20(%rax)
  408fcc:	eb b1                	jmp    408f7f <caml_alloc_for_heap+0x5f>
  408fce:	66 90                	xchg   %ax,%ax
  408fd0:	31 c0                	xor    %eax,%eax
  408fd2:	eb ab                	jmp    408f7f <caml_alloc_for_heap+0x5f>
  408fd4:	e8 97 8a ff ff       	callq  401a70 <__stack_chk_fail@plt>
  408fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000408fe0 <caml_disown_for_heap>:
  408fe0:	f3 c3                	repz retq 
  408fe2:	0f 1f 40 00          	nopl   0x0(%rax)
  408fe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  408fed:	00 00 00 

0000000000408ff0 <caml_free_for_heap>:
  408ff0:	48 83 3d 08 3f 22 00 	cmpq   $0x0,0x223f08(%rip)        # 62cf00 <caml_use_huge_pages>
  408ff7:	00 
  408ff8:	75 0e                	jne    409008 <caml_free_for_heap+0x18>
  408ffa:	48 8b 7f e0          	mov    -0x20(%rdi),%rdi
  408ffe:	e9 5d 89 ff ff       	jmpq   401960 <free@plt>
  409003:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  409008:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
  40900c:	48 8b 7f e0          	mov    -0x20(%rdi),%rdi
  409010:	48 8d 70 20          	lea    0x20(%rax),%rsi
  409014:	e9 f7 8c ff ff       	jmpq   401d10 <munmap@plt>
  409019:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000409020 <caml_add_to_heap>:
  409020:	53                   	push   %rbx
  409021:	48 8b 15 d8 c0 22 00 	mov    0x22c0d8(%rip),%rdx        # 635100 <caml_stat_heap_wsz>
  409028:	48 89 fb             	mov    %rdi,%rbx
  40902b:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
  40902f:	be c0 dd 41 00       	mov    $0x41ddc0,%esi
  409034:	bf 04 00 00 00       	mov    $0x4,%edi
  409039:	48 8d 14 d0          	lea    (%rax,%rdx,8),%rdx
  40903d:	48 c1 ea 0a          	shr    $0xa,%rdx
  409041:	e8 6a 2c 01 00       	callq  41bcb0 <caml_gc_message>
  409046:	48 89 da             	mov    %rbx,%rdx
  409049:	48 03 53 f0          	add    -0x10(%rbx),%rdx
  40904d:	48 89 de             	mov    %rbx,%rsi
  409050:	bf 01 00 00 00       	mov    $0x1,%edi
  409055:	e8 f6 fd ff ff       	callq  408e50 <caml_page_table_add>
  40905a:	85 c0                	test   %eax,%eax
  40905c:	75 79                	jne    4090d7 <caml_add_to_heap+0xb7>
  40905e:	48 8b 0d 9b 83 23 00 	mov    0x23839b(%rip),%rcx        # 641400 <caml_heap_start>
  409065:	48 39 cb             	cmp    %rcx,%rbx
  409068:	76 63                	jbe    4090cd <caml_add_to_heap+0xad>
  40906a:	48 85 c9             	test   %rcx,%rcx
  40906d:	75 0c                	jne    40907b <caml_add_to_heap+0x5b>
  40906f:	eb 5c                	jmp    4090cd <caml_add_to_heap+0xad>
  409071:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  409078:	48 89 d1             	mov    %rdx,%rcx
  40907b:	48 8b 51 f8          	mov    -0x8(%rcx),%rdx
  40907f:	48 85 d2             	test   %rdx,%rdx
  409082:	40 0f 95 c7          	setne  %dil
  409086:	48 39 d3             	cmp    %rdx,%rbx
  409089:	40 0f 97 c6          	seta   %sil
  40908d:	40 84 f7             	test   %sil,%dil
  409090:	75 e6                	jne    409078 <caml_add_to_heap+0x58>
  409092:	48 83 e9 08          	sub    $0x8,%rcx
  409096:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
  40909a:	48 89 19             	mov    %rbx,(%rcx)
  40909d:	48 83 05 43 c0 22 00 	addq   $0x1,0x22c043(%rip)        # 6350e8 <caml_stat_heap_chunks>
  4090a4:	01 
  4090a5:	48 8b 53 f0          	mov    -0x10(%rbx),%rdx
  4090a9:	48 c1 ea 03          	shr    $0x3,%rdx
  4090ad:	48 03 15 4c c0 22 00 	add    0x22c04c(%rip),%rdx        # 635100 <caml_stat_heap_wsz>
  4090b4:	48 3b 15 3d c0 22 00 	cmp    0x22c03d(%rip),%rdx        # 6350f8 <caml_stat_top_heap_wsz>
  4090bb:	48 89 15 3e c0 22 00 	mov    %rdx,0x22c03e(%rip)        # 635100 <caml_stat_heap_wsz>
  4090c2:	7e 07                	jle    4090cb <caml_add_to_heap+0xab>
  4090c4:	48 89 15 2d c0 22 00 	mov    %rdx,0x22c02d(%rip)        # 6350f8 <caml_stat_top_heap_wsz>
  4090cb:	5b                   	pop    %rbx
  4090cc:	c3                   	retq   
  4090cd:	48 89 ca             	mov    %rcx,%rdx
  4090d0:	b9 00 14 64 00       	mov    $0x641400,%ecx
  4090d5:	eb bf                	jmp    409096 <caml_add_to_heap+0x76>
  4090d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4090dc:	5b                   	pop    %rbx
  4090dd:	c3                   	retq   
  4090de:	66 90                	xchg   %ax,%ax

00000000004090e0 <expand_heap>:
  4090e0:	48 89 f8             	mov    %rdi,%rax
  4090e3:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
  4090ea:	c2 f5 28 
  4090ed:	55                   	push   %rbp
  4090ee:	48 c1 e8 02          	shr    $0x2,%rax
  4090f2:	53                   	push   %rbx
  4090f3:	48 f7 e2             	mul    %rdx
  4090f6:	48 83 ec 08          	sub    $0x8,%rsp
  4090fa:	48 c1 ea 02          	shr    $0x2,%rdx
  4090fe:	48 0f af 15 1a 83 23 	imul   0x23831a(%rip),%rdx        # 641420 <caml_percent_free>
  409105:	00 
  409106:	48 01 d7             	add    %rdx,%rdi
  409109:	e8 82 ea ff ff       	callq  407b90 <caml_clip_heap_chunk_wsz>
  40910e:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
  409115:	00 
  409116:	e8 05 fe ff ff       	callq  408f20 <caml_alloc_for_heap>
  40911b:	48 85 c0             	test   %rax,%rax
  40911e:	0f 84 0e 01 00 00    	je     409232 <expand_heap+0x152>
  409124:	48 8b 50 f0          	mov    -0x10(%rax),%rdx
  409128:	48 89 c3             	mov    %rax,%rbx
  40912b:	48 b9 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rcx
  409132:	ff 3f 00 
  409135:	48 c1 ea 03          	shr    $0x3,%rdx
  409139:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
  40913d:	48 39 c8             	cmp    %rcx,%rax
  409140:	0f 86 db 00 00 00    	jbe    409221 <expand_heap+0x141>
  409146:	48 bd ff ff ff ff ff 	movabs $0xffbfffffffffffff,%rbp
  40914d:	ff bf ff 
  409150:	48 be 00 00 00 00 00 	movabs $0xffc0000000000000,%rsi
  409157:	00 c0 ff 
  40915a:	48 89 d8             	mov    %rbx,%rax
  40915d:	48 01 d5             	add    %rdx,%rbp
  409160:	4c 8d 1c 32          	lea    (%rdx,%rsi,1),%r11
  409164:	49 b8 08 00 00 00 00 	movabs $0x200000000000008,%r8
  40916b:	00 00 02 
  40916e:	49 89 ea             	mov    %rbp,%r10
  409171:	48 bf 00 00 00 00 00 	movabs $0x200000000000000,%rdi
  409178:	00 00 02 
  40917b:	49 c1 ea 36          	shr    $0x36,%r10
  40917f:	4d 89 d9             	mov    %r11,%r9
  409182:	4c 89 d1             	mov    %r10,%rcx
  409185:	48 c1 e1 36          	shl    $0x36,%rcx
  409189:	49 29 c9             	sub    %rcx,%r9
  40918c:	0f 1f 40 00          	nopl   0x0(%rax)
  409190:	4a 8d 0c 00          	lea    (%rax,%r8,1),%rcx
  409194:	48 01 f2             	add    %rsi,%rdx
  409197:	48 c7 00 00 fe ff ff 	movq   $0xfffffffffffffe00,(%rax)
  40919e:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4091a2:	48 01 f8             	add    %rdi,%rax
  4091a5:	4c 39 ca             	cmp    %r9,%rdx
  4091a8:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
  4091ac:	75 e2                	jne    409190 <expand_heap+0xb0>
  4091ae:	49 8d 4a 01          	lea    0x1(%r10),%rcx
  4091b2:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rax
  4091b9:	ff 3f 00 
  4091bc:	49 c1 e2 36          	shl    $0x36,%r10
  4091c0:	4c 89 da             	mov    %r11,%rdx
  4091c3:	48 21 e8             	and    %rbp,%rax
  4091c6:	48 c1 e1 39          	shl    $0x39,%rcx
  4091ca:	4c 29 d2             	sub    %r10,%rdx
  4091cd:	48 01 d9             	add    %rbx,%rcx
  4091d0:	48 83 fa 01          	cmp    $0x1,%rdx
  4091d4:	74 3a                	je     409210 <expand_heap+0x130>
  4091d6:	48 c1 e0 0a          	shl    $0xa,%rax
  4091da:	48 05 00 02 00 00    	add    $0x200,%rax
  4091e0:	48 89 01             	mov    %rax,(%rcx)
  4091e3:	48 8d 41 08          	lea    0x8(%rcx),%rax
  4091e7:	48 89 43 10          	mov    %rax,0x10(%rbx)
  4091eb:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
  4091f2:	00 
  4091f3:	48 89 df             	mov    %rbx,%rdi
  4091f6:	e8 25 fe ff ff       	callq  409020 <caml_add_to_heap>
  4091fb:	85 c0                	test   %eax,%eax
  4091fd:	48 8d 53 08          	lea    0x8(%rbx),%rdx
  409201:	75 23                	jne    409226 <expand_heap+0x146>
  409203:	48 83 c4 08          	add    $0x8,%rsp
  409207:	48 89 d0             	mov    %rdx,%rax
  40920a:	5b                   	pop    %rbx
  40920b:	5d                   	pop    %rbp
  40920c:	c3                   	retq   
  40920d:	0f 1f 00             	nopl   (%rax)
  409210:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
  409217:	00 
  409218:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
  40921f:	eb d2                	jmp    4091f3 <expand_heap+0x113>
  409221:	48 89 d9             	mov    %rbx,%rcx
  409224:	eb aa                	jmp    4091d0 <expand_heap+0xf0>
  409226:	48 89 df             	mov    %rbx,%rdi
  409229:	e8 c2 fd ff ff       	callq  408ff0 <caml_free_for_heap>
  40922e:	31 d2                	xor    %edx,%edx
  409230:	eb d1                	jmp    409203 <expand_heap+0x123>
  409232:	31 d2                	xor    %edx,%edx
  409234:	be dc dd 41 00       	mov    $0x41dddc,%esi
  409239:	bf 04 00 00 00       	mov    $0x4,%edi
  40923e:	e8 6d 2a 01 00       	callq  41bcb0 <caml_gc_message>
  409243:	31 d2                	xor    %edx,%edx
  409245:	eb bc                	jmp    409203 <expand_heap+0x123>
  409247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40924e:	00 00 

0000000000409250 <caml_shrink_heap>:
  409250:	48 39 3d a9 81 23 00 	cmp    %rdi,0x2381a9(%rip)        # 641400 <caml_heap_start>
  409257:	74 7f                	je     4092d8 <caml_shrink_heap+0x88>
  409259:	53                   	push   %rbx
  40925a:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
  40925e:	48 89 fb             	mov    %rdi,%rbx
  409261:	48 8b 15 98 be 22 00 	mov    0x22be98(%rip),%rdx        # 635100 <caml_stat_heap_wsz>
  409268:	be f6 dd 41 00       	mov    $0x41ddf6,%esi
  40926d:	bf 04 00 00 00       	mov    $0x4,%edi
  409272:	48 c1 e8 03          	shr    $0x3,%rax
  409276:	48 29 c2             	sub    %rax,%rdx
  409279:	48 89 15 80 be 22 00 	mov    %rdx,0x22be80(%rip)        # 635100 <caml_stat_heap_wsz>
  409280:	48 c1 ea 0a          	shr    $0xa,%rdx
  409284:	e8 27 2a 01 00       	callq  41bcb0 <caml_gc_message>
  409289:	48 8b 15 70 81 23 00 	mov    0x238170(%rip),%rdx        # 641400 <caml_heap_start>
  409290:	48 83 2d 50 be 22 00 	subq   $0x1,0x22be50(%rip)        # 6350e8 <caml_stat_heap_chunks>
  409297:	01 
  409298:	48 39 d3             	cmp    %rdx,%rbx
  40929b:	75 06                	jne    4092a3 <caml_shrink_heap+0x53>
  40929d:	eb 3b                	jmp    4092da <caml_shrink_heap+0x8a>
  40929f:	90                   	nop
  4092a0:	48 89 c2             	mov    %rax,%rdx
  4092a3:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  4092a7:	48 39 c3             	cmp    %rax,%rbx
  4092aa:	75 f4                	jne    4092a0 <caml_shrink_heap+0x50>
  4092ac:	48 83 ea 08          	sub    $0x8,%rdx
  4092b0:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  4092b4:	48 89 de             	mov    %rbx,%rsi
  4092b7:	bf 01 00 00 00       	mov    $0x1,%edi
  4092bc:	48 89 02             	mov    %rax,(%rdx)
  4092bf:	48 89 da             	mov    %rbx,%rdx
  4092c2:	48 03 53 f0          	add    -0x10(%rbx),%rdx
  4092c6:	e8 e5 fb ff ff       	callq  408eb0 <caml_page_table_remove>
  4092cb:	48 89 df             	mov    %rbx,%rdi
  4092ce:	5b                   	pop    %rbx
  4092cf:	e9 1c fd ff ff       	jmpq   408ff0 <caml_free_for_heap>
  4092d4:	0f 1f 40 00          	nopl   0x0(%rax)
  4092d8:	f3 c3                	repz retq 
  4092da:	ba 00 14 64 00       	mov    $0x641400,%edx
  4092df:	eb cf                	jmp    4092b0 <caml_shrink_heap+0x60>
  4092e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4092e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4092ed:	00 00 00 

00000000004092f0 <caml_allocation_color>:
  4092f0:	8b 15 12 81 23 00    	mov    0x238112(%rip),%edx        # 641408 <caml_gc_phase>
  4092f6:	b8 00 03 00 00       	mov    $0x300,%eax
  4092fb:	83 fa 01             	cmp    $0x1,%edx
  4092fe:	76 07                	jbe    409307 <caml_allocation_color+0x17>
  409300:	31 c0                	xor    %eax,%eax
  409302:	83 fa 02             	cmp    $0x2,%edx
  409305:	74 09                	je     409310 <caml_allocation_color+0x20>
  409307:	f3 c3                	repz retq 
  409309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  409310:	48 3b 3d f9 80 23 00 	cmp    0x2380f9(%rip),%rdi        # 641410 <caml_gc_sweep_hp>
  409317:	48 19 c0             	sbb    %rax,%rax
  40931a:	48 f7 d0             	not    %rax
  40931d:	25 00 03 00 00       	and    $0x300,%eax
  409322:	c3                   	retq   
  409323:	0f 1f 00             	nopl   (%rax)
  409326:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40932d:	00 00 00 

0000000000409330 <caml_alloc_shr_no_raise>:
  409330:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rax
  409337:	ff 3f 00 
  40933a:	48 39 c7             	cmp    %rax,%rdi
  40933d:	76 09                	jbe    409348 <caml_alloc_shr_no_raise+0x18>
  40933f:	31 c0                	xor    %eax,%eax
  409341:	c3                   	retq   
  409342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  409348:	55                   	push   %rbp
  409349:	53                   	push   %rbx
  40934a:	89 f5                	mov    %esi,%ebp
  40934c:	48 89 fb             	mov    %rdi,%rbx
  40934f:	48 83 ec 18          	sub    $0x18,%rsp
  409353:	e8 98 1e 01 00       	callq  41b1f0 <caml_fl_allocate>
  409358:	48 85 c0             	test   %rax,%rax
  40935b:	0f 84 87 00 00 00    	je     4093e8 <caml_alloc_shr_no_raise+0xb8>
  409361:	8b 15 a1 80 23 00    	mov    0x2380a1(%rip),%edx        # 641408 <caml_gc_phase>
  409367:	83 fa 01             	cmp    $0x1,%edx
  40936a:	76 4d                	jbe    4093b9 <caml_alloc_shr_no_raise+0x89>
  40936c:	83 fa 02             	cmp    $0x2,%edx
  40936f:	74 3f                	je     4093b0 <caml_alloc_shr_no_raise+0x80>
  409371:	48 89 da             	mov    %rbx,%rdx
  409374:	89 ee                	mov    %ebp,%esi
  409376:	48 c1 e2 0a          	shl    $0xa,%rdx
  40937a:	48 01 d6             	add    %rdx,%rsi
  40937d:	48 89 30             	mov    %rsi,(%rax)
  409380:	48 8b 15 59 80 23 00 	mov    0x238059(%rip),%rdx        # 6413e0 <caml_allocated_words>
  409387:	48 8d 54 13 01       	lea    0x1(%rbx,%rdx,1),%rdx
  40938c:	48 3b 15 9d 80 23 00 	cmp    0x23809d(%rip),%rdx        # 641430 <caml_minor_heap_wsz>
  409393:	48 89 15 46 80 23 00 	mov    %rdx,0x238046(%rip)        # 6413e0 <caml_allocated_words>
  40939a:	77 34                	ja     4093d0 <caml_alloc_shr_no_raise+0xa0>
  40939c:	48 83 c0 08          	add    $0x8,%rax
  4093a0:	48 83 c4 18          	add    $0x18,%rsp
  4093a4:	5b                   	pop    %rbx
  4093a5:	5d                   	pop    %rbp
  4093a6:	c3                   	retq   
  4093a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4093ae:	00 00 
  4093b0:	48 39 05 59 80 23 00 	cmp    %rax,0x238059(%rip)        # 641410 <caml_gc_sweep_hp>
  4093b7:	77 b8                	ja     409371 <caml_alloc_shr_no_raise+0x41>
  4093b9:	48 89 da             	mov    %rbx,%rdx
  4093bc:	89 ee                	mov    %ebp,%esi
  4093be:	48 c1 e2 0a          	shl    $0xa,%rdx
  4093c2:	48 8d 94 32 00 03 00 	lea    0x300(%rdx,%rsi,1),%rdx
  4093c9:	00 
  4093ca:	48 89 10             	mov    %rdx,(%rax)
  4093cd:	eb b1                	jmp    409380 <caml_alloc_shr_no_raise+0x50>
  4093cf:	90                   	nop
  4093d0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4093d5:	e8 a6 16 01 00       	callq  41aa80 <caml_request_major_slice>
  4093da:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4093df:	eb bb                	jmp    40939c <caml_alloc_shr_no_raise+0x6c>
  4093e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4093e8:	48 89 df             	mov    %rbx,%rdi
  4093eb:	e8 f0 fc ff ff       	callq  4090e0 <expand_heap>
  4093f0:	48 85 c0             	test   %rax,%rax
  4093f3:	74 15                	je     40940a <caml_alloc_shr_no_raise+0xda>
  4093f5:	48 89 c7             	mov    %rax,%rdi
  4093f8:	e8 b3 26 01 00       	callq  41bab0 <caml_fl_add_blocks>
  4093fd:	48 89 df             	mov    %rbx,%rdi
  409400:	e8 eb 1d 01 00       	callq  41b1f0 <caml_fl_allocate>
  409405:	e9 57 ff ff ff       	jmpq   409361 <caml_alloc_shr_no_raise+0x31>
  40940a:	31 c0                	xor    %eax,%eax
  40940c:	eb 92                	jmp    4093a0 <caml_alloc_shr_no_raise+0x70>
  40940e:	66 90                	xchg   %ax,%ax

0000000000409410 <caml_alloc_shr>:
  409410:	53                   	push   %rbx
  409411:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rax
  409418:	ff 3f 00 
  40941b:	48 83 ec 10          	sub    $0x10,%rsp
  40941f:	48 39 c7             	cmp    %rax,%rdi
  409422:	76 0c                	jbe    409430 <caml_alloc_shr+0x20>
  409424:	e8 d7 12 01 00       	callq  41a700 <caml_raise_out_of_memory>
  409429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  409430:	89 74 24 08          	mov    %esi,0x8(%rsp)
  409434:	48 89 fb             	mov    %rdi,%rbx
  409437:	e8 b4 1d 01 00       	callq  41b1f0 <caml_fl_allocate>
  40943c:	48 85 c0             	test   %rax,%rax
  40943f:	8b 74 24 08          	mov    0x8(%rsp),%esi
  409443:	0f 84 7f 00 00 00    	je     4094c8 <caml_alloc_shr+0xb8>
  409449:	8b 15 b9 7f 23 00    	mov    0x237fb9(%rip),%edx        # 641408 <caml_gc_phase>
  40944f:	83 fa 01             	cmp    $0x1,%edx
  409452:	76 45                	jbe    409499 <caml_alloc_shr+0x89>
  409454:	83 fa 02             	cmp    $0x2,%edx
  409457:	74 37                	je     409490 <caml_alloc_shr+0x80>
  409459:	48 89 da             	mov    %rbx,%rdx
  40945c:	48 c1 e2 0a          	shl    $0xa,%rdx
  409460:	48 01 d6             	add    %rdx,%rsi
  409463:	48 89 30             	mov    %rsi,(%rax)
  409466:	48 8b 15 73 7f 23 00 	mov    0x237f73(%rip),%rdx        # 6413e0 <caml_allocated_words>
  40946d:	48 8d 54 13 01       	lea    0x1(%rbx,%rdx,1),%rdx
  409472:	48 3b 15 b7 7f 23 00 	cmp    0x237fb7(%rip),%rdx        # 641430 <caml_minor_heap_wsz>
  409479:	48 89 15 60 7f 23 00 	mov    %rdx,0x237f60(%rip)        # 6413e0 <caml_allocated_words>
  409480:	77 2e                	ja     4094b0 <caml_alloc_shr+0xa0>
  409482:	48 83 c4 10          	add    $0x10,%rsp
  409486:	48 83 c0 08          	add    $0x8,%rax
  40948a:	5b                   	pop    %rbx
  40948b:	c3                   	retq   
  40948c:	0f 1f 40 00          	nopl   0x0(%rax)
  409490:	48 39 05 79 7f 23 00 	cmp    %rax,0x237f79(%rip)        # 641410 <caml_gc_sweep_hp>
  409497:	77 c0                	ja     409459 <caml_alloc_shr+0x49>
  409499:	48 89 da             	mov    %rbx,%rdx
  40949c:	48 c1 e2 0a          	shl    $0xa,%rdx
  4094a0:	48 8d 94 32 00 03 00 	lea    0x300(%rdx,%rsi,1),%rdx
  4094a7:	00 
  4094a8:	48 89 10             	mov    %rdx,(%rax)
  4094ab:	eb b9                	jmp    409466 <caml_alloc_shr+0x56>
  4094ad:	0f 1f 00             	nopl   (%rax)
  4094b0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4094b5:	e8 c6 15 01 00       	callq  41aa80 <caml_request_major_slice>
  4094ba:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4094bf:	eb c1                	jmp    409482 <caml_alloc_shr+0x72>
  4094c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4094c8:	48 89 df             	mov    %rbx,%rdi
  4094cb:	e8 10 fc ff ff       	callq  4090e0 <expand_heap>
  4094d0:	48 85 c0             	test   %rax,%rax
  4094d3:	8b 74 24 08          	mov    0x8(%rsp),%esi
  4094d7:	74 1d                	je     4094f6 <caml_alloc_shr+0xe6>
  4094d9:	48 89 c7             	mov    %rax,%rdi
  4094dc:	89 74 24 08          	mov    %esi,0x8(%rsp)
  4094e0:	e8 cb 25 01 00       	callq  41bab0 <caml_fl_add_blocks>
  4094e5:	48 89 df             	mov    %rbx,%rdi
  4094e8:	e8 03 1d 01 00       	callq  41b1f0 <caml_fl_allocate>
  4094ed:	8b 74 24 08          	mov    0x8(%rsp),%esi
  4094f1:	e9 53 ff ff ff       	jmpq   409449 <caml_alloc_shr+0x39>
  4094f6:	8b 05 c4 38 22 00    	mov    0x2238c4(%rip),%eax        # 62cdc0 <caml_in_minor_collection>
  4094fc:	85 c0                	test   %eax,%eax
  4094fe:	0f 84 20 ff ff ff    	je     409424 <caml_alloc_shr+0x14>
  409504:	bf 14 de 41 00       	mov    $0x41de14,%edi
  409509:	e8 e2 27 01 00       	callq  41bcf0 <caml_fatal_error>
  40950e:	66 90                	xchg   %ax,%ax

0000000000409510 <caml_alloc_dependent_memory>:
  409510:	48 c1 ef 03          	shr    $0x3,%rdi
  409514:	48 01 3d 0d 7f 23 00 	add    %rdi,0x237f0d(%rip)        # 641428 <caml_dependent_size>
  40951b:	48 01 3d d6 7e 23 00 	add    %rdi,0x237ed6(%rip)        # 6413f8 <caml_dependent_allocated>
  409522:	c3                   	retq   
  409523:	0f 1f 00             	nopl   (%rax)
  409526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40952d:	00 00 00 

0000000000409530 <caml_free_dependent_memory>:
  409530:	48 8b 05 f1 7e 23 00 	mov    0x237ef1(%rip),%rax        # 641428 <caml_dependent_size>
  409537:	48 c1 ef 03          	shr    $0x3,%rdi
  40953b:	48 39 c7             	cmp    %rax,%rdi
  40953e:	77 10                	ja     409550 <caml_free_dependent_memory+0x20>
  409540:	48 29 f8             	sub    %rdi,%rax
  409543:	48 89 05 de 7e 23 00 	mov    %rax,0x237ede(%rip)        # 641428 <caml_dependent_size>
  40954a:	c3                   	retq   
  40954b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  409550:	48 c7 05 cd 7e 23 00 	movq   $0x0,0x237ecd(%rip)        # 641428 <caml_dependent_size>
  409557:	00 00 00 00 
  40955b:	c3                   	retq   
  40955c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000409560 <caml_adjust_gc_speed>:
  409560:	48 83 ec 08          	sub    $0x8,%rsp
  409564:	48 85 f6             	test   %rsi,%rsi
  409567:	74 47                	je     4095b0 <caml_adjust_gc_speed+0x50>
  409569:	0f 88 11 01 00 00    	js     409680 <caml_adjust_gc_speed+0x120>
  40956f:	66 0f ef c9          	pxor   %xmm1,%xmm1
  409573:	48 39 fe             	cmp    %rdi,%rsi
  409576:	f2 0f 10 15 8a 46 01 	movsd  0x1468a(%rip),%xmm2        # 41dc08 <caml_absf_mask+0x248>
  40957d:	00 
  40957e:	f2 48 0f 2a ce       	cvtsi2sd %rsi,%xmm1
  409583:	48 0f 47 f7          	cmova  %rdi,%rsi
  409587:	48 85 f6             	test   %rsi,%rsi
  40958a:	79 41                	jns    4095cd <caml_adjust_gc_speed+0x6d>
  40958c:	48 89 f0             	mov    %rsi,%rax
  40958f:	66 0f ef c0          	pxor   %xmm0,%xmm0
  409593:	48 d1 e8             	shr    %rax
  409596:	83 e6 01             	and    $0x1,%esi
  409599:	48 09 f0             	or     %rsi,%rax
  40959c:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4095a1:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  4095a5:	eb 2f                	jmp    4095d6 <caml_adjust_gc_speed+0x76>
  4095a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4095ae:	00 00 
  4095b0:	f2 0f 10 15 50 46 01 	movsd  0x14650(%rip),%xmm2        # 41dc08 <caml_absf_mask+0x248>
  4095b7:	00 
  4095b8:	be 01 00 00 00       	mov    $0x1,%esi
  4095bd:	66 0f 28 ca          	movapd %xmm2,%xmm1
  4095c1:	48 39 fe             	cmp    %rdi,%rsi
  4095c4:	48 0f 47 f7          	cmova  %rdi,%rsi
  4095c8:	48 85 f6             	test   %rsi,%rsi
  4095cb:	78 bf                	js     40958c <caml_adjust_gc_speed+0x2c>
  4095cd:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4095d1:	f2 48 0f 2a c6       	cvtsi2sd %rsi,%xmm0
  4095d6:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  4095da:	f2 0f 58 05 36 7e 23 	addsd  0x237e36(%rip),%xmm0        # 641418 <caml_extra_heap_resources>
  4095e1:	00 
  4095e2:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
  4095e6:	76 58                	jbe    409640 <caml_adjust_gc_speed+0xe0>
  4095e8:	f2 0f 10 1d 18 46 01 	movsd  0x14618(%rip),%xmm3        # 41dc08 <caml_absf_mask+0x248>
  4095ef:	00 
  4095f0:	f2 0f 11 1d 20 7e 23 	movsd  %xmm3,0x237e20(%rip)        # 641418 <caml_extra_heap_resources>
  4095f7:	00 
  4095f8:	e8 83 14 01 00       	callq  41aa80 <caml_request_major_slice>
  4095fd:	48 8b 05 2c 7e 23 00 	mov    0x237e2c(%rip),%rax        # 641430 <caml_minor_heap_wsz>
  409604:	f2 0f 10 05 0c 7e 23 	movsd  0x237e0c(%rip),%xmm0        # 641418 <caml_extra_heap_resources>
  40960b:	00 
  40960c:	48 85 c0             	test   %rax,%rax
  40960f:	78 43                	js     409654 <caml_adjust_gc_speed+0xf4>
  409611:	66 0f ef c9          	pxor   %xmm1,%xmm1
  409615:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  40961a:	f2 0f 59 0d ce 45 01 	mulsd  0x145ce(%rip),%xmm1        # 41dbf0 <caml_absf_mask+0x230>
  409621:	00 
  409622:	66 0f ef d2          	pxor   %xmm2,%xmm2
  409626:	f2 48 0f 2a 15 d1 ba 	cvtsi2sdq 0x22bad1(%rip),%xmm2        # 635100 <caml_stat_heap_wsz>
  40962d:	22 00 
  40962f:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
  409633:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  409637:	77 37                	ja     409670 <caml_adjust_gc_speed+0x110>
  409639:	48 83 c4 08          	add    $0x8,%rsp
  40963d:	c3                   	retq   
  40963e:	66 90                	xchg   %ax,%ax
  409640:	48 8b 05 e9 7d 23 00 	mov    0x237de9(%rip),%rax        # 641430 <caml_minor_heap_wsz>
  409647:	f2 0f 11 05 c9 7d 23 	movsd  %xmm0,0x237dc9(%rip)        # 641418 <caml_extra_heap_resources>
  40964e:	00 
  40964f:	48 85 c0             	test   %rax,%rax
  409652:	79 bd                	jns    409611 <caml_adjust_gc_speed+0xb1>
  409654:	48 89 c2             	mov    %rax,%rdx
  409657:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40965b:	48 d1 ea             	shr    %rdx
  40965e:	83 e0 01             	and    $0x1,%eax
  409661:	48 09 c2             	or     %rax,%rdx
  409664:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  409669:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  40966d:	eb ab                	jmp    40961a <caml_adjust_gc_speed+0xba>
  40966f:	90                   	nop
  409670:	48 83 c4 08          	add    $0x8,%rsp
  409674:	e9 07 14 01 00       	jmpq   41aa80 <caml_request_major_slice>
  409679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  409680:	48 89 f0             	mov    %rsi,%rax
  409683:	48 89 f2             	mov    %rsi,%rdx
  409686:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40968a:	48 d1 e8             	shr    %rax
  40968d:	83 e2 01             	and    $0x1,%edx
  409690:	48 09 d0             	or     %rdx,%rax
  409693:	f2 0f 10 15 6d 45 01 	movsd  0x1456d(%rip),%xmm2        # 41dc08 <caml_absf_mask+0x248>
  40969a:	00 
  40969b:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  4096a0:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  4096a4:	e9 18 ff ff ff       	jmpq   4095c1 <caml_adjust_gc_speed+0x61>
  4096a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004096b0 <caml_initialize>:
  4096b0:	40 f6 c6 01          	test   $0x1,%sil
  4096b4:	48 89 37             	mov    %rsi,(%rdi)
  4096b7:	75 35                	jne    4096ee <caml_initialize+0x3e>
  4096b9:	48 3b 35 08 38 22 00 	cmp    0x223808(%rip),%rsi        # 62cec8 <caml_young_end>
  4096c0:	73 2c                	jae    4096ee <caml_initialize+0x3e>
  4096c2:	48 3b 35 07 38 22 00 	cmp    0x223807(%rip),%rsi        # 62ced0 <caml_young_start>
  4096c9:	76 25                	jbe    4096f0 <caml_initialize+0x40>
  4096cb:	48 8b 05 a6 37 22 00 	mov    0x2237a6(%rip),%rax        # 62ce78 <caml_ref_table+0x18>
  4096d2:	48 3b 05 a7 37 22 00 	cmp    0x2237a7(%rip),%rax        # 62ce80 <caml_ref_table+0x20>
  4096d9:	53                   	push   %rbx
  4096da:	48 89 fb             	mov    %rdi,%rbx
  4096dd:	73 19                	jae    4096f8 <caml_initialize+0x48>
  4096df:	48 8d 50 08          	lea    0x8(%rax),%rdx
  4096e3:	48 89 15 8e 37 22 00 	mov    %rdx,0x22378e(%rip)        # 62ce78 <caml_ref_table+0x18>
  4096ea:	48 89 18             	mov    %rbx,(%rax)
  4096ed:	5b                   	pop    %rbx
  4096ee:	f3 c3                	repz retq 
  4096f0:	f3 c3                	repz retq 
  4096f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4096f8:	bf 60 ce 62 00       	mov    $0x62ce60,%edi
  4096fd:	e8 de f3 ff ff       	callq  408ae0 <caml_realloc_ref_table>
  409702:	48 8b 05 6f 37 22 00 	mov    0x22376f(%rip),%rax        # 62ce78 <caml_ref_table+0x18>
  409709:	eb d4                	jmp    4096df <caml_initialize+0x2f>
  40970b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000409710 <caml_modify>:
  409710:	55                   	push   %rbp
  409711:	53                   	push   %rbx
  409712:	48 83 ec 08          	sub    $0x8,%rsp
  409716:	48 39 3d ab 37 22 00 	cmp    %rdi,0x2237ab(%rip)        # 62cec8 <caml_young_end>
  40971d:	76 19                	jbe    409738 <caml_modify+0x28>
  40971f:	48 3b 3d aa 37 22 00 	cmp    0x2237aa(%rip),%rdi        # 62ced0 <caml_young_start>
  409726:	76 10                	jbe    409738 <caml_modify+0x28>
  409728:	48 89 37             	mov    %rsi,(%rdi)
  40972b:	48 83 c4 08          	add    $0x8,%rsp
  40972f:	5b                   	pop    %rbx
  409730:	5d                   	pop    %rbp
  409731:	c3                   	retq   
  409732:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  409738:	48 89 fb             	mov    %rdi,%rbx
  40973b:	48 8b 3f             	mov    (%rdi),%rdi
  40973e:	48 89 f5             	mov    %rsi,%rbp
  409741:	48 89 33             	mov    %rsi,(%rbx)
  409744:	40 f6 c7 01          	test   $0x1,%dil
  409748:	74 46                	je     409790 <caml_modify+0x80>
  40974a:	40 f6 c5 01          	test   $0x1,%bpl
  40974e:	75 db                	jne    40972b <caml_modify+0x1b>
  409750:	48 3b 2d 71 37 22 00 	cmp    0x223771(%rip),%rbp        # 62cec8 <caml_young_end>
  409757:	73 d2                	jae    40972b <caml_modify+0x1b>
  409759:	48 3b 2d 70 37 22 00 	cmp    0x223770(%rip),%rbp        # 62ced0 <caml_young_start>
  409760:	76 c9                	jbe    40972b <caml_modify+0x1b>
  409762:	48 8b 05 0f 37 22 00 	mov    0x22370f(%rip),%rax        # 62ce78 <caml_ref_table+0x18>
  409769:	48 3b 05 10 37 22 00 	cmp    0x223710(%rip),%rax        # 62ce80 <caml_ref_table+0x20>
  409770:	73 46                	jae    4097b8 <caml_modify+0xa8>
  409772:	48 8d 50 08          	lea    0x8(%rax),%rdx
  409776:	48 89 15 fb 36 22 00 	mov    %rdx,0x2236fb(%rip)        # 62ce78 <caml_ref_table+0x18>
  40977d:	48 89 18             	mov    %rbx,(%rax)
  409780:	48 83 c4 08          	add    $0x8,%rsp
  409784:	5b                   	pop    %rbx
  409785:	5d                   	pop    %rbp
  409786:	c3                   	retq   
  409787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40978e:	00 00 
  409790:	48 3b 3d 31 37 22 00 	cmp    0x223731(%rip),%rdi        # 62cec8 <caml_young_end>
  409797:	73 09                	jae    4097a2 <caml_modify+0x92>
  409799:	48 3b 3d 30 37 22 00 	cmp    0x223730(%rip),%rdi        # 62ced0 <caml_young_start>
  4097a0:	77 89                	ja     40972b <caml_modify+0x1b>
  4097a2:	8b 05 60 7c 23 00    	mov    0x237c60(%rip),%eax        # 641408 <caml_gc_phase>
  4097a8:	85 c0                	test   %eax,%eax
  4097aa:	75 9e                	jne    40974a <caml_modify+0x3a>
  4097ac:	31 f6                	xor    %esi,%esi
  4097ae:	e8 fd da ff ff       	callq  4072b0 <caml_darken>
  4097b3:	eb 95                	jmp    40974a <caml_modify+0x3a>
  4097b5:	0f 1f 00             	nopl   (%rax)
  4097b8:	bf 60 ce 62 00       	mov    $0x62ce60,%edi
  4097bd:	e8 1e f3 ff ff       	callq  408ae0 <caml_realloc_ref_table>
  4097c2:	48 8b 05 af 36 22 00 	mov    0x2236af(%rip),%rax        # 62ce78 <caml_ref_table+0x18>
  4097c9:	eb a7                	jmp    409772 <caml_modify+0x62>
  4097cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004097d0 <caml_stat_alloc>:
  4097d0:	53                   	push   %rbx
  4097d1:	48 89 fb             	mov    %rdi,%rbx
  4097d4:	e8 b7 84 ff ff       	callq  401c90 <malloc@plt>
  4097d9:	48 85 c0             	test   %rax,%rax
  4097dc:	75 05                	jne    4097e3 <caml_stat_alloc+0x13>
  4097de:	48 85 db             	test   %rbx,%rbx
  4097e1:	75 02                	jne    4097e5 <caml_stat_alloc+0x15>
  4097e3:	5b                   	pop    %rbx
  4097e4:	c3                   	retq   
  4097e5:	e8 16 0f 01 00       	callq  41a700 <caml_raise_out_of_memory>
  4097ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004097f0 <caml_stat_free>:
  4097f0:	e9 6b 81 ff ff       	jmpq   401960 <free@plt>
  4097f5:	90                   	nop
  4097f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4097fd:	00 00 00 

0000000000409800 <caml_stat_resize>:
  409800:	48 83 ec 08          	sub    $0x8,%rsp
  409804:	e8 f7 84 ff ff       	callq  401d00 <realloc@plt>
  409809:	48 85 c0             	test   %rax,%rax
  40980c:	74 05                	je     409813 <caml_stat_resize+0x13>
  40980e:	48 83 c4 08          	add    $0x8,%rsp
  409812:	c3                   	retq   
  409813:	e8 e8 0e 01 00       	callq  41a700 <caml_raise_out_of_memory>
  409818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40981f:	00 

0000000000409820 <compare_val>:
  409820:	41 57                	push   %r15
  409822:	41 56                	push   %r14
  409824:	49 89 f7             	mov    %rsi,%r15
  409827:	41 55                	push   %r13
  409829:	41 54                	push   %r12
  40982b:	41 89 d5             	mov    %edx,%r13d
  40982e:	55                   	push   %rbp
  40982f:	53                   	push   %rbx
  409830:	48 89 fd             	mov    %rdi,%rbp
  409833:	49 be ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%r14
  40983a:	aa aa aa 
  40983d:	48 83 ec 28          	sub    $0x28,%rsp
  409841:	48 8b 1d 38 2e 22 00 	mov    0x222e38(%rip),%rbx        # 62c680 <compare_stack>
  409848:	85 d2                	test   %edx,%edx
  40984a:	41 0f 95 c4          	setne  %r12b
  40984e:	4c 39 fd             	cmp    %r15,%rbp
  409851:	75 4a                	jne    40989d <compare_val+0x7d>
  409853:	45 84 e4             	test   %r12b,%r12b
  409856:	74 45                	je     40989d <compare_val+0x7d>
  409858:	48 3b 1d 21 2e 22 00 	cmp    0x222e21(%rip),%rbx        # 62c680 <compare_stack>
  40985f:	0f 84 53 02 00 00    	je     409ab8 <compare_val+0x298>
  409865:	48 8b 03             	mov    (%rbx),%rax
  409868:	48 8d 50 08          	lea    0x8(%rax),%rdx
  40986c:	48 89 13             	mov    %rdx,(%rbx)
  40986f:	48 8b 28             	mov    (%rax),%rbp
  409872:	48 8b 43 08          	mov    0x8(%rbx),%rax
  409876:	48 8d 50 08          	lea    0x8(%rax),%rdx
  40987a:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  40987e:	4c 8b 38             	mov    (%rax),%r15
  409881:	48 8d 53 e8          	lea    -0x18(%rbx),%rdx
  409885:	48 8b 43 10          	mov    0x10(%rbx),%rax
  409889:	48 83 e8 01          	sub    $0x1,%rax
  40988d:	48 85 c0             	test   %rax,%rax
  409890:	48 89 43 10          	mov    %rax,0x10(%rbx)
  409894:	48 0f 44 da          	cmove  %rdx,%rbx
  409898:	4c 39 fd             	cmp    %r15,%rbp
  40989b:	74 b6                	je     409853 <compare_val+0x33>
  40989d:	40 f6 c5 01          	test   $0x1,%bpl
  4098a1:	74 7d                	je     409920 <compare_val+0x100>
  4098a3:	4c 39 fd             	cmp    %r15,%rbp
  4098a6:	74 b0                	je     409858 <compare_val+0x38>
  4098a8:	41 f6 c7 01          	test   $0x1,%r15b
  4098ac:	0f 85 cc 00 00 00    	jne    40997e <compare_val+0x15e>
  4098b2:	4c 89 ff             	mov    %r15,%rdi
  4098b5:	e8 86 f4 ff ff       	callq  408d40 <caml_page_table_lookup>
  4098ba:	a8 07                	test   $0x7,%al
  4098bc:	0f 84 06 01 00 00    	je     4099c8 <compare_val+0x1a8>
  4098c2:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  4098c7:	3c fa                	cmp    $0xfa,%al
  4098c9:	0f 84 71 01 00 00    	je     409a40 <compare_val+0x220>
  4098cf:	3c ff                	cmp    $0xff,%al
  4098d1:	0f 85 f1 00 00 00    	jne    4099c8 <compare_val+0x1a8>
  4098d7:	49 8b 07             	mov    (%r15),%rax
  4098da:	48 8b 40 30          	mov    0x30(%rax),%rax
  4098de:	48 85 c0             	test   %rax,%rax
  4098e1:	0f 84 e1 00 00 00    	je     4099c8 <compare_val+0x1a8>
  4098e7:	c7 05 47 7b 23 00 00 	movl   $0x0,0x237b47(%rip)        # 641438 <caml_compare_unordered>
  4098ee:	00 00 00 
  4098f1:	4c 89 fe             	mov    %r15,%rsi
  4098f4:	48 89 ef             	mov    %rbp,%rdi
  4098f7:	ff d0                	callq  *%rax
  4098f9:	8b 15 39 7b 23 00    	mov    0x237b39(%rip),%edx        # 641438 <caml_compare_unordered>
  4098ff:	85 d2                	test   %edx,%edx
  409901:	74 09                	je     40990c <compare_val+0xec>
  409903:	45 85 ed             	test   %r13d,%r13d
  409906:	0f 84 79 03 00 00    	je     409c85 <compare_val+0x465>
  40990c:	85 c0                	test   %eax,%eax
  40990e:	0f 84 44 ff ff ff    	je     409858 <compare_val+0x38>
  409914:	48 98                	cltq   
  409916:	e9 b4 00 00 00       	jmpq   4099cf <compare_val+0x1af>
  40991b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  409920:	41 f6 c7 01          	test   $0x1,%r15b
  409924:	48 89 ef             	mov    %rbp,%rdi
  409927:	74 3f                	je     409968 <compare_val+0x148>
  409929:	e8 12 f4 ff ff       	callq  408d40 <caml_page_table_lookup>
  40992e:	a8 07                	test   $0x7,%al
  409930:	74 1d                	je     40994f <compare_val+0x12f>
  409932:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
  409936:	3c fa                	cmp    $0xfa,%al
  409938:	0f 84 12 01 00 00    	je     409a50 <compare_val+0x230>
  40993e:	3c ff                	cmp    $0xff,%al
  409940:	75 0d                	jne    40994f <compare_val+0x12f>
  409942:	48 8b 45 00          	mov    0x0(%rbp),%rax
  409946:	48 8b 40 30          	mov    0x30(%rax),%rax
  40994a:	48 85 c0             	test   %rax,%rax
  40994d:	75 98                	jne    4098e7 <compare_val+0xc7>
  40994f:	48 83 c4 28          	add    $0x28,%rsp
  409953:	b8 01 00 00 00       	mov    $0x1,%eax
  409958:	5b                   	pop    %rbx
  409959:	5d                   	pop    %rbp
  40995a:	41 5c                	pop    %r12
  40995c:	41 5d                	pop    %r13
  40995e:	41 5e                	pop    %r14
  409960:	41 5f                	pop    %r15
  409962:	c3                   	retq   
  409963:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  409968:	e8 d3 f3 ff ff       	callq  408d40 <caml_page_table_lookup>
  40996d:	a8 07                	test   $0x7,%al
  40996f:	0f 85 eb 00 00 00    	jne    409a60 <compare_val+0x240>
  409975:	4c 39 fd             	cmp    %r15,%rbp
  409978:	0f 84 da fe ff ff    	je     409858 <compare_val+0x38>
  40997e:	48 d1 fd             	sar    %rbp
  409981:	49 d1 ff             	sar    %r15
  409984:	48 89 e8             	mov    %rbp,%rax
  409987:	4c 29 f8             	sub    %r15,%rax
  40998a:	eb 43                	jmp    4099cf <compare_val+0x1af>
  40998c:	f2 0f 10 4d 00       	movsd  0x0(%rbp),%xmm1
  409991:	f2 41 0f 10 07       	movsd  (%r15),%xmm0
  409996:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40999a:	77 2c                	ja     4099c8 <compare_val+0x1a8>
  40999c:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
  4099a0:	77 ad                	ja     40994f <compare_val+0x12f>
  4099a2:	7a 06                	jp     4099aa <compare_val+0x18a>
  4099a4:	0f 84 ae fe ff ff    	je     409858 <compare_val+0x38>
  4099aa:	45 85 ed             	test   %r13d,%r13d
  4099ad:	0f 84 d2 02 00 00    	je     409c85 <compare_val+0x465>
  4099b3:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
  4099b7:	7b 96                	jnp    40994f <compare_val+0x12f>
  4099b9:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
  4099bd:	0f 8a 95 fe ff ff    	jp     409858 <compare_val+0x38>
  4099c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4099c8:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4099cf:	48 83 c4 28          	add    $0x28,%rsp
  4099d3:	5b                   	pop    %rbx
  4099d4:	5d                   	pop    %rbp
  4099d5:	41 5c                	pop    %r12
  4099d7:	41 5d                	pop    %r13
  4099d9:	41 5e                	pop    %r14
  4099db:	41 5f                	pop    %r15
  4099dd:	c3                   	retq   
  4099de:	48 8b 07             	mov    (%rdi),%rax
  4099e1:	48 c1 e8 0a          	shr    $0xa,%rax
  4099e5:	49 89 c1             	mov    %rax,%r9
  4099e8:	49 8b 00             	mov    (%r8),%rax
  4099eb:	48 c1 e8 0a          	shr    $0xa,%rax
  4099ef:	49 39 c1             	cmp    %rax,%r9
  4099f2:	0f 85 1d 03 00 00    	jne    409d15 <compare_val+0x4f5>
  4099f8:	4d 85 c9             	test   %r9,%r9
  4099fb:	0f 84 57 fe ff ff    	je     409858 <compare_val+0x38>
  409a01:	49 83 f9 01          	cmp    $0x1,%r9
  409a05:	74 2b                	je     409a32 <compare_val+0x212>
  409a07:	48 8b 05 6a 2c 22 00 	mov    0x222c6a(%rip),%rax        # 62c678 <compare_stack_limit>
  409a0e:	48 83 c3 18          	add    $0x18,%rbx
  409a12:	48 39 c3             	cmp    %rax,%rbx
  409a15:	0f 83 81 02 00 00    	jae    409c9c <compare_val+0x47c>
  409a1b:	48 8d 45 08          	lea    0x8(%rbp),%rax
  409a1f:	48 89 03             	mov    %rax,(%rbx)
  409a22:	49 8d 47 08          	lea    0x8(%r15),%rax
  409a26:	48 89 43 08          	mov    %rax,0x8(%rbx)
  409a2a:	49 8d 41 ff          	lea    -0x1(%r9),%rax
  409a2e:	48 89 43 10          	mov    %rax,0x10(%rbx)
  409a32:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
  409a36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  409a3d:	00 00 00 
  409a40:	4d 8b 3f             	mov    (%r15),%r15
  409a43:	e9 06 fe ff ff       	jmpq   40984e <compare_val+0x2e>
  409a48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  409a4f:	00 
  409a50:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
  409a54:	e9 f5 fd ff ff       	jmpq   40984e <compare_val+0x2e>
  409a59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  409a60:	4c 89 ff             	mov    %r15,%rdi
  409a63:	e8 d8 f2 ff ff       	callq  408d40 <caml_page_table_lookup>
  409a68:	a8 07                	test   $0x7,%al
  409a6a:	0f 84 05 ff ff ff    	je     409975 <compare_val+0x155>
  409a70:	0f b6 55 f8          	movzbl -0x8(%rbp),%edx
  409a74:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
  409a78:	81 fa fa 00 00 00    	cmp    $0xfa,%edx
  409a7e:	48 89 d0             	mov    %rdx,%rax
  409a81:	74 cd                	je     409a50 <compare_val+0x230>
  409a83:	41 0f b6 4f f8       	movzbl -0x8(%r15),%ecx
  409a88:	4d 8d 47 f8          	lea    -0x8(%r15),%r8
  409a8c:	81 f9 fa 00 00 00    	cmp    $0xfa,%ecx
  409a92:	74 ac                	je     409a40 <compare_val+0x220>
  409a94:	39 ca                	cmp    %ecx,%edx
  409a96:	0f 85 f8 01 00 00    	jne    409c94 <compare_val+0x474>
  409a9c:	83 c0 09             	add    $0x9,%eax
  409a9f:	3c 08                	cmp    $0x8,%al
  409aa1:	0f 87 37 ff ff ff    	ja     4099de <compare_val+0x1be>
  409aa7:	0f b6 c0             	movzbl %al,%eax
  409aaa:	ff 24 c5 98 de 41 00 	jmpq   *0x41de98(,%rax,8)
  409ab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  409ab8:	48 83 c4 28          	add    $0x28,%rsp
  409abc:	31 c0                	xor    %eax,%eax
  409abe:	5b                   	pop    %rbx
  409abf:	5d                   	pop    %rbp
  409ac0:	41 5c                	pop    %r12
  409ac2:	41 5d                	pop    %r13
  409ac4:	41 5e                	pop    %r14
  409ac6:	41 5f                	pop    %r15
  409ac8:	c3                   	retq   
  409ac9:	48 8b 07             	mov    (%rdi),%rax
  409acc:	49 8b 10             	mov    (%r8),%rdx
  409acf:	48 c1 e8 0a          	shr    $0xa,%rax
  409ad3:	48 c1 ea 0a          	shr    $0xa,%rdx
  409ad7:	48 39 d0             	cmp    %rdx,%rax
  409ada:	0f 85 67 01 00 00    	jne    409c47 <compare_val+0x427>
  409ae0:	48 85 c0             	test   %rax,%rax
  409ae3:	0f 84 6f fd ff ff    	je     409858 <compare_val+0x38>
  409ae9:	f2 0f 10 45 00       	movsd  0x0(%rbp),%xmm0
  409aee:	f2 41 0f 10 0f       	movsd  (%r15),%xmm1
  409af3:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
  409af7:	0f 87 cb fe ff ff    	ja     4099c8 <compare_val+0x1a8>
  409afd:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  409b01:	0f 87 48 fe ff ff    	ja     40994f <compare_val+0x12f>
  409b07:	48 8d 55 08          	lea    0x8(%rbp),%rdx
  409b0b:	48 8d 44 c5 00       	lea    0x0(%rbp,%rax,8),%rax
  409b10:	49 29 ef             	sub    %rbp,%r15
  409b13:	eb 35                	jmp    409b4a <compare_val+0x32a>
  409b15:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
  409b19:	0f 8b a9 fe ff ff    	jnp    4099c8 <compare_val+0x1a8>
  409b1f:	48 39 c2             	cmp    %rax,%rdx
  409b22:	0f 84 30 fd ff ff    	je     409858 <compare_val+0x38>
  409b28:	f2 0f 10 02          	movsd  (%rdx),%xmm0
  409b2c:	f2 41 0f 10 0c 17    	movsd  (%r15,%rdx,1),%xmm1
  409b32:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
  409b36:	0f 87 8c fe ff ff    	ja     4099c8 <compare_val+0x1a8>
  409b3c:	48 83 c2 08          	add    $0x8,%rdx
  409b40:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  409b44:	0f 87 05 fe ff ff    	ja     40994f <compare_val+0x12f>
  409b4a:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
  409b4e:	7a 02                	jp     409b52 <compare_val+0x332>
  409b50:	74 cd                	je     409b1f <compare_val+0x2ff>
  409b52:	45 85 ed             	test   %r13d,%r13d
  409b55:	0f 84 2a 01 00 00    	je     409c85 <compare_val+0x465>
  409b5b:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
  409b5f:	0f 8b ea fd ff ff    	jnp    40994f <compare_val+0x12f>
  409b65:	eb ae                	jmp    409b15 <compare_val+0x2f5>
  409b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  409b6e:	00 00 
  409b70:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  409b74:	49 8b 0f             	mov    (%r15),%rcx
  409b77:	48 8b 42 10          	mov    0x10(%rdx),%rax
  409b7b:	48 3b 41 10          	cmp    0x10(%rcx),%rax
  409b7f:	0f 85 9b 01 00 00    	jne    409d20 <compare_val+0x500>
  409b85:	48 85 c0             	test   %rax,%rax
  409b88:	0f 85 59 fd ff ff    	jne    4098e7 <compare_val+0xc7>
  409b8e:	48 8b 3d eb 2a 22 00 	mov    0x222aeb(%rip),%rdi        # 62c680 <compare_stack>
  409b95:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409b9c:	74 1b                	je     409bb9 <compare_val+0x399>
  409b9e:	e8 bd 7d ff ff       	callq  401960 <free@plt>
  409ba3:	48 c7 05 d2 2a 22 00 	movq   $0x62cf60,0x222ad2(%rip)        # 62c680 <compare_stack>
  409baa:	60 cf 62 00 
  409bae:	48 c7 05 bf 2a 22 00 	movq   $0x62e760,0x222abf(%rip)        # 62c678 <compare_stack_limit>
  409bb5:	60 e7 62 00 
  409bb9:	bf 61 de 41 00       	mov    $0x41de61,%edi
  409bbe:	e8 1d 0b 01 00       	callq  41a6e0 <caml_invalid_argument>
  409bc3:	4c 39 fd             	cmp    %r15,%rbp
  409bc6:	0f 84 8c fc ff ff    	je     409858 <compare_val+0x38>
  409bcc:	48 89 ef             	mov    %rbp,%rdi
  409bcf:	e8 bc 29 00 00       	callq  40c590 <caml_string_length>
  409bd4:	4c 89 ff             	mov    %r15,%rdi
  409bd7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  409bdc:	e8 af 29 00 00       	callq  40c590 <caml_string_length>
  409be1:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
  409be6:	48 89 c2             	mov    %rax,%rdx
  409be9:	4c 89 fe             	mov    %r15,%rsi
  409bec:	48 89 ef             	mov    %rbp,%rdi
  409bef:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  409bf4:	49 39 c0             	cmp    %rax,%r8
  409bf7:	49 0f 46 d0          	cmovbe %r8,%rdx
  409bfb:	e8 90 7f ff ff       	callq  401b90 <memcmp@plt>
  409c00:	85 c0                	test   %eax,%eax
  409c02:	0f 88 c0 fd ff ff    	js     4099c8 <compare_val+0x1a8>
  409c08:	0f 85 41 fd ff ff    	jne    40994f <compare_val+0x12f>
  409c0e:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
  409c13:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
  409c18:	49 39 c8             	cmp    %rcx,%r8
  409c1b:	0f 84 37 fc ff ff    	je     409858 <compare_val+0x38>
  409c21:	4c 89 c0             	mov    %r8,%rax
  409c24:	48 29 c8             	sub    %rcx,%rax
  409c27:	e9 a3 fd ff ff       	jmpq   4099cf <compare_val+0x1af>
  409c2c:	0f 1f 40 00          	nopl   0x0(%rax)
  409c30:	48 8b 45 08          	mov    0x8(%rbp),%rax
  409c34:	49 8b 57 08          	mov    0x8(%r15),%rdx
  409c38:	48 d1 f8             	sar    %rax
  409c3b:	48 d1 fa             	sar    %rdx
  409c3e:	48 39 d0             	cmp    %rdx,%rax
  409c41:	0f 84 11 fc ff ff    	je     409858 <compare_val+0x38>
  409c47:	48 29 d0             	sub    %rdx,%rax
  409c4a:	e9 80 fd ff ff       	jmpq   4099cf <compare_val+0x1af>
  409c4f:	90                   	nop
  409c50:	48 8b 3d 29 2a 22 00 	mov    0x222a29(%rip),%rdi        # 62c680 <compare_stack>
  409c57:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409c5e:	74 1b                	je     409c7b <compare_val+0x45b>
  409c60:	e8 fb 7c ff ff       	callq  401960 <free@plt>
  409c65:	48 c7 05 10 2a 22 00 	movq   $0x62cf60,0x222a10(%rip)        # 62c680 <compare_stack>
  409c6c:	60 cf 62 00 
  409c70:	48 c7 05 fd 29 22 00 	movq   $0x62e760,0x2229fd(%rip)        # 62c678 <compare_stack_limit>
  409c77:	60 e7 62 00 
  409c7b:	bf 79 de 41 00       	mov    $0x41de79,%edi
  409c80:	e8 5b 0a 01 00       	callq  41a6e0 <caml_invalid_argument>
  409c85:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  409c8c:	00 00 80 
  409c8f:	e9 3b fd ff ff       	jmpq   4099cf <compare_val+0x1af>
  409c94:	48 29 c8             	sub    %rcx,%rax
  409c97:	e9 33 fd ff ff       	jmpq   4099cf <compare_val+0x1af>
  409c9c:	4c 8b 05 dd 29 22 00 	mov    0x2229dd(%rip),%r8        # 62c680 <compare_stack>
  409ca3:	4c 29 c0             	sub    %r8,%rax
  409ca6:	4c 29 c3             	sub    %r8,%rbx
  409ca9:	48 c1 f8 03          	sar    $0x3,%rax
  409cad:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
  409cb2:	49 0f af c6          	imul   %r14,%rax
  409cb6:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
  409cba:	48 81 fa ff ff 0f 00 	cmp    $0xfffff,%rdx
  409cc1:	0f 87 a6 00 00 00    	ja     409d6d <compare_val+0x54d>
  409cc7:	49 81 f8 60 cf 62 00 	cmp    $0x62cf60,%r8
  409cce:	74 68                	je     409d38 <compare_val+0x518>
  409cd0:	48 8d 14 82          	lea    (%rdx,%rax,4),%rdx
  409cd4:	4c 89 c7             	mov    %r8,%rdi
  409cd7:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
  409cdc:	48 8d 1c d5 00 00 00 	lea    0x0(,%rdx,8),%rbx
  409ce3:	00 
  409ce4:	48 89 de             	mov    %rbx,%rsi
  409ce7:	e8 14 80 ff ff       	callq  401d00 <realloc@plt>
  409cec:	48 85 c0             	test   %rax,%rax
  409cef:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
  409cf4:	74 77                	je     409d6d <compare_val+0x54d>
  409cf6:	48 8d 14 18          	lea    (%rax,%rbx,1),%rdx
  409cfa:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  409cff:	48 89 05 7a 29 22 00 	mov    %rax,0x22297a(%rip)        # 62c680 <compare_stack>
  409d06:	48 89 15 6b 29 22 00 	mov    %rdx,0x22296b(%rip)        # 62c678 <compare_stack_limit>
  409d0d:	48 01 c3             	add    %rax,%rbx
  409d10:	e9 06 fd ff ff       	jmpq   409a1b <compare_val+0x1fb>
  409d15:	49 29 c1             	sub    %rax,%r9
  409d18:	4c 89 c8             	mov    %r9,%rax
  409d1b:	e9 af fc ff ff       	jmpq   4099cf <compare_val+0x1af>
  409d20:	48 8b 31             	mov    (%rcx),%rsi
  409d23:	48 8b 3a             	mov    (%rdx),%rdi
  409d26:	e8 95 7e ff ff       	callq  401bc0 <strcmp@plt>
  409d2b:	85 c0                	test   %eax,%eax
  409d2d:	0f 89 1c fc ff ff    	jns    40994f <compare_val+0x12f>
  409d33:	e9 90 fc ff ff       	jmpq   4099c8 <compare_val+0x1a8>
  409d38:	48 6b da 18          	imul   $0x18,%rdx,%rbx
  409d3c:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
  409d41:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
  409d46:	48 89 df             	mov    %rbx,%rdi
  409d49:	e8 42 7f ff ff       	callq  401c90 <malloc@plt>
  409d4e:	48 85 c0             	test   %rax,%rax
  409d51:	74 1a                	je     409d6d <compare_val+0x54d>
  409d53:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  409d58:	b9 00 03 00 00       	mov    $0x300,%ecx
  409d5d:	48 89 c7             	mov    %rax,%rdi
  409d60:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
  409d65:	4c 89 c6             	mov    %r8,%rsi
  409d68:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  409d6b:	eb 89                	jmp    409cf6 <compare_val+0x4d6>
  409d6d:	e8 3e 81 ff ff       	callq  401eb0 <compare_stack_overflow>
  409d72:	0f 1f 40 00          	nopl   0x0(%rax)
  409d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  409d7d:	00 00 00 

0000000000409d80 <caml_compare>:
  409d80:	53                   	push   %rbx
  409d81:	ba 01 00 00 00       	mov    $0x1,%edx
  409d86:	e8 95 fa ff ff       	callq  409820 <compare_val>
  409d8b:	48 8b 3d ee 28 22 00 	mov    0x2228ee(%rip),%rdi        # 62c680 <compare_stack>
  409d92:	48 89 c3             	mov    %rax,%rbx
  409d95:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409d9c:	74 1b                	je     409db9 <caml_compare+0x39>
  409d9e:	e8 bd 7b ff ff       	callq  401960 <free@plt>
  409da3:	48 c7 05 d2 28 22 00 	movq   $0x62cf60,0x2228d2(%rip)        # 62c680 <compare_stack>
  409daa:	60 cf 62 00 
  409dae:	48 c7 05 bf 28 22 00 	movq   $0x62e760,0x2228bf(%rip)        # 62c678 <compare_stack_limit>
  409db5:	60 e7 62 00 
  409db9:	48 85 db             	test   %rbx,%rbx
  409dbc:	78 12                	js     409dd0 <caml_compare+0x50>
  409dbe:	48 83 fb 01          	cmp    $0x1,%rbx
  409dc2:	48 19 c0             	sbb    %rax,%rax
  409dc5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  409dc9:	48 83 c0 03          	add    $0x3,%rax
  409dcd:	5b                   	pop    %rbx
  409dce:	c3                   	retq   
  409dcf:	90                   	nop
  409dd0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  409dd7:	5b                   	pop    %rbx
  409dd8:	c3                   	retq   
  409dd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000409de0 <caml_equal>:
  409de0:	53                   	push   %rbx
  409de1:	31 d2                	xor    %edx,%edx
  409de3:	e8 38 fa ff ff       	callq  409820 <compare_val>
  409de8:	48 8b 3d 91 28 22 00 	mov    0x222891(%rip),%rdi        # 62c680 <compare_stack>
  409def:	48 89 c3             	mov    %rax,%rbx
  409df2:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409df9:	74 1b                	je     409e16 <caml_equal+0x36>
  409dfb:	e8 60 7b ff ff       	callq  401960 <free@plt>
  409e00:	48 c7 05 75 28 22 00 	movq   $0x62cf60,0x222875(%rip)        # 62c680 <compare_stack>
  409e07:	60 cf 62 00 
  409e0b:	48 c7 05 62 28 22 00 	movq   $0x62e760,0x222862(%rip)        # 62c678 <compare_stack_limit>
  409e12:	60 e7 62 00 
  409e16:	48 83 fb 01          	cmp    $0x1,%rbx
  409e1a:	48 19 c0             	sbb    %rax,%rax
  409e1d:	83 e0 02             	and    $0x2,%eax
  409e20:	48 83 c0 01          	add    $0x1,%rax
  409e24:	5b                   	pop    %rbx
  409e25:	c3                   	retq   
  409e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  409e2d:	00 00 00 

0000000000409e30 <caml_notequal>:
  409e30:	53                   	push   %rbx
  409e31:	31 d2                	xor    %edx,%edx
  409e33:	e8 e8 f9 ff ff       	callq  409820 <compare_val>
  409e38:	48 8b 3d 41 28 22 00 	mov    0x222841(%rip),%rdi        # 62c680 <compare_stack>
  409e3f:	48 89 c3             	mov    %rax,%rbx
  409e42:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409e49:	74 1b                	je     409e66 <caml_notequal+0x36>
  409e4b:	e8 10 7b ff ff       	callq  401960 <free@plt>
  409e50:	48 c7 05 25 28 22 00 	movq   $0x62cf60,0x222825(%rip)        # 62c680 <compare_stack>
  409e57:	60 cf 62 00 
  409e5b:	48 c7 05 12 28 22 00 	movq   $0x62e760,0x222812(%rip)        # 62c678 <compare_stack_limit>
  409e62:	60 e7 62 00 
  409e66:	48 83 fb 01          	cmp    $0x1,%rbx
  409e6a:	48 19 c0             	sbb    %rax,%rax
  409e6d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  409e71:	48 83 c0 03          	add    $0x3,%rax
  409e75:	5b                   	pop    %rbx
  409e76:	c3                   	retq   
  409e77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  409e7e:	00 00 

0000000000409e80 <caml_lessthan>:
  409e80:	53                   	push   %rbx
  409e81:	31 d2                	xor    %edx,%edx
  409e83:	e8 98 f9 ff ff       	callq  409820 <compare_val>
  409e88:	48 8b 3d f1 27 22 00 	mov    0x2227f1(%rip),%rdi        # 62c680 <compare_stack>
  409e8f:	48 89 c3             	mov    %rax,%rbx
  409e92:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409e99:	74 1b                	je     409eb6 <caml_lessthan+0x36>
  409e9b:	e8 c0 7a ff ff       	callq  401960 <free@plt>
  409ea0:	48 c7 05 d5 27 22 00 	movq   $0x62cf60,0x2227d5(%rip)        # 62c680 <compare_stack>
  409ea7:	60 cf 62 00 
  409eab:	48 c7 05 c2 27 22 00 	movq   $0x62e760,0x2227c2(%rip)        # 62c678 <compare_stack_limit>
  409eb2:	60 e7 62 00 
  409eb6:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
  409ebd:	ff ff 7f 
  409ec0:	48 8d 04 13          	lea    (%rbx,%rdx,1),%rax
  409ec4:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
  409ecb:	ff ff 7f 
  409ece:	5b                   	pop    %rbx
  409ecf:	48 39 d0             	cmp    %rdx,%rax
  409ed2:	ba 01 00 00 00       	mov    $0x1,%edx
  409ed7:	0f 96 c0             	setbe  %al
  409eda:	0f b6 c0             	movzbl %al,%eax
  409edd:	48 8d 04 42          	lea    (%rdx,%rax,2),%rax
  409ee1:	c3                   	retq   
  409ee2:	0f 1f 40 00          	nopl   0x0(%rax)
  409ee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  409eed:	00 00 00 

0000000000409ef0 <caml_lessequal>:
  409ef0:	53                   	push   %rbx
  409ef1:	31 d2                	xor    %edx,%edx
  409ef3:	e8 28 f9 ff ff       	callq  409820 <compare_val>
  409ef8:	48 8b 3d 81 27 22 00 	mov    0x222781(%rip),%rdi        # 62c680 <compare_stack>
  409eff:	48 89 c3             	mov    %rax,%rbx
  409f02:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409f09:	74 1b                	je     409f26 <caml_lessequal+0x36>
  409f0b:	e8 50 7a ff ff       	callq  401960 <free@plt>
  409f10:	48 c7 05 65 27 22 00 	movq   $0x62cf60,0x222765(%rip)        # 62c680 <compare_stack>
  409f17:	60 cf 62 00 
  409f1b:	48 c7 05 52 27 22 00 	movq   $0x62e760,0x222752(%rip)        # 62c678 <compare_stack_limit>
  409f22:	60 e7 62 00 
  409f26:	48 85 db             	test   %rbx,%rbx
  409f29:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  409f30:	00 00 80 
  409f33:	0f 9e c2             	setle  %dl
  409f36:	48 39 c3             	cmp    %rax,%rbx
  409f39:	0f 95 c0             	setne  %al
  409f3c:	0f b6 c0             	movzbl %al,%eax
  409f3f:	48 21 d0             	and    %rdx,%rax
  409f42:	ba 01 00 00 00       	mov    $0x1,%edx
  409f47:	48 8d 04 42          	lea    (%rdx,%rax,2),%rax
  409f4b:	5b                   	pop    %rbx
  409f4c:	c3                   	retq   
  409f4d:	0f 1f 00             	nopl   (%rax)

0000000000409f50 <caml_greaterthan>:
  409f50:	53                   	push   %rbx
  409f51:	31 d2                	xor    %edx,%edx
  409f53:	e8 c8 f8 ff ff       	callq  409820 <compare_val>
  409f58:	48 8b 3d 21 27 22 00 	mov    0x222721(%rip),%rdi        # 62c680 <compare_stack>
  409f5f:	48 89 c3             	mov    %rax,%rbx
  409f62:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409f69:	74 1b                	je     409f86 <caml_greaterthan+0x36>
  409f6b:	e8 f0 79 ff ff       	callq  401960 <free@plt>
  409f70:	48 c7 05 05 27 22 00 	movq   $0x62cf60,0x222705(%rip)        # 62c680 <compare_stack>
  409f77:	60 cf 62 00 
  409f7b:	48 c7 05 f2 26 22 00 	movq   $0x62e760,0x2226f2(%rip)        # 62c678 <compare_stack_limit>
  409f82:	60 e7 62 00 
  409f86:	31 c0                	xor    %eax,%eax
  409f88:	48 85 db             	test   %rbx,%rbx
  409f8b:	0f 9f c0             	setg   %al
  409f8e:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  409f93:	5b                   	pop    %rbx
  409f94:	c3                   	retq   
  409f95:	90                   	nop
  409f96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  409f9d:	00 00 00 

0000000000409fa0 <caml_greaterequal>:
  409fa0:	53                   	push   %rbx
  409fa1:	31 d2                	xor    %edx,%edx
  409fa3:	e8 78 f8 ff ff       	callq  409820 <compare_val>
  409fa8:	48 8b 3d d1 26 22 00 	mov    0x2226d1(%rip),%rdi        # 62c680 <compare_stack>
  409faf:	48 89 c3             	mov    %rax,%rbx
  409fb2:	48 81 ff 60 cf 62 00 	cmp    $0x62cf60,%rdi
  409fb9:	74 1b                	je     409fd6 <caml_greaterequal+0x36>
  409fbb:	e8 a0 79 ff ff       	callq  401960 <free@plt>
  409fc0:	48 c7 05 b5 26 22 00 	movq   $0x62cf60,0x2226b5(%rip)        # 62c680 <compare_stack>
  409fc7:	60 cf 62 00 
  409fcb:	48 c7 05 a2 26 22 00 	movq   $0x62e760,0x2226a2(%rip)        # 62c678 <compare_stack_limit>
  409fd2:	60 e7 62 00 
  409fd6:	48 89 d8             	mov    %rbx,%rax
  409fd9:	48 c1 f8 3f          	sar    $0x3f,%rax
  409fdd:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  409fe1:	48 83 c0 03          	add    $0x3,%rax
  409fe5:	5b                   	pop    %rbx
  409fe6:	c3                   	retq   
  409fe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  409fee:	00 00 

0000000000409ff0 <parse_sign_and_base>:
  409ff0:	48 89 f8             	mov    %rdi,%rax
  409ff3:	c7 01 01 00 00 00    	movl   $0x1,(%rcx)
  409ff9:	0f b6 3f             	movzbl (%rdi),%edi
  409ffc:	40 80 ff 2d          	cmp    $0x2d,%dil
  40a000:	74 3e                	je     40a040 <parse_sign_and_base+0x50>
  40a002:	31 c9                	xor    %ecx,%ecx
  40a004:	40 80 ff 2b          	cmp    $0x2b,%dil
  40a008:	0f 94 c1             	sete   %cl
  40a00b:	48 01 c8             	add    %rcx,%rax
  40a00e:	c7 06 0a 00 00 00    	movl   $0xa,(%rsi)
  40a014:	c7 02 01 00 00 00    	movl   $0x1,(%rdx)
  40a01a:	80 38 30             	cmpb   $0x30,(%rax)
  40a01d:	74 09                	je     40a028 <parse_sign_and_base+0x38>
  40a01f:	f3 c3                	repz retq 
  40a021:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40a028:	0f b6 78 01          	movzbl 0x1(%rax),%edi
  40a02c:	8d 4f be             	lea    -0x42(%rdi),%ecx
  40a02f:	80 f9 36             	cmp    $0x36,%cl
  40a032:	77 eb                	ja     40a01f <parse_sign_and_base+0x2f>
  40a034:	0f b6 c9             	movzbl %cl,%ecx
  40a037:	ff 24 cd e0 de 41 00 	jmpq   *0x41dee0(,%rcx,8)
  40a03e:	66 90                	xchg   %ax,%ax
  40a040:	c7 01 ff ff ff ff    	movl   $0xffffffff,(%rcx)
  40a046:	48 83 c0 01          	add    $0x1,%rax
  40a04a:	eb c2                	jmp    40a00e <parse_sign_and_base+0x1e>
  40a04c:	0f 1f 40 00          	nopl   0x0(%rax)
  40a050:	c7 06 10 00 00 00    	movl   $0x10,(%rsi)
  40a056:	48 83 c0 02          	add    $0x2,%rax
  40a05a:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  40a060:	c3                   	retq   
  40a061:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40a068:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  40a06e:	48 83 c0 02          	add    $0x2,%rax
  40a072:	c3                   	retq   
  40a073:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40a078:	c7 06 08 00 00 00    	movl   $0x8,(%rsi)
  40a07e:	48 83 c0 02          	add    $0x2,%rax
  40a082:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  40a088:	c3                   	retq   
  40a089:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40a090:	c7 06 02 00 00 00    	movl   $0x2,(%rsi)
  40a096:	48 83 c0 02          	add    $0x2,%rax
  40a09a:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  40a0a0:	c3                   	retq   
  40a0a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40a0a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a0ad:	00 00 00 

000000000040a0b0 <int32_cmp>:
  40a0b0:	8b 56 08             	mov    0x8(%rsi),%edx
  40a0b3:	8b 4f 08             	mov    0x8(%rdi),%ecx
  40a0b6:	31 c0                	xor    %eax,%eax
  40a0b8:	39 d1                	cmp    %edx,%ecx
  40a0ba:	0f 9c c2             	setl   %dl
  40a0bd:	0f 9f c0             	setg   %al
  40a0c0:	0f b6 d2             	movzbl %dl,%edx
  40a0c3:	29 d0                	sub    %edx,%eax
  40a0c5:	c3                   	retq   
  40a0c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a0cd:	00 00 00 

000000000040a0d0 <int32_hash>:
  40a0d0:	48 63 47 08          	movslq 0x8(%rdi),%rax
  40a0d4:	c3                   	retq   
  40a0d5:	90                   	nop
  40a0d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a0dd:	00 00 00 

000000000040a0e0 <int64_hash>:
  40a0e0:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40a0e4:	48 89 c2             	mov    %rax,%rdx
  40a0e7:	48 c1 fa 20          	sar    $0x20,%rdx
  40a0eb:	31 d0                	xor    %edx,%eax
  40a0ed:	c3                   	retq   
  40a0ee:	66 90                	xchg   %ax,%ax

000000000040a0f0 <caml_swap64>:
  40a0f0:	48 89 f8             	mov    %rdi,%rax
  40a0f3:	48 0f c8             	bswap  %rax
  40a0f6:	c3                   	retq   
  40a0f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40a0fe:	00 00 

000000000040a100 <nativeint_cmp>:
  40a100:	48 8b 56 08          	mov    0x8(%rsi),%rdx
  40a104:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
  40a108:	31 c0                	xor    %eax,%eax
  40a10a:	48 39 d1             	cmp    %rdx,%rcx
  40a10d:	0f 9c c2             	setl   %dl
  40a110:	0f 9f c0             	setg   %al
  40a113:	0f b6 d2             	movzbl %dl,%edx
  40a116:	29 d0                	sub    %edx,%eax
  40a118:	c3                   	retq   
  40a119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040a120 <int64_cmp>:
  40a120:	eb de                	jmp    40a100 <nativeint_cmp>
  40a122:	0f 1f 40 00          	nopl   0x0(%rax)
  40a126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a12d:	00 00 00 

000000000040a130 <nativeint_hash>:
  40a130:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  40a134:	48 89 d1             	mov    %rdx,%rcx
  40a137:	48 89 d0             	mov    %rdx,%rax
  40a13a:	48 c1 f9 20          	sar    $0x20,%rcx
  40a13e:	48 c1 f8 3f          	sar    $0x3f,%rax
  40a142:	48 31 c8             	xor    %rcx,%rax
  40a145:	48 31 d0             	xor    %rdx,%rax
  40a148:	c3                   	retq   
  40a149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040a150 <parse_format>:
  40a150:	41 56                	push   %r14
  40a152:	41 55                	push   %r13
  40a154:	49 89 d6             	mov    %rdx,%r14
  40a157:	41 54                	push   %r12
  40a159:	55                   	push   %rbp
  40a15a:	49 89 f4             	mov    %rsi,%r12
  40a15d:	53                   	push   %rbx
  40a15e:	49 89 fd             	mov    %rdi,%r13
  40a161:	e8 2a 24 00 00       	callq  40c590 <caml_string_length>
  40a166:	4c 89 e7             	mov    %r12,%rdi
  40a169:	48 89 c5             	mov    %rax,%rbp
  40a16c:	e8 df 78 ff ff       	callq  401a50 <strlen@plt>
  40a171:	48 89 c3             	mov    %rax,%rbx
  40a174:	48 8d 44 05 01       	lea    0x1(%rbp,%rax,1),%rax
  40a179:	48 83 f8 1f          	cmp    $0x1f,%rax
  40a17d:	77 57                	ja     40a1d6 <parse_format+0x86>
  40a17f:	48 89 ea             	mov    %rbp,%rdx
  40a182:	4c 89 ee             	mov    %r13,%rsi
  40a185:	4c 89 f7             	mov    %r14,%rdi
  40a188:	e8 a3 7b ff ff       	callq  401d30 <memmove@plt>
  40a18d:	49 8d 4c 2e ff       	lea    -0x1(%r14,%rbp,1),%rcx
  40a192:	0f b6 41 ff          	movzbl -0x1(%rcx),%eax
  40a196:	0f b6 29             	movzbl (%rcx),%ebp
  40a199:	89 c2                	mov    %eax,%edx
  40a19b:	83 e2 df             	and    $0xffffffdf,%edx
  40a19e:	80 fa 4c             	cmp    $0x4c,%dl
  40a1a1:	74 2d                	je     40a1d0 <parse_format+0x80>
  40a1a3:	3c 6e                	cmp    $0x6e,%al
  40a1a5:	74 29                	je     40a1d0 <parse_format+0x80>
  40a1a7:	48 89 da             	mov    %rbx,%rdx
  40a1aa:	4c 89 e6             	mov    %r12,%rsi
  40a1ad:	48 89 cf             	mov    %rcx,%rdi
  40a1b0:	e8 7b 7b ff ff       	callq  401d30 <memmove@plt>
  40a1b5:	48 01 c3             	add    %rax,%rbx
  40a1b8:	89 e8                	mov    %ebp,%eax
  40a1ba:	40 88 2b             	mov    %bpl,(%rbx)
  40a1bd:	c6 43 01 00          	movb   $0x0,0x1(%rbx)
  40a1c1:	5b                   	pop    %rbx
  40a1c2:	5d                   	pop    %rbp
  40a1c3:	41 5c                	pop    %r12
  40a1c5:	41 5d                	pop    %r13
  40a1c7:	41 5e                	pop    %r14
  40a1c9:	c3                   	retq   
  40a1ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40a1d0:	48 83 e9 01          	sub    $0x1,%rcx
  40a1d4:	eb d1                	jmp    40a1a7 <parse_format+0x57>
  40a1d6:	bf 98 e0 41 00       	mov    $0x41e098,%edi
  40a1db:	e8 00 05 01 00       	callq  41a6e0 <caml_invalid_argument>

000000000040a1e0 <int32_deserialize>:
  40a1e0:	53                   	push   %rbx
  40a1e1:	48 89 fb             	mov    %rdi,%rbx
  40a1e4:	e8 97 75 00 00       	callq  411780 <caml_deserialize_sint_4>
  40a1e9:	89 03                	mov    %eax,(%rbx)
  40a1eb:	b8 04 00 00 00       	mov    $0x4,%eax
  40a1f0:	5b                   	pop    %rbx
  40a1f1:	c3                   	retq   
  40a1f2:	0f 1f 40 00          	nopl   0x0(%rax)
  40a1f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a1fd:	00 00 00 

000000000040a200 <int32_serialize>:
  40a200:	55                   	push   %rbp
  40a201:	53                   	push   %rbx
  40a202:	48 89 d5             	mov    %rdx,%rbp
  40a205:	48 89 f3             	mov    %rsi,%rbx
  40a208:	48 83 ec 08          	sub    $0x8,%rsp
  40a20c:	8b 7f 08             	mov    0x8(%rdi),%edi
  40a20f:	e8 1c 4a 00 00       	callq  40ec30 <caml_serialize_int_4>
  40a214:	48 c7 45 00 04 00 00 	movq   $0x4,0x0(%rbp)
  40a21b:	00 
  40a21c:	48 c7 03 04 00 00 00 	movq   $0x4,(%rbx)
  40a223:	48 83 c4 08          	add    $0x8,%rsp
  40a227:	5b                   	pop    %rbx
  40a228:	5d                   	pop    %rbp
  40a229:	c3                   	retq   
  40a22a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040a230 <int64_deserialize>:
  40a230:	53                   	push   %rbx
  40a231:	48 89 fb             	mov    %rdi,%rbx
  40a234:	e8 a7 77 00 00       	callq  4119e0 <caml_deserialize_sint_8>
  40a239:	48 89 03             	mov    %rax,(%rbx)
  40a23c:	b8 08 00 00 00       	mov    $0x8,%eax
  40a241:	5b                   	pop    %rbx
  40a242:	c3                   	retq   
  40a243:	0f 1f 00             	nopl   (%rax)
  40a246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a24d:	00 00 00 

000000000040a250 <int64_serialize>:
  40a250:	55                   	push   %rbp
  40a251:	53                   	push   %rbx
  40a252:	48 89 d5             	mov    %rdx,%rbp
  40a255:	48 89 f3             	mov    %rsi,%rbx
  40a258:	48 83 ec 08          	sub    $0x8,%rsp
  40a25c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  40a260:	e8 2b 4a 00 00       	callq  40ec90 <caml_serialize_int_8>
  40a265:	48 c7 45 00 08 00 00 	movq   $0x8,0x0(%rbp)
  40a26c:	00 
  40a26d:	48 c7 03 08 00 00 00 	movq   $0x8,(%rbx)
  40a274:	48 83 c4 08          	add    $0x8,%rsp
  40a278:	5b                   	pop    %rbx
  40a279:	5d                   	pop    %rbp
  40a27a:	c3                   	retq   
  40a27b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040a280 <nativeint_deserialize>:
  40a280:	53                   	push   %rbx
  40a281:	48 89 fb             	mov    %rdi,%rbx
  40a284:	e8 27 74 00 00       	callq  4116b0 <caml_deserialize_uint_1>
  40a289:	83 f8 01             	cmp    $0x1,%eax
  40a28c:	74 32                	je     40a2c0 <nativeint_deserialize+0x40>
  40a28e:	83 f8 02             	cmp    $0x2,%eax
  40a291:	74 15                	je     40a2a8 <nativeint_deserialize+0x28>
  40a293:	bf 08 e1 41 00       	mov    $0x41e108,%edi
  40a298:	e8 c3 77 00 00       	callq  411a60 <caml_deserialize_error>
  40a29d:	b8 08 00 00 00       	mov    $0x8,%eax
  40a2a2:	5b                   	pop    %rbx
  40a2a3:	c3                   	retq   
  40a2a4:	0f 1f 40 00          	nopl   0x0(%rax)
  40a2a8:	e8 33 77 00 00       	callq  4119e0 <caml_deserialize_sint_8>
  40a2ad:	48 89 03             	mov    %rax,(%rbx)
  40a2b0:	b8 08 00 00 00       	mov    $0x8,%eax
  40a2b5:	5b                   	pop    %rbx
  40a2b6:	c3                   	retq   
  40a2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40a2be:	00 00 
  40a2c0:	e8 bb 74 00 00       	callq  411780 <caml_deserialize_sint_4>
  40a2c5:	48 98                	cltq   
  40a2c7:	48 89 03             	mov    %rax,(%rbx)
  40a2ca:	b8 08 00 00 00       	mov    $0x8,%eax
  40a2cf:	5b                   	pop    %rbx
  40a2d0:	c3                   	retq   
  40a2d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40a2d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a2dd:	00 00 00 

000000000040a2e0 <nativeint_serialize>:
  40a2e0:	41 54                	push   %r12
  40a2e2:	55                   	push   %rbp
  40a2e3:	b8 00 00 00 80       	mov    $0x80000000,%eax
  40a2e8:	53                   	push   %rbx
  40a2e9:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40a2ed:	48 89 d5             	mov    %rdx,%rbp
  40a2f0:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40a2f5:	49 89 f4             	mov    %rsi,%r12
  40a2f8:	48 01 d8             	add    %rbx,%rax
  40a2fb:	48 39 d0             	cmp    %rdx,%rax
  40a2fe:	76 30                	jbe    40a330 <nativeint_serialize+0x50>
  40a300:	bf 02 00 00 00       	mov    $0x2,%edi
  40a305:	e8 a6 48 00 00       	callq  40ebb0 <caml_serialize_int_1>
  40a30a:	48 89 df             	mov    %rbx,%rdi
  40a30d:	e8 7e 49 00 00       	callq  40ec90 <caml_serialize_int_8>
  40a312:	49 c7 04 24 04 00 00 	movq   $0x4,(%r12)
  40a319:	00 
  40a31a:	48 c7 45 00 08 00 00 	movq   $0x8,0x0(%rbp)
  40a321:	00 
  40a322:	5b                   	pop    %rbx
  40a323:	5d                   	pop    %rbp
  40a324:	41 5c                	pop    %r12
  40a326:	c3                   	retq   
  40a327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40a32e:	00 00 
  40a330:	bf 01 00 00 00       	mov    $0x1,%edi
  40a335:	e8 76 48 00 00       	callq  40ebb0 <caml_serialize_int_1>
  40a33a:	89 df                	mov    %ebx,%edi
  40a33c:	e8 ef 48 00 00       	callq  40ec30 <caml_serialize_int_4>
  40a341:	eb cf                	jmp    40a312 <nativeint_serialize+0x32>
  40a343:	0f 1f 00             	nopl   (%rax)
  40a346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a34d:	00 00 00 

000000000040a350 <parse_digit>:
  40a350:	8d 47 d0             	lea    -0x30(%rdi),%eax
  40a353:	3c 09                	cmp    $0x9,%al
  40a355:	76 29                	jbe    40a380 <parse_digit+0x30>
  40a357:	8d 47 bf             	lea    -0x41(%rdi),%eax
  40a35a:	3c 05                	cmp    $0x5,%al
  40a35c:	76 12                	jbe    40a370 <parse_digit+0x20>
  40a35e:	8d 47 9f             	lea    -0x61(%rdi),%eax
  40a361:	3c 05                	cmp    $0x5,%al
  40a363:	77 2b                	ja     40a390 <parse_digit+0x40>
  40a365:	40 0f be ff          	movsbl %dil,%edi
  40a369:	8d 47 a9             	lea    -0x57(%rdi),%eax
  40a36c:	c3                   	retq   
  40a36d:	0f 1f 00             	nopl   (%rax)
  40a370:	40 0f be ff          	movsbl %dil,%edi
  40a374:	8d 47 c9             	lea    -0x37(%rdi),%eax
  40a377:	c3                   	retq   
  40a378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40a37f:	00 
  40a380:	40 0f be ff          	movsbl %dil,%edi
  40a384:	8d 47 d0             	lea    -0x30(%rdi),%eax
  40a387:	c3                   	retq   
  40a388:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40a38f:	00 
  40a390:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40a395:	c3                   	retq   
  40a396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a39d:	00 00 00 

000000000040a3a0 <parse_intnat>:
  40a3a0:	41 56                	push   %r14
  40a3a2:	41 55                	push   %r13
  40a3a4:	41 54                	push   %r12
  40a3a6:	55                   	push   %rbp
  40a3a7:	49 89 d4             	mov    %rdx,%r12
  40a3aa:	53                   	push   %rbx
  40a3ab:	89 f5                	mov    %esi,%ebp
  40a3ad:	48 89 fb             	mov    %rdi,%rbx
  40a3b0:	48 83 ec 20          	sub    $0x20,%rsp
  40a3b4:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  40a3b9:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
  40a3be:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  40a3c3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40a3ca:	00 00 
  40a3cc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40a3d1:	31 c0                	xor    %eax,%eax
  40a3d3:	e8 18 fc ff ff       	callq  409ff0 <parse_sign_and_base>
  40a3d8:	4c 63 4c 24 10       	movslq 0x10(%rsp),%r9
  40a3dd:	49 89 c6             	mov    %rax,%r14
  40a3e0:	31 d2                	xor    %edx,%edx
  40a3e2:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  40a3e9:	41 0f be 3e          	movsbl (%r14),%edi
  40a3ed:	49 f7 f1             	div    %r9
  40a3f0:	49 89 c2             	mov    %rax,%r10
  40a3f3:	e8 58 ff ff ff       	callq  40a350 <parse_digit>
  40a3f8:	41 39 c1             	cmp    %eax,%r9d
  40a3fb:	0f 8e cf 00 00 00    	jle    40a4d0 <parse_intnat+0x130>
  40a401:	89 c2                	mov    %eax,%edx
  40a403:	c1 ea 1f             	shr    $0x1f,%edx
  40a406:	84 d2                	test   %dl,%dl
  40a408:	0f 85 c2 00 00 00    	jne    40a4d0 <parse_intnat+0x130>
  40a40e:	4d 89 c8             	mov    %r9,%r8
  40a411:	49 83 c6 01          	add    $0x1,%r14
  40a415:	4c 63 e8             	movslq %eax,%r13
  40a418:	eb 2e                	jmp    40a448 <parse_intnat+0xa8>
  40a41a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40a420:	41 39 c0             	cmp    %eax,%r8d
  40a423:	7e 3b                	jle    40a460 <parse_intnat+0xc0>
  40a425:	4d 39 d5             	cmp    %r10,%r13
  40a428:	0f 87 a2 00 00 00    	ja     40a4d0 <parse_intnat+0x130>
  40a42e:	4c 89 ee             	mov    %r13,%rsi
  40a431:	48 63 c8             	movslq %eax,%rcx
  40a434:	49 0f af f1          	imul   %r9,%rsi
  40a438:	48 01 ce             	add    %rcx,%rsi
  40a43b:	49 89 f5             	mov    %rsi,%r13
  40a43e:	0f 82 8c 00 00 00    	jb     40a4d0 <parse_intnat+0x130>
  40a444:	49 83 c6 01          	add    $0x1,%r14
  40a448:	41 0f be 3e          	movsbl (%r14),%edi
  40a44c:	40 80 ff 5f          	cmp    $0x5f,%dil
  40a450:	74 f2                	je     40a444 <parse_intnat+0xa4>
  40a452:	e8 f9 fe ff ff       	callq  40a350 <parse_digit>
  40a457:	89 c2                	mov    %eax,%edx
  40a459:	c1 ea 1f             	shr    $0x1f,%edx
  40a45c:	84 d2                	test   %dl,%dl
  40a45e:	74 c0                	je     40a420 <parse_intnat+0x80>
  40a460:	48 89 df             	mov    %rbx,%rdi
  40a463:	e8 28 21 00 00       	callq  40c590 <caml_string_length>
  40a468:	48 01 c3             	add    %rax,%rbx
  40a46b:	49 39 de             	cmp    %rbx,%r14
  40a46e:	75 60                	jne    40a4d0 <parse_intnat+0x130>
  40a470:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
  40a474:	85 c9                	test   %ecx,%ecx
  40a476:	75 40                	jne    40a4b8 <parse_intnat+0x118>
  40a478:	83 fd 3f             	cmp    $0x3f,%ebp
  40a47b:	77 0f                	ja     40a48c <parse_intnat+0xec>
  40a47d:	b8 01 00 00 00       	mov    $0x1,%eax
  40a482:	89 e9                	mov    %ebp,%ecx
  40a484:	48 d3 e0             	shl    %cl,%rax
  40a487:	49 39 c5             	cmp    %rax,%r13
  40a48a:	73 44                	jae    40a4d0 <parse_intnat+0x130>
  40a48c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  40a490:	85 c0                	test   %eax,%eax
  40a492:	78 49                	js     40a4dd <parse_intnat+0x13d>
  40a494:	4c 89 e8             	mov    %r13,%rax
  40a497:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  40a49c:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  40a4a3:	00 00 
  40a4a5:	75 3e                	jne    40a4e5 <parse_intnat+0x145>
  40a4a7:	48 83 c4 20          	add    $0x20,%rsp
  40a4ab:	5b                   	pop    %rbx
  40a4ac:	5d                   	pop    %rbp
  40a4ad:	41 5c                	pop    %r12
  40a4af:	41 5d                	pop    %r13
  40a4b1:	41 5e                	pop    %r14
  40a4b3:	c3                   	retq   
  40a4b4:	0f 1f 40 00          	nopl   0x0(%rax)
  40a4b8:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  40a4bc:	8d 4d ff             	lea    -0x1(%rbp),%ecx
  40a4bf:	b8 01 00 00 00       	mov    $0x1,%eax
  40a4c4:	48 d3 e0             	shl    %cl,%rax
  40a4c7:	85 d2                	test   %edx,%edx
  40a4c9:	78 0d                	js     40a4d8 <parse_intnat+0x138>
  40a4cb:	49 39 c5             	cmp    %rax,%r13
  40a4ce:	72 c4                	jb     40a494 <parse_intnat+0xf4>
  40a4d0:	4c 89 e7             	mov    %r12,%rdi
  40a4d3:	e8 e8 01 01 00       	callq  41a6c0 <caml_failwith>
  40a4d8:	49 39 c5             	cmp    %rax,%r13
  40a4db:	77 f3                	ja     40a4d0 <parse_intnat+0x130>
  40a4dd:	4c 89 e8             	mov    %r13,%rax
  40a4e0:	48 f7 d8             	neg    %rax
  40a4e3:	eb b2                	jmp    40a497 <parse_intnat+0xf7>
  40a4e5:	e8 86 75 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40a4ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040a4f0 <caml_bswap16_direct>:
  40a4f0:	48 89 f8             	mov    %rdi,%rax
  40a4f3:	48 89 fa             	mov    %rdi,%rdx
  40a4f6:	48 c1 e0 08          	shl    $0x8,%rax
  40a4fa:	0f b6 fe             	movzbl %dh,%edi
  40a4fd:	0f b7 c0             	movzwl %ax,%eax
  40a500:	48 09 f8             	or     %rdi,%rax
  40a503:	c3                   	retq   
  40a504:	66 90                	xchg   %ax,%ax
  40a506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a50d:	00 00 00 

000000000040a510 <caml_bswap16>:
  40a510:	48 89 f8             	mov    %rdi,%rax
  40a513:	48 d1 f8             	sar    %rax
  40a516:	48 89 c7             	mov    %rax,%rdi
  40a519:	0f b6 c4             	movzbl %ah,%eax
  40a51c:	48 c1 e7 08          	shl    $0x8,%rdi
  40a520:	81 e7 00 ff 00 00    	and    $0xff00,%edi
  40a526:	48 09 f8             	or     %rdi,%rax
  40a529:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40a52e:	c3                   	retq   
  40a52f:	90                   	nop

000000000040a530 <caml_int_compare>:
  40a530:	31 c0                	xor    %eax,%eax
  40a532:	48 39 f7             	cmp    %rsi,%rdi
  40a535:	0f 9c c2             	setl   %dl
  40a538:	0f 9f c0             	setg   %al
  40a53b:	0f b6 d2             	movzbl %dl,%edx
  40a53e:	29 d0                	sub    %edx,%eax
  40a540:	48 98                	cltq   
  40a542:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40a547:	c3                   	retq   
  40a548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40a54f:	00 

000000000040a550 <caml_int_of_string>:
  40a550:	48 83 ec 08          	sub    $0x8,%rsp
  40a554:	ba b4 e0 41 00       	mov    $0x41e0b4,%edx
  40a559:	be 3f 00 00 00       	mov    $0x3f,%esi
  40a55e:	e8 3d fe ff ff       	callq  40a3a0 <parse_intnat>
  40a563:	48 83 c4 08          	add    $0x8,%rsp
  40a567:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40a56c:	c3                   	retq   
  40a56d:	0f 1f 00             	nopl   (%rax)

000000000040a570 <caml_format_int>:
  40a570:	53                   	push   %rbx
  40a571:	48 89 f3             	mov    %rsi,%rbx
  40a574:	be c3 ed 41 00       	mov    $0x41edc3,%esi
  40a579:	48 83 ec 30          	sub    $0x30,%rsp
  40a57d:	48 89 e2             	mov    %rsp,%rdx
  40a580:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40a587:	00 00 
  40a589:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40a58e:	31 c0                	xor    %eax,%eax
  40a590:	e8 bb fb ff ff       	callq  40a150 <parse_format>
  40a595:	83 e8 58             	sub    $0x58,%eax
  40a598:	3c 20                	cmp    $0x20,%al
  40a59a:	77 10                	ja     40a5ac <caml_format_int+0x3c>
  40a59c:	48 ba 01 00 80 20 01 	movabs $0x120800001,%rdx
  40a5a3:	00 00 00 
  40a5a6:	48 0f a3 c2          	bt     %rax,%rdx
  40a5aa:	72 2c                	jb     40a5d8 <caml_format_int+0x68>
  40a5ac:	48 d1 fb             	sar    %rbx
  40a5af:	48 89 e7             	mov    %rsp,%rdi
  40a5b2:	31 c0                	xor    %eax,%eax
  40a5b4:	48 89 de             	mov    %rbx,%rsi
  40a5b7:	e8 64 26 00 00       	callq  40cc20 <caml_alloc_sprintf>
  40a5bc:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40a5c1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40a5c8:	00 00 
  40a5ca:	75 1e                	jne    40a5ea <caml_format_int+0x7a>
  40a5cc:	48 83 c4 30          	add    $0x30,%rsp
  40a5d0:	5b                   	pop    %rbx
  40a5d1:	c3                   	retq   
  40a5d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40a5d8:	48 d1 eb             	shr    %rbx
  40a5db:	48 89 e7             	mov    %rsp,%rdi
  40a5de:	31 c0                	xor    %eax,%eax
  40a5e0:	48 89 de             	mov    %rbx,%rsi
  40a5e3:	e8 38 26 00 00       	callq  40cc20 <caml_alloc_sprintf>
  40a5e8:	eb d2                	jmp    40a5bc <caml_format_int+0x4c>
  40a5ea:	e8 81 74 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40a5ef:	90                   	nop

000000000040a5f0 <caml_copy_int32>:
  40a5f0:	53                   	push   %rbx
  40a5f1:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a5f6:	89 fb                	mov    %edi,%ebx
  40a5f8:	31 d2                	xor    %edx,%edx
  40a5fa:	be 04 00 00 00       	mov    $0x4,%esi
  40a5ff:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a604:	e8 a7 e4 00 00       	callq  418ab0 <caml_alloc_custom>
  40a609:	89 58 08             	mov    %ebx,0x8(%rax)
  40a60c:	5b                   	pop    %rbx
  40a60d:	c3                   	retq   
  40a60e:	66 90                	xchg   %ax,%ax

000000000040a610 <caml_int32_neg>:
  40a610:	53                   	push   %rbx
  40a611:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a614:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a619:	31 d2                	xor    %edx,%edx
  40a61b:	be 04 00 00 00       	mov    $0x4,%esi
  40a620:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a625:	e8 86 e4 00 00       	callq  418ab0 <caml_alloc_custom>
  40a62a:	f7 db                	neg    %ebx
  40a62c:	89 58 08             	mov    %ebx,0x8(%rax)
  40a62f:	5b                   	pop    %rbx
  40a630:	c3                   	retq   
  40a631:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40a636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a63d:	00 00 00 

000000000040a640 <caml_int32_add>:
  40a640:	53                   	push   %rbx
  40a641:	8b 5e 08             	mov    0x8(%rsi),%ebx
  40a644:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a649:	03 5f 08             	add    0x8(%rdi),%ebx
  40a64c:	31 d2                	xor    %edx,%edx
  40a64e:	be 04 00 00 00       	mov    $0x4,%esi
  40a653:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a658:	e8 53 e4 00 00       	callq  418ab0 <caml_alloc_custom>
  40a65d:	89 58 08             	mov    %ebx,0x8(%rax)
  40a660:	5b                   	pop    %rbx
  40a661:	c3                   	retq   
  40a662:	0f 1f 40 00          	nopl   0x0(%rax)
  40a666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a66d:	00 00 00 

000000000040a670 <caml_int32_sub>:
  40a670:	53                   	push   %rbx
  40a671:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a674:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a679:	2b 5e 08             	sub    0x8(%rsi),%ebx
  40a67c:	31 d2                	xor    %edx,%edx
  40a67e:	be 04 00 00 00       	mov    $0x4,%esi
  40a683:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a688:	e8 23 e4 00 00       	callq  418ab0 <caml_alloc_custom>
  40a68d:	89 58 08             	mov    %ebx,0x8(%rax)
  40a690:	5b                   	pop    %rbx
  40a691:	c3                   	retq   
  40a692:	0f 1f 40 00          	nopl   0x0(%rax)
  40a696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a69d:	00 00 00 

000000000040a6a0 <caml_int32_mul>:
  40a6a0:	53                   	push   %rbx
  40a6a1:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a6a4:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a6a9:	0f af 5e 08          	imul   0x8(%rsi),%ebx
  40a6ad:	31 d2                	xor    %edx,%edx
  40a6af:	be 04 00 00 00       	mov    $0x4,%esi
  40a6b4:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a6b9:	e8 f2 e3 00 00       	callq  418ab0 <caml_alloc_custom>
  40a6be:	89 58 08             	mov    %ebx,0x8(%rax)
  40a6c1:	5b                   	pop    %rbx
  40a6c2:	c3                   	retq   
  40a6c3:	0f 1f 00             	nopl   (%rax)
  40a6c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a6cd:	00 00 00 

000000000040a6d0 <caml_int32_div>:
  40a6d0:	53                   	push   %rbx
  40a6d1:	8b 4e 08             	mov    0x8(%rsi),%ecx
  40a6d4:	8b 47 08             	mov    0x8(%rdi),%eax
  40a6d7:	85 c9                	test   %ecx,%ecx
  40a6d9:	74 3b                	je     40a716 <caml_int32_div+0x46>
  40a6db:	3d 00 00 00 80       	cmp    $0x80000000,%eax
  40a6e0:	75 0e                	jne    40a6f0 <caml_int32_div+0x20>
  40a6e2:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40a6e5:	75 09                	jne    40a6f0 <caml_int32_div+0x20>
  40a6e7:	48 89 f8             	mov    %rdi,%rax
  40a6ea:	5b                   	pop    %rbx
  40a6eb:	c3                   	retq   
  40a6ec:	0f 1f 40 00          	nopl   0x0(%rax)
  40a6f0:	99                   	cltd   
  40a6f1:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a6f6:	be 04 00 00 00       	mov    $0x4,%esi
  40a6fb:	f7 f9                	idiv   %ecx
  40a6fd:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a702:	31 d2                	xor    %edx,%edx
  40a704:	89 c3                	mov    %eax,%ebx
  40a706:	e8 a5 e3 00 00       	callq  418ab0 <caml_alloc_custom>
  40a70b:	48 89 c7             	mov    %rax,%rdi
  40a70e:	89 58 08             	mov    %ebx,0x8(%rax)
  40a711:	48 89 f8             	mov    %rdi,%rax
  40a714:	5b                   	pop    %rbx
  40a715:	c3                   	retq   
  40a716:	e8 35 00 01 00       	callq  41a750 <caml_raise_zero_divide>
  40a71b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040a720 <caml_int32_mod>:
  40a720:	53                   	push   %rbx
  40a721:	8b 4e 08             	mov    0x8(%rsi),%ecx
  40a724:	8b 47 08             	mov    0x8(%rdi),%eax
  40a727:	85 c9                	test   %ecx,%ecx
  40a729:	74 55                	je     40a780 <caml_int32_mod+0x60>
  40a72b:	3d 00 00 00 80       	cmp    $0x80000000,%eax
  40a730:	75 2e                	jne    40a760 <caml_int32_mod+0x40>
  40a732:	83 f9 ff             	cmp    $0xffffffff,%ecx
  40a735:	75 29                	jne    40a760 <caml_int32_mod+0x40>
  40a737:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a73c:	31 d2                	xor    %edx,%edx
  40a73e:	be 04 00 00 00       	mov    $0x4,%esi
  40a743:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a748:	e8 63 e3 00 00       	callq  418ab0 <caml_alloc_custom>
  40a74d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
  40a754:	5b                   	pop    %rbx
  40a755:	c3                   	retq   
  40a756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a75d:	00 00 00 
  40a760:	99                   	cltd   
  40a761:	be 04 00 00 00       	mov    $0x4,%esi
  40a766:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a76b:	f7 f9                	idiv   %ecx
  40a76d:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a772:	89 d3                	mov    %edx,%ebx
  40a774:	31 d2                	xor    %edx,%edx
  40a776:	e8 35 e3 00 00       	callq  418ab0 <caml_alloc_custom>
  40a77b:	89 58 08             	mov    %ebx,0x8(%rax)
  40a77e:	5b                   	pop    %rbx
  40a77f:	c3                   	retq   
  40a780:	e8 cb ff 00 00       	callq  41a750 <caml_raise_zero_divide>
  40a785:	90                   	nop
  40a786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a78d:	00 00 00 

000000000040a790 <caml_int32_and>:
  40a790:	53                   	push   %rbx
  40a791:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a794:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a799:	23 5e 08             	and    0x8(%rsi),%ebx
  40a79c:	31 d2                	xor    %edx,%edx
  40a79e:	be 04 00 00 00       	mov    $0x4,%esi
  40a7a3:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a7a8:	e8 03 e3 00 00       	callq  418ab0 <caml_alloc_custom>
  40a7ad:	89 58 08             	mov    %ebx,0x8(%rax)
  40a7b0:	5b                   	pop    %rbx
  40a7b1:	c3                   	retq   
  40a7b2:	0f 1f 40 00          	nopl   0x0(%rax)
  40a7b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a7bd:	00 00 00 

000000000040a7c0 <caml_int32_or>:
  40a7c0:	53                   	push   %rbx
  40a7c1:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a7c4:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a7c9:	0b 5e 08             	or     0x8(%rsi),%ebx
  40a7cc:	31 d2                	xor    %edx,%edx
  40a7ce:	be 04 00 00 00       	mov    $0x4,%esi
  40a7d3:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a7d8:	e8 d3 e2 00 00       	callq  418ab0 <caml_alloc_custom>
  40a7dd:	89 58 08             	mov    %ebx,0x8(%rax)
  40a7e0:	5b                   	pop    %rbx
  40a7e1:	c3                   	retq   
  40a7e2:	0f 1f 40 00          	nopl   0x0(%rax)
  40a7e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a7ed:	00 00 00 

000000000040a7f0 <caml_int32_xor>:
  40a7f0:	53                   	push   %rbx
  40a7f1:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a7f4:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a7f9:	33 5e 08             	xor    0x8(%rsi),%ebx
  40a7fc:	31 d2                	xor    %edx,%edx
  40a7fe:	be 04 00 00 00       	mov    $0x4,%esi
  40a803:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a808:	e8 a3 e2 00 00       	callq  418ab0 <caml_alloc_custom>
  40a80d:	89 58 08             	mov    %ebx,0x8(%rax)
  40a810:	5b                   	pop    %rbx
  40a811:	c3                   	retq   
  40a812:	0f 1f 40 00          	nopl   0x0(%rax)
  40a816:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a81d:	00 00 00 

000000000040a820 <caml_int32_shift_left>:
  40a820:	53                   	push   %rbx
  40a821:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a824:	48 89 f1             	mov    %rsi,%rcx
  40a827:	48 d1 f9             	sar    %rcx
  40a82a:	31 d2                	xor    %edx,%edx
  40a82c:	be 04 00 00 00       	mov    $0x4,%esi
  40a831:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a836:	d3 e3                	shl    %cl,%ebx
  40a838:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a83d:	e8 6e e2 00 00       	callq  418ab0 <caml_alloc_custom>
  40a842:	89 58 08             	mov    %ebx,0x8(%rax)
  40a845:	5b                   	pop    %rbx
  40a846:	c3                   	retq   
  40a847:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40a84e:	00 00 

000000000040a850 <caml_int32_shift_right>:
  40a850:	53                   	push   %rbx
  40a851:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a854:	48 89 f1             	mov    %rsi,%rcx
  40a857:	48 d1 f9             	sar    %rcx
  40a85a:	31 d2                	xor    %edx,%edx
  40a85c:	be 04 00 00 00       	mov    $0x4,%esi
  40a861:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a866:	d3 fb                	sar    %cl,%ebx
  40a868:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a86d:	e8 3e e2 00 00       	callq  418ab0 <caml_alloc_custom>
  40a872:	89 58 08             	mov    %ebx,0x8(%rax)
  40a875:	5b                   	pop    %rbx
  40a876:	c3                   	retq   
  40a877:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40a87e:	00 00 

000000000040a880 <caml_int32_shift_right_unsigned>:
  40a880:	53                   	push   %rbx
  40a881:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a884:	48 89 f1             	mov    %rsi,%rcx
  40a887:	48 d1 f9             	sar    %rcx
  40a88a:	31 d2                	xor    %edx,%edx
  40a88c:	be 04 00 00 00       	mov    $0x4,%esi
  40a891:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a896:	d3 eb                	shr    %cl,%ebx
  40a898:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a89d:	e8 0e e2 00 00       	callq  418ab0 <caml_alloc_custom>
  40a8a2:	89 58 08             	mov    %ebx,0x8(%rax)
  40a8a5:	5b                   	pop    %rbx
  40a8a6:	c3                   	retq   
  40a8a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40a8ae:	00 00 

000000000040a8b0 <caml_int32_direct_bswap>:
  40a8b0:	0f cf                	bswap  %edi
  40a8b2:	48 63 c7             	movslq %edi,%rax
  40a8b5:	c3                   	retq   
  40a8b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a8bd:	00 00 00 

000000000040a8c0 <caml_int32_bswap>:
  40a8c0:	53                   	push   %rbx
  40a8c1:	8b 5f 08             	mov    0x8(%rdi),%ebx
  40a8c4:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a8c9:	31 d2                	xor    %edx,%edx
  40a8cb:	be 04 00 00 00       	mov    $0x4,%esi
  40a8d0:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a8d5:	e8 d6 e1 00 00       	callq  418ab0 <caml_alloc_custom>
  40a8da:	0f cb                	bswap  %ebx
  40a8dc:	89 58 08             	mov    %ebx,0x8(%rax)
  40a8df:	5b                   	pop    %rbx
  40a8e0:	c3                   	retq   
  40a8e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40a8e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a8ed:	00 00 00 

000000000040a8f0 <caml_int32_of_int>:
  40a8f0:	53                   	push   %rbx
  40a8f1:	48 89 fb             	mov    %rdi,%rbx
  40a8f4:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a8f9:	48 d1 fb             	sar    %rbx
  40a8fc:	31 d2                	xor    %edx,%edx
  40a8fe:	be 04 00 00 00       	mov    $0x4,%esi
  40a903:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a908:	e8 a3 e1 00 00       	callq  418ab0 <caml_alloc_custom>
  40a90d:	89 58 08             	mov    %ebx,0x8(%rax)
  40a910:	5b                   	pop    %rbx
  40a911:	c3                   	retq   
  40a912:	0f 1f 40 00          	nopl   0x0(%rax)
  40a916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a91d:	00 00 00 

000000000040a920 <caml_int32_to_int>:
  40a920:	48 63 47 08          	movslq 0x8(%rdi),%rax
  40a924:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40a929:	c3                   	retq   
  40a92a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040a930 <caml_int32_of_float_unboxed>:
  40a930:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
  40a934:	c3                   	retq   
  40a935:	90                   	nop
  40a936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a93d:	00 00 00 

000000000040a940 <caml_int32_of_float>:
  40a940:	53                   	push   %rbx
  40a941:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a946:	31 d2                	xor    %edx,%edx
  40a948:	be 04 00 00 00       	mov    $0x4,%esi
  40a94d:	f2 0f 2c 1f          	cvttsd2si (%rdi),%ebx
  40a951:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40a956:	e8 55 e1 00 00       	callq  418ab0 <caml_alloc_custom>
  40a95b:	89 58 08             	mov    %ebx,0x8(%rax)
  40a95e:	5b                   	pop    %rbx
  40a95f:	c3                   	retq   

000000000040a960 <caml_int32_to_float_unboxed>:
  40a960:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40a964:	f2 0f 2a c7          	cvtsi2sd %edi,%xmm0
  40a968:	c3                   	retq   
  40a969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040a970 <caml_int32_to_float>:
  40a970:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40a974:	f2 0f 2a 47 08       	cvtsi2sdl 0x8(%rdi),%xmm0
  40a979:	e9 82 0c 00 00       	jmpq   40b600 <caml_copy_double>
  40a97e:	66 90                	xchg   %ax,%ax

000000000040a980 <caml_int32_compare_unboxed>:
  40a980:	31 c0                	xor    %eax,%eax
  40a982:	39 f7                	cmp    %esi,%edi
  40a984:	0f 9c c2             	setl   %dl
  40a987:	0f 9f c0             	setg   %al
  40a98a:	0f b6 d2             	movzbl %dl,%edx
  40a98d:	29 d0                	sub    %edx,%eax
  40a98f:	48 98                	cltq   
  40a991:	c3                   	retq   
  40a992:	0f 1f 40 00          	nopl   0x0(%rax)
  40a996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a99d:	00 00 00 

000000000040a9a0 <caml_int32_compare>:
  40a9a0:	8b 57 08             	mov    0x8(%rdi),%edx
  40a9a3:	8b 4e 08             	mov    0x8(%rsi),%ecx
  40a9a6:	31 c0                	xor    %eax,%eax
  40a9a8:	39 d1                	cmp    %edx,%ecx
  40a9aa:	0f 9f c2             	setg   %dl
  40a9ad:	0f 9c c0             	setl   %al
  40a9b0:	0f b6 d2             	movzbl %dl,%edx
  40a9b3:	29 d0                	sub    %edx,%eax
  40a9b5:	48 98                	cltq   
  40a9b7:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40a9bc:	c3                   	retq   
  40a9bd:	0f 1f 00             	nopl   (%rax)

000000000040a9c0 <caml_int32_format>:
  40a9c0:	53                   	push   %rbx
  40a9c1:	48 89 f3             	mov    %rsi,%rbx
  40a9c4:	be 5a eb 41 00       	mov    $0x41eb5a,%esi
  40a9c9:	48 83 ec 30          	sub    $0x30,%rsp
  40a9cd:	48 89 e2             	mov    %rsp,%rdx
  40a9d0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40a9d7:	00 00 
  40a9d9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40a9de:	31 c0                	xor    %eax,%eax
  40a9e0:	e8 6b f7 ff ff       	callq  40a150 <parse_format>
  40a9e5:	8b 73 08             	mov    0x8(%rbx),%esi
  40a9e8:	31 c0                	xor    %eax,%eax
  40a9ea:	48 89 e7             	mov    %rsp,%rdi
  40a9ed:	e8 2e 22 00 00       	callq  40cc20 <caml_alloc_sprintf>
  40a9f2:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40a9f7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40a9fe:	00 00 
  40aa00:	75 06                	jne    40aa08 <caml_int32_format+0x48>
  40aa02:	48 83 c4 30          	add    $0x30,%rsp
  40aa06:	5b                   	pop    %rbx
  40aa07:	c3                   	retq   
  40aa08:	e8 63 70 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40aa0d:	0f 1f 00             	nopl   (%rax)

000000000040aa10 <caml_int32_of_string>:
  40aa10:	53                   	push   %rbx
  40aa11:	ba c2 e0 41 00       	mov    $0x41e0c2,%edx
  40aa16:	be 20 00 00 00       	mov    $0x20,%esi
  40aa1b:	e8 80 f9 ff ff       	callq  40a3a0 <parse_intnat>
  40aa20:	b9 01 00 00 00       	mov    $0x1,%ecx
  40aa25:	48 89 c3             	mov    %rax,%rbx
  40aa28:	31 d2                	xor    %edx,%edx
  40aa2a:	be 04 00 00 00       	mov    $0x4,%esi
  40aa2f:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40aa34:	e8 77 e0 00 00       	callq  418ab0 <caml_alloc_custom>
  40aa39:	89 58 08             	mov    %ebx,0x8(%rax)
  40aa3c:	5b                   	pop    %rbx
  40aa3d:	c3                   	retq   
  40aa3e:	66 90                	xchg   %ax,%ax

000000000040aa40 <caml_int32_bits_of_float_unboxed>:
  40aa40:	66 0f ef c9          	pxor   %xmm1,%xmm1
  40aa44:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
  40aa48:	66 0f 7e c8          	movd   %xmm1,%eax
  40aa4c:	c3                   	retq   
  40aa4d:	0f 1f 00             	nopl   (%rax)

000000000040aa50 <caml_int32_float_of_bits_unboxed>:
  40aa50:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40aa54:	89 7c 24 fc          	mov    %edi,-0x4(%rsp)
  40aa58:	f3 0f 10 4c 24 fc    	movss  -0x4(%rsp),%xmm1
  40aa5e:	f3 0f 5a c1          	cvtss2sd %xmm1,%xmm0
  40aa62:	c3                   	retq   
  40aa63:	0f 1f 00             	nopl   (%rax)
  40aa66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40aa6d:	00 00 00 

000000000040aa70 <caml_int32_bits_of_float>:
  40aa70:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40aa74:	53                   	push   %rbx
  40aa75:	b9 01 00 00 00       	mov    $0x1,%ecx
  40aa7a:	31 d2                	xor    %edx,%edx
  40aa7c:	be 04 00 00 00       	mov    $0x4,%esi
  40aa81:	f2 0f 5a 07          	cvtsd2ss (%rdi),%xmm0
  40aa85:	66 0f 7e c3          	movd   %xmm0,%ebx
  40aa89:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40aa8e:	e8 1d e0 00 00       	callq  418ab0 <caml_alloc_custom>
  40aa93:	89 58 08             	mov    %ebx,0x8(%rax)
  40aa96:	5b                   	pop    %rbx
  40aa97:	c3                   	retq   
  40aa98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40aa9f:	00 

000000000040aaa0 <caml_int32_float_of_bits>:
  40aaa0:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40aaa4:	f3 0f 5a 47 08       	cvtss2sd 0x8(%rdi),%xmm0
  40aaa9:	e9 52 0b 00 00       	jmpq   40b600 <caml_copy_double>
  40aaae:	66 90                	xchg   %ax,%ax

000000000040aab0 <caml_copy_int64>:
  40aab0:	53                   	push   %rbx
  40aab1:	b9 01 00 00 00       	mov    $0x1,%ecx
  40aab6:	48 89 fb             	mov    %rdi,%rbx
  40aab9:	31 d2                	xor    %edx,%edx
  40aabb:	be 08 00 00 00       	mov    $0x8,%esi
  40aac0:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40aac5:	e8 e6 df 00 00       	callq  418ab0 <caml_alloc_custom>
  40aaca:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40aace:	5b                   	pop    %rbx
  40aacf:	c3                   	retq   

000000000040aad0 <caml_int64_neg>:
  40aad0:	53                   	push   %rbx
  40aad1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40aad5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40aada:	31 d2                	xor    %edx,%edx
  40aadc:	be 08 00 00 00       	mov    $0x8,%esi
  40aae1:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40aae6:	e8 c5 df 00 00       	callq  418ab0 <caml_alloc_custom>
  40aaeb:	48 f7 db             	neg    %rbx
  40aaee:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40aaf2:	5b                   	pop    %rbx
  40aaf3:	c3                   	retq   
  40aaf4:	66 90                	xchg   %ax,%ax
  40aaf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40aafd:	00 00 00 

000000000040ab00 <caml_int64_add>:
  40ab00:	53                   	push   %rbx
  40ab01:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  40ab05:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ab0a:	48 03 5f 08          	add    0x8(%rdi),%rbx
  40ab0e:	31 d2                	xor    %edx,%edx
  40ab10:	be 08 00 00 00       	mov    $0x8,%esi
  40ab15:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ab1a:	e8 91 df 00 00       	callq  418ab0 <caml_alloc_custom>
  40ab1f:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ab23:	5b                   	pop    %rbx
  40ab24:	c3                   	retq   
  40ab25:	90                   	nop
  40ab26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ab2d:	00 00 00 

000000000040ab30 <caml_int64_sub>:
  40ab30:	53                   	push   %rbx
  40ab31:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40ab35:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ab3a:	48 2b 5e 08          	sub    0x8(%rsi),%rbx
  40ab3e:	31 d2                	xor    %edx,%edx
  40ab40:	be 08 00 00 00       	mov    $0x8,%esi
  40ab45:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ab4a:	e8 61 df 00 00       	callq  418ab0 <caml_alloc_custom>
  40ab4f:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ab53:	5b                   	pop    %rbx
  40ab54:	c3                   	retq   
  40ab55:	90                   	nop
  40ab56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ab5d:	00 00 00 

000000000040ab60 <caml_int64_mul>:
  40ab60:	53                   	push   %rbx
  40ab61:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40ab65:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ab6a:	48 0f af 5e 08       	imul   0x8(%rsi),%rbx
  40ab6f:	31 d2                	xor    %edx,%edx
  40ab71:	be 08 00 00 00       	mov    $0x8,%esi
  40ab76:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ab7b:	e8 30 df 00 00       	callq  418ab0 <caml_alloc_custom>
  40ab80:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ab84:	5b                   	pop    %rbx
  40ab85:	c3                   	retq   
  40ab86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ab8d:	00 00 00 

000000000040ab90 <caml_int64_div>:
  40ab90:	53                   	push   %rbx
  40ab91:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
  40ab95:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40ab99:	48 85 c9             	test   %rcx,%rcx
  40ab9c:	74 4c                	je     40abea <caml_int64_div+0x5a>
  40ab9e:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
  40aba5:	00 00 80 
  40aba8:	48 39 d0             	cmp    %rdx,%rax
  40abab:	75 13                	jne    40abc0 <caml_int64_div+0x30>
  40abad:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
  40abb1:	75 0d                	jne    40abc0 <caml_int64_div+0x30>
  40abb3:	48 89 f8             	mov    %rdi,%rax
  40abb6:	5b                   	pop    %rbx
  40abb7:	c3                   	retq   
  40abb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40abbf:	00 
  40abc0:	48 99                	cqto   
  40abc2:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40abc7:	be 08 00 00 00       	mov    $0x8,%esi
  40abcc:	48 f7 f9             	idiv   %rcx
  40abcf:	b9 01 00 00 00       	mov    $0x1,%ecx
  40abd4:	31 d2                	xor    %edx,%edx
  40abd6:	48 89 c3             	mov    %rax,%rbx
  40abd9:	e8 d2 de 00 00       	callq  418ab0 <caml_alloc_custom>
  40abde:	48 89 c7             	mov    %rax,%rdi
  40abe1:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40abe5:	48 89 f8             	mov    %rdi,%rax
  40abe8:	5b                   	pop    %rbx
  40abe9:	c3                   	retq   
  40abea:	e8 61 fb 00 00       	callq  41a750 <caml_raise_zero_divide>
  40abef:	90                   	nop

000000000040abf0 <caml_int64_mod>:
  40abf0:	53                   	push   %rbx
  40abf1:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
  40abf5:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40abf9:	48 85 c9             	test   %rcx,%rcx
  40abfc:	74 5e                	je     40ac5c <caml_int64_mod+0x6c>
  40abfe:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
  40ac05:	00 00 80 
  40ac08:	48 39 d0             	cmp    %rdx,%rax
  40ac0b:	75 2b                	jne    40ac38 <caml_int64_mod+0x48>
  40ac0d:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
  40ac11:	75 25                	jne    40ac38 <caml_int64_mod+0x48>
  40ac13:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ac18:	31 d2                	xor    %edx,%edx
  40ac1a:	be 08 00 00 00       	mov    $0x8,%esi
  40ac1f:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ac24:	e8 87 de 00 00       	callq  418ab0 <caml_alloc_custom>
  40ac29:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40ac30:	00 
  40ac31:	5b                   	pop    %rbx
  40ac32:	c3                   	retq   
  40ac33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40ac38:	48 99                	cqto   
  40ac3a:	be 08 00 00 00       	mov    $0x8,%esi
  40ac3f:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ac44:	48 f7 f9             	idiv   %rcx
  40ac47:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ac4c:	48 89 d3             	mov    %rdx,%rbx
  40ac4f:	31 d2                	xor    %edx,%edx
  40ac51:	e8 5a de 00 00       	callq  418ab0 <caml_alloc_custom>
  40ac56:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ac5a:	5b                   	pop    %rbx
  40ac5b:	c3                   	retq   
  40ac5c:	e8 ef fa 00 00       	callq  41a750 <caml_raise_zero_divide>
  40ac61:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40ac66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ac6d:	00 00 00 

000000000040ac70 <caml_int64_and>:
  40ac70:	53                   	push   %rbx
  40ac71:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40ac75:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ac7a:	48 23 5e 08          	and    0x8(%rsi),%rbx
  40ac7e:	31 d2                	xor    %edx,%edx
  40ac80:	be 08 00 00 00       	mov    $0x8,%esi
  40ac85:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ac8a:	e8 21 de 00 00       	callq  418ab0 <caml_alloc_custom>
  40ac8f:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ac93:	5b                   	pop    %rbx
  40ac94:	c3                   	retq   
  40ac95:	90                   	nop
  40ac96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ac9d:	00 00 00 

000000000040aca0 <caml_int64_or>:
  40aca0:	53                   	push   %rbx
  40aca1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40aca5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40acaa:	48 0b 5e 08          	or     0x8(%rsi),%rbx
  40acae:	31 d2                	xor    %edx,%edx
  40acb0:	be 08 00 00 00       	mov    $0x8,%esi
  40acb5:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40acba:	e8 f1 dd 00 00       	callq  418ab0 <caml_alloc_custom>
  40acbf:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40acc3:	5b                   	pop    %rbx
  40acc4:	c3                   	retq   
  40acc5:	90                   	nop
  40acc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40accd:	00 00 00 

000000000040acd0 <caml_int64_xor>:
  40acd0:	53                   	push   %rbx
  40acd1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40acd5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40acda:	48 33 5e 08          	xor    0x8(%rsi),%rbx
  40acde:	31 d2                	xor    %edx,%edx
  40ace0:	be 08 00 00 00       	mov    $0x8,%esi
  40ace5:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40acea:	e8 c1 dd 00 00       	callq  418ab0 <caml_alloc_custom>
  40acef:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40acf3:	5b                   	pop    %rbx
  40acf4:	c3                   	retq   
  40acf5:	90                   	nop
  40acf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40acfd:	00 00 00 

000000000040ad00 <caml_int64_shift_left>:
  40ad00:	53                   	push   %rbx
  40ad01:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40ad05:	48 89 f1             	mov    %rsi,%rcx
  40ad08:	48 d1 f9             	sar    %rcx
  40ad0b:	31 d2                	xor    %edx,%edx
  40ad0d:	be 08 00 00 00       	mov    $0x8,%esi
  40ad12:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ad17:	48 d3 e3             	shl    %cl,%rbx
  40ad1a:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ad1f:	e8 8c dd 00 00       	callq  418ab0 <caml_alloc_custom>
  40ad24:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ad28:	5b                   	pop    %rbx
  40ad29:	c3                   	retq   
  40ad2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040ad30 <caml_int64_shift_right>:
  40ad30:	53                   	push   %rbx
  40ad31:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40ad35:	48 89 f1             	mov    %rsi,%rcx
  40ad38:	48 d1 f9             	sar    %rcx
  40ad3b:	31 d2                	xor    %edx,%edx
  40ad3d:	be 08 00 00 00       	mov    $0x8,%esi
  40ad42:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ad47:	48 d3 fb             	sar    %cl,%rbx
  40ad4a:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ad4f:	e8 5c dd 00 00       	callq  418ab0 <caml_alloc_custom>
  40ad54:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ad58:	5b                   	pop    %rbx
  40ad59:	c3                   	retq   
  40ad5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040ad60 <caml_int64_shift_right_unsigned>:
  40ad60:	53                   	push   %rbx
  40ad61:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40ad65:	48 89 f1             	mov    %rsi,%rcx
  40ad68:	48 d1 f9             	sar    %rcx
  40ad6b:	31 d2                	xor    %edx,%edx
  40ad6d:	be 08 00 00 00       	mov    $0x8,%esi
  40ad72:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ad77:	48 d3 eb             	shr    %cl,%rbx
  40ad7a:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ad7f:	e8 2c dd 00 00       	callq  418ab0 <caml_alloc_custom>
  40ad84:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ad88:	5b                   	pop    %rbx
  40ad89:	c3                   	retq   
  40ad8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040ad90 <caml_int64_direct_bswap>:
  40ad90:	e9 5b f3 ff ff       	jmpq   40a0f0 <caml_swap64>
  40ad95:	90                   	nop
  40ad96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ad9d:	00 00 00 

000000000040ada0 <caml_int64_bswap>:
  40ada0:	53                   	push   %rbx
  40ada1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40ada5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40adaa:	31 d2                	xor    %edx,%edx
  40adac:	be 08 00 00 00       	mov    $0x8,%esi
  40adb1:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40adb6:	e8 f5 dc 00 00       	callq  418ab0 <caml_alloc_custom>
  40adbb:	48 0f cb             	bswap  %rbx
  40adbe:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40adc2:	5b                   	pop    %rbx
  40adc3:	c3                   	retq   
  40adc4:	66 90                	xchg   %ax,%ax
  40adc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40adcd:	00 00 00 

000000000040add0 <caml_int64_of_int>:
  40add0:	53                   	push   %rbx
  40add1:	48 89 fb             	mov    %rdi,%rbx
  40add4:	b9 01 00 00 00       	mov    $0x1,%ecx
  40add9:	48 d1 fb             	sar    %rbx
  40addc:	31 d2                	xor    %edx,%edx
  40adde:	be 08 00 00 00       	mov    $0x8,%esi
  40ade3:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ade8:	e8 c3 dc 00 00       	callq  418ab0 <caml_alloc_custom>
  40aded:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40adf1:	5b                   	pop    %rbx
  40adf2:	c3                   	retq   
  40adf3:	0f 1f 00             	nopl   (%rax)
  40adf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40adfd:	00 00 00 

000000000040ae00 <caml_int64_of_float_unboxed>:
  40ae00:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  40ae05:	c3                   	retq   
  40ae06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ae0d:	00 00 00 

000000000040ae10 <caml_int64_of_float>:
  40ae10:	53                   	push   %rbx
  40ae11:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ae16:	31 d2                	xor    %edx,%edx
  40ae18:	be 08 00 00 00       	mov    $0x8,%esi
  40ae1d:	f2 48 0f 2c 1f       	cvttsd2si (%rdi),%rbx
  40ae22:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ae27:	e8 84 dc 00 00       	callq  418ab0 <caml_alloc_custom>
  40ae2c:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ae30:	5b                   	pop    %rbx
  40ae31:	c3                   	retq   
  40ae32:	0f 1f 40 00          	nopl   0x0(%rax)
  40ae36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ae3d:	00 00 00 

000000000040ae40 <caml_int64_to_float_unboxed>:
  40ae40:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40ae44:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
  40ae49:	c3                   	retq   
  40ae4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040ae50 <caml_int64_of_int32>:
  40ae50:	53                   	push   %rbx
  40ae51:	48 63 5f 08          	movslq 0x8(%rdi),%rbx
  40ae55:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ae5a:	31 d2                	xor    %edx,%edx
  40ae5c:	be 08 00 00 00       	mov    $0x8,%esi
  40ae61:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ae66:	e8 45 dc 00 00       	callq  418ab0 <caml_alloc_custom>
  40ae6b:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ae6f:	5b                   	pop    %rbx
  40ae70:	c3                   	retq   
  40ae71:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40ae76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ae7d:	00 00 00 

000000000040ae80 <caml_int64_of_nativeint>:
  40ae80:	53                   	push   %rbx
  40ae81:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40ae85:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ae8a:	31 d2                	xor    %edx,%edx
  40ae8c:	be 08 00 00 00       	mov    $0x8,%esi
  40ae91:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40ae96:	e8 15 dc 00 00       	callq  418ab0 <caml_alloc_custom>
  40ae9b:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40ae9f:	5b                   	pop    %rbx
  40aea0:	c3                   	retq   
  40aea1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40aea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40aead:	00 00 00 

000000000040aeb0 <caml_int64_to_nativeint>:
  40aeb0:	53                   	push   %rbx
  40aeb1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40aeb5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40aeba:	31 d2                	xor    %edx,%edx
  40aebc:	be 08 00 00 00       	mov    $0x8,%esi
  40aec1:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40aec6:	e8 e5 db 00 00       	callq  418ab0 <caml_alloc_custom>
  40aecb:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40aecf:	5b                   	pop    %rbx
  40aed0:	c3                   	retq   
  40aed1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40aed6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40aedd:	00 00 00 

000000000040aee0 <caml_int64_compare_unboxed>:
  40aee0:	31 c0                	xor    %eax,%eax
  40aee2:	48 39 f7             	cmp    %rsi,%rdi
  40aee5:	0f 9c c2             	setl   %dl
  40aee8:	0f 9f c0             	setg   %al
  40aeeb:	0f b6 d2             	movzbl %dl,%edx
  40aeee:	29 d0                	sub    %edx,%eax
  40aef0:	48 98                	cltq   
  40aef2:	c3                   	retq   
  40aef3:	0f 1f 00             	nopl   (%rax)
  40aef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40aefd:	00 00 00 

000000000040af00 <caml_int64_format>:
  40af00:	53                   	push   %rbx
  40af01:	48 89 f3             	mov    %rsi,%rbx
  40af04:	be d2 e0 41 00       	mov    $0x41e0d2,%esi
  40af09:	48 83 ec 30          	sub    $0x30,%rsp
  40af0d:	48 89 e2             	mov    %rsp,%rdx
  40af10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40af17:	00 00 
  40af19:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40af1e:	31 c0                	xor    %eax,%eax
  40af20:	e8 2b f2 ff ff       	callq  40a150 <parse_format>
  40af25:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  40af29:	31 c0                	xor    %eax,%eax
  40af2b:	48 89 e7             	mov    %rsp,%rdi
  40af2e:	e8 ed 1c 00 00       	callq  40cc20 <caml_alloc_sprintf>
  40af33:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40af38:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40af3f:	00 00 
  40af41:	75 06                	jne    40af49 <caml_int64_format+0x49>
  40af43:	48 83 c4 30          	add    $0x30,%rsp
  40af47:	5b                   	pop    %rbx
  40af48:	c3                   	retq   
  40af49:	e8 22 6b ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40af4e:	66 90                	xchg   %ax,%ax

000000000040af50 <caml_int64_of_string>:
  40af50:	41 54                	push   %r12
  40af52:	55                   	push   %rbp
  40af53:	53                   	push   %rbx
  40af54:	48 89 fb             	mov    %rdi,%rbx
  40af57:	48 83 ec 20          	sub    $0x20,%rsp
  40af5b:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  40af60:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
  40af65:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  40af6a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40af71:	00 00 
  40af73:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40af78:	31 c0                	xor    %eax,%eax
  40af7a:	e8 71 f0 ff ff       	callq  409ff0 <parse_sign_and_base>
  40af7f:	4c 63 4c 24 10       	movslq 0x10(%rsp),%r9
  40af84:	49 89 c4             	mov    %rax,%r12
  40af87:	31 d2                	xor    %edx,%edx
  40af89:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  40af90:	41 0f be 3c 24       	movsbl (%r12),%edi
  40af95:	49 f7 f1             	div    %r9
  40af98:	49 89 c2             	mov    %rax,%r10
  40af9b:	e8 b0 f3 ff ff       	callq  40a350 <parse_digit>
  40afa0:	41 39 c1             	cmp    %eax,%r9d
  40afa3:	7e 4c                	jle    40aff1 <caml_int64_of_string+0xa1>
  40afa5:	89 c2                	mov    %eax,%edx
  40afa7:	c1 ea 1f             	shr    $0x1f,%edx
  40afaa:	84 d2                	test   %dl,%dl
  40afac:	75 43                	jne    40aff1 <caml_int64_of_string+0xa1>
  40afae:	4d 89 c8             	mov    %r9,%r8
  40afb1:	48 63 e8             	movslq %eax,%rbp
  40afb4:	0f 1f 40 00          	nopl   0x0(%rax)
  40afb8:	49 83 c4 01          	add    $0x1,%r12
  40afbc:	41 0f be 3c 24       	movsbl (%r12),%edi
  40afc1:	40 80 ff 5f          	cmp    $0x5f,%dil
  40afc5:	74 f1                	je     40afb8 <caml_int64_of_string+0x68>
  40afc7:	e8 84 f3 ff ff       	callq  40a350 <parse_digit>
  40afcc:	89 c1                	mov    %eax,%ecx
  40afce:	c1 e9 1f             	shr    $0x1f,%ecx
  40afd1:	84 c9                	test   %cl,%cl
  40afd3:	75 2b                	jne    40b000 <caml_int64_of_string+0xb0>
  40afd5:	41 39 c0             	cmp    %eax,%r8d
  40afd8:	7e 26                	jle    40b000 <caml_int64_of_string+0xb0>
  40afda:	4c 39 d5             	cmp    %r10,%rbp
  40afdd:	77 12                	ja     40aff1 <caml_int64_of_string+0xa1>
  40afdf:	48 89 ee             	mov    %rbp,%rsi
  40afe2:	48 63 c8             	movslq %eax,%rcx
  40afe5:	49 0f af f1          	imul   %r9,%rsi
  40afe9:	48 01 ce             	add    %rcx,%rsi
  40afec:	48 89 f5             	mov    %rsi,%rbp
  40afef:	73 c7                	jae    40afb8 <caml_int64_of_string+0x68>
  40aff1:	bf d5 e0 41 00       	mov    $0x41e0d5,%edi
  40aff6:	e8 c5 f6 00 00       	callq  41a6c0 <caml_failwith>
  40affb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40b000:	48 89 df             	mov    %rbx,%rdi
  40b003:	e8 88 15 00 00       	callq  40c590 <caml_string_length>
  40b008:	48 01 c3             	add    %rax,%rbx
  40b00b:	49 39 dc             	cmp    %rbx,%r12
  40b00e:	75 e1                	jne    40aff1 <caml_int64_of_string+0xa1>
  40b010:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
  40b014:	85 c9                	test   %ecx,%ecx
  40b016:	75 40                	jne    40b058 <caml_int64_of_string+0x108>
  40b018:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  40b01c:	85 c0                	test   %eax,%eax
  40b01e:	78 63                	js     40b083 <caml_int64_of_string+0x133>
  40b020:	31 d2                	xor    %edx,%edx
  40b022:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b027:	be 08 00 00 00       	mov    $0x8,%esi
  40b02c:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40b031:	e8 7a da 00 00       	callq  418ab0 <caml_alloc_custom>
  40b036:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  40b03b:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  40b042:	00 00 
  40b044:	48 89 68 08          	mov    %rbp,0x8(%rax)
  40b048:	75 3e                	jne    40b088 <caml_int64_of_string+0x138>
  40b04a:	48 83 c4 20          	add    $0x20,%rsp
  40b04e:	5b                   	pop    %rbx
  40b04f:	5d                   	pop    %rbp
  40b050:	41 5c                	pop    %r12
  40b052:	c3                   	retq   
  40b053:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40b058:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  40b05c:	85 d2                	test   %edx,%edx
  40b05e:	78 10                	js     40b070 <caml_int64_of_string+0x120>
  40b060:	48 85 ed             	test   %rbp,%rbp
  40b063:	79 bb                	jns    40b020 <caml_int64_of_string+0xd0>
  40b065:	eb 8a                	jmp    40aff1 <caml_int64_of_string+0xa1>
  40b067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40b06e:	00 00 
  40b070:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  40b077:	00 00 80 
  40b07a:	48 39 c5             	cmp    %rax,%rbp
  40b07d:	0f 87 6e ff ff ff    	ja     40aff1 <caml_int64_of_string+0xa1>
  40b083:	48 f7 dd             	neg    %rbp
  40b086:	eb 98                	jmp    40b020 <caml_int64_of_string+0xd0>
  40b088:	e8 e3 69 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40b08d:	0f 1f 00             	nopl   (%rax)

000000000040b090 <caml_int64_bits_of_float_unboxed>:
  40b090:	66 48 0f 7e c0       	movq   %xmm0,%rax
  40b095:	c3                   	retq   
  40b096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b09d:	00 00 00 

000000000040b0a0 <caml_int64_float_of_bits_unboxed>:
  40b0a0:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
  40b0a5:	f2 0f 10 44 24 f8    	movsd  -0x8(%rsp),%xmm0
  40b0ab:	c3                   	retq   
  40b0ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040b0b0 <caml_int64_bits_of_float>:
  40b0b0:	53                   	push   %rbx
  40b0b1:	48 8b 1f             	mov    (%rdi),%rbx
  40b0b4:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b0b9:	31 d2                	xor    %edx,%edx
  40b0bb:	be 08 00 00 00       	mov    $0x8,%esi
  40b0c0:	bf e0 c6 62 00       	mov    $0x62c6e0,%edi
  40b0c5:	e8 e6 d9 00 00       	callq  418ab0 <caml_alloc_custom>
  40b0ca:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b0ce:	5b                   	pop    %rbx
  40b0cf:	c3                   	retq   

000000000040b0d0 <caml_int64_float_of_bits>:
  40b0d0:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40b0d4:	48 89 44 24 f0       	mov    %rax,-0x10(%rsp)
  40b0d9:	f2 0f 10 44 24 f0    	movsd  -0x10(%rsp),%xmm0
  40b0df:	e9 1c 05 00 00       	jmpq   40b600 <caml_copy_double>
  40b0e4:	66 90                	xchg   %ax,%ax
  40b0e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b0ed:	00 00 00 

000000000040b0f0 <caml_copy_nativeint>:
  40b0f0:	53                   	push   %rbx
  40b0f1:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b0f6:	48 89 fb             	mov    %rdi,%rbx
  40b0f9:	31 d2                	xor    %edx,%edx
  40b0fb:	be 08 00 00 00       	mov    $0x8,%esi
  40b100:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b105:	e8 a6 d9 00 00       	callq  418ab0 <caml_alloc_custom>
  40b10a:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b10e:	5b                   	pop    %rbx
  40b10f:	c3                   	retq   

000000000040b110 <caml_nativeint_neg>:
  40b110:	53                   	push   %rbx
  40b111:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b115:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b11a:	31 d2                	xor    %edx,%edx
  40b11c:	be 08 00 00 00       	mov    $0x8,%esi
  40b121:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b126:	e8 85 d9 00 00       	callq  418ab0 <caml_alloc_custom>
  40b12b:	48 f7 db             	neg    %rbx
  40b12e:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b132:	5b                   	pop    %rbx
  40b133:	c3                   	retq   
  40b134:	66 90                	xchg   %ax,%ax
  40b136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b13d:	00 00 00 

000000000040b140 <caml_nativeint_add>:
  40b140:	53                   	push   %rbx
  40b141:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  40b145:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b14a:	48 03 5f 08          	add    0x8(%rdi),%rbx
  40b14e:	31 d2                	xor    %edx,%edx
  40b150:	be 08 00 00 00       	mov    $0x8,%esi
  40b155:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b15a:	e8 51 d9 00 00       	callq  418ab0 <caml_alloc_custom>
  40b15f:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b163:	5b                   	pop    %rbx
  40b164:	c3                   	retq   
  40b165:	90                   	nop
  40b166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b16d:	00 00 00 

000000000040b170 <caml_nativeint_sub>:
  40b170:	53                   	push   %rbx
  40b171:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b175:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b17a:	48 2b 5e 08          	sub    0x8(%rsi),%rbx
  40b17e:	31 d2                	xor    %edx,%edx
  40b180:	be 08 00 00 00       	mov    $0x8,%esi
  40b185:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b18a:	e8 21 d9 00 00       	callq  418ab0 <caml_alloc_custom>
  40b18f:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b193:	5b                   	pop    %rbx
  40b194:	c3                   	retq   
  40b195:	90                   	nop
  40b196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b19d:	00 00 00 

000000000040b1a0 <caml_nativeint_mul>:
  40b1a0:	53                   	push   %rbx
  40b1a1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b1a5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b1aa:	48 0f af 5e 08       	imul   0x8(%rsi),%rbx
  40b1af:	31 d2                	xor    %edx,%edx
  40b1b1:	be 08 00 00 00       	mov    $0x8,%esi
  40b1b6:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b1bb:	e8 f0 d8 00 00       	callq  418ab0 <caml_alloc_custom>
  40b1c0:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b1c4:	5b                   	pop    %rbx
  40b1c5:	c3                   	retq   
  40b1c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b1cd:	00 00 00 

000000000040b1d0 <caml_nativeint_div>:
  40b1d0:	53                   	push   %rbx
  40b1d1:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
  40b1d5:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40b1d9:	48 85 c9             	test   %rcx,%rcx
  40b1dc:	74 4c                	je     40b22a <caml_nativeint_div+0x5a>
  40b1de:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
  40b1e5:	00 00 80 
  40b1e8:	48 39 d0             	cmp    %rdx,%rax
  40b1eb:	75 13                	jne    40b200 <caml_nativeint_div+0x30>
  40b1ed:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
  40b1f1:	75 0d                	jne    40b200 <caml_nativeint_div+0x30>
  40b1f3:	48 89 f8             	mov    %rdi,%rax
  40b1f6:	5b                   	pop    %rbx
  40b1f7:	c3                   	retq   
  40b1f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40b1ff:	00 
  40b200:	48 99                	cqto   
  40b202:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b207:	be 08 00 00 00       	mov    $0x8,%esi
  40b20c:	48 f7 f9             	idiv   %rcx
  40b20f:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b214:	31 d2                	xor    %edx,%edx
  40b216:	48 89 c3             	mov    %rax,%rbx
  40b219:	e8 92 d8 00 00       	callq  418ab0 <caml_alloc_custom>
  40b21e:	48 89 c7             	mov    %rax,%rdi
  40b221:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b225:	48 89 f8             	mov    %rdi,%rax
  40b228:	5b                   	pop    %rbx
  40b229:	c3                   	retq   
  40b22a:	e8 21 f5 00 00       	callq  41a750 <caml_raise_zero_divide>
  40b22f:	90                   	nop

000000000040b230 <caml_nativeint_mod>:
  40b230:	53                   	push   %rbx
  40b231:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
  40b235:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40b239:	48 85 c9             	test   %rcx,%rcx
  40b23c:	74 5e                	je     40b29c <caml_nativeint_mod+0x6c>
  40b23e:	48 ba 00 00 00 00 00 	movabs $0x8000000000000000,%rdx
  40b245:	00 00 80 
  40b248:	48 39 d0             	cmp    %rdx,%rax
  40b24b:	75 2b                	jne    40b278 <caml_nativeint_mod+0x48>
  40b24d:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
  40b251:	75 25                	jne    40b278 <caml_nativeint_mod+0x48>
  40b253:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b258:	31 d2                	xor    %edx,%edx
  40b25a:	be 08 00 00 00       	mov    $0x8,%esi
  40b25f:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b264:	e8 47 d8 00 00       	callq  418ab0 <caml_alloc_custom>
  40b269:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  40b270:	00 
  40b271:	5b                   	pop    %rbx
  40b272:	c3                   	retq   
  40b273:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40b278:	48 99                	cqto   
  40b27a:	be 08 00 00 00       	mov    $0x8,%esi
  40b27f:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b284:	48 f7 f9             	idiv   %rcx
  40b287:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b28c:	48 89 d3             	mov    %rdx,%rbx
  40b28f:	31 d2                	xor    %edx,%edx
  40b291:	e8 1a d8 00 00       	callq  418ab0 <caml_alloc_custom>
  40b296:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b29a:	5b                   	pop    %rbx
  40b29b:	c3                   	retq   
  40b29c:	e8 af f4 00 00       	callq  41a750 <caml_raise_zero_divide>
  40b2a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40b2a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b2ad:	00 00 00 

000000000040b2b0 <caml_nativeint_and>:
  40b2b0:	53                   	push   %rbx
  40b2b1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b2b5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b2ba:	48 23 5e 08          	and    0x8(%rsi),%rbx
  40b2be:	31 d2                	xor    %edx,%edx
  40b2c0:	be 08 00 00 00       	mov    $0x8,%esi
  40b2c5:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b2ca:	e8 e1 d7 00 00       	callq  418ab0 <caml_alloc_custom>
  40b2cf:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b2d3:	5b                   	pop    %rbx
  40b2d4:	c3                   	retq   
  40b2d5:	90                   	nop
  40b2d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b2dd:	00 00 00 

000000000040b2e0 <caml_nativeint_or>:
  40b2e0:	53                   	push   %rbx
  40b2e1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b2e5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b2ea:	48 0b 5e 08          	or     0x8(%rsi),%rbx
  40b2ee:	31 d2                	xor    %edx,%edx
  40b2f0:	be 08 00 00 00       	mov    $0x8,%esi
  40b2f5:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b2fa:	e8 b1 d7 00 00       	callq  418ab0 <caml_alloc_custom>
  40b2ff:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b303:	5b                   	pop    %rbx
  40b304:	c3                   	retq   
  40b305:	90                   	nop
  40b306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b30d:	00 00 00 

000000000040b310 <caml_nativeint_xor>:
  40b310:	53                   	push   %rbx
  40b311:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b315:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b31a:	48 33 5e 08          	xor    0x8(%rsi),%rbx
  40b31e:	31 d2                	xor    %edx,%edx
  40b320:	be 08 00 00 00       	mov    $0x8,%esi
  40b325:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b32a:	e8 81 d7 00 00       	callq  418ab0 <caml_alloc_custom>
  40b32f:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b333:	5b                   	pop    %rbx
  40b334:	c3                   	retq   
  40b335:	90                   	nop
  40b336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b33d:	00 00 00 

000000000040b340 <caml_nativeint_shift_left>:
  40b340:	53                   	push   %rbx
  40b341:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b345:	48 89 f1             	mov    %rsi,%rcx
  40b348:	48 d1 f9             	sar    %rcx
  40b34b:	31 d2                	xor    %edx,%edx
  40b34d:	be 08 00 00 00       	mov    $0x8,%esi
  40b352:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b357:	48 d3 e3             	shl    %cl,%rbx
  40b35a:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b35f:	e8 4c d7 00 00       	callq  418ab0 <caml_alloc_custom>
  40b364:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b368:	5b                   	pop    %rbx
  40b369:	c3                   	retq   
  40b36a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040b370 <caml_nativeint_shift_right>:
  40b370:	53                   	push   %rbx
  40b371:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b375:	48 89 f1             	mov    %rsi,%rcx
  40b378:	48 d1 f9             	sar    %rcx
  40b37b:	31 d2                	xor    %edx,%edx
  40b37d:	be 08 00 00 00       	mov    $0x8,%esi
  40b382:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b387:	48 d3 fb             	sar    %cl,%rbx
  40b38a:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b38f:	e8 1c d7 00 00       	callq  418ab0 <caml_alloc_custom>
  40b394:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b398:	5b                   	pop    %rbx
  40b399:	c3                   	retq   
  40b39a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040b3a0 <caml_nativeint_shift_right_unsigned>:
  40b3a0:	53                   	push   %rbx
  40b3a1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b3a5:	48 89 f1             	mov    %rsi,%rcx
  40b3a8:	48 d1 f9             	sar    %rcx
  40b3ab:	31 d2                	xor    %edx,%edx
  40b3ad:	be 08 00 00 00       	mov    $0x8,%esi
  40b3b2:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b3b7:	48 d3 eb             	shr    %cl,%rbx
  40b3ba:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b3bf:	e8 ec d6 00 00       	callq  418ab0 <caml_alloc_custom>
  40b3c4:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b3c8:	5b                   	pop    %rbx
  40b3c9:	c3                   	retq   
  40b3ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040b3d0 <caml_nativeint_direct_bswap>:
  40b3d0:	e9 1b ed ff ff       	jmpq   40a0f0 <caml_swap64>
  40b3d5:	90                   	nop
  40b3d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b3dd:	00 00 00 

000000000040b3e0 <caml_nativeint_bswap>:
  40b3e0:	53                   	push   %rbx
  40b3e1:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  40b3e5:	e8 06 ed ff ff       	callq  40a0f0 <caml_swap64>
  40b3ea:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b3ef:	48 89 c3             	mov    %rax,%rbx
  40b3f2:	31 d2                	xor    %edx,%edx
  40b3f4:	be 08 00 00 00       	mov    $0x8,%esi
  40b3f9:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b3fe:	e8 ad d6 00 00       	callq  418ab0 <caml_alloc_custom>
  40b403:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b407:	5b                   	pop    %rbx
  40b408:	c3                   	retq   
  40b409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040b410 <caml_nativeint_of_int>:
  40b410:	53                   	push   %rbx
  40b411:	48 89 fb             	mov    %rdi,%rbx
  40b414:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b419:	48 d1 fb             	sar    %rbx
  40b41c:	31 d2                	xor    %edx,%edx
  40b41e:	be 08 00 00 00       	mov    $0x8,%esi
  40b423:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b428:	e8 83 d6 00 00       	callq  418ab0 <caml_alloc_custom>
  40b42d:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b431:	5b                   	pop    %rbx
  40b432:	c3                   	retq   
  40b433:	0f 1f 00             	nopl   (%rax)
  40b436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b43d:	00 00 00 

000000000040b440 <caml_nativeint_to_int>:
  40b440:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40b444:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40b449:	c3                   	retq   
  40b44a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040b450 <caml_int64_to_int>:
  40b450:	eb ee                	jmp    40b440 <caml_nativeint_to_int>
  40b452:	0f 1f 40 00          	nopl   0x0(%rax)
  40b456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b45d:	00 00 00 

000000000040b460 <caml_nativeint_of_float_unboxed>:
  40b460:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  40b465:	c3                   	retq   
  40b466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b46d:	00 00 00 

000000000040b470 <caml_nativeint_of_float>:
  40b470:	53                   	push   %rbx
  40b471:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b476:	31 d2                	xor    %edx,%edx
  40b478:	be 08 00 00 00       	mov    $0x8,%esi
  40b47d:	f2 48 0f 2c 1f       	cvttsd2si (%rdi),%rbx
  40b482:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b487:	e8 24 d6 00 00       	callq  418ab0 <caml_alloc_custom>
  40b48c:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b490:	5b                   	pop    %rbx
  40b491:	c3                   	retq   
  40b492:	0f 1f 40 00          	nopl   0x0(%rax)
  40b496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b49d:	00 00 00 

000000000040b4a0 <caml_nativeint_to_float_unboxed>:
  40b4a0:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40b4a4:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
  40b4a9:	c3                   	retq   
  40b4aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040b4b0 <caml_nativeint_to_float>:
  40b4b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40b4b4:	f2 48 0f 2a 47 08    	cvtsi2sdq 0x8(%rdi),%xmm0
  40b4ba:	e9 41 01 00 00       	jmpq   40b600 <caml_copy_double>
  40b4bf:	90                   	nop

000000000040b4c0 <caml_int64_to_float>:
  40b4c0:	eb ee                	jmp    40b4b0 <caml_nativeint_to_float>
  40b4c2:	0f 1f 40 00          	nopl   0x0(%rax)
  40b4c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b4cd:	00 00 00 

000000000040b4d0 <caml_nativeint_of_int32>:
  40b4d0:	53                   	push   %rbx
  40b4d1:	48 63 5f 08          	movslq 0x8(%rdi),%rbx
  40b4d5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b4da:	31 d2                	xor    %edx,%edx
  40b4dc:	be 08 00 00 00       	mov    $0x8,%esi
  40b4e1:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b4e6:	e8 c5 d5 00 00       	callq  418ab0 <caml_alloc_custom>
  40b4eb:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b4ef:	5b                   	pop    %rbx
  40b4f0:	c3                   	retq   
  40b4f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40b4f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b4fd:	00 00 00 

000000000040b500 <caml_nativeint_to_int32>:
  40b500:	53                   	push   %rbx
  40b501:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40b505:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b50a:	31 d2                	xor    %edx,%edx
  40b50c:	be 04 00 00 00       	mov    $0x4,%esi
  40b511:	bf 20 c7 62 00       	mov    $0x62c720,%edi
  40b516:	e8 95 d5 00 00       	callq  418ab0 <caml_alloc_custom>
  40b51b:	89 58 08             	mov    %ebx,0x8(%rax)
  40b51e:	5b                   	pop    %rbx
  40b51f:	c3                   	retq   

000000000040b520 <caml_int64_to_int32>:
  40b520:	eb de                	jmp    40b500 <caml_nativeint_to_int32>
  40b522:	0f 1f 40 00          	nopl   0x0(%rax)
  40b526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b52d:	00 00 00 

000000000040b530 <caml_nativeint_compare_unboxed>:
  40b530:	31 c0                	xor    %eax,%eax
  40b532:	48 39 f7             	cmp    %rsi,%rdi
  40b535:	0f 9c c2             	setl   %dl
  40b538:	0f 9f c0             	setg   %al
  40b53b:	0f b6 d2             	movzbl %dl,%edx
  40b53e:	29 d0                	sub    %edx,%eax
  40b540:	48 98                	cltq   
  40b542:	c3                   	retq   
  40b543:	0f 1f 00             	nopl   (%rax)
  40b546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b54d:	00 00 00 

000000000040b550 <caml_nativeint_compare>:
  40b550:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  40b554:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
  40b558:	31 c0                	xor    %eax,%eax
  40b55a:	48 39 d1             	cmp    %rdx,%rcx
  40b55d:	0f 9f c2             	setg   %dl
  40b560:	0f 9c c0             	setl   %al
  40b563:	0f b6 d2             	movzbl %dl,%edx
  40b566:	29 d0                	sub    %edx,%eax
  40b568:	48 98                	cltq   
  40b56a:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40b56f:	c3                   	retq   

000000000040b570 <caml_int64_compare>:
  40b570:	eb de                	jmp    40b550 <caml_nativeint_compare>
  40b572:	0f 1f 40 00          	nopl   0x0(%rax)
  40b576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b57d:	00 00 00 

000000000040b580 <caml_nativeint_format>:
  40b580:	53                   	push   %rbx
  40b581:	48 89 f3             	mov    %rsi,%rbx
  40b584:	be c3 ed 41 00       	mov    $0x41edc3,%esi
  40b589:	48 83 ec 30          	sub    $0x30,%rsp
  40b58d:	48 89 e2             	mov    %rsp,%rdx
  40b590:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40b597:	00 00 
  40b599:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40b59e:	31 c0                	xor    %eax,%eax
  40b5a0:	e8 ab eb ff ff       	callq  40a150 <parse_format>
  40b5a5:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  40b5a9:	31 c0                	xor    %eax,%eax
  40b5ab:	48 89 e7             	mov    %rsp,%rdi
  40b5ae:	e8 6d 16 00 00       	callq  40cc20 <caml_alloc_sprintf>
  40b5b3:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40b5b8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40b5bf:	00 00 
  40b5c1:	75 06                	jne    40b5c9 <caml_nativeint_format+0x49>
  40b5c3:	48 83 c4 30          	add    $0x30,%rsp
  40b5c7:	5b                   	pop    %rbx
  40b5c8:	c3                   	retq   
  40b5c9:	e8 a2 64 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40b5ce:	66 90                	xchg   %ax,%ax

000000000040b5d0 <caml_nativeint_of_string>:
  40b5d0:	53                   	push   %rbx
  40b5d1:	ba e5 e0 41 00       	mov    $0x41e0e5,%edx
  40b5d6:	be 40 00 00 00       	mov    $0x40,%esi
  40b5db:	e8 c0 ed ff ff       	callq  40a3a0 <parse_intnat>
  40b5e0:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b5e5:	48 89 c3             	mov    %rax,%rbx
  40b5e8:	31 d2                	xor    %edx,%edx
  40b5ea:	be 08 00 00 00       	mov    $0x8,%esi
  40b5ef:	bf a0 c6 62 00       	mov    $0x62c6a0,%edi
  40b5f4:	e8 b7 d4 00 00       	callq  418ab0 <caml_alloc_custom>
  40b5f9:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40b5fd:	5b                   	pop    %rbx
  40b5fe:	c3                   	retq   
  40b5ff:	90                   	nop

000000000040b600 <caml_copy_double>:
  40b600:	48 83 ec 18          	sub    $0x18,%rsp
  40b604:	48 8b 15 9d 18 22 00 	mov    0x22189d(%rip),%rdx        # 62cea8 <caml_young_ptr>
  40b60b:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
  40b60f:	48 3b 05 82 18 22 00 	cmp    0x221882(%rip),%rax        # 62ce98 <caml_young_trigger>
  40b616:	48 89 05 8b 18 22 00 	mov    %rax,0x22188b(%rip)        # 62cea8 <caml_young_ptr>
  40b61d:	73 2a                	jae    40b649 <caml_copy_double+0x49>
  40b61f:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
  40b625:	48 89 15 7c 18 22 00 	mov    %rdx,0x22187c(%rip)        # 62cea8 <caml_young_ptr>
  40b62c:	e8 ff d2 ff ff       	callq  408930 <caml_gc_dispatch>
  40b631:	48 8b 05 70 18 22 00 	mov    0x221870(%rip),%rax        # 62cea8 <caml_young_ptr>
  40b638:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
  40b63e:	48 83 e8 10          	sub    $0x10,%rax
  40b642:	48 89 05 5f 18 22 00 	mov    %rax,0x22185f(%rip)        # 62cea8 <caml_young_ptr>
  40b649:	48 c7 00 fd 07 00 00 	movq   $0x7fd,(%rax)
  40b650:	48 8b 05 51 18 22 00 	mov    0x221851(%rip),%rax        # 62cea8 <caml_young_ptr>
  40b657:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
  40b65c:	48 83 c0 08          	add    $0x8,%rax
  40b660:	48 83 c4 18          	add    $0x18,%rsp
  40b664:	c3                   	retq   
  40b665:	90                   	nop
  40b666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b66d:	00 00 00 

000000000040b670 <caml_format_float>:
  40b670:	f2 0f 10 06          	movsd  (%rsi),%xmm0
  40b674:	b8 01 00 00 00       	mov    $0x1,%eax
  40b679:	e9 a2 15 00 00       	jmpq   40cc20 <caml_alloc_sprintf>
  40b67e:	66 90                	xchg   %ax,%ax

000000000040b680 <caml_hexstring_of_float>:
  40b680:	41 55                	push   %r13
  40b682:	41 54                	push   %r12
  40b684:	49 89 fd             	mov    %rdi,%r13
  40b687:	55                   	push   %rbp
  40b688:	53                   	push   %rbx
  40b689:	48 89 f3             	mov    %rsi,%rbx
  40b68c:	48 d1 fb             	sar    %rbx
  40b68f:	48 83 ec 68          	sub    $0x68,%rsp
  40b693:	48 8d 7b 0c          	lea    0xc(%rbx),%rdi
  40b697:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
  40b69c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40b6a3:	00 00 
  40b6a5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  40b6aa:	31 c0                	xor    %eax,%eax
  40b6ac:	48 83 ff 40          	cmp    $0x40,%rdi
  40b6b0:	4c 89 e5             	mov    %r12,%rbp
  40b6b3:	0f 8f 67 02 00 00    	jg     40b920 <caml_hexstring_of_float+0x2a0>
  40b6b9:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  40b6bd:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  40b6c4:	ff 0f 00 
  40b6c7:	48 89 cf             	mov    %rcx,%rdi
  40b6ca:	48 21 c8             	and    %rcx,%rax
  40b6cd:	48 c1 ef 34          	shr    $0x34,%rdi
  40b6d1:	81 e7 ff 07 00 00    	and    $0x7ff,%edi
  40b6d7:	48 85 c9             	test   %rcx,%rcx
  40b6da:	0f 89 c8 00 00 00    	jns    40b7a8 <caml_hexstring_of_float+0x128>
  40b6e0:	4c 8d 6d 01          	lea    0x1(%rbp),%r13
  40b6e4:	c6 45 00 2d          	movb   $0x2d,0x0(%rbp)
  40b6e8:	81 ff ff 07 00 00    	cmp    $0x7ff,%edi
  40b6ee:	0f 84 e4 00 00 00    	je     40b7d8 <caml_hexstring_of_float+0x158>
  40b6f4:	85 ff                	test   %edi,%edi
  40b6f6:	41 c6 45 00 30       	movb   $0x30,0x0(%r13)
  40b6fb:	41 c6 45 01 78       	movb   $0x78,0x1(%r13)
  40b700:	0f 84 3a 01 00 00    	je     40b840 <caml_hexstring_of_float+0x1c0>
  40b706:	48 ba 00 00 00 00 00 	movabs $0x10000000000000,%rdx
  40b70d:	00 10 00 
  40b710:	81 ef ff 03 00 00    	sub    $0x3ff,%edi
  40b716:	48 09 d0             	or     %rdx,%rax
  40b719:	48 83 fb 0c          	cmp    $0xc,%rbx
  40b71d:	0f 86 3a 01 00 00    	jbe    40b85d <caml_hexstring_of_float+0x1dd>
  40b723:	48 89 c2             	mov    %rax,%rdx
  40b726:	48 b9 ff ff ff ff ff 	movabs $0xffffffffffffff,%rcx
  40b72d:	ff ff 00 
  40b730:	48 c1 e0 04          	shl    $0x4,%rax
  40b734:	48 c1 ea 34          	shr    $0x34,%rdx
  40b738:	48 21 c8             	and    %rcx,%rax
  40b73b:	83 c2 30             	add    $0x30,%edx
  40b73e:	48 85 db             	test   %rbx,%rbx
  40b741:	41 88 55 02          	mov    %dl,0x2(%r13)
  40b745:	0f 88 7d 02 00 00    	js     40b9c8 <caml_hexstring_of_float+0x348>
  40b74b:	48 85 db             	test   %rbx,%rbx
  40b74e:	0f 9f c2             	setg   %dl
  40b751:	84 d2                	test   %dl,%dl
  40b753:	0f 85 67 01 00 00    	jne    40b8c0 <caml_hexstring_of_float+0x240>
  40b759:	49 8d 55 03          	lea    0x3(%r13),%rdx
  40b75d:	c6 02 00             	movb   $0x0,(%rdx)
  40b760:	48 89 ee             	mov    %rbp,%rsi
  40b763:	89 fa                	mov    %edi,%edx
  40b765:	31 c0                	xor    %eax,%eax
  40b767:	bf 3c e1 41 00       	mov    $0x41e13c,%edi
  40b76c:	e8 af 14 00 00       	callq  40cc20 <caml_alloc_sprintf>
  40b771:	48 89 c3             	mov    %rax,%rbx
  40b774:	4c 39 e5             	cmp    %r12,%rbp
  40b777:	74 08                	je     40b781 <caml_hexstring_of_float+0x101>
  40b779:	48 89 ef             	mov    %rbp,%rdi
  40b77c:	e8 6f e0 ff ff       	callq  4097f0 <caml_stat_free>
  40b781:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
  40b786:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
  40b78d:	00 00 
  40b78f:	48 89 d8             	mov    %rbx,%rax
  40b792:	0f 85 6c 02 00 00    	jne    40ba04 <caml_hexstring_of_float+0x384>
  40b798:	48 83 c4 68          	add    $0x68,%rsp
  40b79c:	5b                   	pop    %rbx
  40b79d:	5d                   	pop    %rbp
  40b79e:	41 5c                	pop    %r12
  40b7a0:	41 5d                	pop    %r13
  40b7a2:	c3                   	retq   
  40b7a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40b7a8:	48 d1 fa             	sar    %rdx
  40b7ab:	83 fa 20             	cmp    $0x20,%edx
  40b7ae:	0f 84 8c 01 00 00    	je     40b940 <caml_hexstring_of_float+0x2c0>
  40b7b4:	83 fa 2b             	cmp    $0x2b,%edx
  40b7b7:	49 89 ed             	mov    %rbp,%r13
  40b7ba:	0f 85 28 ff ff ff    	jne    40b6e8 <caml_hexstring_of_float+0x68>
  40b7c0:	81 ff ff 07 00 00    	cmp    $0x7ff,%edi
  40b7c6:	4c 8d 6d 01          	lea    0x1(%rbp),%r13
  40b7ca:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
  40b7ce:	0f 85 20 ff ff ff    	jne    40b6f4 <caml_hexstring_of_float+0x74>
  40b7d4:	0f 1f 40 00          	nopl   0x0(%rax)
  40b7d8:	48 83 f8 01          	cmp    $0x1,%rax
  40b7dc:	bf 38 e1 41 00       	mov    $0x41e138,%edi
  40b7e1:	48 19 d2             	sbb    %rdx,%rdx
  40b7e4:	83 e2 05             	and    $0x5,%edx
  40b7e7:	48 83 c2 03          	add    $0x3,%rdx
  40b7eb:	48 85 c0             	test   %rax,%rax
  40b7ee:	b8 2f e1 41 00       	mov    $0x41e12f,%eax
  40b7f3:	48 0f 44 f8          	cmove  %rax,%rdi
  40b7f7:	83 fa 08             	cmp    $0x8,%edx
  40b7fa:	89 d0                	mov    %edx,%eax
  40b7fc:	0f 83 4e 01 00 00    	jae    40b950 <caml_hexstring_of_float+0x2d0>
  40b802:	83 e2 04             	and    $0x4,%edx
  40b805:	0f 85 d5 01 00 00    	jne    40b9e0 <caml_hexstring_of_float+0x360>
  40b80b:	85 c0                	test   %eax,%eax
  40b80d:	74 0f                	je     40b81e <caml_hexstring_of_float+0x19e>
  40b80f:	0f b6 17             	movzbl (%rdi),%edx
  40b812:	a8 02                	test   $0x2,%al
  40b814:	41 88 55 00          	mov    %dl,0x0(%r13)
  40b818:	0f 85 d6 01 00 00    	jne    40b9f4 <caml_hexstring_of_float+0x374>
  40b81e:	e8 2d 62 ff ff       	callq  401a50 <strlen@plt>
  40b823:	48 89 ef             	mov    %rbp,%rdi
  40b826:	41 c6 44 05 00 00    	movb   $0x0,0x0(%r13,%rax,1)
  40b82c:	e8 5f 0c 01 00       	callq  41c490 <caml_copy_string>
  40b831:	48 89 c3             	mov    %rax,%rbx
  40b834:	e9 3b ff ff ff       	jmpq   40b774 <caml_hexstring_of_float+0xf4>
  40b839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40b840:	48 85 c0             	test   %rax,%rax
  40b843:	ba 30 00 00 00       	mov    $0x30,%edx
  40b848:	0f 84 f0 fe ff ff    	je     40b73e <caml_hexstring_of_float+0xbe>
  40b84e:	48 83 fb 0c          	cmp    $0xc,%rbx
  40b852:	bf 02 fc ff ff       	mov    $0xfffffc02,%edi
  40b857:	0f 87 c6 fe ff ff    	ja     40b723 <caml_hexstring_of_float+0xa3>
  40b85d:	b9 0d 00 00 00       	mov    $0xd,%ecx
  40b862:	ba 01 00 00 00       	mov    $0x1,%edx
  40b867:	48 89 c6             	mov    %rax,%rsi
  40b86a:	48 29 d9             	sub    %rbx,%rcx
  40b86d:	c1 e1 02             	shl    $0x2,%ecx
  40b870:	48 d3 e2             	shl    %cl,%rdx
  40b873:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
  40b877:	49 89 d0             	mov    %rdx,%r8
  40b87a:	49 d1 e8             	shr    %r8
  40b87d:	48 21 ce             	and    %rcx,%rsi
  40b880:	48 f7 d1             	not    %rcx
  40b883:	48 21 c8             	and    %rcx,%rax
  40b886:	49 39 f0             	cmp    %rsi,%r8
  40b889:	0f 83 11 01 00 00    	jae    40b9a0 <caml_hexstring_of_float+0x320>
  40b88f:	48 01 d0             	add    %rdx,%rax
  40b892:	48 b9 ff ff ff ff ff 	movabs $0xffffffffffffff,%rcx
  40b899:	ff ff 00 
  40b89c:	48 89 c6             	mov    %rax,%rsi
  40b89f:	48 c1 e0 04          	shl    $0x4,%rax
  40b8a3:	48 c1 ee 34          	shr    $0x34,%rsi
  40b8a7:	48 21 c8             	and    %rcx,%rax
  40b8aa:	83 c6 30             	add    $0x30,%esi
  40b8ad:	41 88 75 02          	mov    %sil,0x2(%r13)
  40b8b1:	e9 95 fe ff ff       	jmpq   40b74b <caml_hexstring_of_float+0xcb>
  40b8b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40b8bd:	00 00 00 
  40b8c0:	49 8d 55 04          	lea    0x4(%r13),%rdx
  40b8c4:	41 c6 45 03 2e       	movb   $0x2e,0x3(%r13)
  40b8c9:	49 b9 ff ff ff ff ff 	movabs $0xffffffffffffff,%r9
  40b8d0:	ff ff 00 
  40b8d3:	eb 36                	jmp    40b90b <caml_hexstring_of_float+0x28b>
  40b8d5:	0f 1f 00             	nopl   (%rax)
  40b8d8:	0f 9f c1             	setg   %cl
  40b8db:	84 c9                	test   %cl,%cl
  40b8dd:	0f 84 7a fe ff ff    	je     40b75d <caml_hexstring_of_float+0xdd>
  40b8e3:	48 89 c6             	mov    %rax,%rsi
  40b8e6:	48 83 c2 01          	add    $0x1,%rdx
  40b8ea:	48 c1 ee 34          	shr    $0x34,%rsi
  40b8ee:	44 8d 46 30          	lea    0x30(%rsi),%r8d
  40b8f2:	8d 4e 57             	lea    0x57(%rsi),%ecx
  40b8f5:	48 83 fe 09          	cmp    $0x9,%rsi
  40b8f9:	41 0f 46 c8          	cmovbe %r8d,%ecx
  40b8fd:	48 c1 e0 04          	shl    $0x4,%rax
  40b901:	48 83 eb 01          	sub    $0x1,%rbx
  40b905:	88 4a ff             	mov    %cl,-0x1(%rdx)
  40b908:	4c 21 c8             	and    %r9,%rax
  40b90b:	48 83 fb 00          	cmp    $0x0,%rbx
  40b90f:	7d c7                	jge    40b8d8 <caml_hexstring_of_float+0x258>
  40b911:	48 85 c0             	test   %rax,%rax
  40b914:	0f 95 c1             	setne  %cl
  40b917:	eb c2                	jmp    40b8db <caml_hexstring_of_float+0x25b>
  40b919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40b920:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40b925:	e8 a6 de ff ff       	callq  4097d0 <caml_stat_alloc>
  40b92a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  40b92f:	48 89 c5             	mov    %rax,%rbp
  40b932:	e9 82 fd ff ff       	jmpq   40b6b9 <caml_hexstring_of_float+0x39>
  40b937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40b93e:	00 00 
  40b940:	4c 8d 6d 01          	lea    0x1(%rbp),%r13
  40b944:	c6 45 00 20          	movb   $0x20,0x0(%rbp)
  40b948:	e9 9b fd ff ff       	jmpq   40b6e8 <caml_hexstring_of_float+0x68>
  40b94d:	0f 1f 00             	nopl   (%rax)
  40b950:	48 8b 07             	mov    (%rdi),%rax
  40b953:	49 89 f8             	mov    %rdi,%r8
  40b956:	49 89 45 00          	mov    %rax,0x0(%r13)
  40b95a:	89 d0                	mov    %edx,%eax
  40b95c:	48 8b 4c 07 f8       	mov    -0x8(%rdi,%rax,1),%rcx
  40b961:	49 89 4c 05 f8       	mov    %rcx,-0x8(%r13,%rax,1)
  40b966:	49 8d 4d 08          	lea    0x8(%r13),%rcx
  40b96a:	4c 89 e8             	mov    %r13,%rax
  40b96d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
  40b971:	48 29 c8             	sub    %rcx,%rax
  40b974:	49 29 c0             	sub    %rax,%r8
  40b977:	01 d0                	add    %edx,%eax
  40b979:	83 e0 f8             	and    $0xfffffff8,%eax
  40b97c:	83 f8 08             	cmp    $0x8,%eax
  40b97f:	0f 82 99 fe ff ff    	jb     40b81e <caml_hexstring_of_float+0x19e>
  40b985:	83 e0 f8             	and    $0xfffffff8,%eax
  40b988:	31 d2                	xor    %edx,%edx
  40b98a:	89 d6                	mov    %edx,%esi
  40b98c:	83 c2 08             	add    $0x8,%edx
  40b98f:	4d 8b 0c 30          	mov    (%r8,%rsi,1),%r9
  40b993:	39 c2                	cmp    %eax,%edx
  40b995:	4c 89 0c 31          	mov    %r9,(%rcx,%rsi,1)
  40b999:	72 ef                	jb     40b98a <caml_hexstring_of_float+0x30a>
  40b99b:	e9 7e fe ff ff       	jmpq   40b81e <caml_hexstring_of_float+0x19e>
  40b9a0:	74 31                	je     40b9d3 <caml_hexstring_of_float+0x353>
  40b9a2:	48 89 c6             	mov    %rax,%rsi
  40b9a5:	48 c1 e0 04          	shl    $0x4,%rax
  40b9a9:	48 89 c2             	mov    %rax,%rdx
  40b9ac:	48 c1 ee 34          	shr    $0x34,%rsi
  40b9b0:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
  40b9b7:	ff ff 00 
  40b9ba:	83 c6 30             	add    $0x30,%esi
  40b9bd:	48 21 d0             	and    %rdx,%rax
  40b9c0:	e9 e8 fe ff ff       	jmpq   40b8ad <caml_hexstring_of_float+0x22d>
  40b9c5:	0f 1f 00             	nopl   (%rax)
  40b9c8:	48 85 c0             	test   %rax,%rax
  40b9cb:	0f 95 c2             	setne  %dl
  40b9ce:	e9 7e fd ff ff       	jmpq   40b751 <caml_hexstring_of_float+0xd1>
  40b9d3:	48 85 c2             	test   %rax,%rdx
  40b9d6:	0f 85 b3 fe ff ff    	jne    40b88f <caml_hexstring_of_float+0x20f>
  40b9dc:	eb c4                	jmp    40b9a2 <caml_hexstring_of_float+0x322>
  40b9de:	66 90                	xchg   %ax,%ax
  40b9e0:	8b 17                	mov    (%rdi),%edx
  40b9e2:	41 89 55 00          	mov    %edx,0x0(%r13)
  40b9e6:	8b 54 07 fc          	mov    -0x4(%rdi,%rax,1),%edx
  40b9ea:	41 89 54 05 fc       	mov    %edx,-0x4(%r13,%rax,1)
  40b9ef:	e9 2a fe ff ff       	jmpq   40b81e <caml_hexstring_of_float+0x19e>
  40b9f4:	0f b7 54 07 fe       	movzwl -0x2(%rdi,%rax,1),%edx
  40b9f9:	66 41 89 54 05 fe    	mov    %dx,-0x2(%r13,%rax,1)
  40b9ff:	e9 1a fe ff ff       	jmpq   40b81e <caml_hexstring_of_float+0x19e>
  40ba04:	e8 67 60 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40ba09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040ba10 <caml_float_of_string>:
  40ba10:	41 56                	push   %r14
  40ba12:	41 55                	push   %r13
  40ba14:	49 89 fd             	mov    %rdi,%r13
  40ba17:	41 54                	push   %r12
  40ba19:	55                   	push   %rbp
  40ba1a:	53                   	push   %rbx
  40ba1b:	48 89 fb             	mov    %rdi,%rbx
  40ba1e:	48 83 ec 70          	sub    $0x70,%rsp
  40ba22:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40ba29:	00 00 
  40ba2b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  40ba30:	31 c0                	xor    %eax,%eax
  40ba32:	0f b6 07             	movzbl (%rdi),%eax
  40ba35:	3c 2d                	cmp    $0x2d,%al
  40ba37:	0f 84 93 01 00 00    	je     40bbd0 <caml_float_of_string+0x1c0>
  40ba3d:	3c 2b                	cmp    $0x2b,%al
  40ba3f:	48 89 fa             	mov    %rdi,%rdx
  40ba42:	bd 01 00 00 00       	mov    $0x1,%ebp
  40ba47:	0f 84 b3 01 00 00    	je     40bc00 <caml_float_of_string+0x1f0>
  40ba4d:	3c 30                	cmp    $0x30,%al
  40ba4f:	0f 84 ab 00 00 00    	je     40bb00 <caml_float_of_string+0xf0>
  40ba55:	4c 89 ef             	mov    %r13,%rdi
  40ba58:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
  40ba5d:	e8 2e 0b 00 00       	callq  40c590 <caml_string_length>
  40ba62:	48 83 f8 3f          	cmp    $0x3f,%rax
  40ba66:	48 89 c5             	mov    %rax,%rbp
  40ba69:	4d 89 e6             	mov    %r12,%r14
  40ba6c:	0f 87 76 01 00 00    	ja     40bbe8 <caml_float_of_string+0x1d8>
  40ba72:	49 8d 7c 2d 00       	lea    0x0(%r13,%rbp,1),%rdi
  40ba77:	4c 89 f5             	mov    %r14,%rbp
  40ba7a:	48 39 fb             	cmp    %rdi,%rbx
  40ba7d:	74 19                	je     40ba98 <caml_float_of_string+0x88>
  40ba7f:	48 83 c3 01          	add    $0x1,%rbx
  40ba83:	0f b6 53 ff          	movzbl -0x1(%rbx),%edx
  40ba87:	80 fa 5f             	cmp    $0x5f,%dl
  40ba8a:	74 ee                	je     40ba7a <caml_float_of_string+0x6a>
  40ba8c:	88 55 00             	mov    %dl,0x0(%rbp)
  40ba8f:	48 83 c5 01          	add    $0x1,%rbp
  40ba93:	48 39 fb             	cmp    %rdi,%rbx
  40ba96:	75 e7                	jne    40ba7f <caml_float_of_string+0x6f>
  40ba98:	4c 39 f5             	cmp    %r14,%rbp
  40ba9b:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
  40ba9f:	0f 84 0a 02 00 00    	je     40bcaf <caml_float_of_string+0x29f>
  40baa5:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  40baaa:	4c 89 f7             	mov    %r14,%rdi
  40baad:	e8 0e 5f ff ff       	callq  4019c0 <strtod@plt>
  40bab2:	48 3b 6c 24 18       	cmp    0x18(%rsp),%rbp
  40bab7:	0f 85 f2 01 00 00    	jne    40bcaf <caml_float_of_string+0x29f>
  40babd:	4d 39 e6             	cmp    %r12,%r14
  40bac0:	74 14                	je     40bad6 <caml_float_of_string+0xc6>
  40bac2:	4c 89 f7             	mov    %r14,%rdi
  40bac5:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
  40bacb:	e8 20 dd ff ff       	callq  4097f0 <caml_stat_free>
  40bad0:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
  40bad6:	e8 25 fb ff ff       	callq  40b600 <caml_copy_double>
  40badb:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
  40bae0:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  40bae7:	00 00 
  40bae9:	0f 85 e1 01 00 00    	jne    40bcd0 <caml_float_of_string+0x2c0>
  40baef:	48 83 c4 70          	add    $0x70,%rsp
  40baf3:	5b                   	pop    %rbx
  40baf4:	5d                   	pop    %rbp
  40baf5:	41 5c                	pop    %r12
  40baf7:	41 5d                	pop    %r13
  40baf9:	41 5e                	pop    %r14
  40bafb:	c3                   	retq   
  40bafc:	0f 1f 40 00          	nopl   0x0(%rax)
  40bb00:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
  40bb04:	83 e0 df             	and    $0xffffffdf,%eax
  40bb07:	3c 58                	cmp    $0x58,%al
  40bb09:	0f 85 46 ff ff ff    	jne    40ba55 <caml_float_of_string+0x45>
  40bb0f:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
  40bb13:	0f be 52 02          	movsbl 0x2(%rdx),%edx
  40bb17:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  40bb1c:	31 c0                	xor    %eax,%eax
  40bb1e:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
  40bb24:	31 db                	xor    %ebx,%ebx
  40bb26:	45 31 c0             	xor    %r8d,%r8d
  40bb29:	45 31 e4             	xor    %r12d,%r12d
  40bb2c:	45 31 f6             	xor    %r14d,%r14d
  40bb2f:	90                   	nop
  40bb30:	84 d2                	test   %dl,%dl
  40bb32:	74 59                	je     40bb8d <caml_float_of_string+0x17d>
  40bb34:	80 fa 50             	cmp    $0x50,%dl
  40bb37:	48 8d 79 01          	lea    0x1(%rcx),%rdi
  40bb3b:	74 18                	je     40bb55 <caml_float_of_string+0x145>
  40bb3d:	0f 8e ed 00 00 00    	jle    40bc30 <caml_float_of_string+0x220>
  40bb43:	80 fa 5f             	cmp    $0x5f,%dl
  40bb46:	0f 84 d4 00 00 00    	je     40bc20 <caml_float_of_string+0x210>
  40bb4c:	80 fa 70             	cmp    $0x70,%dl
  40bb4f:	0f 85 fb 00 00 00    	jne    40bc50 <caml_float_of_string+0x240>
  40bb55:	80 79 01 00          	cmpb   $0x0,0x1(%rcx)
  40bb59:	0f 84 5d 01 00 00    	je     40bcbc <caml_float_of_string+0x2ac>
  40bb5f:	ba 0a 00 00 00       	mov    $0xa,%edx
  40bb64:	e8 97 60 ff ff       	callq  401c00 <strtol@plt>
  40bb69:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40bb6e:	80 39 00             	cmpb   $0x0,(%rcx)
  40bb71:	0f 85 45 01 00 00    	jne    40bcbc <caml_float_of_string+0x2ac>
  40bb77:	ba 00 00 00 80       	mov    $0x80000000,%edx
  40bb7c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  40bb81:	48 01 c2             	add    %rax,%rdx
  40bb84:	48 39 ca             	cmp    %rcx,%rdx
  40bb87:	0f 87 2f 01 00 00    	ja     40bcbc <caml_float_of_string+0x2ac>
  40bb8d:	45 85 e4             	test   %r12d,%r12d
  40bb90:	0f 84 26 01 00 00    	je     40bcbc <caml_float_of_string+0x2ac>
  40bb96:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40bb9a:	45 85 ed             	test   %r13d,%r13d
  40bb9d:	f2 49 0f 2a c6       	cvtsi2sd %r14,%xmm0
  40bba2:	78 06                	js     40bbaa <caml_float_of_string+0x19a>
  40bba4:	44 01 e8             	add    %r13d,%eax
  40bba7:	44 29 e0             	sub    %r12d,%eax
  40bbaa:	89 df                	mov    %ebx,%edi
  40bbac:	01 c7                	add    %eax,%edi
  40bbae:	0f 85 12 01 00 00    	jne    40bcc6 <caml_float_of_string+0x2b6>
  40bbb4:	83 fd ff             	cmp    $0xffffffff,%ebp
  40bbb7:	0f 85 19 ff ff ff    	jne    40bad6 <caml_float_of_string+0xc6>
  40bbbd:	f2 0f 10 0d 9b 25 01 	movsd  0x1259b(%rip),%xmm1        # 41e160 <caml_absf_mask+0x7a0>
  40bbc4:	00 
  40bbc5:	66 0f 57 c1          	xorpd  %xmm1,%xmm0
  40bbc9:	e9 08 ff ff ff       	jmpq   40bad6 <caml_float_of_string+0xc6>
  40bbce:	66 90                	xchg   %ax,%ax
  40bbd0:	48 8d 57 01          	lea    0x1(%rdi),%rdx
  40bbd4:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
  40bbd8:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
  40bbdd:	e9 6b fe ff ff       	jmpq   40ba4d <caml_float_of_string+0x3d>
  40bbe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40bbe8:	48 8d 78 01          	lea    0x1(%rax),%rdi
  40bbec:	e8 df db ff ff       	callq  4097d0 <caml_stat_alloc>
  40bbf1:	49 89 c6             	mov    %rax,%r14
  40bbf4:	e9 79 fe ff ff       	jmpq   40ba72 <caml_float_of_string+0x62>
  40bbf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40bc00:	48 8d 57 01          	lea    0x1(%rdi),%rdx
  40bc04:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
  40bc08:	e9 40 fe ff ff       	jmpq   40ba4d <caml_float_of_string+0x3d>
  40bc0d:	0f 1f 00             	nopl   (%rax)
  40bc10:	4d 89 f1             	mov    %r14,%r9
  40bc13:	49 83 c9 01          	or     $0x1,%r9
  40bc17:	85 d2                	test   %edx,%edx
  40bc19:	4d 0f 45 f1          	cmovne %r9,%r14
  40bc1d:	83 c3 04             	add    $0x4,%ebx
  40bc20:	0f be 51 01          	movsbl 0x1(%rcx),%edx
  40bc24:	48 89 f9             	mov    %rdi,%rcx
  40bc27:	e9 04 ff ff ff       	jmpq   40bb30 <caml_float_of_string+0x120>
  40bc2c:	0f 1f 40 00          	nopl   0x0(%rax)
  40bc30:	80 fa 2e             	cmp    $0x2e,%dl
  40bc33:	75 1b                	jne    40bc50 <caml_float_of_string+0x240>
  40bc35:	45 85 ed             	test   %r13d,%r13d
  40bc38:	0f 89 7e 00 00 00    	jns    40bcbc <caml_float_of_string+0x2ac>
  40bc3e:	0f be 51 01          	movsbl 0x1(%rcx),%edx
  40bc42:	45 89 e5             	mov    %r12d,%r13d
  40bc45:	48 89 f9             	mov    %rdi,%rcx
  40bc48:	e9 e3 fe ff ff       	jmpq   40bb30 <caml_float_of_string+0x120>
  40bc4d:	0f 1f 00             	nopl   (%rax)
  40bc50:	44 8d 4a d0          	lea    -0x30(%rdx),%r9d
  40bc54:	41 80 f9 09          	cmp    $0x9,%r9b
  40bc58:	77 36                	ja     40bc90 <caml_float_of_string+0x280>
  40bc5a:	83 ea 30             	sub    $0x30,%edx
  40bc5d:	41 83 c4 04          	add    $0x4,%r12d
  40bc61:	85 d2                	test   %edx,%edx
  40bc63:	75 05                	jne    40bc6a <caml_float_of_string+0x25a>
  40bc65:	4d 85 f6             	test   %r14,%r14
  40bc68:	74 b6                	je     40bc20 <caml_float_of_string+0x210>
  40bc6a:	41 83 f8 3b          	cmp    $0x3b,%r8d
  40bc6e:	7f a0                	jg     40bc10 <caml_float_of_string+0x200>
  40bc70:	48 63 d2             	movslq %edx,%rdx
  40bc73:	49 c1 e6 04          	shl    $0x4,%r14
  40bc77:	41 83 c0 04          	add    $0x4,%r8d
  40bc7b:	49 01 d6             	add    %rdx,%r14
  40bc7e:	0f be 51 01          	movsbl 0x1(%rcx),%edx
  40bc82:	48 89 f9             	mov    %rdi,%rcx
  40bc85:	e9 a6 fe ff ff       	jmpq   40bb30 <caml_float_of_string+0x120>
  40bc8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40bc90:	44 8d 4a bf          	lea    -0x41(%rdx),%r9d
  40bc94:	41 80 f9 05          	cmp    $0x5,%r9b
  40bc98:	77 06                	ja     40bca0 <caml_float_of_string+0x290>
  40bc9a:	83 ea 37             	sub    $0x37,%edx
  40bc9d:	eb be                	jmp    40bc5d <caml_float_of_string+0x24d>
  40bc9f:	90                   	nop
  40bca0:	44 8d 4a 9f          	lea    -0x61(%rdx),%r9d
  40bca4:	41 80 f9 05          	cmp    $0x5,%r9b
  40bca8:	77 12                	ja     40bcbc <caml_float_of_string+0x2ac>
  40bcaa:	83 ea 57             	sub    $0x57,%edx
  40bcad:	eb ae                	jmp    40bc5d <caml_float_of_string+0x24d>
  40bcaf:	4d 39 e6             	cmp    %r12,%r14
  40bcb2:	74 08                	je     40bcbc <caml_float_of_string+0x2ac>
  40bcb4:	4c 89 f7             	mov    %r14,%rdi
  40bcb7:	e8 34 db ff ff       	callq  4097f0 <caml_stat_free>
  40bcbc:	bf 43 e1 41 00       	mov    $0x41e143,%edi
  40bcc1:	e8 fa e9 00 00       	callq  41a6c0 <caml_failwith>
  40bcc6:	e8 b5 5c ff ff       	callq  401980 <ldexp@plt>
  40bccb:	e9 e4 fe ff ff       	jmpq   40bbb4 <caml_float_of_string+0x1a4>
  40bcd0:	e8 9b 5d ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40bcd5:	90                   	nop
  40bcd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bcdd:	00 00 00 

000000000040bce0 <caml_int_of_float>:
  40bce0:	f2 48 0f 2c 07       	cvttsd2si (%rdi),%rax
  40bce5:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40bcea:	c3                   	retq   
  40bceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040bcf0 <caml_float_of_int>:
  40bcf0:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40bcf4:	48 d1 ff             	sar    %rdi
  40bcf7:	f2 48 0f 2a c7       	cvtsi2sd %rdi,%xmm0
  40bcfc:	e9 ff f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bd01:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40bd06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bd0d:	00 00 00 

000000000040bd10 <caml_neg_float>:
  40bd10:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bd14:	f2 0f 10 0d 44 24 01 	movsd  0x12444(%rip),%xmm1        # 41e160 <caml_absf_mask+0x7a0>
  40bd1b:	00 
  40bd1c:	66 0f 57 c1          	xorpd  %xmm1,%xmm0
  40bd20:	e9 db f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bd25:	90                   	nop
  40bd26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bd2d:	00 00 00 

000000000040bd30 <caml_abs_float>:
  40bd30:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bd34:	f2 0f 10 0d 34 24 01 	movsd  0x12434(%rip),%xmm1        # 41e170 <caml_absf_mask+0x7b0>
  40bd3b:	00 
  40bd3c:	66 0f 54 c1          	andpd  %xmm1,%xmm0
  40bd40:	e9 bb f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bd45:	90                   	nop
  40bd46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bd4d:	00 00 00 

000000000040bd50 <caml_add_float>:
  40bd50:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bd54:	f2 0f 58 06          	addsd  (%rsi),%xmm0
  40bd58:	e9 a3 f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bd5d:	0f 1f 00             	nopl   (%rax)

000000000040bd60 <caml_sub_float>:
  40bd60:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bd64:	f2 0f 5c 06          	subsd  (%rsi),%xmm0
  40bd68:	e9 93 f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bd6d:	0f 1f 00             	nopl   (%rax)

000000000040bd70 <caml_mul_float>:
  40bd70:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bd74:	f2 0f 59 06          	mulsd  (%rsi),%xmm0
  40bd78:	e9 83 f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bd7d:	0f 1f 00             	nopl   (%rax)

000000000040bd80 <caml_div_float>:
  40bd80:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bd84:	f2 0f 5e 06          	divsd  (%rsi),%xmm0
  40bd88:	e9 73 f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bd8d:	0f 1f 00             	nopl   (%rax)

000000000040bd90 <caml_exp_float>:
  40bd90:	48 83 ec 08          	sub    $0x8,%rsp
  40bd94:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bd98:	e8 33 5c ff ff       	callq  4019d0 <exp@plt>
  40bd9d:	48 83 c4 08          	add    $0x8,%rsp
  40bda1:	e9 5a f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bda6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bdad:	00 00 00 

000000000040bdb0 <caml_floor_float>:
  40bdb0:	48 83 ec 08          	sub    $0x8,%rsp
  40bdb4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bdb8:	e8 d3 5f ff ff       	callq  401d90 <floor@plt>
  40bdbd:	48 83 c4 08          	add    $0x8,%rsp
  40bdc1:	e9 3a f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bdc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bdcd:	00 00 00 

000000000040bdd0 <caml_fmod_float>:
  40bdd0:	48 83 ec 08          	sub    $0x8,%rsp
  40bdd4:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
  40bdd8:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bddc:	e8 3f 5d ff ff       	callq  401b20 <fmod@plt>
  40bde1:	48 83 c4 08          	add    $0x8,%rsp
  40bde5:	e9 16 f8 ff ff       	jmpq   40b600 <caml_copy_double>
  40bdea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040bdf0 <caml_frexp_float>:
  40bdf0:	53                   	push   %rbx
  40bdf1:	48 89 f8             	mov    %rdi,%rax
  40bdf4:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  40bdfb:	48 8b 1d 46 0b 22 00 	mov    0x220b46(%rip),%rbx        # 62c948 <caml_local_roots>
  40be02:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40be07:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40be0c:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  40be13:	00 00 
  40be15:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
  40be1c:	00 00 
  40be1e:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40be25:	00 00 
  40be27:	48 8d 7c 24 1c       	lea    0x1c(%rsp),%rdi
  40be2c:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
  40be31:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
  40be36:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
  40be3b:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  40be42:	00 00 
  40be44:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
  40be4b:	00 01 00 00 00 
  40be50:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
  40be55:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
  40be5a:	48 c7 44 24 78 02 00 	movq   $0x2,0x78(%rsp)
  40be61:	00 00 
  40be63:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40be6a:	00 00 
  40be6c:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
  40be73:	00 
  40be74:	31 c9                	xor    %ecx,%ecx
  40be76:	48 89 15 cb 0a 22 00 	mov    %rdx,0x220acb(%rip)        # 62c948 <caml_local_roots>
  40be7d:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  40be82:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
  40be89:	00 
  40be8a:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
  40be8f:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
  40be96:	00 
  40be97:	f2 0f 10 00          	movsd  (%rax),%xmm0
  40be9b:	e8 00 5d ff ff       	callq  401ba0 <frexp@plt>
  40bea0:	e8 5b f7 ff ff       	callq  40b600 <caml_copy_double>
  40bea5:	bf 02 00 00 00       	mov    $0x2,%edi
  40beaa:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40beaf:	e8 ec 04 01 00       	callq  41c3a0 <caml_alloc_tuple>
  40beb4:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  40beb9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  40bebe:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
  40bec5:	00 
  40bec6:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  40becd:	00 00 
  40becf:	48 89 10             	mov    %rdx,(%rax)
  40bed2:	48 63 44 24 1c       	movslq 0x1c(%rsp),%rax
  40bed7:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
  40bedc:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40bee1:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40bee5:	48 89 1d 5c 0a 22 00 	mov    %rbx,0x220a5c(%rip)        # 62c948 <caml_local_roots>
  40beec:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40bef1:	75 09                	jne    40befc <caml_frexp_float+0x10c>
  40bef3:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  40befa:	5b                   	pop    %rbx
  40befb:	c3                   	retq   
  40befc:	e8 6f 5b ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40bf01:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40bf06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bf0d:	00 00 00 

000000000040bf10 <caml_ldexp_float_unboxed>:
  40bf10:	e9 6b 5a ff ff       	jmpq   401980 <ldexp@plt>
  40bf15:	90                   	nop
  40bf16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bf1d:	00 00 00 

000000000040bf20 <caml_ldexp_float>:
  40bf20:	48 83 ec 08          	sub    $0x8,%rsp
  40bf24:	48 89 f8             	mov    %rdi,%rax
  40bf27:	48 d1 fe             	sar    %rsi
  40bf2a:	f2 0f 10 00          	movsd  (%rax),%xmm0
  40bf2e:	48 89 f7             	mov    %rsi,%rdi
  40bf31:	e8 4a 5a ff ff       	callq  401980 <ldexp@plt>
  40bf36:	48 83 c4 08          	add    $0x8,%rsp
  40bf3a:	e9 c1 f6 ff ff       	jmpq   40b600 <caml_copy_double>
  40bf3f:	90                   	nop

000000000040bf40 <caml_log_float>:
  40bf40:	48 83 ec 08          	sub    $0x8,%rsp
  40bf44:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bf48:	e8 a3 5b ff ff       	callq  401af0 <log@plt>
  40bf4d:	48 83 c4 08          	add    $0x8,%rsp
  40bf51:	e9 aa f6 ff ff       	jmpq   40b600 <caml_copy_double>
  40bf56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bf5d:	00 00 00 

000000000040bf60 <caml_log10_float>:
  40bf60:	48 83 ec 08          	sub    $0x8,%rsp
  40bf64:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40bf68:	e8 63 5c ff ff       	callq  401bd0 <log10@plt>
  40bf6d:	48 83 c4 08          	add    $0x8,%rsp
  40bf71:	e9 8a f6 ff ff       	jmpq   40b600 <caml_copy_double>
  40bf76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bf7d:	00 00 00 

000000000040bf80 <caml_modf_float>:
  40bf80:	53                   	push   %rbx
  40bf81:	48 89 f8             	mov    %rdi,%rax
  40bf84:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  40bf8b:	48 8b 1d b6 09 22 00 	mov    0x2209b6(%rip),%rbx        # 62c948 <caml_local_roots>
  40bf92:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40bf97:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40bf9c:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  40bfa3:	00 00 
  40bfa5:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
  40bfac:	00 00 
  40bfae:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  40bfb5:	00 00 
  40bfb7:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  40bfbc:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
  40bfc1:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
  40bfc6:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
  40bfcb:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40bfd2:	00 00 
  40bfd4:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  40bfdb:	00 00 
  40bfdd:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
  40bfe2:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
  40bfe7:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
  40bfee:	00 01 00 00 00 
  40bff3:	48 c7 44 24 78 03 00 	movq   $0x3,0x78(%rsp)
  40bffa:	00 00 
  40bffc:	48 89 15 45 09 22 00 	mov    %rdx,0x220945(%rip)        # 62c948 <caml_local_roots>
  40c003:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  40c008:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40c00f:	00 00 
  40c011:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
  40c018:	00 
  40c019:	31 c9                	xor    %ecx,%ecx
  40c01b:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
  40c022:	00 
  40c023:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  40c028:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
  40c02f:	00 
  40c030:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
  40c035:	48 89 94 24 98 00 00 	mov    %rdx,0x98(%rsp)
  40c03c:	00 
  40c03d:	f2 0f 10 00          	movsd  (%rax),%xmm0
  40c041:	e8 4a 5a ff ff       	callq  401a90 <modf@plt>
  40c046:	e8 b5 f5 ff ff       	callq  40b600 <caml_copy_double>
  40c04b:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
  40c051:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  40c056:	e8 a5 f5 ff ff       	callq  40b600 <caml_copy_double>
  40c05b:	bf 02 00 00 00       	mov    $0x2,%edi
  40c060:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40c065:	e8 36 03 01 00       	callq  41c3a0 <caml_alloc_tuple>
  40c06a:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  40c06f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40c074:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
  40c07b:	00 
  40c07c:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  40c083:	00 00 
  40c085:	48 89 10             	mov    %rdx,(%rax)
  40c088:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40c08d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  40c092:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40c096:	48 89 1d ab 08 22 00 	mov    %rbx,0x2208ab(%rip)        # 62c948 <caml_local_roots>
  40c09d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40c0a2:	75 09                	jne    40c0ad <caml_modf_float+0x12d>
  40c0a4:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  40c0ab:	5b                   	pop    %rbx
  40c0ac:	c3                   	retq   
  40c0ad:	e8 be 59 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40c0b2:	0f 1f 40 00          	nopl   0x0(%rax)
  40c0b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c0bd:	00 00 00 

000000000040c0c0 <caml_sqrt_float>:
  40c0c0:	f2 0f 51 07          	sqrtsd (%rdi),%xmm0
  40c0c4:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
  40c0c8:	7a 05                	jp     40c0cf <caml_sqrt_float+0xf>
  40c0ca:	e9 31 f5 ff ff       	jmpq   40b600 <caml_copy_double>
  40c0cf:	48 83 ec 08          	sub    $0x8,%rsp
  40c0d3:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c0d7:	e8 44 5d ff ff       	callq  401e20 <sqrt@plt>
  40c0dc:	48 83 c4 08          	add    $0x8,%rsp
  40c0e0:	e9 1b f5 ff ff       	jmpq   40b600 <caml_copy_double>
  40c0e5:	90                   	nop
  40c0e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c0ed:	00 00 00 

000000000040c0f0 <caml_power_float>:
  40c0f0:	48 83 ec 08          	sub    $0x8,%rsp
  40c0f4:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
  40c0f8:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c0fc:	e8 cf 59 ff ff       	callq  401ad0 <pow@plt>
  40c101:	48 83 c4 08          	add    $0x8,%rsp
  40c105:	e9 f6 f4 ff ff       	jmpq   40b600 <caml_copy_double>
  40c10a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c110 <caml_sin_float>:
  40c110:	48 83 ec 08          	sub    $0x8,%rsp
  40c114:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c118:	e8 63 5c ff ff       	callq  401d80 <sin@plt>
  40c11d:	48 83 c4 08          	add    $0x8,%rsp
  40c121:	e9 da f4 ff ff       	jmpq   40b600 <caml_copy_double>
  40c126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c12d:	00 00 00 

000000000040c130 <caml_sinh_float>:
  40c130:	48 83 ec 08          	sub    $0x8,%rsp
  40c134:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c138:	e8 33 5b ff ff       	callq  401c70 <sinh@plt>
  40c13d:	48 83 c4 08          	add    $0x8,%rsp
  40c141:	e9 ba f4 ff ff       	jmpq   40b600 <caml_copy_double>
  40c146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c14d:	00 00 00 

000000000040c150 <caml_cos_float>:
  40c150:	48 83 ec 08          	sub    $0x8,%rsp
  40c154:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c158:	e8 e3 59 ff ff       	callq  401b40 <cos@plt>
  40c15d:	48 83 c4 08          	add    $0x8,%rsp
  40c161:	e9 9a f4 ff ff       	jmpq   40b600 <caml_copy_double>
  40c166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c16d:	00 00 00 

000000000040c170 <caml_cosh_float>:
  40c170:	48 83 ec 08          	sub    $0x8,%rsp
  40c174:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c178:	e8 c3 5a ff ff       	callq  401c40 <cosh@plt>
  40c17d:	48 83 c4 08          	add    $0x8,%rsp
  40c181:	e9 7a f4 ff ff       	jmpq   40b600 <caml_copy_double>
  40c186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c18d:	00 00 00 

000000000040c190 <caml_tan_float>:
  40c190:	48 83 ec 08          	sub    $0x8,%rsp
  40c194:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c198:	e8 13 5b ff ff       	callq  401cb0 <tan@plt>
  40c19d:	48 83 c4 08          	add    $0x8,%rsp
  40c1a1:	e9 5a f4 ff ff       	jmpq   40b600 <caml_copy_double>
  40c1a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c1ad:	00 00 00 

000000000040c1b0 <caml_tanh_float>:
  40c1b0:	48 83 ec 08          	sub    $0x8,%rsp
  40c1b4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c1b8:	e8 e3 5b ff ff       	callq  401da0 <tanh@plt>
  40c1bd:	48 83 c4 08          	add    $0x8,%rsp
  40c1c1:	e9 3a f4 ff ff       	jmpq   40b600 <caml_copy_double>
  40c1c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c1cd:	00 00 00 

000000000040c1d0 <caml_asin_float>:
  40c1d0:	48 83 ec 08          	sub    $0x8,%rsp
  40c1d4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c1d8:	e8 d3 5b ff ff       	callq  401db0 <asin@plt>
  40c1dd:	48 83 c4 08          	add    $0x8,%rsp
  40c1e1:	e9 1a f4 ff ff       	jmpq   40b600 <caml_copy_double>
  40c1e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c1ed:	00 00 00 

000000000040c1f0 <caml_acos_float>:
  40c1f0:	48 83 ec 08          	sub    $0x8,%rsp
  40c1f4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c1f8:	e8 63 59 ff ff       	callq  401b60 <acos@plt>
  40c1fd:	48 83 c4 08          	add    $0x8,%rsp
  40c201:	e9 fa f3 ff ff       	jmpq   40b600 <caml_copy_double>
  40c206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c20d:	00 00 00 

000000000040c210 <caml_atan_float>:
  40c210:	48 83 ec 08          	sub    $0x8,%rsp
  40c214:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c218:	e8 03 58 ff ff       	callq  401a20 <atan@plt>
  40c21d:	48 83 c4 08          	add    $0x8,%rsp
  40c221:	e9 da f3 ff ff       	jmpq   40b600 <caml_copy_double>
  40c226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c22d:	00 00 00 

000000000040c230 <caml_atan2_float>:
  40c230:	48 83 ec 08          	sub    $0x8,%rsp
  40c234:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
  40c238:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c23c:	e8 8f 5a ff ff       	callq  401cd0 <atan2@plt>
  40c241:	48 83 c4 08          	add    $0x8,%rsp
  40c245:	e9 b6 f3 ff ff       	jmpq   40b600 <caml_copy_double>
  40c24a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c250 <caml_ceil_float>:
  40c250:	48 83 ec 08          	sub    $0x8,%rsp
  40c254:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c258:	e8 03 5c ff ff       	callq  401e60 <ceil@plt>
  40c25d:	48 83 c4 08          	add    $0x8,%rsp
  40c261:	e9 9a f3 ff ff       	jmpq   40b600 <caml_copy_double>
  40c266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c26d:	00 00 00 

000000000040c270 <caml_hypot>:
  40c270:	e9 9b 5b ff ff       	jmpq   401e10 <hypot@plt>
  40c275:	90                   	nop
  40c276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c27d:	00 00 00 

000000000040c280 <caml_hypot_float>:
  40c280:	48 83 ec 08          	sub    $0x8,%rsp
  40c284:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
  40c288:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c28c:	e8 7f 5b ff ff       	callq  401e10 <hypot@plt>
  40c291:	48 83 c4 08          	add    $0x8,%rsp
  40c295:	e9 66 f3 ff ff       	jmpq   40b600 <caml_copy_double>
  40c29a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c2a0 <caml_expm1>:
  40c2a0:	e9 7b 59 ff ff       	jmpq   401c20 <expm1@plt>
  40c2a5:	90                   	nop
  40c2a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c2ad:	00 00 00 

000000000040c2b0 <caml_log1p>:
  40c2b0:	e9 5b 58 ff ff       	jmpq   401b10 <log1p@plt>
  40c2b5:	90                   	nop
  40c2b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c2bd:	00 00 00 

000000000040c2c0 <caml_expm1_float>:
  40c2c0:	48 83 ec 08          	sub    $0x8,%rsp
  40c2c4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c2c8:	e8 53 59 ff ff       	callq  401c20 <expm1@plt>
  40c2cd:	48 83 c4 08          	add    $0x8,%rsp
  40c2d1:	e9 2a f3 ff ff       	jmpq   40b600 <caml_copy_double>
  40c2d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c2dd:	00 00 00 

000000000040c2e0 <caml_log1p_float>:
  40c2e0:	48 83 ec 08          	sub    $0x8,%rsp
  40c2e4:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c2e8:	e8 23 58 ff ff       	callq  401b10 <log1p@plt>
  40c2ed:	48 83 c4 08          	add    $0x8,%rsp
  40c2f1:	e9 0a f3 ff ff       	jmpq   40b600 <caml_copy_double>
  40c2f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c2fd:	00 00 00 

000000000040c300 <caml_copysign>:
  40c300:	66 0f 28 d1          	movapd %xmm1,%xmm2
  40c304:	66 0f 54 05 64 1e 01 	andpd  0x11e64(%rip),%xmm0        # 41e170 <caml_absf_mask+0x7b0>
  40c30b:	00 
  40c30c:	66 0f 54 15 4c 1e 01 	andpd  0x11e4c(%rip),%xmm2        # 41e160 <caml_absf_mask+0x7a0>
  40c313:	00 
  40c314:	66 0f 56 c2          	orpd   %xmm2,%xmm0
  40c318:	c3                   	retq   
  40c319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040c320 <caml_copysign_float>:
  40c320:	f2 0f 10 0e          	movsd  (%rsi),%xmm1
  40c324:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c328:	66 0f 28 d1          	movapd %xmm1,%xmm2
  40c32c:	66 0f 54 05 3c 1e 01 	andpd  0x11e3c(%rip),%xmm0        # 41e170 <caml_absf_mask+0x7b0>
  40c333:	00 
  40c334:	66 0f 54 15 24 1e 01 	andpd  0x11e24(%rip),%xmm2        # 41e160 <caml_absf_mask+0x7a0>
  40c33b:	00 
  40c33c:	66 0f 56 c2          	orpd   %xmm2,%xmm0
  40c340:	e9 bb f2 ff ff       	jmpq   40b600 <caml_copy_double>
  40c345:	90                   	nop
  40c346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c34d:	00 00 00 

000000000040c350 <caml_neq_float>:
  40c350:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c354:	66 0f 2e 06          	ucomisd (%rsi),%xmm0
  40c358:	7a 02                	jp     40c35c <caml_neq_float+0xc>
  40c35a:	74 0c                	je     40c368 <caml_neq_float+0x18>
  40c35c:	b8 03 00 00 00       	mov    $0x3,%eax
  40c361:	c3                   	retq   
  40c362:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40c368:	b8 01 00 00 00       	mov    $0x1,%eax
  40c36d:	c3                   	retq   
  40c36e:	66 90                	xchg   %ax,%ax

000000000040c370 <caml_float_compare_unboxed>:
  40c370:	31 d2                	xor    %edx,%edx
  40c372:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40c376:	0f 97 c2             	seta   %dl
  40c379:	31 c0                	xor    %eax,%eax
  40c37b:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
  40c37f:	0f 9b c0             	setnp  %al
  40c382:	01 d0                	add    %edx,%eax
  40c384:	31 d2                	xor    %edx,%edx
  40c386:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
  40c38a:	0f 9b c2             	setnp  %dl
  40c38d:	29 d0                	sub    %edx,%eax
  40c38f:	31 d2                	xor    %edx,%edx
  40c391:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
  40c395:	0f 97 c2             	seta   %dl
  40c398:	29 d0                	sub    %edx,%eax
  40c39a:	48 98                	cltq   
  40c39c:	c3                   	retq   
  40c39d:	0f 1f 00             	nopl   (%rax)

000000000040c3a0 <caml_eq_float>:
  40c3a0:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c3a4:	66 0f 2e 06          	ucomisd (%rsi),%xmm0
  40c3a8:	7a 0e                	jp     40c3b8 <caml_eq_float+0x18>
  40c3aa:	b8 03 00 00 00       	mov    $0x3,%eax
  40c3af:	75 07                	jne    40c3b8 <caml_eq_float+0x18>
  40c3b1:	f3 c3                	repz retq 
  40c3b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40c3b8:	b8 01 00 00 00       	mov    $0x1,%eax
  40c3bd:	c3                   	retq   
  40c3be:	66 90                	xchg   %ax,%ax

000000000040c3c0 <caml_le_float>:
  40c3c0:	f2 0f 10 06          	movsd  (%rsi),%xmm0
  40c3c4:	66 0f 2e 07          	ucomisd (%rdi),%xmm0
  40c3c8:	48 19 c0             	sbb    %rax,%rax
  40c3cb:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  40c3cf:	48 83 c0 03          	add    $0x3,%rax
  40c3d3:	c3                   	retq   
  40c3d4:	66 90                	xchg   %ax,%ax
  40c3d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c3dd:	00 00 00 

000000000040c3e0 <caml_lt_float>:
  40c3e0:	f2 0f 10 06          	movsd  (%rsi),%xmm0
  40c3e4:	31 c0                	xor    %eax,%eax
  40c3e6:	66 0f 2e 07          	ucomisd (%rdi),%xmm0
  40c3ea:	0f 97 c0             	seta   %al
  40c3ed:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40c3f2:	c3                   	retq   
  40c3f3:	0f 1f 00             	nopl   (%rax)
  40c3f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c3fd:	00 00 00 

000000000040c400 <caml_ge_float>:
  40c400:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c404:	66 0f 2e 06          	ucomisd (%rsi),%xmm0
  40c408:	48 19 c0             	sbb    %rax,%rax
  40c40b:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  40c40f:	48 83 c0 03          	add    $0x3,%rax
  40c413:	c3                   	retq   
  40c414:	66 90                	xchg   %ax,%ax
  40c416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c41d:	00 00 00 

000000000040c420 <caml_gt_float>:
  40c420:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  40c424:	31 c0                	xor    %eax,%eax
  40c426:	66 0f 2e 06          	ucomisd (%rsi),%xmm0
  40c42a:	0f 97 c0             	seta   %al
  40c42d:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40c432:	c3                   	retq   
  40c433:	0f 1f 00             	nopl   (%rax)
  40c436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c43d:	00 00 00 

000000000040c440 <caml_float_compare>:
  40c440:	f2 0f 10 06          	movsd  (%rsi),%xmm0
  40c444:	31 d2                	xor    %edx,%edx
  40c446:	f2 0f 10 0f          	movsd  (%rdi),%xmm1
  40c44a:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
  40c44e:	0f 97 c2             	seta   %dl
  40c451:	31 c0                	xor    %eax,%eax
  40c453:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
  40c457:	0f 9b c0             	setnp  %al
  40c45a:	01 d0                	add    %edx,%eax
  40c45c:	31 d2                	xor    %edx,%edx
  40c45e:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
  40c462:	0f 97 c2             	seta   %dl
  40c465:	29 d0                	sub    %edx,%eax
  40c467:	31 d2                	xor    %edx,%edx
  40c469:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
  40c46d:	0f 9b c2             	setnp  %dl
  40c470:	29 d0                	sub    %edx,%eax
  40c472:	48 98                	cltq   
  40c474:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40c479:	c3                   	retq   
  40c47a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c480 <caml_classify_float_unboxed>:
  40c480:	66 48 0f 7e c2       	movq   %xmm0,%rdx
  40c485:	b8 05 00 00 00       	mov    $0x5,%eax
  40c48a:	48 01 d2             	add    %rdx,%rdx
  40c48d:	75 09                	jne    40c498 <caml_classify_float_unboxed+0x18>
  40c48f:	f3 c3                	repz retq 
  40c491:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40c498:	48 89 d1             	mov    %rdx,%rcx
  40c49b:	b8 03 00 00 00       	mov    $0x3,%eax
  40c4a0:	48 c1 e9 35          	shr    $0x35,%rcx
  40c4a4:	48 85 c9             	test   %rcx,%rcx
  40c4a7:	74 e6                	je     40c48f <caml_classify_float_unboxed+0xf>
  40c4a9:	48 81 f9 ff 07 00 00 	cmp    $0x7ff,%rcx
  40c4b0:	b8 01 00 00 00       	mov    $0x1,%eax
  40c4b5:	75 d8                	jne    40c48f <caml_classify_float_unboxed+0xf>
  40c4b7:	48 c1 e2 0b          	shl    $0xb,%rdx
  40c4bb:	48 83 fa 01          	cmp    $0x1,%rdx
  40c4bf:	48 19 c0             	sbb    %rax,%rax
  40c4c2:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  40c4c6:	48 83 c0 09          	add    $0x9,%rax
  40c4ca:	c3                   	retq   
  40c4cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040c4d0 <caml_classify_float>:
  40c4d0:	48 8b 17             	mov    (%rdi),%rdx
  40c4d3:	b8 05 00 00 00       	mov    $0x5,%eax
  40c4d8:	48 89 d1             	mov    %rdx,%rcx
  40c4db:	48 01 c9             	add    %rcx,%rcx
  40c4de:	75 08                	jne    40c4e8 <caml_classify_float+0x18>
  40c4e0:	f3 c3                	repz retq 
  40c4e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40c4e8:	48 c1 e9 35          	shr    $0x35,%rcx
  40c4ec:	b8 03 00 00 00       	mov    $0x3,%eax
  40c4f1:	48 85 c9             	test   %rcx,%rcx
  40c4f4:	74 ea                	je     40c4e0 <caml_classify_float+0x10>
  40c4f6:	48 81 f9 ff 07 00 00 	cmp    $0x7ff,%rcx
  40c4fd:	b8 01 00 00 00       	mov    $0x1,%eax
  40c502:	75 dc                	jne    40c4e0 <caml_classify_float+0x10>
  40c504:	48 c1 e2 0c          	shl    $0xc,%rdx
  40c508:	48 83 fa 01          	cmp    $0x1,%rdx
  40c50c:	48 19 c0             	sbb    %rax,%rax
  40c50f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  40c513:	48 83 c0 09          	add    $0x9,%rax
  40c517:	c3                   	retq   
  40c518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40c51f:	00 

000000000040c520 <caml_init_ieee_floats>:
  40c520:	f3 c3                	repz retq 
  40c522:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c529:	00 00 00 
  40c52c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040c530 <caml_string_equal.part.0>:
  40c530:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
  40c534:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
  40c538:	b8 01 00 00 00       	mov    $0x1,%eax
  40c53d:	48 c1 ea 0a          	shr    $0xa,%rdx
  40c541:	48 c1 e9 0a          	shr    $0xa,%rcx
  40c545:	48 39 ca             	cmp    %rcx,%rdx
  40c548:	74 06                	je     40c550 <caml_string_equal.part.0+0x20>
  40c54a:	f3 c3                	repz retq 
  40c54c:	0f 1f 40 00          	nopl   0x0(%rax)
  40c550:	48 85 d2             	test   %rdx,%rdx
  40c553:	74 27                	je     40c57c <caml_string_equal.part.0+0x4c>
  40c555:	48 8b 0e             	mov    (%rsi),%rcx
  40c558:	48 39 0f             	cmp    %rcx,(%rdi)
  40c55b:	75 ed                	jne    40c54a <caml_string_equal.part.0+0x1a>
  40c55d:	48 83 ea 01          	sub    $0x1,%rdx
  40c561:	31 c0                	xor    %eax,%eax
  40c563:	eb 12                	jmp    40c577 <caml_string_equal.part.0+0x47>
  40c565:	0f 1f 00             	nopl   (%rax)
  40c568:	48 8b 4c c7 08       	mov    0x8(%rdi,%rax,8),%rcx
  40c56d:	48 83 c0 01          	add    $0x1,%rax
  40c571:	48 3b 0c c6          	cmp    (%rsi,%rax,8),%rcx
  40c575:	75 11                	jne    40c588 <caml_string_equal.part.0+0x58>
  40c577:	48 39 c2             	cmp    %rax,%rdx
  40c57a:	75 ec                	jne    40c568 <caml_string_equal.part.0+0x38>
  40c57c:	b8 03 00 00 00       	mov    $0x3,%eax
  40c581:	c3                   	retq   
  40c582:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40c588:	b8 01 00 00 00       	mov    $0x1,%eax
  40c58d:	c3                   	retq   
  40c58e:	66 90                	xchg   %ax,%ax

000000000040c590 <caml_string_length>:
  40c590:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
  40c594:	48 c1 ea 0a          	shr    $0xa,%rdx
  40c598:	48 c1 e2 03          	shl    $0x3,%rdx
  40c59c:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
  40c5a0:	48 0f be 54 17 ff    	movsbq -0x1(%rdi,%rdx,1),%rdx
  40c5a6:	48 29 d0             	sub    %rdx,%rax
  40c5a9:	c3                   	retq   
  40c5aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c5b0 <caml_ml_bytes_length>:
  40c5b0:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c5b4:	48 c1 e8 0a          	shr    $0xa,%rax
  40c5b8:	48 c1 e0 03          	shl    $0x3,%rax
  40c5bc:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40c5c0:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c5c6:	48 29 c2             	sub    %rax,%rdx
  40c5c9:	48 8d 44 12 01       	lea    0x1(%rdx,%rdx,1),%rax
  40c5ce:	c3                   	retq   
  40c5cf:	90                   	nop

000000000040c5d0 <caml_ml_string_length>:
  40c5d0:	eb de                	jmp    40c5b0 <caml_ml_bytes_length>
  40c5d2:	0f 1f 40 00          	nopl   0x0(%rax)
  40c5d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c5dd:	00 00 00 

000000000040c5e0 <caml_string_is_c_safe>:
  40c5e0:	53                   	push   %rbx
  40c5e1:	48 89 fb             	mov    %rdi,%rbx
  40c5e4:	e8 67 54 ff ff       	callq  401a50 <strlen@plt>
  40c5e9:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
  40c5ed:	48 c1 ea 0a          	shr    $0xa,%rdx
  40c5f1:	48 c1 e2 03          	shl    $0x3,%rdx
  40c5f5:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
  40c5f9:	48 0f be 54 13 ff    	movsbq -0x1(%rbx,%rdx,1),%rdx
  40c5ff:	5b                   	pop    %rbx
  40c600:	48 29 d1             	sub    %rdx,%rcx
  40c603:	48 39 c1             	cmp    %rax,%rcx
  40c606:	0f 94 c0             	sete   %al
  40c609:	0f b6 c0             	movzbl %al,%eax
  40c60c:	c3                   	retq   
  40c60d:	0f 1f 00             	nopl   (%rax)

000000000040c610 <caml_create_string>:
  40c610:	48 d1 ff             	sar    %rdi
  40c613:	48 b8 f7 ff ff ff ff 	movabs $0x1fffffffffffff7,%rax
  40c61a:	ff ff 01 
  40c61d:	48 39 c7             	cmp    %rax,%rdi
  40c620:	77 05                	ja     40c627 <caml_create_string+0x17>
  40c622:	e9 89 fd 00 00       	jmpq   41c3b0 <caml_alloc_string>
  40c627:	50                   	push   %rax
  40c628:	bf 80 e1 41 00       	mov    $0x41e180,%edi
  40c62d:	e8 ae e0 00 00       	callq  41a6e0 <caml_invalid_argument>
  40c632:	0f 1f 40 00          	nopl   0x0(%rax)
  40c636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c63d:	00 00 00 

000000000040c640 <caml_create_bytes>:
  40c640:	48 d1 ff             	sar    %rdi
  40c643:	48 b8 f7 ff ff ff ff 	movabs $0x1fffffffffffff7,%rax
  40c64a:	ff ff 01 
  40c64d:	48 39 c7             	cmp    %rax,%rdi
  40c650:	77 05                	ja     40c657 <caml_create_bytes+0x17>
  40c652:	e9 59 fd 00 00       	jmpq   41c3b0 <caml_alloc_string>
  40c657:	50                   	push   %rax
  40c658:	bf 8e e1 41 00       	mov    $0x41e18e,%edi
  40c65d:	e8 7e e0 00 00       	callq  41a6e0 <caml_invalid_argument>
  40c662:	0f 1f 40 00          	nopl   0x0(%rax)
  40c666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c66d:	00 00 00 

000000000040c670 <caml_string_get>:
  40c670:	48 83 ec 08          	sub    $0x8,%rsp
  40c674:	48 d1 fe             	sar    %rsi
  40c677:	78 2c                	js     40c6a5 <caml_string_get+0x35>
  40c679:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c67d:	48 c1 e8 0a          	shr    $0xa,%rax
  40c681:	48 c1 e0 03          	shl    $0x3,%rax
  40c685:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40c689:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c68f:	48 29 c2             	sub    %rax,%rdx
  40c692:	48 39 d6             	cmp    %rdx,%rsi
  40c695:	73 0e                	jae    40c6a5 <caml_string_get+0x35>
  40c697:	0f b6 04 37          	movzbl (%rdi,%rsi,1),%eax
  40c69b:	48 83 c4 08          	add    $0x8,%rsp
  40c69f:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40c6a4:	c3                   	retq   
  40c6a5:	e8 d6 e0 00 00       	callq  41a780 <caml_array_bound_error>
  40c6aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c6b0 <caml_bytes_get>:
  40c6b0:	eb be                	jmp    40c670 <caml_string_get>
  40c6b2:	0f 1f 40 00          	nopl   0x0(%rax)
  40c6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c6bd:	00 00 00 

000000000040c6c0 <caml_bytes_set>:
  40c6c0:	48 83 ec 08          	sub    $0x8,%rsp
  40c6c4:	48 d1 fe             	sar    %rsi
  40c6c7:	78 2e                	js     40c6f7 <caml_bytes_set+0x37>
  40c6c9:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c6cd:	48 c1 e8 0a          	shr    $0xa,%rax
  40c6d1:	48 c1 e0 03          	shl    $0x3,%rax
  40c6d5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  40c6d9:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c6df:	48 29 c1             	sub    %rax,%rcx
  40c6e2:	48 39 ce             	cmp    %rcx,%rsi
  40c6e5:	73 10                	jae    40c6f7 <caml_bytes_set+0x37>
  40c6e7:	48 d1 fa             	sar    %rdx
  40c6ea:	b8 01 00 00 00       	mov    $0x1,%eax
  40c6ef:	88 14 37             	mov    %dl,(%rdi,%rsi,1)
  40c6f2:	48 83 c4 08          	add    $0x8,%rsp
  40c6f6:	c3                   	retq   
  40c6f7:	e8 84 e0 00 00       	callq  41a780 <caml_array_bound_error>
  40c6fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040c700 <caml_string_set>:
  40c700:	eb be                	jmp    40c6c0 <caml_bytes_set>
  40c702:	0f 1f 40 00          	nopl   0x0(%rax)
  40c706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c70d:	00 00 00 

000000000040c710 <caml_string_get16>:
  40c710:	48 83 ec 08          	sub    $0x8,%rsp
  40c714:	48 d1 fe             	sar    %rsi
  40c717:	78 3d                	js     40c756 <caml_string_get16+0x46>
  40c719:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c71d:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
  40c721:	48 c1 e8 0a          	shr    $0xa,%rax
  40c725:	48 c1 e0 03          	shl    $0x3,%rax
  40c729:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40c72d:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c733:	48 29 c2             	sub    %rax,%rdx
  40c736:	48 39 d1             	cmp    %rdx,%rcx
  40c739:	73 1b                	jae    40c756 <caml_string_get16+0x46>
  40c73b:	48 01 f7             	add    %rsi,%rdi
  40c73e:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
  40c742:	0f b6 17             	movzbl (%rdi),%edx
  40c745:	48 83 c4 08          	add    $0x8,%rsp
  40c749:	c1 e0 08             	shl    $0x8,%eax
  40c74c:	09 d0                	or     %edx,%eax
  40c74e:	48 98                	cltq   
  40c750:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40c755:	c3                   	retq   
  40c756:	e8 25 e0 00 00       	callq  41a780 <caml_array_bound_error>
  40c75b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040c760 <caml_string_get32>:
  40c760:	48 83 ec 08          	sub    $0x8,%rsp
  40c764:	48 d1 fe             	sar    %rsi
  40c767:	78 4c                	js     40c7b5 <caml_string_get32+0x55>
  40c769:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c76d:	48 8d 4e 03          	lea    0x3(%rsi),%rcx
  40c771:	48 c1 e8 0a          	shr    $0xa,%rax
  40c775:	48 c1 e0 03          	shl    $0x3,%rax
  40c779:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40c77d:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c783:	48 29 c2             	sub    %rax,%rdx
  40c786:	48 39 d1             	cmp    %rdx,%rcx
  40c789:	73 2a                	jae    40c7b5 <caml_string_get32+0x55>
  40c78b:	48 01 fe             	add    %rdi,%rsi
  40c78e:	0f b6 7e 03          	movzbl 0x3(%rsi),%edi
  40c792:	0f b6 46 02          	movzbl 0x2(%rsi),%eax
  40c796:	c1 e7 18             	shl    $0x18,%edi
  40c799:	c1 e0 10             	shl    $0x10,%eax
  40c79c:	09 c7                	or     %eax,%edi
  40c79e:	0f b6 06             	movzbl (%rsi),%eax
  40c7a1:	09 c7                	or     %eax,%edi
  40c7a3:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
  40c7a7:	48 83 c4 08          	add    $0x8,%rsp
  40c7ab:	c1 e0 08             	shl    $0x8,%eax
  40c7ae:	09 c7                	or     %eax,%edi
  40c7b0:	e9 3b de ff ff       	jmpq   40a5f0 <caml_copy_int32>
  40c7b5:	e8 c6 df 00 00       	callq  41a780 <caml_array_bound_error>
  40c7ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c7c0 <caml_string_get64>:
  40c7c0:	48 83 ec 08          	sub    $0x8,%rsp
  40c7c4:	48 d1 fe             	sar    %rsi
  40c7c7:	78 7e                	js     40c847 <caml_string_get64+0x87>
  40c7c9:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c7cd:	48 8d 4e 07          	lea    0x7(%rsi),%rcx
  40c7d1:	48 c1 e8 0a          	shr    $0xa,%rax
  40c7d5:	48 c1 e0 03          	shl    $0x3,%rax
  40c7d9:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40c7dd:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c7e3:	48 29 c2             	sub    %rax,%rdx
  40c7e6:	48 39 d1             	cmp    %rdx,%rcx
  40c7e9:	73 5c                	jae    40c847 <caml_string_get64+0x87>
  40c7eb:	48 01 fe             	add    %rdi,%rsi
  40c7ee:	0f b6 7e 07          	movzbl 0x7(%rsi),%edi
  40c7f2:	0f b6 46 06          	movzbl 0x6(%rsi),%eax
  40c7f6:	48 c1 e7 38          	shl    $0x38,%rdi
  40c7fa:	48 c1 e0 30          	shl    $0x30,%rax
  40c7fe:	48 09 c7             	or     %rax,%rdi
  40c801:	0f b6 06             	movzbl (%rsi),%eax
  40c804:	48 09 c7             	or     %rax,%rdi
  40c807:	0f b6 46 05          	movzbl 0x5(%rsi),%eax
  40c80b:	48 c1 e0 28          	shl    $0x28,%rax
  40c80f:	48 09 c7             	or     %rax,%rdi
  40c812:	0f b6 46 04          	movzbl 0x4(%rsi),%eax
  40c816:	48 c1 e0 20          	shl    $0x20,%rax
  40c81a:	48 09 c7             	or     %rax,%rdi
  40c81d:	0f b6 46 03          	movzbl 0x3(%rsi),%eax
  40c821:	48 c1 e0 18          	shl    $0x18,%rax
  40c825:	48 09 c7             	or     %rax,%rdi
  40c828:	0f b6 46 02          	movzbl 0x2(%rsi),%eax
  40c82c:	48 c1 e0 10          	shl    $0x10,%rax
  40c830:	48 09 c7             	or     %rax,%rdi
  40c833:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
  40c837:	48 83 c4 08          	add    $0x8,%rsp
  40c83b:	48 c1 e0 08          	shl    $0x8,%rax
  40c83f:	48 09 c7             	or     %rax,%rdi
  40c842:	e9 69 e2 ff ff       	jmpq   40aab0 <caml_copy_int64>
  40c847:	e8 34 df 00 00       	callq  41a780 <caml_array_bound_error>
  40c84c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040c850 <caml_string_set16>:
  40c850:	48 83 ec 08          	sub    $0x8,%rsp
  40c854:	48 d1 fe             	sar    %rsi
  40c857:	78 3e                	js     40c897 <caml_string_set16+0x47>
  40c859:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c85d:	4c 8d 46 01          	lea    0x1(%rsi),%r8
  40c861:	48 c1 e8 0a          	shr    $0xa,%rax
  40c865:	48 c1 e0 03          	shl    $0x3,%rax
  40c869:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  40c86d:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c873:	48 29 c1             	sub    %rax,%rcx
  40c876:	49 39 c8             	cmp    %rcx,%r8
  40c879:	73 1c                	jae    40c897 <caml_string_set16+0x47>
  40c87b:	48 89 d0             	mov    %rdx,%rax
  40c87e:	48 01 f7             	add    %rsi,%rdi
  40c881:	48 c1 fa 09          	sar    $0x9,%rdx
  40c885:	48 d1 f8             	sar    %rax
  40c888:	88 57 01             	mov    %dl,0x1(%rdi)
  40c88b:	88 07                	mov    %al,(%rdi)
  40c88d:	b8 01 00 00 00       	mov    $0x1,%eax
  40c892:	48 83 c4 08          	add    $0x8,%rsp
  40c896:	c3                   	retq   
  40c897:	e8 e4 de 00 00       	callq  41a780 <caml_array_bound_error>
  40c89c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040c8a0 <caml_string_set32>:
  40c8a0:	48 83 ec 08          	sub    $0x8,%rsp
  40c8a4:	48 d1 fe             	sar    %rsi
  40c8a7:	78 50                	js     40c8f9 <caml_string_set32+0x59>
  40c8a9:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c8ad:	4c 8d 46 03          	lea    0x3(%rsi),%r8
  40c8b1:	48 c1 e8 0a          	shr    $0xa,%rax
  40c8b5:	48 c1 e0 03          	shl    $0x3,%rax
  40c8b9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  40c8bd:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c8c3:	48 29 c1             	sub    %rax,%rcx
  40c8c6:	49 39 c8             	cmp    %rcx,%r8
  40c8c9:	73 2e                	jae    40c8f9 <caml_string_set32+0x59>
  40c8cb:	48 63 42 08          	movslq 0x8(%rdx),%rax
  40c8cf:	48 01 fe             	add    %rdi,%rsi
  40c8d2:	48 89 c2             	mov    %rax,%rdx
  40c8d5:	88 06                	mov    %al,(%rsi)
  40c8d7:	48 c1 fa 08          	sar    $0x8,%rdx
  40c8db:	88 56 01             	mov    %dl,0x1(%rsi)
  40c8de:	48 89 c2             	mov    %rax,%rdx
  40c8e1:	48 c1 f8 18          	sar    $0x18,%rax
  40c8e5:	48 c1 fa 10          	sar    $0x10,%rdx
  40c8e9:	88 46 03             	mov    %al,0x3(%rsi)
  40c8ec:	b8 01 00 00 00       	mov    $0x1,%eax
  40c8f1:	88 56 02             	mov    %dl,0x2(%rsi)
  40c8f4:	48 83 c4 08          	add    $0x8,%rsp
  40c8f8:	c3                   	retq   
  40c8f9:	e8 82 de 00 00       	callq  41a780 <caml_array_bound_error>
  40c8fe:	66 90                	xchg   %ax,%ax

000000000040c900 <caml_string_set64>:
  40c900:	48 83 ec 08          	sub    $0x8,%rsp
  40c904:	48 d1 fe             	sar    %rsi
  40c907:	78 78                	js     40c981 <caml_string_set64+0x81>
  40c909:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40c90d:	4c 8d 46 07          	lea    0x7(%rsi),%r8
  40c911:	48 c1 e8 0a          	shr    $0xa,%rax
  40c915:	48 c1 e0 03          	shl    $0x3,%rax
  40c919:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
  40c91d:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40c923:	48 29 c1             	sub    %rax,%rcx
  40c926:	49 39 c8             	cmp    %rcx,%r8
  40c929:	73 56                	jae    40c981 <caml_string_set64+0x81>
  40c92b:	48 8b 42 08          	mov    0x8(%rdx),%rax
  40c92f:	48 01 fe             	add    %rdi,%rsi
  40c932:	48 89 c2             	mov    %rax,%rdx
  40c935:	88 06                	mov    %al,(%rsi)
  40c937:	48 c1 fa 08          	sar    $0x8,%rdx
  40c93b:	88 56 01             	mov    %dl,0x1(%rsi)
  40c93e:	48 89 c2             	mov    %rax,%rdx
  40c941:	48 c1 fa 10          	sar    $0x10,%rdx
  40c945:	88 56 02             	mov    %dl,0x2(%rsi)
  40c948:	48 89 c2             	mov    %rax,%rdx
  40c94b:	48 c1 fa 18          	sar    $0x18,%rdx
  40c94f:	88 56 03             	mov    %dl,0x3(%rsi)
  40c952:	48 89 c2             	mov    %rax,%rdx
  40c955:	48 c1 fa 20          	sar    $0x20,%rdx
  40c959:	88 56 04             	mov    %dl,0x4(%rsi)
  40c95c:	48 89 c2             	mov    %rax,%rdx
  40c95f:	48 c1 fa 28          	sar    $0x28,%rdx
  40c963:	88 56 05             	mov    %dl,0x5(%rsi)
  40c966:	48 89 c2             	mov    %rax,%rdx
  40c969:	48 c1 e8 38          	shr    $0x38,%rax
  40c96d:	48 c1 fa 30          	sar    $0x30,%rdx
  40c971:	88 46 07             	mov    %al,0x7(%rsi)
  40c974:	b8 01 00 00 00       	mov    $0x1,%eax
  40c979:	88 56 06             	mov    %dl,0x6(%rsi)
  40c97c:	48 83 c4 08          	add    $0x8,%rsp
  40c980:	c3                   	retq   
  40c981:	e8 fa dd 00 00       	callq  41a780 <caml_array_bound_error>
  40c986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c98d:	00 00 00 

000000000040c990 <caml_string_equal>:
  40c990:	48 39 f7             	cmp    %rsi,%rdi
  40c993:	74 0b                	je     40c9a0 <caml_string_equal+0x10>
  40c995:	e9 96 fb ff ff       	jmpq   40c530 <caml_string_equal.part.0>
  40c99a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40c9a0:	b8 03 00 00 00       	mov    $0x3,%eax
  40c9a5:	c3                   	retq   
  40c9a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c9ad:	00 00 00 

000000000040c9b0 <caml_bytes_equal>:
  40c9b0:	48 39 f7             	cmp    %rsi,%rdi
  40c9b3:	74 0b                	je     40c9c0 <caml_bytes_equal+0x10>
  40c9b5:	e9 76 fb ff ff       	jmpq   40c530 <caml_string_equal.part.0>
  40c9ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40c9c0:	b8 03 00 00 00       	mov    $0x3,%eax
  40c9c5:	c3                   	retq   
  40c9c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c9cd:	00 00 00 

000000000040c9d0 <caml_bytes_notequal>:
  40c9d0:	48 39 f7             	cmp    %rsi,%rdi
  40c9d3:	74 1b                	je     40c9f0 <caml_bytes_notequal+0x20>
  40c9d5:	e8 56 fb ff ff       	callq  40c530 <caml_string_equal.part.0>
  40c9da:	ba 04 00 00 00       	mov    $0x4,%edx
  40c9df:	48 29 c2             	sub    %rax,%rdx
  40c9e2:	48 89 d0             	mov    %rdx,%rax
  40c9e5:	c3                   	retq   
  40c9e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c9ed:	00 00 00 
  40c9f0:	b8 01 00 00 00       	mov    $0x1,%eax
  40c9f5:	c3                   	retq   
  40c9f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c9fd:	00 00 00 

000000000040ca00 <caml_string_notequal>:
  40ca00:	eb ce                	jmp    40c9d0 <caml_bytes_notequal>
  40ca02:	0f 1f 40 00          	nopl   0x0(%rax)
  40ca06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ca0d:	00 00 00 

000000000040ca10 <caml_string_compare>:
  40ca10:	48 39 f7             	cmp    %rsi,%rdi
  40ca13:	74 5b                	je     40ca70 <caml_string_compare+0x60>
  40ca15:	55                   	push   %rbp
  40ca16:	53                   	push   %rbx
  40ca17:	48 83 ec 08          	sub    $0x8,%rsp
  40ca1b:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  40ca1f:	48 c1 e8 0a          	shr    $0xa,%rax
  40ca23:	48 c1 e0 03          	shl    $0x3,%rax
  40ca27:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
  40ca2b:	48 0f be 44 07 ff    	movsbq -0x1(%rdi,%rax,1),%rax
  40ca31:	48 29 c3             	sub    %rax,%rbx
  40ca34:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
  40ca38:	48 89 da             	mov    %rbx,%rdx
  40ca3b:	48 c1 e8 0a          	shr    $0xa,%rax
  40ca3f:	48 c1 e0 03          	shl    $0x3,%rax
  40ca43:	48 8d 68 ff          	lea    -0x1(%rax),%rbp
  40ca47:	48 0f be 44 06 ff    	movsbq -0x1(%rsi,%rax,1),%rax
  40ca4d:	48 29 c5             	sub    %rax,%rbp
  40ca50:	48 39 dd             	cmp    %rbx,%rbp
  40ca53:	48 0f 46 d5          	cmovbe %rbp,%rdx
  40ca57:	e8 34 51 ff ff       	callq  401b90 <memcmp@plt>
  40ca5c:	85 c0                	test   %eax,%eax
  40ca5e:	78 40                	js     40caa0 <caml_string_compare+0x90>
  40ca60:	b8 03 00 00 00       	mov    $0x3,%eax
  40ca65:	74 19                	je     40ca80 <caml_string_compare+0x70>
  40ca67:	48 83 c4 08          	add    $0x8,%rsp
  40ca6b:	5b                   	pop    %rbx
  40ca6c:	5d                   	pop    %rbp
  40ca6d:	c3                   	retq   
  40ca6e:	66 90                	xchg   %ax,%ax
  40ca70:	b8 01 00 00 00       	mov    $0x1,%eax
  40ca75:	c3                   	retq   
  40ca76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ca7d:	00 00 00 
  40ca80:	48 39 dd             	cmp    %rbx,%rbp
  40ca83:	77 1b                	ja     40caa0 <caml_string_compare+0x90>
  40ca85:	48 19 c0             	sbb    %rax,%rax
  40ca88:	48 83 c4 08          	add    $0x8,%rsp
  40ca8c:	83 e0 02             	and    $0x2,%eax
  40ca8f:	48 83 c0 01          	add    $0x1,%rax
  40ca93:	5b                   	pop    %rbx
  40ca94:	5d                   	pop    %rbp
  40ca95:	c3                   	retq   
  40ca96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ca9d:	00 00 00 
  40caa0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  40caa7:	eb be                	jmp    40ca67 <caml_string_compare+0x57>
  40caa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040cab0 <caml_bytes_compare>:
  40cab0:	e9 5b ff ff ff       	jmpq   40ca10 <caml_string_compare>
  40cab5:	90                   	nop
  40cab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cabd:	00 00 00 

000000000040cac0 <caml_bytes_lessthan>:
  40cac0:	48 83 ec 08          	sub    $0x8,%rsp
  40cac4:	e8 47 ff ff ff       	callq  40ca10 <caml_string_compare>
  40cac9:	48 85 c0             	test   %rax,%rax
  40cacc:	0f 9e c0             	setle  %al
  40cacf:	48 83 c4 08          	add    $0x8,%rsp
  40cad3:	0f b6 c0             	movzbl %al,%eax
  40cad6:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40cadb:	c3                   	retq   
  40cadc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040cae0 <caml_string_lessthan>:
  40cae0:	eb de                	jmp    40cac0 <caml_bytes_lessthan>
  40cae2:	0f 1f 40 00          	nopl   0x0(%rax)
  40cae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40caed:	00 00 00 

000000000040caf0 <caml_bytes_lessequal>:
  40caf0:	48 83 ec 08          	sub    $0x8,%rsp
  40caf4:	e8 17 ff ff ff       	callq  40ca10 <caml_string_compare>
  40caf9:	48 83 f8 02          	cmp    $0x2,%rax
  40cafd:	0f 9c c0             	setl   %al
  40cb00:	48 83 c4 08          	add    $0x8,%rsp
  40cb04:	0f b6 c0             	movzbl %al,%eax
  40cb07:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40cb0c:	c3                   	retq   
  40cb0d:	0f 1f 00             	nopl   (%rax)

000000000040cb10 <caml_string_lessequal>:
  40cb10:	eb de                	jmp    40caf0 <caml_bytes_lessequal>
  40cb12:	0f 1f 40 00          	nopl   0x0(%rax)
  40cb16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cb1d:	00 00 00 

000000000040cb20 <caml_bytes_greaterthan>:
  40cb20:	48 83 ec 08          	sub    $0x8,%rsp
  40cb24:	e8 e7 fe ff ff       	callq  40ca10 <caml_string_compare>
  40cb29:	48 83 f8 01          	cmp    $0x1,%rax
  40cb2d:	0f 9f c0             	setg   %al
  40cb30:	48 83 c4 08          	add    $0x8,%rsp
  40cb34:	0f b6 c0             	movzbl %al,%eax
  40cb37:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40cb3c:	c3                   	retq   
  40cb3d:	0f 1f 00             	nopl   (%rax)

000000000040cb40 <caml_string_greaterthan>:
  40cb40:	eb de                	jmp    40cb20 <caml_bytes_greaterthan>
  40cb42:	0f 1f 40 00          	nopl   0x0(%rax)
  40cb46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cb4d:	00 00 00 

000000000040cb50 <caml_bytes_greaterequal>:
  40cb50:	48 83 ec 08          	sub    $0x8,%rsp
  40cb54:	e8 b7 fe ff ff       	callq  40ca10 <caml_string_compare>
  40cb59:	48 85 c0             	test   %rax,%rax
  40cb5c:	0f 9f c0             	setg   %al
  40cb5f:	48 83 c4 08          	add    $0x8,%rsp
  40cb63:	0f b6 c0             	movzbl %al,%eax
  40cb66:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40cb6b:	c3                   	retq   
  40cb6c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040cb70 <caml_string_greaterequal>:
  40cb70:	eb de                	jmp    40cb50 <caml_bytes_greaterequal>
  40cb72:	0f 1f 40 00          	nopl   0x0(%rax)
  40cb76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cb7d:	00 00 00 

000000000040cb80 <caml_blit_string>:
  40cb80:	48 89 d0             	mov    %rdx,%rax
  40cb83:	48 d1 f9             	sar    %rcx
  40cb86:	48 d1 fe             	sar    %rsi
  40cb89:	4c 89 c2             	mov    %r8,%rdx
  40cb8c:	48 01 fe             	add    %rdi,%rsi
  40cb8f:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
  40cb93:	48 83 ec 08          	sub    $0x8,%rsp
  40cb97:	48 d1 fa             	sar    %rdx
  40cb9a:	e8 91 51 ff ff       	callq  401d30 <memmove@plt>
  40cb9f:	b8 01 00 00 00       	mov    $0x1,%eax
  40cba4:	48 83 c4 08          	add    $0x8,%rsp
  40cba8:	c3                   	retq   
  40cba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040cbb0 <caml_blit_bytes>:
  40cbb0:	eb ce                	jmp    40cb80 <caml_blit_string>
  40cbb2:	0f 1f 40 00          	nopl   0x0(%rax)
  40cbb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cbbd:	00 00 00 

000000000040cbc0 <caml_fill_string>:
  40cbc0:	48 d1 f9             	sar    %rcx
  40cbc3:	48 d1 fe             	sar    %rsi
  40cbc6:	48 83 ec 08          	sub    $0x8,%rsp
  40cbca:	48 01 f7             	add    %rsi,%rdi
  40cbcd:	48 d1 fa             	sar    %rdx
  40cbd0:	89 ce                	mov    %ecx,%esi
  40cbd2:	e8 e9 4e ff ff       	callq  401ac0 <memset@plt>
  40cbd7:	b8 01 00 00 00       	mov    $0x1,%eax
  40cbdc:	48 83 c4 08          	add    $0x8,%rsp
  40cbe0:	c3                   	retq   
  40cbe1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40cbe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cbed:	00 00 00 

000000000040cbf0 <caml_fill_bytes>:
  40cbf0:	eb ce                	jmp    40cbc0 <caml_fill_string>
  40cbf2:	0f 1f 40 00          	nopl   0x0(%rax)
  40cbf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cbfd:	00 00 00 

000000000040cc00 <caml_bitvect_test>:
  40cc00:	48 89 f1             	mov    %rsi,%rcx
  40cc03:	b8 01 00 00 00       	mov    $0x1,%eax
  40cc08:	48 c1 fe 04          	sar    $0x4,%rsi
  40cc0c:	48 d1 f9             	sar    %rcx
  40cc0f:	83 e1 07             	and    $0x7,%ecx
  40cc12:	d3 e0                	shl    %cl,%eax
  40cc14:	22 04 3e             	and    (%rsi,%rdi,1),%al
  40cc17:	0f b6 c0             	movzbl %al,%eax
  40cc1a:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40cc1f:	c3                   	retq   

000000000040cc20 <caml_alloc_sprintf>:
  40cc20:	41 55                	push   %r13
  40cc22:	41 54                	push   %r12
  40cc24:	49 89 fc             	mov    %rdi,%r12
  40cc27:	55                   	push   %rbp
  40cc28:	53                   	push   %rbx
  40cc29:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
  40cc30:	84 c0                	test   %al,%al
  40cc32:	48 89 74 24 78       	mov    %rsi,0x78(%rsp)
  40cc37:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
  40cc3e:	00 
  40cc3f:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
  40cc46:	00 
  40cc47:	4c 89 84 24 90 00 00 	mov    %r8,0x90(%rsp)
  40cc4e:	00 
  40cc4f:	4c 89 8c 24 98 00 00 	mov    %r9,0x98(%rsp)
  40cc56:	00 
  40cc57:	74 40                	je     40cc99 <caml_alloc_sprintf+0x79>
  40cc59:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
  40cc60:	00 
  40cc61:	0f 29 8c 24 b0 00 00 	movaps %xmm1,0xb0(%rsp)
  40cc68:	00 
  40cc69:	0f 29 94 24 c0 00 00 	movaps %xmm2,0xc0(%rsp)
  40cc70:	00 
  40cc71:	0f 29 9c 24 d0 00 00 	movaps %xmm3,0xd0(%rsp)
  40cc78:	00 
  40cc79:	0f 29 a4 24 e0 00 00 	movaps %xmm4,0xe0(%rsp)
  40cc80:	00 
  40cc81:	0f 29 ac 24 f0 00 00 	movaps %xmm5,0xf0(%rsp)
  40cc88:	00 
  40cc89:	0f 29 b4 24 00 01 00 	movaps %xmm6,0x100(%rsp)
  40cc90:	00 
  40cc91:	0f 29 bc 24 10 01 00 	movaps %xmm7,0x110(%rsp)
  40cc98:	00 
  40cc99:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40cca0:	00 00 
  40cca2:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  40cca7:	31 c0                	xor    %eax,%eax
  40cca9:	48 8d 84 24 50 01 00 	lea    0x150(%rsp),%rax
  40ccb0:	00 
  40ccb1:	4c 8d 4c 24 08       	lea    0x8(%rsp),%r9
  40ccb6:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  40ccbb:	4d 89 e0             	mov    %r12,%r8
  40ccbe:	b9 40 00 00 00       	mov    $0x40,%ecx
  40ccc3:	ba 01 00 00 00       	mov    $0x1,%edx
  40ccc8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  40cccd:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
  40ccd2:	be 40 00 00 00       	mov    $0x40,%esi
  40ccd7:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
  40ccde:	00 
  40ccdf:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
  40cce6:	00 
  40cce7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40ccec:	e8 ef 4f ff ff       	callq  401ce0 <__vsnprintf_chk@plt>
  40ccf1:	4c 63 e8             	movslq %eax,%r13
  40ccf4:	4c 89 ef             	mov    %r13,%rdi
  40ccf7:	e8 b4 f6 00 00       	callq  41c3b0 <caml_alloc_string>
  40ccfc:	41 83 fd 3f          	cmp    $0x3f,%r13d
  40cd00:	48 89 c5             	mov    %rax,%rbp
  40cd03:	76 6b                	jbe    40cd70 <caml_alloc_sprintf+0x150>
  40cd05:	48 8d 84 24 50 01 00 	lea    0x150(%rsp),%rax
  40cd0c:	00 
  40cd0d:	41 8d 75 01          	lea    0x1(%r13),%esi
  40cd11:	4c 8d 4c 24 08       	lea    0x8(%rsp),%r9
  40cd16:	4d 89 e0             	mov    %r12,%r8
  40cd19:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  40cd20:	ba 01 00 00 00       	mov    $0x1,%edx
  40cd25:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  40cd2a:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
  40cd2f:	48 63 f6             	movslq %esi,%rsi
  40cd32:	48 89 ef             	mov    %rbp,%rdi
  40cd35:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
  40cd3c:	00 
  40cd3d:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
  40cd44:	00 
  40cd45:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40cd4a:	e8 91 4f ff ff       	callq  401ce0 <__vsnprintf_chk@plt>
  40cd4f:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  40cd54:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40cd5b:	00 00 
  40cd5d:	48 89 e8             	mov    %rbp,%rax
  40cd60:	75 20                	jne    40cd82 <caml_alloc_sprintf+0x162>
  40cd62:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
  40cd69:	5b                   	pop    %rbx
  40cd6a:	5d                   	pop    %rbp
  40cd6b:	41 5c                	pop    %r12
  40cd6d:	41 5d                	pop    %r13
  40cd6f:	c3                   	retq   
  40cd70:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  40cd75:	4c 89 ea             	mov    %r13,%rdx
  40cd78:	48 89 c7             	mov    %rax,%rdi
  40cd7b:	e8 90 4e ff ff       	callq  401c10 <memcpy@plt>
  40cd80:	eb cd                	jmp    40cd4f <caml_alloc_sprintf+0x12f>
  40cd82:	e8 e9 4c ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40cd87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40cd8e:	00 00 

000000000040cd90 <compare_channel>:
  40cd90:	48 8b 46 08          	mov    0x8(%rsi),%rax
  40cd94:	48 39 47 08          	cmp    %rax,0x8(%rdi)
  40cd98:	74 06                	je     40cda0 <compare_channel+0x10>
  40cd9a:	19 c0                	sbb    %eax,%eax
  40cd9c:	83 c8 01             	or     $0x1,%eax
  40cd9f:	c3                   	retq   
  40cda0:	31 c0                	xor    %eax,%eax
  40cda2:	c3                   	retq   
  40cda3:	0f 1f 00             	nopl   (%rax)
  40cda6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cdad:	00 00 00 

000000000040cdb0 <hash_channel>:
  40cdb0:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40cdb4:	c3                   	retq   
  40cdb5:	90                   	nop
  40cdb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cdbd:	00 00 00 

000000000040cdc0 <unlink_channel.isra.0.part.1>:
  40cdc0:	48 8b 05 99 19 22 00 	mov    0x221999(%rip),%rax        # 62e760 <caml_all_opened_channels>
  40cdc7:	48 8b 40 30          	mov    0x30(%rax),%rax
  40cdcb:	48 85 c0             	test   %rax,%rax
  40cdce:	48 89 05 8b 19 22 00 	mov    %rax,0x22198b(%rip)        # 62e760 <caml_all_opened_channels>
  40cdd5:	74 08                	je     40cddf <unlink_channel.isra.0.part.1+0x1f>
  40cdd7:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
  40cdde:	00 
  40cddf:	f3 c3                	repz retq 
  40cde1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40cde6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cded:	00 00 00 

000000000040cdf0 <caml_finalize_channel>:
  40cdf0:	53                   	push   %rbx
  40cdf1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40cdf5:	8b 43 48             	mov    0x48(%rbx),%eax
  40cdf8:	83 e8 01             	sub    $0x1,%eax
  40cdfb:	85 c0                	test   %eax,%eax
  40cdfd:	89 43 48             	mov    %eax,0x48(%rbx)
  40ce00:	7e 06                	jle    40ce08 <caml_finalize_channel+0x18>
  40ce02:	5b                   	pop    %rbx
  40ce03:	c3                   	retq   
  40ce04:	0f 1f 40 00          	nopl   0x0(%rax)
  40ce08:	48 8b 05 71 19 22 00 	mov    0x221971(%rip),%rax        # 62e780 <caml_channel_mutex_free>
  40ce0f:	48 85 c0             	test   %rax,%rax
  40ce12:	74 05                	je     40ce19 <caml_finalize_channel+0x29>
  40ce14:	48 89 df             	mov    %rbx,%rdi
  40ce17:	ff d0                	callq  *%rax
  40ce19:	83 3b ff             	cmpl   $0xffffffff,(%rbx)
  40ce1c:	74 32                	je     40ce50 <caml_finalize_channel+0x60>
  40ce1e:	48 83 bb 50 00 01 00 	cmpq   $0x0,0x10050(%rbx)
  40ce25:	00 
  40ce26:	74 28                	je     40ce50 <caml_finalize_channel+0x60>
  40ce28:	e8 f3 f2 00 00       	callq  41c120 <caml_runtime_warnings_active>
  40ce2d:	85 c0                	test   %eax,%eax
  40ce2f:	74 1f                	je     40ce50 <caml_finalize_channel+0x60>
  40ce31:	48 8b 8b 50 00 01 00 	mov    0x10050(%rbx),%rcx
  40ce38:	48 8b 3d c1 fa 21 00 	mov    0x21fac1(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  40ce3f:	ba a0 e1 41 00       	mov    $0x41e1a0,%edx
  40ce44:	be 01 00 00 00       	mov    $0x1,%esi
  40ce49:	31 c0                	xor    %eax,%eax
  40ce4b:	e8 b0 4f ff ff       	callq  401e00 <__fprintf_chk@plt>
  40ce50:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
  40ce55:	74 39                	je     40ce90 <caml_finalize_channel+0xa0>
  40ce57:	48 8b 43 38          	mov    0x38(%rbx),%rax
  40ce5b:	48 85 c0             	test   %rax,%rax
  40ce5e:	74 78                	je     40ced8 <caml_finalize_channel+0xe8>
  40ce60:	48 8b 53 30          	mov    0x30(%rbx),%rdx
  40ce64:	48 89 50 30          	mov    %rdx,0x30(%rax)
  40ce68:	48 8b 43 30          	mov    0x30(%rbx),%rax
  40ce6c:	48 85 c0             	test   %rax,%rax
  40ce6f:	74 08                	je     40ce79 <caml_finalize_channel+0x89>
  40ce71:	48 8b 53 38          	mov    0x38(%rbx),%rdx
  40ce75:	48 89 50 38          	mov    %rdx,0x38(%rax)
  40ce79:	48 8b bb 50 00 01 00 	mov    0x10050(%rbx),%rdi
  40ce80:	e8 6b c9 ff ff       	callq  4097f0 <caml_stat_free>
  40ce85:	48 89 df             	mov    %rbx,%rdi
  40ce88:	5b                   	pop    %rbx
  40ce89:	e9 62 c9 ff ff       	jmpq   4097f0 <caml_stat_free>
  40ce8e:	66 90                	xchg   %ax,%ax
  40ce90:	48 8d 43 50          	lea    0x50(%rbx),%rax
  40ce94:	48 39 43 18          	cmp    %rax,0x18(%rbx)
  40ce98:	74 bd                	je     40ce57 <caml_finalize_channel+0x67>
  40ce9a:	48 83 bb 50 00 01 00 	cmpq   $0x0,0x10050(%rbx)
  40cea1:	00 
  40cea2:	0f 84 5a ff ff ff    	je     40ce02 <caml_finalize_channel+0x12>
  40cea8:	e8 73 f2 00 00       	callq  41c120 <caml_runtime_warnings_active>
  40cead:	85 c0                	test   %eax,%eax
  40ceaf:	0f 84 4d ff ff ff    	je     40ce02 <caml_finalize_channel+0x12>
  40ceb5:	5b                   	pop    %rbx
  40ceb6:	48 8b 0d 43 fa 21 00 	mov    0x21fa43(%rip),%rcx        # 62c900 <stderr@@GLIBC_2.2.5>
  40cebd:	ba 2a 00 00 00       	mov    $0x2a,%edx
  40cec2:	be 01 00 00 00       	mov    $0x1,%esi
  40cec7:	bf e0 e1 41 00       	mov    $0x41e1e0,%edi
  40cecc:	e9 0f 4f ff ff       	jmpq   401de0 <fwrite@plt>
  40ced1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40ced8:	e8 e3 fe ff ff       	callq  40cdc0 <unlink_channel.isra.0.part.1>
  40cedd:	eb 9a                	jmp    40ce79 <caml_finalize_channel+0x89>
  40cedf:	90                   	nop

000000000040cee0 <caml_open_descriptor_in>:
  40cee0:	55                   	push   %rbp
  40cee1:	53                   	push   %rbx
  40cee2:	89 fd                	mov    %edi,%ebp
  40cee4:	bf 58 00 01 00       	mov    $0x10058,%edi
  40cee9:	48 83 ec 08          	sub    $0x8,%rsp
  40ceed:	e8 de c8 ff ff       	callq  4097d0 <caml_stat_alloc>
  40cef2:	89 28                	mov    %ebp,(%rax)
  40cef4:	48 89 c3             	mov    %rax,%rbx
  40cef7:	e8 04 db 00 00       	callq  41aa00 <caml_enter_blocking_section>
  40cefc:	31 f6                	xor    %esi,%esi
  40cefe:	ba 01 00 00 00       	mov    $0x1,%edx
  40cf03:	89 ef                	mov    %ebp,%edi
  40cf05:	e8 e6 4e ff ff       	callq  401df0 <lseek64@plt>
  40cf0a:	48 89 43 08          	mov    %rax,0x8(%rbx)
  40cf0e:	e8 3d db 00 00       	callq  41aa50 <caml_leave_blocking_section>
  40cf13:	48 8d 43 50          	lea    0x50(%rbx),%rax
  40cf17:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
  40cf1e:	00 
  40cf1f:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%rbx)
  40cf26:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%rbx)
  40cf2d:	c7 43 48 00 00 00 00 	movl   $0x0,0x48(%rbx)
  40cf34:	48 89 43 20          	mov    %rax,0x20(%rbx)
  40cf38:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40cf3c:	48 8d 83 50 00 01 00 	lea    0x10050(%rbx),%rax
  40cf43:	c7 43 4c 00 00 00 00 	movl   $0x0,0x4c(%rbx)
  40cf4a:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
  40cf51:	00 
  40cf52:	48 89 43 10          	mov    %rax,0x10(%rbx)
  40cf56:	48 8b 05 03 18 22 00 	mov    0x221803(%rip),%rax        # 62e760 <caml_all_opened_channels>
  40cf5d:	48 c7 83 50 00 01 00 	movq   $0x0,0x10050(%rbx)
  40cf64:	00 00 00 00 
  40cf68:	48 85 c0             	test   %rax,%rax
  40cf6b:	48 89 43 30          	mov    %rax,0x30(%rbx)
  40cf6f:	74 04                	je     40cf75 <caml_open_descriptor_in+0x95>
  40cf71:	48 89 58 38          	mov    %rbx,0x38(%rax)
  40cf75:	48 89 1d e4 17 22 00 	mov    %rbx,0x2217e4(%rip)        # 62e760 <caml_all_opened_channels>
  40cf7c:	48 83 c4 08          	add    $0x8,%rsp
  40cf80:	48 89 d8             	mov    %rbx,%rax
  40cf83:	5b                   	pop    %rbx
  40cf84:	5d                   	pop    %rbp
  40cf85:	c3                   	retq   
  40cf86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cf8d:	00 00 00 

000000000040cf90 <caml_open_descriptor_out>:
  40cf90:	48 83 ec 08          	sub    $0x8,%rsp
  40cf94:	e8 47 ff ff ff       	callq  40cee0 <caml_open_descriptor_in>
  40cf99:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  40cfa0:	00 
  40cfa1:	48 83 c4 08          	add    $0x8,%rsp
  40cfa5:	c3                   	retq   
  40cfa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40cfad:	00 00 00 

000000000040cfb0 <caml_close_channel>:
  40cfb0:	48 8b 05 e9 80 22 00 	mov    0x2280e9(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  40cfb7:	53                   	push   %rbx
  40cfb8:	48 89 fb             	mov    %rdi,%rbx
  40cfbb:	48 85 c0             	test   %rax,%rax
  40cfbe:	74 70                	je     40d030 <caml_close_channel+0x80>
  40cfc0:	48 63 37             	movslq (%rdi),%rsi
  40cfc3:	31 c9                	xor    %ecx,%ecx
  40cfc5:	31 d2                	xor    %edx,%edx
  40cfc7:	bf 02 00 00 00       	mov    $0x2,%edi
  40cfcc:	ff d0                	callq  *%rax
  40cfce:	8b 43 48             	mov    0x48(%rbx),%eax
  40cfd1:	85 c0                	test   %eax,%eax
  40cfd3:	7e 0b                	jle    40cfe0 <caml_close_channel+0x30>
  40cfd5:	5b                   	pop    %rbx
  40cfd6:	c3                   	retq   
  40cfd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40cfde:	00 00 
  40cfe0:	48 8b 05 99 17 22 00 	mov    0x221799(%rip),%rax        # 62e780 <caml_channel_mutex_free>
  40cfe7:	48 85 c0             	test   %rax,%rax
  40cfea:	74 05                	je     40cff1 <caml_close_channel+0x41>
  40cfec:	48 89 df             	mov    %rbx,%rdi
  40cfef:	ff d0                	callq  *%rax
  40cff1:	48 8b 43 38          	mov    0x38(%rbx),%rax
  40cff5:	48 85 c0             	test   %rax,%rax
  40cff8:	74 46                	je     40d040 <caml_close_channel+0x90>
  40cffa:	48 8b 53 30          	mov    0x30(%rbx),%rdx
  40cffe:	48 89 50 30          	mov    %rdx,0x30(%rax)
  40d002:	48 8b 43 30          	mov    0x30(%rbx),%rax
  40d006:	48 85 c0             	test   %rax,%rax
  40d009:	74 08                	je     40d013 <caml_close_channel+0x63>
  40d00b:	48 8b 53 38          	mov    0x38(%rbx),%rdx
  40d00f:	48 89 50 38          	mov    %rdx,0x38(%rax)
  40d013:	48 8b bb 50 00 01 00 	mov    0x10050(%rbx),%rdi
  40d01a:	e8 d1 c7 ff ff       	callq  4097f0 <caml_stat_free>
  40d01f:	48 89 df             	mov    %rbx,%rdi
  40d022:	5b                   	pop    %rbx
  40d023:	e9 c8 c7 ff ff       	jmpq   4097f0 <caml_stat_free>
  40d028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40d02f:	00 
  40d030:	8b 3f                	mov    (%rdi),%edi
  40d032:	e8 c9 4a ff ff       	callq  401b00 <close@plt>
  40d037:	eb 95                	jmp    40cfce <caml_close_channel+0x1e>
  40d039:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40d040:	e8 7b fd ff ff       	callq  40cdc0 <unlink_channel.isra.0.part.1>
  40d045:	eb cc                	jmp    40d013 <caml_close_channel+0x63>
  40d047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40d04e:	00 00 

000000000040d050 <caml_channel_size>:
  40d050:	41 54                	push   %r12
  40d052:	55                   	push   %rbp
  40d053:	53                   	push   %rbx
  40d054:	8b 2f                	mov    (%rdi),%ebp
  40d056:	4c 8b 67 08          	mov    0x8(%rdi),%r12
  40d05a:	e8 a1 d9 00 00       	callq  41aa00 <caml_enter_blocking_section>
  40d05f:	31 f6                	xor    %esi,%esi
  40d061:	ba 02 00 00 00       	mov    $0x2,%edx
  40d066:	89 ef                	mov    %ebp,%edi
  40d068:	e8 83 4d ff ff       	callq  401df0 <lseek64@plt>
  40d06d:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40d071:	48 89 c3             	mov    %rax,%rbx
  40d074:	74 11                	je     40d087 <caml_channel_size+0x37>
  40d076:	31 d2                	xor    %edx,%edx
  40d078:	4c 89 e6             	mov    %r12,%rsi
  40d07b:	89 ef                	mov    %ebp,%edi
  40d07d:	e8 6e 4d ff ff       	callq  401df0 <lseek64@plt>
  40d082:	49 39 c4             	cmp    %rax,%r12
  40d085:	74 0f                	je     40d096 <caml_channel_size+0x46>
  40d087:	e8 c4 d9 00 00       	callq  41aa50 <caml_leave_blocking_section>
  40d08c:	bf 01 00 00 00       	mov    $0x1,%edi
  40d091:	e8 ea 49 00 00       	callq  411a80 <caml_sys_error>
  40d096:	e8 b5 d9 00 00       	callq  41aa50 <caml_leave_blocking_section>
  40d09b:	48 89 d8             	mov    %rbx,%rax
  40d09e:	5b                   	pop    %rbx
  40d09f:	5d                   	pop    %rbp
  40d0a0:	41 5c                	pop    %r12
  40d0a2:	c3                   	retq   
  40d0a3:	0f 1f 00             	nopl   (%rax)
  40d0a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d0ad:	00 00 00 

000000000040d0b0 <caml_channel_binary_mode>:
  40d0b0:	b8 01 00 00 00       	mov    $0x1,%eax
  40d0b5:	c3                   	retq   
  40d0b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d0bd:	00 00 00 

000000000040d0c0 <caml_flush_partial>:
  40d0c0:	41 55                	push   %r13
  40d0c2:	41 54                	push   %r12
  40d0c4:	4c 8d 67 50          	lea    0x50(%rdi),%r12
  40d0c8:	55                   	push   %rbp
  40d0c9:	53                   	push   %rbx
  40d0ca:	48 83 ec 08          	sub    $0x8,%rsp
  40d0ce:	48 8b 47 18          	mov    0x18(%rdi),%rax
  40d0d2:	48 89 c5             	mov    %rax,%rbp
  40d0d5:	4c 29 e5             	sub    %r12,%rbp
  40d0d8:	85 ed                	test   %ebp,%ebp
  40d0da:	7e 28                	jle    40d104 <caml_flush_partial+0x44>
  40d0dc:	48 89 fb             	mov    %rdi,%rbx
  40d0df:	8b 77 4c             	mov    0x4c(%rdi),%esi
  40d0e2:	8b 3f                	mov    (%rdi),%edi
  40d0e4:	89 e9                	mov    %ebp,%ecx
  40d0e6:	4c 89 e2             	mov    %r12,%rdx
  40d0e9:	e8 a2 bc 00 00       	callq  418d90 <caml_write_fd>
  40d0ee:	4c 63 e8             	movslq %eax,%r13
  40d0f1:	4c 01 6b 08          	add    %r13,0x8(%rbx)
  40d0f5:	39 c5                	cmp    %eax,%ebp
  40d0f7:	7f 27                	jg     40d120 <caml_flush_partial+0x60>
  40d0f9:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d0fd:	4c 29 e8             	sub    %r13,%rax
  40d100:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40d104:	49 39 c4             	cmp    %rax,%r12
  40d107:	0f 94 c0             	sete   %al
  40d10a:	48 83 c4 08          	add    $0x8,%rsp
  40d10e:	5b                   	pop    %rbx
  40d10f:	0f b6 c0             	movzbl %al,%eax
  40d112:	5d                   	pop    %rbp
  40d113:	41 5c                	pop    %r12
  40d115:	41 5d                	pop    %r13
  40d117:	c3                   	retq   
  40d118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40d11f:	00 
  40d120:	29 c5                	sub    %eax,%ebp
  40d122:	4b 8d 34 2c          	lea    (%r12,%r13,1),%rsi
  40d126:	4c 89 e7             	mov    %r12,%rdi
  40d129:	48 63 d5             	movslq %ebp,%rdx
  40d12c:	e8 ff 4b ff ff       	callq  401d30 <memmove@plt>
  40d131:	eb c6                	jmp    40d0f9 <caml_flush_partial+0x39>
  40d133:	0f 1f 00             	nopl   (%rax)
  40d136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d13d:	00 00 00 

000000000040d140 <caml_flush>:
  40d140:	53                   	push   %rbx
  40d141:	48 89 fb             	mov    %rdi,%rbx
  40d144:	0f 1f 40 00          	nopl   0x0(%rax)
  40d148:	48 89 df             	mov    %rbx,%rdi
  40d14b:	e8 70 ff ff ff       	callq  40d0c0 <caml_flush_partial>
  40d150:	85 c0                	test   %eax,%eax
  40d152:	74 f4                	je     40d148 <caml_flush+0x8>
  40d154:	5b                   	pop    %rbx
  40d155:	c3                   	retq   
  40d156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d15d:	00 00 00 

000000000040d160 <caml_putword>:
  40d160:	55                   	push   %rbp
  40d161:	53                   	push   %rbx
  40d162:	89 f5                	mov    %esi,%ebp
  40d164:	48 89 fb             	mov    %rdi,%rbx
  40d167:	48 83 ec 08          	sub    $0x8,%rsp
  40d16b:	48 8b 47 18          	mov    0x18(%rdi),%rax
  40d16f:	48 3b 47 10          	cmp    0x10(%rdi),%rax
  40d173:	0f 83 97 00 00 00    	jae    40d210 <caml_putword+0xb0>
  40d179:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40d17d:	48 89 53 18          	mov    %rdx,0x18(%rbx)
  40d181:	89 ea                	mov    %ebp,%edx
  40d183:	c1 ea 18             	shr    $0x18,%edx
  40d186:	88 10                	mov    %dl,(%rax)
  40d188:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d18c:	48 3b 43 10          	cmp    0x10(%rbx),%rax
  40d190:	73 6e                	jae    40d200 <caml_putword+0xa0>
  40d192:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40d196:	48 89 53 18          	mov    %rdx,0x18(%rbx)
  40d19a:	89 ea                	mov    %ebp,%edx
  40d19c:	c1 ea 10             	shr    $0x10,%edx
  40d19f:	88 10                	mov    %dl,(%rax)
  40d1a1:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d1a5:	48 3b 43 10          	cmp    0x10(%rbx),%rax
  40d1a9:	73 3d                	jae    40d1e8 <caml_putword+0x88>
  40d1ab:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40d1af:	48 89 53 18          	mov    %rdx,0x18(%rbx)
  40d1b3:	89 ea                	mov    %ebp,%edx
  40d1b5:	c1 ea 08             	shr    $0x8,%edx
  40d1b8:	88 10                	mov    %dl,(%rax)
  40d1ba:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d1be:	48 3b 43 10          	cmp    0x10(%rbx),%rax
  40d1c2:	72 0c                	jb     40d1d0 <caml_putword+0x70>
  40d1c4:	48 89 df             	mov    %rbx,%rdi
  40d1c7:	e8 f4 fe ff ff       	callq  40d0c0 <caml_flush_partial>
  40d1cc:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d1d0:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40d1d4:	48 89 53 18          	mov    %rdx,0x18(%rbx)
  40d1d8:	40 88 28             	mov    %bpl,(%rax)
  40d1db:	48 83 c4 08          	add    $0x8,%rsp
  40d1df:	5b                   	pop    %rbx
  40d1e0:	5d                   	pop    %rbp
  40d1e1:	c3                   	retq   
  40d1e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40d1e8:	48 89 df             	mov    %rbx,%rdi
  40d1eb:	e8 d0 fe ff ff       	callq  40d0c0 <caml_flush_partial>
  40d1f0:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d1f4:	eb b5                	jmp    40d1ab <caml_putword+0x4b>
  40d1f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d1fd:	00 00 00 
  40d200:	48 89 df             	mov    %rbx,%rdi
  40d203:	e8 b8 fe ff ff       	callq  40d0c0 <caml_flush_partial>
  40d208:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d20c:	eb 84                	jmp    40d192 <caml_putword+0x32>
  40d20e:	66 90                	xchg   %ax,%ax
  40d210:	e8 ab fe ff ff       	callq  40d0c0 <caml_flush_partial>
  40d215:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d219:	e9 5b ff ff ff       	jmpq   40d179 <caml_putword+0x19>
  40d21e:	66 90                	xchg   %ax,%ax

000000000040d220 <caml_putblock>:
  40d220:	48 81 fa fe ff ff 7f 	cmp    $0x7ffffffe,%rdx
  40d227:	41 56                	push   %r14
  40d229:	41 55                	push   %r13
  40d22b:	41 54                	push   %r12
  40d22d:	55                   	push   %rbp
  40d22e:	53                   	push   %rbx
  40d22f:	48 89 fb             	mov    %rdi,%rbx
  40d232:	7f 34                	jg     40d268 <caml_putblock+0x48>
  40d234:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
  40d238:	48 8b 43 10          	mov    0x10(%rbx),%rax
  40d23c:	49 89 d4             	mov    %rdx,%r12
  40d23f:	48 29 f8             	sub    %rdi,%rax
  40d242:	39 c2                	cmp    %eax,%edx
  40d244:	89 c5                	mov    %eax,%ebp
  40d246:	7d 29                	jge    40d271 <caml_putblock+0x51>
  40d248:	48 63 ea             	movslq %edx,%rbp
  40d24b:	48 89 ea             	mov    %rbp,%rdx
  40d24e:	e8 dd 4a ff ff       	callq  401d30 <memmove@plt>
  40d253:	48 01 6b 18          	add    %rbp,0x18(%rbx)
  40d257:	44 89 e0             	mov    %r12d,%eax
  40d25a:	5b                   	pop    %rbx
  40d25b:	5d                   	pop    %rbp
  40d25c:	41 5c                	pop    %r12
  40d25e:	41 5d                	pop    %r13
  40d260:	41 5e                	pop    %r14
  40d262:	c3                   	retq   
  40d263:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40d268:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
  40d26c:	8b 6b 10             	mov    0x10(%rbx),%ebp
  40d26f:	29 fd                	sub    %edi,%ebp
  40d271:	48 63 d5             	movslq %ebp,%rdx
  40d274:	4c 8d 6b 50          	lea    0x50(%rbx),%r13
  40d278:	e8 b3 4a ff ff       	callq  401d30 <memmove@plt>
  40d27d:	4c 8b 63 10          	mov    0x10(%rbx),%r12
  40d281:	8b 73 4c             	mov    0x4c(%rbx),%esi
  40d284:	4c 89 ea             	mov    %r13,%rdx
  40d287:	8b 3b                	mov    (%rbx),%edi
  40d289:	4d 29 ec             	sub    %r13,%r12
  40d28c:	44 89 e1             	mov    %r12d,%ecx
  40d28f:	e8 fc ba 00 00       	callq  418d90 <caml_write_fd>
  40d294:	41 39 c4             	cmp    %eax,%r12d
  40d297:	4c 63 f0             	movslq %eax,%r14
  40d29a:	7f 24                	jg     40d2c0 <caml_putblock+0xa0>
  40d29c:	48 8b 43 10          	mov    0x10(%rbx),%rax
  40d2a0:	4c 01 73 08          	add    %r14,0x8(%rbx)
  40d2a4:	4c 29 f0             	sub    %r14,%rax
  40d2a7:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40d2ab:	89 e8                	mov    %ebp,%eax
  40d2ad:	5b                   	pop    %rbx
  40d2ae:	5d                   	pop    %rbp
  40d2af:	41 5c                	pop    %r12
  40d2b1:	41 5d                	pop    %r13
  40d2b3:	41 5e                	pop    %r14
  40d2b5:	c3                   	retq   
  40d2b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d2bd:	00 00 00 
  40d2c0:	41 29 c4             	sub    %eax,%r12d
  40d2c3:	4b 8d 74 35 00       	lea    0x0(%r13,%r14,1),%rsi
  40d2c8:	4c 89 ef             	mov    %r13,%rdi
  40d2cb:	49 63 d4             	movslq %r12d,%rdx
  40d2ce:	e8 5d 4a ff ff       	callq  401d30 <memmove@plt>
  40d2d3:	eb c7                	jmp    40d29c <caml_putblock+0x7c>
  40d2d5:	90                   	nop
  40d2d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d2dd:	00 00 00 

000000000040d2e0 <caml_really_putblock>:
  40d2e0:	48 85 d2             	test   %rdx,%rdx
  40d2e3:	7e 32                	jle    40d317 <caml_really_putblock+0x37>
  40d2e5:	41 54                	push   %r12
  40d2e7:	49 89 fc             	mov    %rdi,%r12
  40d2ea:	55                   	push   %rbp
  40d2eb:	48 89 f5             	mov    %rsi,%rbp
  40d2ee:	53                   	push   %rbx
  40d2ef:	48 89 d3             	mov    %rdx,%rbx
  40d2f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40d2f8:	48 89 da             	mov    %rbx,%rdx
  40d2fb:	48 89 ee             	mov    %rbp,%rsi
  40d2fe:	4c 89 e7             	mov    %r12,%rdi
  40d301:	e8 1a ff ff ff       	callq  40d220 <caml_putblock>
  40d306:	48 98                	cltq   
  40d308:	48 29 c3             	sub    %rax,%rbx
  40d30b:	48 01 c5             	add    %rax,%rbp
  40d30e:	48 85 db             	test   %rbx,%rbx
  40d311:	7f e5                	jg     40d2f8 <caml_really_putblock+0x18>
  40d313:	5b                   	pop    %rbx
  40d314:	5d                   	pop    %rbp
  40d315:	41 5c                	pop    %r12
  40d317:	f3 c3                	repz retq 
  40d319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040d320 <caml_seek_out>:
  40d320:	55                   	push   %rbp
  40d321:	53                   	push   %rbx
  40d322:	48 89 f5             	mov    %rsi,%rbp
  40d325:	48 89 fb             	mov    %rdi,%rbx
  40d328:	48 83 ec 08          	sub    $0x8,%rsp
  40d32c:	0f 1f 40 00          	nopl   0x0(%rax)
  40d330:	48 89 df             	mov    %rbx,%rdi
  40d333:	e8 88 fd ff ff       	callq  40d0c0 <caml_flush_partial>
  40d338:	85 c0                	test   %eax,%eax
  40d33a:	74 f4                	je     40d330 <caml_seek_out+0x10>
  40d33c:	e8 bf d6 00 00       	callq  41aa00 <caml_enter_blocking_section>
  40d341:	8b 3b                	mov    (%rbx),%edi
  40d343:	31 d2                	xor    %edx,%edx
  40d345:	48 89 ee             	mov    %rbp,%rsi
  40d348:	e8 a3 4a ff ff       	callq  401df0 <lseek64@plt>
  40d34d:	48 39 c5             	cmp    %rax,%rbp
  40d350:	74 0f                	je     40d361 <caml_seek_out+0x41>
  40d352:	e8 f9 d6 00 00       	callq  41aa50 <caml_leave_blocking_section>
  40d357:	bf 01 00 00 00       	mov    $0x1,%edi
  40d35c:	e8 1f 47 00 00       	callq  411a80 <caml_sys_error>
  40d361:	e8 ea d6 00 00       	callq  41aa50 <caml_leave_blocking_section>
  40d366:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
  40d36a:	48 83 c4 08          	add    $0x8,%rsp
  40d36e:	5b                   	pop    %rbx
  40d36f:	5d                   	pop    %rbp
  40d370:	c3                   	retq   
  40d371:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40d376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d37d:	00 00 00 

000000000040d380 <caml_pos_out>:
  40d380:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40d384:	48 03 47 18          	add    0x18(%rdi),%rax
  40d388:	48 83 c7 50          	add    $0x50,%rdi
  40d38c:	48 29 f8             	sub    %rdi,%rax
  40d38f:	c3                   	retq   

000000000040d390 <caml_do_read>:
  40d390:	89 d1                	mov    %edx,%ecx
  40d392:	48 89 f2             	mov    %rsi,%rdx
  40d395:	31 f6                	xor    %esi,%esi
  40d397:	e9 84 b9 00 00       	jmpq   418d20 <caml_read_fd>
  40d39c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040d3a0 <caml_refill>:
  40d3a0:	55                   	push   %rbp
  40d3a1:	53                   	push   %rbx
  40d3a2:	48 8d 6f 50          	lea    0x50(%rdi),%rbp
  40d3a6:	48 89 fb             	mov    %rdi,%rbx
  40d3a9:	48 83 ec 08          	sub    $0x8,%rsp
  40d3ad:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
  40d3b1:	8b 77 4c             	mov    0x4c(%rdi),%esi
  40d3b4:	8b 3f                	mov    (%rdi),%edi
  40d3b6:	48 89 ea             	mov    %rbp,%rdx
  40d3b9:	48 29 e9             	sub    %rbp,%rcx
  40d3bc:	e8 5f b9 00 00       	callq  418d20 <caml_read_fd>
  40d3c1:	85 c0                	test   %eax,%eax
  40d3c3:	74 20                	je     40d3e5 <caml_refill+0x45>
  40d3c5:	48 98                	cltq   
  40d3c7:	48 01 43 08          	add    %rax,0x8(%rbx)
  40d3cb:	48 01 e8             	add    %rbp,%rax
  40d3ce:	48 89 43 20          	mov    %rax,0x20(%rbx)
  40d3d2:	48 8d 43 51          	lea    0x51(%rbx),%rax
  40d3d6:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40d3da:	0f b6 43 50          	movzbl 0x50(%rbx),%eax
  40d3de:	48 83 c4 08          	add    $0x8,%rsp
  40d3e2:	5b                   	pop    %rbx
  40d3e3:	5d                   	pop    %rbp
  40d3e4:	c3                   	retq   
  40d3e5:	e8 56 d3 00 00       	callq  41a740 <caml_raise_end_of_file>
  40d3ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040d3f0 <caml_getword>:
  40d3f0:	41 54                	push   %r12
  40d3f2:	55                   	push   %rbp
  40d3f3:	49 89 fc             	mov    %rdi,%r12
  40d3f6:	53                   	push   %rbx
  40d3f7:	bd 04 00 00 00       	mov    $0x4,%ebp
  40d3fc:	31 c0                	xor    %eax,%eax
  40d3fe:	c1 e0 08             	shl    $0x8,%eax
  40d401:	89 c3                	mov    %eax,%ebx
  40d403:	49 8b 44 24 18       	mov    0x18(%r12),%rax
  40d408:	49 3b 44 24 20       	cmp    0x20(%r12),%rax
  40d40d:	73 21                	jae    40d430 <caml_getword+0x40>
  40d40f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40d413:	49 89 54 24 18       	mov    %rdx,0x18(%r12)
  40d418:	0f b6 00             	movzbl (%rax),%eax
  40d41b:	01 d8                	add    %ebx,%eax
  40d41d:	83 ed 01             	sub    $0x1,%ebp
  40d420:	75 dc                	jne    40d3fe <caml_getword+0xe>
  40d422:	5b                   	pop    %rbx
  40d423:	5d                   	pop    %rbp
  40d424:	41 5c                	pop    %r12
  40d426:	c3                   	retq   
  40d427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40d42e:	00 00 
  40d430:	4c 89 e7             	mov    %r12,%rdi
  40d433:	e8 68 ff ff ff       	callq  40d3a0 <caml_refill>
  40d438:	0f b6 c0             	movzbl %al,%eax
  40d43b:	eb de                	jmp    40d41b <caml_getword+0x2b>
  40d43d:	0f 1f 00             	nopl   (%rax)

000000000040d440 <caml_getblock>:
  40d440:	41 56                	push   %r14
  40d442:	41 55                	push   %r13
  40d444:	49 89 f5             	mov    %rsi,%r13
  40d447:	41 54                	push   %r12
  40d449:	55                   	push   %rbp
  40d44a:	48 81 fa fe ff ff 7f 	cmp    $0x7ffffffe,%rdx
  40d451:	53                   	push   %rbx
  40d452:	48 8b 77 18          	mov    0x18(%rdi),%rsi
  40d456:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  40d45b:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
  40d45f:	0f 4e c2             	cmovle %edx,%eax
  40d462:	48 89 fd             	mov    %rdi,%rbp
  40d465:	41 89 c4             	mov    %eax,%r12d
  40d468:	48 29 f3             	sub    %rsi,%rbx
  40d46b:	39 d8                	cmp    %ebx,%eax
  40d46d:	7e 79                	jle    40d4e8 <caml_getblock+0xa8>
  40d46f:	85 db                	test   %ebx,%ebx
  40d471:	7e 1d                	jle    40d490 <caml_getblock+0x50>
  40d473:	4c 63 e3             	movslq %ebx,%r12
  40d476:	4c 89 ef             	mov    %r13,%rdi
  40d479:	4c 89 e2             	mov    %r12,%rdx
  40d47c:	e8 af 48 ff ff       	callq  401d30 <memmove@plt>
  40d481:	4c 01 65 18          	add    %r12,0x18(%rbp)
  40d485:	89 d8                	mov    %ebx,%eax
  40d487:	5b                   	pop    %rbx
  40d488:	5d                   	pop    %rbp
  40d489:	41 5c                	pop    %r12
  40d48b:	41 5d                	pop    %r13
  40d48d:	41 5e                	pop    %r14
  40d48f:	c3                   	retq   
  40d490:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
  40d494:	4c 8d 77 50          	lea    0x50(%rdi),%r14
  40d498:	8b 77 4c             	mov    0x4c(%rdi),%esi
  40d49b:	8b 3f                	mov    (%rdi),%edi
  40d49d:	4c 89 f2             	mov    %r14,%rdx
  40d4a0:	4c 29 f1             	sub    %r14,%rcx
  40d4a3:	e8 78 b8 00 00       	callq  418d20 <caml_read_fd>
  40d4a8:	48 63 d0             	movslq %eax,%rdx
  40d4ab:	48 01 55 08          	add    %rdx,0x8(%rbp)
  40d4af:	4c 89 f6             	mov    %r14,%rsi
  40d4b2:	4c 01 f2             	add    %r14,%rdx
  40d4b5:	41 39 c4             	cmp    %eax,%r12d
  40d4b8:	4c 89 ef             	mov    %r13,%rdi
  40d4bb:	41 0f 4e c4          	cmovle %r12d,%eax
  40d4bf:	48 89 55 20          	mov    %rdx,0x20(%rbp)
  40d4c3:	4c 63 e0             	movslq %eax,%r12
  40d4c6:	4d 01 e6             	add    %r12,%r14
  40d4c9:	4c 89 e2             	mov    %r12,%rdx
  40d4cc:	e8 5f 48 ff ff       	callq  401d30 <memmove@plt>
  40d4d1:	4c 89 75 18          	mov    %r14,0x18(%rbp)
  40d4d5:	44 89 e0             	mov    %r12d,%eax
  40d4d8:	5b                   	pop    %rbx
  40d4d9:	5d                   	pop    %rbp
  40d4da:	41 5c                	pop    %r12
  40d4dc:	41 5d                	pop    %r13
  40d4de:	41 5e                	pop    %r14
  40d4e0:	c3                   	retq   
  40d4e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40d4e8:	48 63 d8             	movslq %eax,%rbx
  40d4eb:	4c 89 ef             	mov    %r13,%rdi
  40d4ee:	48 89 da             	mov    %rbx,%rdx
  40d4f1:	e8 3a 48 ff ff       	callq  401d30 <memmove@plt>
  40d4f6:	48 01 5d 18          	add    %rbx,0x18(%rbp)
  40d4fa:	44 89 e0             	mov    %r12d,%eax
  40d4fd:	5b                   	pop    %rbx
  40d4fe:	5d                   	pop    %rbp
  40d4ff:	41 5c                	pop    %r12
  40d501:	41 5d                	pop    %r13
  40d503:	41 5e                	pop    %r14
  40d505:	c3                   	retq   
  40d506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d50d:	00 00 00 

000000000040d510 <caml_really_getblock>:
  40d510:	48 85 d2             	test   %rdx,%rdx
  40d513:	7e 4b                	jle    40d560 <caml_really_getblock+0x50>
  40d515:	41 55                	push   %r13
  40d517:	41 54                	push   %r12
  40d519:	49 89 d5             	mov    %rdx,%r13
  40d51c:	55                   	push   %rbp
  40d51d:	53                   	push   %rbx
  40d51e:	49 89 fc             	mov    %rdi,%r12
  40d521:	48 89 f5             	mov    %rsi,%rbp
  40d524:	48 89 d3             	mov    %rdx,%rbx
  40d527:	48 83 ec 08          	sub    $0x8,%rsp
  40d52b:	eb 10                	jmp    40d53d <caml_really_getblock+0x2d>
  40d52d:	0f 1f 00             	nopl   (%rax)
  40d530:	48 98                	cltq   
  40d532:	48 29 c3             	sub    %rax,%rbx
  40d535:	48 01 c5             	add    %rax,%rbp
  40d538:	48 85 db             	test   %rbx,%rbx
  40d53b:	7e 12                	jle    40d54f <caml_really_getblock+0x3f>
  40d53d:	48 89 da             	mov    %rbx,%rdx
  40d540:	48 89 ee             	mov    %rbp,%rsi
  40d543:	4c 89 e7             	mov    %r12,%rdi
  40d546:	e8 f5 fe ff ff       	callq  40d440 <caml_getblock>
  40d54b:	85 c0                	test   %eax,%eax
  40d54d:	75 e1                	jne    40d530 <caml_really_getblock+0x20>
  40d54f:	48 83 c4 08          	add    $0x8,%rsp
  40d553:	4c 89 e8             	mov    %r13,%rax
  40d556:	48 29 d8             	sub    %rbx,%rax
  40d559:	5b                   	pop    %rbx
  40d55a:	5d                   	pop    %rbp
  40d55b:	41 5c                	pop    %r12
  40d55d:	41 5d                	pop    %r13
  40d55f:	c3                   	retq   
  40d560:	31 c0                	xor    %eax,%eax
  40d562:	c3                   	retq   
  40d563:	0f 1f 00             	nopl   (%rax)
  40d566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d56d:	00 00 00 

000000000040d570 <caml_seek_in>:
  40d570:	41 54                	push   %r12
  40d572:	55                   	push   %rbp
  40d573:	4c 8d 67 50          	lea    0x50(%rdi),%r12
  40d577:	53                   	push   %rbx
  40d578:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  40d57c:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
  40d580:	49 8d 04 14          	lea    (%r12,%rdx,1),%rax
  40d584:	48 29 c8             	sub    %rcx,%rax
  40d587:	48 39 f0             	cmp    %rsi,%rax
  40d58a:	7f 14                	jg     40d5a0 <caml_seek_in+0x30>
  40d58c:	48 39 f2             	cmp    %rsi,%rdx
  40d58f:	7c 0f                	jl     40d5a0 <caml_seek_in+0x30>
  40d591:	48 29 f2             	sub    %rsi,%rdx
  40d594:	48 29 d1             	sub    %rdx,%rcx
  40d597:	48 89 4f 18          	mov    %rcx,0x18(%rdi)
  40d59b:	5b                   	pop    %rbx
  40d59c:	5d                   	pop    %rbp
  40d59d:	41 5c                	pop    %r12
  40d59f:	c3                   	retq   
  40d5a0:	48 89 fb             	mov    %rdi,%rbx
  40d5a3:	48 89 f5             	mov    %rsi,%rbp
  40d5a6:	e8 55 d4 00 00       	callq  41aa00 <caml_enter_blocking_section>
  40d5ab:	8b 3b                	mov    (%rbx),%edi
  40d5ad:	31 d2                	xor    %edx,%edx
  40d5af:	48 89 ee             	mov    %rbp,%rsi
  40d5b2:	e8 39 48 ff ff       	callq  401df0 <lseek64@plt>
  40d5b7:	48 39 c5             	cmp    %rax,%rbp
  40d5ba:	74 0f                	je     40d5cb <caml_seek_in+0x5b>
  40d5bc:	e8 8f d4 00 00       	callq  41aa50 <caml_leave_blocking_section>
  40d5c1:	bf 01 00 00 00       	mov    $0x1,%edi
  40d5c6:	e8 b5 44 00 00       	callq  411a80 <caml_sys_error>
  40d5cb:	e8 80 d4 00 00       	callq  41aa50 <caml_leave_blocking_section>
  40d5d0:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
  40d5d4:	4c 89 63 20          	mov    %r12,0x20(%rbx)
  40d5d8:	4c 89 63 18          	mov    %r12,0x18(%rbx)
  40d5dc:	5b                   	pop    %rbx
  40d5dd:	5d                   	pop    %rbp
  40d5de:	41 5c                	pop    %r12
  40d5e0:	c3                   	retq   
  40d5e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40d5e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d5ed:	00 00 00 

000000000040d5f0 <caml_pos_in>:
  40d5f0:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40d5f4:	48 03 47 18          	add    0x18(%rdi),%rax
  40d5f8:	48 2b 47 20          	sub    0x20(%rdi),%rax
  40d5fc:	c3                   	retq   
  40d5fd:	0f 1f 00             	nopl   (%rax)

000000000040d600 <caml_input_scan_line>:
  40d600:	41 56                	push   %r14
  40d602:	41 55                	push   %r13
  40d604:	4c 8d 6f 50          	lea    0x50(%rdi),%r13
  40d608:	41 54                	push   %r12
  40d60a:	55                   	push   %rbp
  40d60b:	53                   	push   %rbx
  40d60c:	48 8b 6f 18          	mov    0x18(%rdi),%rbp
  40d610:	48 89 fb             	mov    %rdi,%rbx
  40d613:	49 89 ee             	mov    %rbp,%r14
  40d616:	eb 4c                	jmp    40d664 <caml_input_scan_line+0x64>
  40d618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40d61f:	00 
  40d620:	4d 39 f5             	cmp    %r14,%r13
  40d623:	72 6b                	jb     40d690 <caml_input_scan_line+0x90>
  40d625:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
  40d629:	4c 39 e1             	cmp    %r12,%rcx
  40d62c:	0f 86 98 00 00 00    	jbe    40d6ca <caml_input_scan_line+0xca>
  40d632:	8b 73 4c             	mov    0x4c(%rbx),%esi
  40d635:	8b 3b                	mov    (%rbx),%edi
  40d637:	4c 29 e1             	sub    %r12,%rcx
  40d63a:	4c 89 e2             	mov    %r12,%rdx
  40d63d:	e8 de b6 00 00       	callq  418d20 <caml_read_fd>
  40d642:	85 c0                	test   %eax,%eax
  40d644:	0f 84 96 00 00 00    	je     40d6e0 <caml_input_scan_line+0xe0>
  40d64a:	48 98                	cltq   
  40d64c:	48 01 43 08          	add    %rax,0x8(%rbx)
  40d650:	48 01 43 20          	add    %rax,0x20(%rbx)
  40d654:	48 89 e8             	mov    %rbp,%rax
  40d657:	48 83 c5 01          	add    $0x1,%rbp
  40d65b:	4c 8b 73 18          	mov    0x18(%rbx),%r14
  40d65f:	80 38 0a             	cmpb   $0xa,(%rax)
  40d662:	74 15                	je     40d679 <caml_input_scan_line+0x79>
  40d664:	4c 8b 63 20          	mov    0x20(%rbx),%r12
  40d668:	4c 39 e5             	cmp    %r12,%rbp
  40d66b:	73 b3                	jae    40d620 <caml_input_scan_line+0x20>
  40d66d:	48 89 e8             	mov    %rbp,%rax
  40d670:	48 83 c5 01          	add    $0x1,%rbp
  40d674:	80 38 0a             	cmpb   $0xa,(%rax)
  40d677:	75 eb                	jne    40d664 <caml_input_scan_line+0x64>
  40d679:	48 89 e8             	mov    %rbp,%rax
  40d67c:	5b                   	pop    %rbx
  40d67d:	4c 29 f0             	sub    %r14,%rax
  40d680:	5d                   	pop    %rbp
  40d681:	41 5c                	pop    %r12
  40d683:	41 5d                	pop    %r13
  40d685:	41 5e                	pop    %r14
  40d687:	c3                   	retq   
  40d688:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40d68f:	00 
  40d690:	4c 89 e2             	mov    %r12,%rdx
  40d693:	4c 89 f6             	mov    %r14,%rsi
  40d696:	4c 89 ef             	mov    %r13,%rdi
  40d699:	4c 29 f2             	sub    %r14,%rdx
  40d69c:	e8 8f 46 ff ff       	callq  401d30 <memmove@plt>
  40d6a1:	4c 89 f0             	mov    %r14,%rax
  40d6a4:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
  40d6a8:	4c 29 e8             	sub    %r13,%rax
  40d6ab:	48 98                	cltq   
  40d6ad:	48 f7 d8             	neg    %rax
  40d6b0:	49 01 c4             	add    %rax,%r12
  40d6b3:	49 01 c6             	add    %rax,%r14
  40d6b6:	48 01 c5             	add    %rax,%rbp
  40d6b9:	4c 39 e1             	cmp    %r12,%rcx
  40d6bc:	4c 89 73 18          	mov    %r14,0x18(%rbx)
  40d6c0:	4c 89 63 20          	mov    %r12,0x20(%rbx)
  40d6c4:	0f 87 68 ff ff ff    	ja     40d632 <caml_input_scan_line+0x32>
  40d6ca:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d6ce:	5b                   	pop    %rbx
  40d6cf:	5d                   	pop    %rbp
  40d6d0:	4c 29 e0             	sub    %r12,%rax
  40d6d3:	41 5c                	pop    %r12
  40d6d5:	41 5d                	pop    %r13
  40d6d7:	41 5e                	pop    %r14
  40d6d9:	c3                   	retq   
  40d6da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40d6e0:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40d6e4:	48 2b 43 20          	sub    0x20(%rbx),%rax
  40d6e8:	5b                   	pop    %rbx
  40d6e9:	5d                   	pop    %rbp
  40d6ea:	41 5c                	pop    %r12
  40d6ec:	41 5d                	pop    %r13
  40d6ee:	41 5e                	pop    %r14
  40d6f0:	c3                   	retq   
  40d6f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40d6f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d6fd:	00 00 00 

000000000040d700 <caml_alloc_channel>:
  40d700:	53                   	push   %rbx
  40d701:	83 47 48 01          	addl   $0x1,0x48(%rdi)
  40d705:	48 89 fb             	mov    %rdi,%rbx
  40d708:	b9 e8 03 00 00       	mov    $0x3e8,%ecx
  40d70d:	ba 01 00 00 00       	mov    $0x1,%edx
  40d712:	be 08 00 00 00       	mov    $0x8,%esi
  40d717:	bf 60 c7 62 00       	mov    $0x62c760,%edi
  40d71c:	e8 8f b3 00 00       	callq  418ab0 <caml_alloc_custom>
  40d721:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40d725:	5b                   	pop    %rbx
  40d726:	c3                   	retq   
  40d727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40d72e:	00 00 

000000000040d730 <caml_ml_open_descriptor_in>:
  40d730:	53                   	push   %rbx
  40d731:	48 d1 ff             	sar    %rdi
  40d734:	e8 a7 f7 ff ff       	callq  40cee0 <caml_open_descriptor_in>
  40d739:	83 40 48 01          	addl   $0x1,0x48(%rax)
  40d73d:	48 89 c3             	mov    %rax,%rbx
  40d740:	b9 e8 03 00 00       	mov    $0x3e8,%ecx
  40d745:	ba 01 00 00 00       	mov    $0x1,%edx
  40d74a:	be 08 00 00 00       	mov    $0x8,%esi
  40d74f:	bf 60 c7 62 00       	mov    $0x62c760,%edi
  40d754:	e8 57 b3 00 00       	callq  418ab0 <caml_alloc_custom>
  40d759:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40d75d:	5b                   	pop    %rbx
  40d75e:	c3                   	retq   
  40d75f:	90                   	nop

000000000040d760 <caml_ml_open_descriptor_out>:
  40d760:	53                   	push   %rbx
  40d761:	48 d1 ff             	sar    %rdi
  40d764:	e8 77 f7 ff ff       	callq  40cee0 <caml_open_descriptor_in>
  40d769:	83 40 48 01          	addl   $0x1,0x48(%rax)
  40d76d:	48 89 c3             	mov    %rax,%rbx
  40d770:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  40d777:	00 
  40d778:	b9 e8 03 00 00       	mov    $0x3e8,%ecx
  40d77d:	ba 01 00 00 00       	mov    $0x1,%edx
  40d782:	be 08 00 00 00       	mov    $0x8,%esi
  40d787:	bf 60 c7 62 00       	mov    $0x62c760,%edi
  40d78c:	e8 1f b3 00 00       	callq  418ab0 <caml_alloc_custom>
  40d791:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40d795:	5b                   	pop    %rbx
  40d796:	c3                   	retq   
  40d797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40d79e:	00 00 

000000000040d7a0 <caml_ml_set_channel_name>:
  40d7a0:	55                   	push   %rbp
  40d7a1:	53                   	push   %rbx
  40d7a2:	48 89 f5             	mov    %rsi,%rbp
  40d7a5:	48 83 ec 08          	sub    $0x8,%rsp
  40d7a9:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40d7ad:	48 8b bb 50 00 01 00 	mov    0x10050(%rbx),%rdi
  40d7b4:	e8 37 c0 ff ff       	callq  4097f0 <caml_stat_free>
  40d7b9:	48 89 ef             	mov    %rbp,%rdi
  40d7bc:	e8 cf ed ff ff       	callq  40c590 <caml_string_length>
  40d7c1:	48 85 c0             	test   %rax,%rax
  40d7c4:	75 1a                	jne    40d7e0 <caml_ml_set_channel_name+0x40>
  40d7c6:	48 c7 83 50 00 01 00 	movq   $0x0,0x10050(%rbx)
  40d7cd:	00 00 00 00 
  40d7d1:	48 83 c4 08          	add    $0x8,%rsp
  40d7d5:	b8 01 00 00 00       	mov    $0x1,%eax
  40d7da:	5b                   	pop    %rbx
  40d7db:	5d                   	pop    %rbp
  40d7dc:	c3                   	retq   
  40d7dd:	0f 1f 00             	nopl   (%rax)
  40d7e0:	48 89 ef             	mov    %rbp,%rdi
  40d7e3:	e8 68 e7 00 00       	callq  41bf50 <caml_strdup>
  40d7e8:	48 89 83 50 00 01 00 	mov    %rax,0x10050(%rbx)
  40d7ef:	48 83 c4 08          	add    $0x8,%rsp
  40d7f3:	b8 01 00 00 00       	mov    $0x1,%eax
  40d7f8:	5b                   	pop    %rbx
  40d7f9:	5d                   	pop    %rbp
  40d7fa:	c3                   	retq   
  40d7fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040d800 <caml_ml_out_channels_list>:
  40d800:	55                   	push   %rbp
  40d801:	53                   	push   %rbx
  40d802:	48 83 ec 78          	sub    $0x78,%rsp
  40d806:	48 8b 2d 3b f1 21 00 	mov    0x21f13b(%rip),%rbp        # 62c948 <caml_local_roots>
  40d80d:	48 8b 1d 4c 0f 22 00 	mov    0x220f4c(%rip),%rbx        # 62e760 <caml_all_opened_channels>
  40d814:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40d81b:	00 00 
  40d81d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  40d822:	31 c0                	xor    %eax,%eax
  40d824:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  40d829:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
  40d830:	00 00 
  40d832:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
  40d839:	00 00 
  40d83b:	48 85 db             	test   %rbx,%rbx
  40d83e:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  40d845:	00 00 
  40d847:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
  40d84c:	48 89 05 f5 f0 21 00 	mov    %rax,0x21f0f5(%rip)        # 62c948 <caml_local_roots>
  40d853:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  40d858:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  40d85f:	00 00 
  40d861:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
  40d868:	00 00 
  40d86a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40d86f:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  40d874:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  40d879:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  40d87e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  40d883:	0f 84 9b 00 00 00    	je     40d924 <caml_ml_out_channels_list+0x124>
  40d889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40d890:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
  40d895:	74 31                	je     40d8c8 <caml_ml_out_channels_list+0xc8>
  40d897:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
  40d89b:	48 85 db             	test   %rbx,%rbx
  40d89e:	75 f0                	jne    40d890 <caml_ml_out_channels_list+0x90>
  40d8a0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40d8a5:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  40d8aa:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40d8b1:	00 00 
  40d8b3:	48 89 2d 8e f0 21 00 	mov    %rbp,0x21f08e(%rip)        # 62c948 <caml_local_roots>
  40d8ba:	75 72                	jne    40d92e <caml_ml_out_channels_list+0x12e>
  40d8bc:	48 83 c4 78          	add    $0x78,%rsp
  40d8c0:	5b                   	pop    %rbx
  40d8c1:	5d                   	pop    %rbp
  40d8c2:	c3                   	retq   
  40d8c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40d8c8:	83 43 48 01          	addl   $0x1,0x48(%rbx)
  40d8cc:	ba 01 00 00 00       	mov    $0x1,%edx
  40d8d1:	b9 e8 03 00 00       	mov    $0x3e8,%ecx
  40d8d6:	be 08 00 00 00       	mov    $0x8,%esi
  40d8db:	bf 60 c7 62 00       	mov    $0x62c760,%edi
  40d8e0:	e8 cb b1 00 00       	callq  418ab0 <caml_alloc_custom>
  40d8e5:	48 89 58 08          	mov    %rbx,0x8(%rax)
  40d8e9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40d8ee:	31 f6                	xor    %esi,%esi
  40d8f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40d8f5:	bf 02 00 00 00       	mov    $0x2,%edi
  40d8fa:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  40d8ff:	e8 7c e9 00 00       	callq  41c280 <caml_alloc_small>
  40d904:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  40d909:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40d90e:	48 89 10             	mov    %rdx,(%rax)
  40d911:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40d916:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  40d91b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40d91f:	e9 73 ff ff ff       	jmpq   40d897 <caml_ml_out_channels_list+0x97>
  40d924:	b8 01 00 00 00       	mov    $0x1,%eax
  40d929:	e9 77 ff ff ff       	jmpq   40d8a5 <caml_ml_out_channels_list+0xa5>
  40d92e:	e8 3d 41 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40d933:	0f 1f 00             	nopl   (%rax)
  40d936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d93d:	00 00 00 

000000000040d940 <caml_channel_descriptor>:
  40d940:	53                   	push   %rbx
  40d941:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40d945:	48 63 18             	movslq (%rax),%rbx
  40d948:	83 fb ff             	cmp    $0xffffffff,%ebx
  40d94b:	74 0b                	je     40d958 <caml_channel_descriptor+0x18>
  40d94d:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  40d952:	5b                   	pop    %rbx
  40d953:	c3                   	retq   
  40d954:	0f 1f 40 00          	nopl   0x0(%rax)
  40d958:	e8 13 40 ff ff       	callq  401970 <__errno_location@plt>
  40d95d:	bf 01 00 00 00       	mov    $0x1,%edi
  40d962:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
  40d968:	e8 13 41 00 00       	callq  411a80 <caml_sys_error>
  40d96d:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  40d972:	5b                   	pop    %rbx
  40d973:	c3                   	retq   
  40d974:	66 90                	xchg   %ax,%ax
  40d976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40d97d:	00 00 00 

000000000040d980 <caml_ml_close_channel>:
  40d980:	53                   	push   %rbx
  40d981:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40d985:	8b 18                	mov    (%rax),%ebx
  40d987:	83 fb ff             	cmp    $0xffffffff,%ebx
  40d98a:	74 44                	je     40d9d0 <caml_ml_close_channel+0x50>
  40d98c:	48 8b 50 10          	mov    0x10(%rax),%rdx
  40d990:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
  40d996:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40d99a:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40d99e:	e8 5d d0 00 00       	callq  41aa00 <caml_enter_blocking_section>
  40d9a3:	48 8b 05 f6 76 22 00 	mov    0x2276f6(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  40d9aa:	48 85 c0             	test   %rax,%rax
  40d9ad:	74 51                	je     40da00 <caml_ml_close_channel+0x80>
  40d9af:	48 63 f3             	movslq %ebx,%rsi
  40d9b2:	31 c9                	xor    %ecx,%ecx
  40d9b4:	31 d2                	xor    %edx,%edx
  40d9b6:	bf 02 00 00 00       	mov    $0x2,%edi
  40d9bb:	ff d0                	callq  *%rax
  40d9bd:	89 c3                	mov    %eax,%ebx
  40d9bf:	e8 8c d0 00 00       	callq  41aa50 <caml_leave_blocking_section>
  40d9c4:	83 fb ff             	cmp    $0xffffffff,%ebx
  40d9c7:	74 1f                	je     40d9e8 <caml_ml_close_channel+0x68>
  40d9c9:	b8 01 00 00 00       	mov    $0x1,%eax
  40d9ce:	5b                   	pop    %rbx
  40d9cf:	c3                   	retq   
  40d9d0:	48 8b 50 10          	mov    0x10(%rax),%rdx
  40d9d4:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40d9d8:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40d9dc:	b8 01 00 00 00       	mov    $0x1,%eax
  40d9e1:	5b                   	pop    %rbx
  40d9e2:	c3                   	retq   
  40d9e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40d9e8:	bf 01 00 00 00       	mov    $0x1,%edi
  40d9ed:	e8 8e 40 00 00       	callq  411a80 <caml_sys_error>
  40d9f2:	b8 01 00 00 00       	mov    $0x1,%eax
  40d9f7:	5b                   	pop    %rbx
  40d9f8:	c3                   	retq   
  40d9f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40da00:	89 df                	mov    %ebx,%edi
  40da02:	e8 f9 40 ff ff       	callq  401b00 <close@plt>
  40da07:	89 c3                	mov    %eax,%ebx
  40da09:	eb b4                	jmp    40d9bf <caml_ml_close_channel+0x3f>
  40da0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040da10 <caml_ml_channel_size>:
  40da10:	53                   	push   %rbx
  40da11:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  40da15:	e8 36 f6 ff ff       	callq  40d050 <caml_channel_size>
  40da1a:	48 89 c3             	mov    %rax,%rbx
  40da1d:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
  40da24:	ff ff 3f 
  40da27:	48 39 c3             	cmp    %rax,%rbx
  40da2a:	7e 15                	jle    40da41 <caml_ml_channel_size+0x31>
  40da2c:	e8 3f 3f ff ff       	callq  401970 <__errno_location@plt>
  40da31:	bf 01 00 00 00       	mov    $0x1,%edi
  40da36:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
  40da3c:	e8 3f 40 00 00       	callq  411a80 <caml_sys_error>
  40da41:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  40da46:	5b                   	pop    %rbx
  40da47:	c3                   	retq   
  40da48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40da4f:	00 

000000000040da50 <caml_ml_channel_size_64>:
  40da50:	48 83 ec 08          	sub    $0x8,%rsp
  40da54:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  40da58:	e8 f3 f5 ff ff       	callq  40d050 <caml_channel_size>
  40da5d:	48 83 c4 08          	add    $0x8,%rsp
  40da61:	48 89 c7             	mov    %rax,%rdi
  40da64:	e9 47 d0 ff ff       	jmpq   40aab0 <caml_copy_int64>
  40da69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040da70 <caml_ml_set_binary_mode>:
  40da70:	b8 01 00 00 00       	mov    $0x1,%eax
  40da75:	c3                   	retq   
  40da76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40da7d:	00 00 00 

000000000040da80 <caml_ml_flush_partial>:
  40da80:	41 54                	push   %r12
  40da82:	55                   	push   %rbp
  40da83:	53                   	push   %rbx
  40da84:	48 83 ec 60          	sub    $0x60,%rsp
  40da88:	48 8b 2d b9 ee 21 00 	mov    0x21eeb9(%rip),%rbp        # 62c948 <caml_local_roots>
  40da8f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40da94:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40da99:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40daa0:	00 00 
  40daa2:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  40daa9:	00 00 
  40daab:	48 89 15 96 ee 21 00 	mov    %rdx,0x21ee96(%rip)        # 62c948 <caml_local_roots>
  40dab2:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40dab7:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40dabc:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40dac3:	00 00 
  40dac5:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40daca:	31 c9                	xor    %ecx,%ecx
  40dacc:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40dad1:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40dad5:	83 3b ff             	cmpl   $0xffffffff,(%rbx)
  40dad8:	74 66                	je     40db40 <caml_ml_flush_partial+0xc0>
  40dada:	48 8b 05 97 0c 22 00 	mov    0x220c97(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40dae1:	48 85 c0             	test   %rax,%rax
  40dae4:	74 05                	je     40daeb <caml_ml_flush_partial+0x6b>
  40dae6:	48 89 df             	mov    %rbx,%rdi
  40dae9:	ff d0                	callq  *%rax
  40daeb:	48 89 df             	mov    %rbx,%rdi
  40daee:	e8 cd f5 ff ff       	callq  40d0c0 <caml_flush_partial>
  40daf3:	48 8b 15 76 0c 22 00 	mov    0x220c76(%rip),%rdx        # 62e770 <caml_channel_mutex_unlock>
  40dafa:	41 89 c4             	mov    %eax,%r12d
  40dafd:	48 85 d2             	test   %rdx,%rdx
  40db00:	74 05                	je     40db07 <caml_ml_flush_partial+0x87>
  40db02:	48 89 df             	mov    %rbx,%rdi
  40db05:	ff d2                	callq  *%rdx
  40db07:	41 83 fc 01          	cmp    $0x1,%r12d
  40db0b:	48 89 2d 36 ee 21 00 	mov    %rbp,0x21ee36(%rip)        # 62c948 <caml_local_roots>
  40db12:	48 19 c0             	sbb    %rax,%rax
  40db15:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  40db19:	48 83 c0 03          	add    $0x3,%rax
  40db1d:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
  40db22:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  40db29:	00 00 
  40db2b:	75 21                	jne    40db4e <caml_ml_flush_partial+0xce>
  40db2d:	48 83 c4 60          	add    $0x60,%rsp
  40db31:	5b                   	pop    %rbx
  40db32:	5d                   	pop    %rbp
  40db33:	41 5c                	pop    %r12
  40db35:	c3                   	retq   
  40db36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40db3d:	00 00 00 
  40db40:	48 89 2d 01 ee 21 00 	mov    %rbp,0x21ee01(%rip)        # 62c948 <caml_local_roots>
  40db47:	b8 03 00 00 00       	mov    $0x3,%eax
  40db4c:	eb cf                	jmp    40db1d <caml_ml_flush_partial+0x9d>
  40db4e:	e8 1d 3f ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40db53:	0f 1f 00             	nopl   (%rax)
  40db56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40db5d:	00 00 00 

000000000040db60 <caml_ml_flush>:
  40db60:	55                   	push   %rbp
  40db61:	53                   	push   %rbx
  40db62:	48 83 ec 68          	sub    $0x68,%rsp
  40db66:	48 8b 2d db ed 21 00 	mov    0x21eddb(%rip),%rbp        # 62c948 <caml_local_roots>
  40db6d:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40db72:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40db77:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40db7e:	00 00 
  40db80:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  40db87:	00 00 
  40db89:	48 89 15 b8 ed 21 00 	mov    %rdx,0x21edb8(%rip)        # 62c948 <caml_local_roots>
  40db90:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40db95:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40db9a:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40dba1:	00 00 
  40dba3:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40dba8:	31 c9                	xor    %ecx,%ecx
  40dbaa:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40dbaf:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40dbb3:	83 3b ff             	cmpl   $0xffffffff,(%rbx)
  40dbb6:	74 35                	je     40dbed <caml_ml_flush+0x8d>
  40dbb8:	48 8b 05 b9 0b 22 00 	mov    0x220bb9(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40dbbf:	48 85 c0             	test   %rax,%rax
  40dbc2:	74 0c                	je     40dbd0 <caml_ml_flush+0x70>
  40dbc4:	48 89 df             	mov    %rbx,%rdi
  40dbc7:	ff d0                	callq  *%rax
  40dbc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40dbd0:	48 89 df             	mov    %rbx,%rdi
  40dbd3:	e8 e8 f4 ff ff       	callq  40d0c0 <caml_flush_partial>
  40dbd8:	85 c0                	test   %eax,%eax
  40dbda:	74 f4                	je     40dbd0 <caml_ml_flush+0x70>
  40dbdc:	48 8b 05 8d 0b 22 00 	mov    0x220b8d(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40dbe3:	48 85 c0             	test   %rax,%rax
  40dbe6:	74 05                	je     40dbed <caml_ml_flush+0x8d>
  40dbe8:	48 89 df             	mov    %rbx,%rdi
  40dbeb:	ff d0                	callq  *%rax
  40dbed:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
  40dbf2:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  40dbf9:	00 00 
  40dbfb:	48 89 2d 46 ed 21 00 	mov    %rbp,0x21ed46(%rip)        # 62c948 <caml_local_roots>
  40dc02:	b8 01 00 00 00       	mov    $0x1,%eax
  40dc07:	75 07                	jne    40dc10 <caml_ml_flush+0xb0>
  40dc09:	48 83 c4 68          	add    $0x68,%rsp
  40dc0d:	5b                   	pop    %rbx
  40dc0e:	5d                   	pop    %rbp
  40dc0f:	c3                   	retq   
  40dc10:	e8 5b 3e ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40dc15:	90                   	nop
  40dc16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40dc1d:	00 00 00 

000000000040dc20 <caml_ml_output_char>:
  40dc20:	55                   	push   %rbp
  40dc21:	53                   	push   %rbx
  40dc22:	48 83 ec 68          	sub    $0x68,%rsp
  40dc26:	48 8b 05 4b 0b 22 00 	mov    0x220b4b(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40dc2d:	48 8b 2d 14 ed 21 00 	mov    0x21ed14(%rip),%rbp        # 62c948 <caml_local_roots>
  40dc34:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40dc39:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40dc3e:	48 89 34 24          	mov    %rsi,(%rsp)
  40dc42:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40dc49:	00 00 
  40dc4b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40dc50:	31 c9                	xor    %ecx,%ecx
  40dc52:	48 89 15 ef ec 21 00 	mov    %rdx,0x21ecef(%rip)        # 62c948 <caml_local_roots>
  40dc59:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40dc5e:	48 85 c0             	test   %rax,%rax
  40dc61:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40dc66:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40dc6d:	00 00 
  40dc6f:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  40dc76:	00 00 
  40dc78:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40dc7d:	48 89 64 24 30       	mov    %rsp,0x30(%rsp)
  40dc82:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40dc86:	74 05                	je     40dc8d <caml_ml_output_char+0x6d>
  40dc88:	48 89 df             	mov    %rbx,%rdi
  40dc8b:	ff d0                	callq  *%rax
  40dc8d:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40dc91:	48 3b 43 10          	cmp    0x10(%rbx),%rax
  40dc95:	73 49                	jae    40dce0 <caml_ml_output_char+0xc0>
  40dc97:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40dc9b:	48 89 53 18          	mov    %rdx,0x18(%rbx)
  40dc9f:	48 8b 14 24          	mov    (%rsp),%rdx
  40dca3:	48 d1 fa             	sar    %rdx
  40dca6:	88 10                	mov    %dl,(%rax)
  40dca8:	48 8b 05 c1 0a 22 00 	mov    0x220ac1(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40dcaf:	48 85 c0             	test   %rax,%rax
  40dcb2:	74 05                	je     40dcb9 <caml_ml_output_char+0x99>
  40dcb4:	48 89 df             	mov    %rbx,%rdi
  40dcb7:	ff d0                	callq  *%rax
  40dcb9:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  40dcbe:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40dcc5:	00 00 
  40dcc7:	48 89 2d 7a ec 21 00 	mov    %rbp,0x21ec7a(%rip)        # 62c948 <caml_local_roots>
  40dcce:	b8 01 00 00 00       	mov    $0x1,%eax
  40dcd3:	75 19                	jne    40dcee <caml_ml_output_char+0xce>
  40dcd5:	48 83 c4 68          	add    $0x68,%rsp
  40dcd9:	5b                   	pop    %rbx
  40dcda:	5d                   	pop    %rbp
  40dcdb:	c3                   	retq   
  40dcdc:	0f 1f 40 00          	nopl   0x0(%rax)
  40dce0:	48 89 df             	mov    %rbx,%rdi
  40dce3:	e8 d8 f3 ff ff       	callq  40d0c0 <caml_flush_partial>
  40dce8:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40dcec:	eb a9                	jmp    40dc97 <caml_ml_output_char+0x77>
  40dcee:	e8 7d 3d ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40dcf3:	0f 1f 00             	nopl   (%rax)
  40dcf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40dcfd:	00 00 00 

000000000040dd00 <caml_ml_output_int>:
  40dd00:	55                   	push   %rbp
  40dd01:	53                   	push   %rbx
  40dd02:	48 83 ec 68          	sub    $0x68,%rsp
  40dd06:	48 8b 05 6b 0a 22 00 	mov    0x220a6b(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40dd0d:	48 8b 2d 34 ec 21 00 	mov    0x21ec34(%rip),%rbp        # 62c948 <caml_local_roots>
  40dd14:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40dd19:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40dd1e:	48 89 34 24          	mov    %rsi,(%rsp)
  40dd22:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40dd29:	00 00 
  40dd2b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40dd30:	31 c9                	xor    %ecx,%ecx
  40dd32:	48 89 15 0f ec 21 00 	mov    %rdx,0x21ec0f(%rip)        # 62c948 <caml_local_roots>
  40dd39:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40dd3e:	48 85 c0             	test   %rax,%rax
  40dd41:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40dd46:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40dd4d:	00 00 
  40dd4f:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  40dd56:	00 00 
  40dd58:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40dd5d:	48 89 64 24 30       	mov    %rsp,0x30(%rsp)
  40dd62:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40dd66:	74 05                	je     40dd6d <caml_ml_output_int+0x6d>
  40dd68:	48 89 df             	mov    %rbx,%rdi
  40dd6b:	ff d0                	callq  *%rax
  40dd6d:	48 8b 34 24          	mov    (%rsp),%rsi
  40dd71:	48 89 df             	mov    %rbx,%rdi
  40dd74:	48 d1 fe             	sar    %rsi
  40dd77:	e8 e4 f3 ff ff       	callq  40d160 <caml_putword>
  40dd7c:	48 8b 05 ed 09 22 00 	mov    0x2209ed(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40dd83:	48 85 c0             	test   %rax,%rax
  40dd86:	74 05                	je     40dd8d <caml_ml_output_int+0x8d>
  40dd88:	48 89 df             	mov    %rbx,%rdi
  40dd8b:	ff d0                	callq  *%rax
  40dd8d:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  40dd92:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40dd99:	00 00 
  40dd9b:	48 89 2d a6 eb 21 00 	mov    %rbp,0x21eba6(%rip)        # 62c948 <caml_local_roots>
  40dda2:	b8 01 00 00 00       	mov    $0x1,%eax
  40dda7:	75 07                	jne    40ddb0 <caml_ml_output_int+0xb0>
  40dda9:	48 83 c4 68          	add    $0x68,%rsp
  40ddad:	5b                   	pop    %rbx
  40ddae:	5d                   	pop    %rbp
  40ddaf:	c3                   	retq   
  40ddb0:	e8 bb 3c ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40ddb5:	90                   	nop
  40ddb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ddbd:	00 00 00 

000000000040ddc0 <caml_ml_output_partial>:
  40ddc0:	41 54                	push   %r12
  40ddc2:	55                   	push   %rbp
  40ddc3:	53                   	push   %rbx
  40ddc4:	48 83 ec 70          	sub    $0x70,%rsp
  40ddc8:	4c 8b 25 79 eb 21 00 	mov    0x21eb79(%rip),%r12        # 62c948 <caml_local_roots>
  40ddcf:	48 8b 05 a2 09 22 00 	mov    0x2209a2(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40ddd6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40dddb:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  40dde0:	48 89 0c 24          	mov    %rcx,(%rsp)
  40dde4:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40ddeb:	00 00 
  40dded:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
  40ddf2:	31 c9                	xor    %ecx,%ecx
  40ddf4:	48 89 15 4d eb 21 00 	mov    %rdx,0x21eb4d(%rip)        # 62c948 <caml_local_roots>
  40ddfb:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  40de00:	48 85 c0             	test   %rax,%rax
  40de03:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  40de08:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  40de0d:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  40de12:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40de17:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
  40de1c:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  40de23:	00 00 
  40de25:	48 c7 44 24 28 04 00 	movq   $0x4,0x28(%rsp)
  40de2c:	00 00 
  40de2e:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  40de33:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40de38:	48 89 64 24 50       	mov    %rsp,0x50(%rsp)
  40de3d:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
  40de42:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
  40de46:	74 05                	je     40de4d <caml_ml_output_partial+0x8d>
  40de48:	48 89 ef             	mov    %rbp,%rdi
  40de4b:	ff d0                	callq  *%rax
  40de4d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40de52:	48 8b 14 24          	mov    (%rsp),%rdx
  40de56:	48 89 ef             	mov    %rbp,%rdi
  40de59:	48 d1 fe             	sar    %rsi
  40de5c:	48 03 74 24 10       	add    0x10(%rsp),%rsi
  40de61:	48 d1 fa             	sar    %rdx
  40de64:	e8 b7 f3 ff ff       	callq  40d220 <caml_putblock>
  40de69:	48 63 d8             	movslq %eax,%rbx
  40de6c:	48 8b 05 fd 08 22 00 	mov    0x2208fd(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40de73:	48 85 c0             	test   %rax,%rax
  40de76:	74 05                	je     40de7d <caml_ml_output_partial+0xbd>
  40de78:	48 89 ef             	mov    %rbp,%rdi
  40de7b:	ff d0                	callq  *%rax
  40de7d:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  40de82:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40de89:	00 00 
  40de8b:	4c 89 25 b6 ea 21 00 	mov    %r12,0x21eab6(%rip)        # 62c948 <caml_local_roots>
  40de92:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  40de97:	75 09                	jne    40dea2 <caml_ml_output_partial+0xe2>
  40de99:	48 83 c4 70          	add    $0x70,%rsp
  40de9d:	5b                   	pop    %rbx
  40de9e:	5d                   	pop    %rbp
  40de9f:	41 5c                	pop    %r12
  40dea1:	c3                   	retq   
  40dea2:	e8 c9 3b ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40dea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40deae:	00 00 

000000000040deb0 <caml_ml_output_bytes>:
  40deb0:	41 55                	push   %r13
  40deb2:	41 54                	push   %r12
  40deb4:	55                   	push   %rbp
  40deb5:	53                   	push   %rbx
  40deb6:	48 83 ec 78          	sub    $0x78,%rsp
  40deba:	4c 8b 2d 87 ea 21 00 	mov    0x21ea87(%rip),%r13        # 62c948 <caml_local_roots>
  40dec1:	48 8b 05 b0 08 22 00 	mov    0x2208b0(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40dec8:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40decd:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  40ded2:	48 89 0c 24          	mov    %rcx,(%rsp)
  40ded6:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
  40dedb:	48 8b 1c 24          	mov    (%rsp),%rbx
  40dedf:	48 89 15 62 ea 21 00 	mov    %rdx,0x21ea62(%rip)        # 62c948 <caml_local_roots>
  40dee6:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  40deeb:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  40def0:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40def7:	00 00 
  40def9:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
  40defe:	31 c9                	xor    %ecx,%ecx
  40df00:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  40df05:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40df0a:	48 d1 fd             	sar    %rbp
  40df0d:	48 d1 fb             	sar    %rbx
  40df10:	48 85 c0             	test   %rax,%rax
  40df13:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  40df18:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  40df1d:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40df22:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
  40df27:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  40df2e:	00 00 
  40df30:	48 c7 44 24 28 04 00 	movq   $0x4,0x28(%rsp)
  40df37:	00 00 
  40df39:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
  40df3e:	48 89 64 24 50       	mov    %rsp,0x50(%rsp)
  40df43:	4c 8b 67 08          	mov    0x8(%rdi),%r12
  40df47:	74 22                	je     40df6b <caml_ml_output_bytes+0xbb>
  40df49:	4c 89 e7             	mov    %r12,%rdi
  40df4c:	ff d0                	callq  *%rax
  40df4e:	eb 1b                	jmp    40df6b <caml_ml_output_bytes+0xbb>
  40df50:	48 89 ee             	mov    %rbp,%rsi
  40df53:	48 03 74 24 10       	add    0x10(%rsp),%rsi
  40df58:	48 89 da             	mov    %rbx,%rdx
  40df5b:	4c 89 e7             	mov    %r12,%rdi
  40df5e:	e8 bd f2 ff ff       	callq  40d220 <caml_putblock>
  40df63:	48 98                	cltq   
  40df65:	48 01 c5             	add    %rax,%rbp
  40df68:	48 29 c3             	sub    %rax,%rbx
  40df6b:	48 85 db             	test   %rbx,%rbx
  40df6e:	7f e0                	jg     40df50 <caml_ml_output_bytes+0xa0>
  40df70:	48 8b 05 f9 07 22 00 	mov    0x2207f9(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40df77:	48 85 c0             	test   %rax,%rax
  40df7a:	74 05                	je     40df81 <caml_ml_output_bytes+0xd1>
  40df7c:	4c 89 e7             	mov    %r12,%rdi
  40df7f:	ff d0                	callq  *%rax
  40df81:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  40df86:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40df8d:	00 00 
  40df8f:	4c 89 2d b2 e9 21 00 	mov    %r13,0x21e9b2(%rip)        # 62c948 <caml_local_roots>
  40df96:	b8 01 00 00 00       	mov    $0x1,%eax
  40df9b:	75 0b                	jne    40dfa8 <caml_ml_output_bytes+0xf8>
  40df9d:	48 83 c4 78          	add    $0x78,%rsp
  40dfa1:	5b                   	pop    %rbx
  40dfa2:	5d                   	pop    %rbp
  40dfa3:	41 5c                	pop    %r12
  40dfa5:	41 5d                	pop    %r13
  40dfa7:	c3                   	retq   
  40dfa8:	e8 c3 3a ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40dfad:	0f 1f 00             	nopl   (%rax)

000000000040dfb0 <caml_ml_output>:
  40dfb0:	e9 fb fe ff ff       	jmpq   40deb0 <caml_ml_output_bytes>
  40dfb5:	90                   	nop
  40dfb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40dfbd:	00 00 00 

000000000040dfc0 <caml_ml_seek_out>:
  40dfc0:	55                   	push   %rbp
  40dfc1:	53                   	push   %rbx
  40dfc2:	48 83 ec 68          	sub    $0x68,%rsp
  40dfc6:	48 8b 05 ab 07 22 00 	mov    0x2207ab(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40dfcd:	48 8b 2d 74 e9 21 00 	mov    0x21e974(%rip),%rbp        # 62c948 <caml_local_roots>
  40dfd4:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40dfd9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40dfde:	48 89 34 24          	mov    %rsi,(%rsp)
  40dfe2:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40dfe9:	00 00 
  40dfeb:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40dff0:	31 c9                	xor    %ecx,%ecx
  40dff2:	48 89 15 4f e9 21 00 	mov    %rdx,0x21e94f(%rip)        # 62c948 <caml_local_roots>
  40dff9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40dffe:	48 85 c0             	test   %rax,%rax
  40e001:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40e006:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40e00d:	00 00 
  40e00f:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  40e016:	00 00 
  40e018:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40e01d:	48 89 64 24 30       	mov    %rsp,0x30(%rsp)
  40e022:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40e026:	74 05                	je     40e02d <caml_ml_seek_out+0x6d>
  40e028:	48 89 df             	mov    %rbx,%rdi
  40e02b:	ff d0                	callq  *%rax
  40e02d:	48 8b 34 24          	mov    (%rsp),%rsi
  40e031:	48 89 df             	mov    %rbx,%rdi
  40e034:	48 d1 fe             	sar    %rsi
  40e037:	e8 e4 f2 ff ff       	callq  40d320 <caml_seek_out>
  40e03c:	48 8b 05 2d 07 22 00 	mov    0x22072d(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40e043:	48 85 c0             	test   %rax,%rax
  40e046:	74 05                	je     40e04d <caml_ml_seek_out+0x8d>
  40e048:	48 89 df             	mov    %rbx,%rdi
  40e04b:	ff d0                	callq  *%rax
  40e04d:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  40e052:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40e059:	00 00 
  40e05b:	48 89 2d e6 e8 21 00 	mov    %rbp,0x21e8e6(%rip)        # 62c948 <caml_local_roots>
  40e062:	b8 01 00 00 00       	mov    $0x1,%eax
  40e067:	75 07                	jne    40e070 <caml_ml_seek_out+0xb0>
  40e069:	48 83 c4 68          	add    $0x68,%rsp
  40e06d:	5b                   	pop    %rbx
  40e06e:	5d                   	pop    %rbp
  40e06f:	c3                   	retq   
  40e070:	e8 fb 39 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40e075:	90                   	nop
  40e076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40e07d:	00 00 00 

000000000040e080 <caml_ml_seek_out_64>:
  40e080:	55                   	push   %rbp
  40e081:	53                   	push   %rbx
  40e082:	48 83 ec 68          	sub    $0x68,%rsp
  40e086:	48 8b 05 eb 06 22 00 	mov    0x2206eb(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40e08d:	48 8b 2d b4 e8 21 00 	mov    0x21e8b4(%rip),%rbp        # 62c948 <caml_local_roots>
  40e094:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40e099:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40e09e:	48 89 34 24          	mov    %rsi,(%rsp)
  40e0a2:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40e0a9:	00 00 
  40e0ab:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40e0b0:	31 c9                	xor    %ecx,%ecx
  40e0b2:	48 89 15 8f e8 21 00 	mov    %rdx,0x21e88f(%rip)        # 62c948 <caml_local_roots>
  40e0b9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40e0be:	48 85 c0             	test   %rax,%rax
  40e0c1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40e0c6:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40e0cd:	00 00 
  40e0cf:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  40e0d6:	00 00 
  40e0d8:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40e0dd:	48 89 64 24 30       	mov    %rsp,0x30(%rsp)
  40e0e2:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40e0e6:	74 05                	je     40e0ed <caml_ml_seek_out_64+0x6d>
  40e0e8:	48 89 df             	mov    %rbx,%rdi
  40e0eb:	ff d0                	callq  *%rax
  40e0ed:	48 8b 04 24          	mov    (%rsp),%rax
  40e0f1:	48 89 df             	mov    %rbx,%rdi
  40e0f4:	48 8b 70 08          	mov    0x8(%rax),%rsi
  40e0f8:	e8 23 f2 ff ff       	callq  40d320 <caml_seek_out>
  40e0fd:	48 8b 05 6c 06 22 00 	mov    0x22066c(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40e104:	48 85 c0             	test   %rax,%rax
  40e107:	74 05                	je     40e10e <caml_ml_seek_out_64+0x8e>
  40e109:	48 89 df             	mov    %rbx,%rdi
  40e10c:	ff d0                	callq  *%rax
  40e10e:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  40e113:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40e11a:	00 00 
  40e11c:	48 89 2d 25 e8 21 00 	mov    %rbp,0x21e825(%rip)        # 62c948 <caml_local_roots>
  40e123:	b8 01 00 00 00       	mov    $0x1,%eax
  40e128:	75 07                	jne    40e131 <caml_ml_seek_out_64+0xb1>
  40e12a:	48 83 c4 68          	add    $0x68,%rsp
  40e12e:	5b                   	pop    %rbx
  40e12f:	5d                   	pop    %rbp
  40e130:	c3                   	retq   
  40e131:	e8 3a 39 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40e136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40e13d:	00 00 00 

000000000040e140 <caml_ml_pos_out>:
  40e140:	53                   	push   %rbx
  40e141:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40e145:	48 8b 58 08          	mov    0x8(%rax),%rbx
  40e149:	48 03 58 18          	add    0x18(%rax),%rbx
  40e14d:	48 83 c0 50          	add    $0x50,%rax
  40e151:	48 29 c3             	sub    %rax,%rbx
  40e154:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
  40e15b:	ff ff 3f 
  40e15e:	48 39 c3             	cmp    %rax,%rbx
  40e161:	7e 15                	jle    40e178 <caml_ml_pos_out+0x38>
  40e163:	e8 08 38 ff ff       	callq  401970 <__errno_location@plt>
  40e168:	bf 01 00 00 00       	mov    $0x1,%edi
  40e16d:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
  40e173:	e8 08 39 00 00       	callq  411a80 <caml_sys_error>
  40e178:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  40e17d:	5b                   	pop    %rbx
  40e17e:	c3                   	retq   
  40e17f:	90                   	nop

000000000040e180 <caml_ml_pos_out_64>:
  40e180:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40e184:	48 8b 78 08          	mov    0x8(%rax),%rdi
  40e188:	48 03 78 18          	add    0x18(%rax),%rdi
  40e18c:	48 83 c0 50          	add    $0x50,%rax
  40e190:	48 29 c7             	sub    %rax,%rdi
  40e193:	e9 18 c9 ff ff       	jmpq   40aab0 <caml_copy_int64>
  40e198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40e19f:	00 

000000000040e1a0 <caml_ml_input_char>:
  40e1a0:	41 54                	push   %r12
  40e1a2:	55                   	push   %rbp
  40e1a3:	53                   	push   %rbx
  40e1a4:	48 83 ec 60          	sub    $0x60,%rsp
  40e1a8:	48 8b 05 c9 05 22 00 	mov    0x2205c9(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40e1af:	4c 8b 25 92 e7 21 00 	mov    0x21e792(%rip),%r12        # 62c948 <caml_local_roots>
  40e1b6:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40e1bb:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40e1c0:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40e1c7:	00 00 
  40e1c9:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40e1d0:	00 00 
  40e1d2:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40e1d7:	31 c9                	xor    %ecx,%ecx
  40e1d9:	48 89 15 68 e7 21 00 	mov    %rdx,0x21e768(%rip)        # 62c948 <caml_local_roots>
  40e1e0:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40e1e5:	48 85 c0             	test   %rax,%rax
  40e1e8:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
  40e1ed:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  40e1f4:	00 00 
  40e1f6:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40e1fb:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40e1ff:	74 05                	je     40e206 <caml_ml_input_char+0x66>
  40e201:	48 89 df             	mov    %rbx,%rdi
  40e204:	ff d0                	callq  *%rax
  40e206:	48 8b 43 18          	mov    0x18(%rbx),%rax
  40e20a:	48 3b 43 20          	cmp    0x20(%rbx),%rax
  40e20e:	73 48                	jae    40e258 <caml_ml_input_char+0xb8>
  40e210:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40e214:	48 89 53 18          	mov    %rdx,0x18(%rbx)
  40e218:	0f b6 28             	movzbl (%rax),%ebp
  40e21b:	48 8b 05 4e 05 22 00 	mov    0x22054e(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40e222:	48 85 c0             	test   %rax,%rax
  40e225:	74 05                	je     40e22c <caml_ml_input_char+0x8c>
  40e227:	48 89 df             	mov    %rbx,%rdi
  40e22a:	ff d0                	callq  *%rax
  40e22c:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
  40e231:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  40e238:	00 00 
  40e23a:	4c 89 25 07 e7 21 00 	mov    %r12,0x21e707(%rip)        # 62c948 <caml_local_roots>
  40e241:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
  40e246:	75 1d                	jne    40e265 <caml_ml_input_char+0xc5>
  40e248:	48 83 c4 60          	add    $0x60,%rsp
  40e24c:	5b                   	pop    %rbx
  40e24d:	5d                   	pop    %rbp
  40e24e:	41 5c                	pop    %r12
  40e250:	c3                   	retq   
  40e251:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40e258:	48 89 df             	mov    %rbx,%rdi
  40e25b:	e8 40 f1 ff ff       	callq  40d3a0 <caml_refill>
  40e260:	0f b6 e8             	movzbl %al,%ebp
  40e263:	eb b6                	jmp    40e21b <caml_ml_input_char+0x7b>
  40e265:	e8 06 38 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40e26a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040e270 <caml_ml_input_int>:
  40e270:	41 54                	push   %r12
  40e272:	55                   	push   %rbp
  40e273:	53                   	push   %rbx
  40e274:	48 83 ec 60          	sub    $0x60,%rsp
  40e278:	48 8b 05 f9 04 22 00 	mov    0x2204f9(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40e27f:	4c 8b 25 c2 e6 21 00 	mov    0x21e6c2(%rip),%r12        # 62c948 <caml_local_roots>
  40e286:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40e28b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40e290:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40e297:	00 00 
  40e299:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40e2a0:	00 00 
  40e2a2:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40e2a7:	31 c9                	xor    %ecx,%ecx
  40e2a9:	48 89 15 98 e6 21 00 	mov    %rdx,0x21e698(%rip)        # 62c948 <caml_local_roots>
  40e2b0:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40e2b5:	48 85 c0             	test   %rax,%rax
  40e2b8:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
  40e2bd:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  40e2c4:	00 00 
  40e2c6:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40e2cb:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
  40e2cf:	74 05                	je     40e2d6 <caml_ml_input_int+0x66>
  40e2d1:	48 89 ef             	mov    %rbp,%rdi
  40e2d4:	ff d0                	callq  *%rax
  40e2d6:	48 89 ef             	mov    %rbp,%rdi
  40e2d9:	e8 12 f1 ff ff       	callq  40d3f0 <caml_getword>
  40e2de:	89 c3                	mov    %eax,%ebx
  40e2e0:	48 8b 05 89 04 22 00 	mov    0x220489(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40e2e7:	48 85 c0             	test   %rax,%rax
  40e2ea:	74 05                	je     40e2f1 <caml_ml_input_int+0x81>
  40e2ec:	48 89 ef             	mov    %rbp,%rdi
  40e2ef:	ff d0                	callq  *%rax
  40e2f1:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
  40e2f6:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  40e2fd:	00 00 
  40e2ff:	48 63 db             	movslq %ebx,%rbx
  40e302:	4c 89 25 3f e6 21 00 	mov    %r12,0x21e63f(%rip)        # 62c948 <caml_local_roots>
  40e309:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  40e30e:	75 09                	jne    40e319 <caml_ml_input_int+0xa9>
  40e310:	48 83 c4 60          	add    $0x60,%rsp
  40e314:	5b                   	pop    %rbx
  40e315:	5d                   	pop    %rbp
  40e316:	41 5c                	pop    %r12
  40e318:	c3                   	retq   
  40e319:	e8 52 37 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40e31e:	66 90                	xchg   %ax,%ax

000000000040e320 <caml_ml_input>:
  40e320:	41 57                	push   %r15
  40e322:	41 56                	push   %r14
  40e324:	41 55                	push   %r13
  40e326:	41 54                	push   %r12
  40e328:	55                   	push   %rbp
  40e329:	53                   	push   %rbx
  40e32a:	48 83 ec 78          	sub    $0x78,%rsp
  40e32e:	4c 8b 25 13 e6 21 00 	mov    0x21e613(%rip),%r12        # 62c948 <caml_local_roots>
  40e335:	48 8b 05 3c 04 22 00 	mov    0x22043c(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40e33c:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40e341:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  40e346:	48 89 0c 24          	mov    %rcx,(%rsp)
  40e34a:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40e351:	00 00 
  40e353:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
  40e358:	31 c9                	xor    %ecx,%ecx
  40e35a:	48 89 15 e7 e5 21 00 	mov    %rdx,0x21e5e7(%rip)        # 62c948 <caml_local_roots>
  40e361:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  40e366:	48 85 c0             	test   %rax,%rax
  40e369:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  40e36e:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  40e373:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  40e378:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40e37d:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
  40e382:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  40e389:	00 00 
  40e38b:	48 c7 44 24 28 04 00 	movq   $0x4,0x28(%rsp)
  40e392:	00 00 
  40e394:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  40e399:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40e39e:	48 89 64 24 50       	mov    %rsp,0x50(%rsp)
  40e3a3:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
  40e3a8:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
  40e3ac:	74 05                	je     40e3b3 <caml_ml_input+0x93>
  40e3ae:	4c 89 ef             	mov    %r13,%rdi
  40e3b1:	ff d0                	callq  *%rax
  40e3b3:	48 8b 04 24          	mov    (%rsp),%rax
  40e3b7:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
  40e3bc:	bb ff ff ff 7f       	mov    $0x7fffffff,%ebx
  40e3c1:	49 8b 75 18          	mov    0x18(%r13),%rsi
  40e3c5:	48 d1 f8             	sar    %rax
  40e3c8:	49 d1 fe             	sar    %r14
  40e3cb:	48 3d fe ff ff 7f    	cmp    $0x7ffffffe,%rax
  40e3d1:	0f 4e d8             	cmovle %eax,%ebx
  40e3d4:	89 dd                	mov    %ebx,%ebp
  40e3d6:	49 8b 5d 20          	mov    0x20(%r13),%rbx
  40e3da:	48 29 f3             	sub    %rsi,%rbx
  40e3dd:	39 dd                	cmp    %ebx,%ebp
  40e3df:	7e 5f                	jle    40e440 <caml_ml_input+0x120>
  40e3e1:	85 db                	test   %ebx,%ebx
  40e3e3:	7e 63                	jle    40e448 <caml_ml_input+0x128>
  40e3e5:	48 63 db             	movslq %ebx,%rbx
  40e3e8:	4c 89 f7             	mov    %r14,%rdi
  40e3eb:	48 03 7c 24 10       	add    0x10(%rsp),%rdi
  40e3f0:	48 89 da             	mov    %rbx,%rdx
  40e3f3:	e8 38 39 ff ff       	callq  401d30 <memmove@plt>
  40e3f8:	49 01 5d 18          	add    %rbx,0x18(%r13)
  40e3fc:	48 8b 05 6d 03 22 00 	mov    0x22036d(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40e403:	48 85 c0             	test   %rax,%rax
  40e406:	74 05                	je     40e40d <caml_ml_input+0xed>
  40e408:	4c 89 ef             	mov    %r13,%rdi
  40e40b:	ff d0                	callq  *%rax
  40e40d:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  40e412:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40e419:	00 00 
  40e41b:	4c 89 25 26 e5 21 00 	mov    %r12,0x21e526(%rip)        # 62c948 <caml_local_roots>
  40e422:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  40e427:	75 6f                	jne    40e498 <caml_ml_input+0x178>
  40e429:	48 83 c4 78          	add    $0x78,%rsp
  40e42d:	5b                   	pop    %rbx
  40e42e:	5d                   	pop    %rbp
  40e42f:	41 5c                	pop    %r12
  40e431:	41 5d                	pop    %r13
  40e433:	41 5e                	pop    %r14
  40e435:	41 5f                	pop    %r15
  40e437:	c3                   	retq   
  40e438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40e43f:	00 
  40e440:	48 63 dd             	movslq %ebp,%rbx
  40e443:	eb a3                	jmp    40e3e8 <caml_ml_input+0xc8>
  40e445:	0f 1f 00             	nopl   (%rax)
  40e448:	49 8b 4d 10          	mov    0x10(%r13),%rcx
  40e44c:	4d 8d 7d 50          	lea    0x50(%r13),%r15
  40e450:	41 8b 75 4c          	mov    0x4c(%r13),%esi
  40e454:	41 8b 7d 00          	mov    0x0(%r13),%edi
  40e458:	4c 89 fa             	mov    %r15,%rdx
  40e45b:	4c 29 f9             	sub    %r15,%rcx
  40e45e:	e8 bd a8 00 00       	callq  418d20 <caml_read_fd>
  40e463:	48 63 d0             	movslq %eax,%rdx
  40e466:	49 01 55 08          	add    %rdx,0x8(%r13)
  40e46a:	4c 89 f7             	mov    %r14,%rdi
  40e46d:	4c 01 fa             	add    %r15,%rdx
  40e470:	39 c5                	cmp    %eax,%ebp
  40e472:	4c 89 fe             	mov    %r15,%rsi
  40e475:	0f 4e c5             	cmovle %ebp,%eax
  40e478:	48 03 7c 24 10       	add    0x10(%rsp),%rdi
  40e47d:	49 89 55 20          	mov    %rdx,0x20(%r13)
  40e481:	48 63 d8             	movslq %eax,%rbx
  40e484:	48 89 da             	mov    %rbx,%rdx
  40e487:	49 01 df             	add    %rbx,%r15
  40e48a:	e8 a1 38 ff ff       	callq  401d30 <memmove@plt>
  40e48f:	4d 89 7d 18          	mov    %r15,0x18(%r13)
  40e493:	e9 64 ff ff ff       	jmpq   40e3fc <caml_ml_input+0xdc>
  40e498:	e8 d3 35 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40e49d:	0f 1f 00             	nopl   (%rax)

000000000040e4a0 <caml_ml_seek_in>:
  40e4a0:	55                   	push   %rbp
  40e4a1:	53                   	push   %rbx
  40e4a2:	48 83 ec 68          	sub    $0x68,%rsp
  40e4a6:	48 8b 05 cb 02 22 00 	mov    0x2202cb(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40e4ad:	48 8b 2d 94 e4 21 00 	mov    0x21e494(%rip),%rbp        # 62c948 <caml_local_roots>
  40e4b4:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40e4b9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40e4be:	48 89 34 24          	mov    %rsi,(%rsp)
  40e4c2:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40e4c9:	00 00 
  40e4cb:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40e4d0:	31 c9                	xor    %ecx,%ecx
  40e4d2:	48 89 15 6f e4 21 00 	mov    %rdx,0x21e46f(%rip)        # 62c948 <caml_local_roots>
  40e4d9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40e4de:	48 85 c0             	test   %rax,%rax
  40e4e1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40e4e6:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40e4ed:	00 00 
  40e4ef:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  40e4f6:	00 00 
  40e4f8:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40e4fd:	48 89 64 24 30       	mov    %rsp,0x30(%rsp)
  40e502:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40e506:	74 05                	je     40e50d <caml_ml_seek_in+0x6d>
  40e508:	48 89 df             	mov    %rbx,%rdi
  40e50b:	ff d0                	callq  *%rax
  40e50d:	48 8b 34 24          	mov    (%rsp),%rsi
  40e511:	48 89 df             	mov    %rbx,%rdi
  40e514:	48 d1 fe             	sar    %rsi
  40e517:	e8 54 f0 ff ff       	callq  40d570 <caml_seek_in>
  40e51c:	48 8b 05 4d 02 22 00 	mov    0x22024d(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40e523:	48 85 c0             	test   %rax,%rax
  40e526:	74 05                	je     40e52d <caml_ml_seek_in+0x8d>
  40e528:	48 89 df             	mov    %rbx,%rdi
  40e52b:	ff d0                	callq  *%rax
  40e52d:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  40e532:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40e539:	00 00 
  40e53b:	48 89 2d 06 e4 21 00 	mov    %rbp,0x21e406(%rip)        # 62c948 <caml_local_roots>
  40e542:	b8 01 00 00 00       	mov    $0x1,%eax
  40e547:	75 07                	jne    40e550 <caml_ml_seek_in+0xb0>
  40e549:	48 83 c4 68          	add    $0x68,%rsp
  40e54d:	5b                   	pop    %rbx
  40e54e:	5d                   	pop    %rbp
  40e54f:	c3                   	retq   
  40e550:	e8 1b 35 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40e555:	90                   	nop
  40e556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40e55d:	00 00 00 

000000000040e560 <caml_ml_seek_in_64>:
  40e560:	55                   	push   %rbp
  40e561:	53                   	push   %rbx
  40e562:	48 83 ec 68          	sub    $0x68,%rsp
  40e566:	48 8b 05 0b 02 22 00 	mov    0x22020b(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40e56d:	48 8b 2d d4 e3 21 00 	mov    0x21e3d4(%rip),%rbp        # 62c948 <caml_local_roots>
  40e574:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40e579:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40e57e:	48 89 34 24          	mov    %rsi,(%rsp)
  40e582:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40e589:	00 00 
  40e58b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40e590:	31 c9                	xor    %ecx,%ecx
  40e592:	48 89 15 af e3 21 00 	mov    %rdx,0x21e3af(%rip)        # 62c948 <caml_local_roots>
  40e599:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40e59e:	48 85 c0             	test   %rax,%rax
  40e5a1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40e5a6:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40e5ad:	00 00 
  40e5af:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  40e5b6:	00 00 
  40e5b8:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40e5bd:	48 89 64 24 30       	mov    %rsp,0x30(%rsp)
  40e5c2:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40e5c6:	74 05                	je     40e5cd <caml_ml_seek_in_64+0x6d>
  40e5c8:	48 89 df             	mov    %rbx,%rdi
  40e5cb:	ff d0                	callq  *%rax
  40e5cd:	48 8b 04 24          	mov    (%rsp),%rax
  40e5d1:	48 89 df             	mov    %rbx,%rdi
  40e5d4:	48 8b 70 08          	mov    0x8(%rax),%rsi
  40e5d8:	e8 93 ef ff ff       	callq  40d570 <caml_seek_in>
  40e5dd:	48 8b 05 8c 01 22 00 	mov    0x22018c(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40e5e4:	48 85 c0             	test   %rax,%rax
  40e5e7:	74 05                	je     40e5ee <caml_ml_seek_in_64+0x8e>
  40e5e9:	48 89 df             	mov    %rbx,%rdi
  40e5ec:	ff d0                	callq  *%rax
  40e5ee:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  40e5f3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40e5fa:	00 00 
  40e5fc:	48 89 2d 45 e3 21 00 	mov    %rbp,0x21e345(%rip)        # 62c948 <caml_local_roots>
  40e603:	b8 01 00 00 00       	mov    $0x1,%eax
  40e608:	75 07                	jne    40e611 <caml_ml_seek_in_64+0xb1>
  40e60a:	48 83 c4 68          	add    $0x68,%rsp
  40e60e:	5b                   	pop    %rbx
  40e60f:	5d                   	pop    %rbp
  40e610:	c3                   	retq   
  40e611:	e8 5a 34 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40e616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40e61d:	00 00 00 

000000000040e620 <caml_ml_pos_in>:
  40e620:	53                   	push   %rbx
  40e621:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40e625:	48 8b 58 08          	mov    0x8(%rax),%rbx
  40e629:	48 03 58 18          	add    0x18(%rax),%rbx
  40e62d:	48 2b 58 20          	sub    0x20(%rax),%rbx
  40e631:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
  40e638:	ff ff 3f 
  40e63b:	48 39 c3             	cmp    %rax,%rbx
  40e63e:	7e 15                	jle    40e655 <caml_ml_pos_in+0x35>
  40e640:	e8 2b 33 ff ff       	callq  401970 <__errno_location@plt>
  40e645:	bf 01 00 00 00       	mov    $0x1,%edi
  40e64a:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
  40e650:	e8 2b 34 00 00       	callq  411a80 <caml_sys_error>
  40e655:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  40e65a:	5b                   	pop    %rbx
  40e65b:	c3                   	retq   
  40e65c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040e660 <caml_ml_pos_in_64>:
  40e660:	48 8b 47 08          	mov    0x8(%rdi),%rax
  40e664:	48 8b 78 08          	mov    0x8(%rax),%rdi
  40e668:	48 03 78 18          	add    0x18(%rax),%rdi
  40e66c:	48 2b 78 20          	sub    0x20(%rax),%rdi
  40e670:	e9 3b c4 ff ff       	jmpq   40aab0 <caml_copy_int64>
  40e675:	90                   	nop
  40e676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40e67d:	00 00 00 

000000000040e680 <caml_ml_input_scan_line>:
  40e680:	41 54                	push   %r12
  40e682:	55                   	push   %rbp
  40e683:	53                   	push   %rbx
  40e684:	48 83 ec 60          	sub    $0x60,%rsp
  40e688:	48 8b 05 e9 00 22 00 	mov    0x2200e9(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40e68f:	48 8b 2d b2 e2 21 00 	mov    0x21e2b2(%rip),%rbp        # 62c948 <caml_local_roots>
  40e696:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40e69b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  40e6a0:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  40e6a7:	00 00 
  40e6a9:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40e6b0:	00 00 
  40e6b2:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  40e6b7:	31 c9                	xor    %ecx,%ecx
  40e6b9:	48 89 15 88 e2 21 00 	mov    %rdx,0x21e288(%rip)        # 62c948 <caml_local_roots>
  40e6c0:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40e6c5:	48 85 c0             	test   %rax,%rax
  40e6c8:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  40e6cd:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  40e6d4:	00 00 
  40e6d6:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  40e6db:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40e6df:	74 05                	je     40e6e6 <caml_ml_input_scan_line+0x66>
  40e6e1:	48 89 df             	mov    %rbx,%rdi
  40e6e4:	ff d0                	callq  *%rax
  40e6e6:	48 89 df             	mov    %rbx,%rdi
  40e6e9:	e8 12 ef ff ff       	callq  40d600 <caml_input_scan_line>
  40e6ee:	48 8b 15 7b 00 22 00 	mov    0x22007b(%rip),%rdx        # 62e770 <caml_channel_mutex_unlock>
  40e6f5:	49 89 c4             	mov    %rax,%r12
  40e6f8:	48 85 d2             	test   %rdx,%rdx
  40e6fb:	74 05                	je     40e702 <caml_ml_input_scan_line+0x82>
  40e6fd:	48 89 df             	mov    %rbx,%rdi
  40e700:	ff d2                	callq  *%rdx
  40e702:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
  40e707:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  40e70e:	00 00 
  40e710:	48 89 2d 31 e2 21 00 	mov    %rbp,0x21e231(%rip)        # 62c948 <caml_local_roots>
  40e717:	4b 8d 44 24 01       	lea    0x1(%r12,%r12,1),%rax
  40e71c:	75 09                	jne    40e727 <caml_ml_input_scan_line+0xa7>
  40e71e:	48 83 c4 60          	add    $0x60,%rsp
  40e722:	5b                   	pop    %rbx
  40e723:	5d                   	pop    %rbp
  40e724:	41 5c                	pop    %r12
  40e726:	c3                   	retq   
  40e727:	e8 44 33 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40e72c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040e730 <extern_replay_trail>:
  40e730:	48 8b 3d b9 10 22 00 	mov    0x2210b9(%rip),%rdi        # 62f7f0 <extern_trail_block>
  40e737:	4c 8b 05 aa 10 22 00 	mov    0x2210aa(%rip),%r8        # 62f7e8 <extern_trail_cur>
  40e73e:	53                   	push   %rbx
  40e73f:	90                   	nop
  40e740:	48 8d 57 08          	lea    0x8(%rdi),%rdx
  40e744:	49 39 d0             	cmp    %rdx,%r8
  40e747:	76 3a                	jbe    40e783 <extern_replay_trail+0x53>
  40e749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40e750:	48 8b 02             	mov    (%rdx),%rax
  40e753:	48 83 c2 10          	add    $0x10,%rdx
  40e757:	48 89 c1             	mov    %rax,%rcx
  40e75a:	83 e0 03             	and    $0x3,%eax
  40e75d:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
  40e761:	48 c1 e0 08          	shl    $0x8,%rax
  40e765:	48 8b 71 f8          	mov    -0x8(%rcx),%rsi
  40e769:	48 81 e6 ff fc ff ff 	and    $0xfffffffffffffcff,%rsi
  40e770:	48 09 f0             	or     %rsi,%rax
  40e773:	48 89 41 f8          	mov    %rax,-0x8(%rcx)
  40e777:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  40e77b:	49 39 d0             	cmp    %rdx,%r8
  40e77e:	48 89 01             	mov    %rax,(%rcx)
  40e781:	77 cd                	ja     40e750 <extern_replay_trail+0x20>
  40e783:	48 81 ff 00 f8 62 00 	cmp    $0x62f800,%rdi
  40e78a:	74 14                	je     40e7a0 <extern_replay_trail+0x70>
  40e78c:	48 8b 1f             	mov    (%rdi),%rbx
  40e78f:	e8 cc 31 ff ff       	callq  401960 <free@plt>
  40e794:	4c 8d 83 18 40 00 00 	lea    0x4018(%rbx),%r8
  40e79b:	48 89 df             	mov    %rbx,%rdi
  40e79e:	eb a0                	jmp    40e740 <extern_replay_trail+0x10>
  40e7a0:	48 c7 05 45 10 22 00 	movq   $0x62f800,0x221045(%rip)        # 62f7f0 <extern_trail_block>
  40e7a7:	00 f8 62 00 
  40e7ab:	48 c7 05 32 10 22 00 	movq   $0x62f808,0x221032(%rip)        # 62f7e8 <extern_trail_cur>
  40e7b2:	08 f8 62 00 
  40e7b6:	5b                   	pop    %rbx
  40e7b7:	c3                   	retq   
  40e7b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40e7bf:	00 

000000000040e7c0 <init_extern_output>:
  40e7c0:	48 83 ec 08          	sub    $0x8,%rsp
  40e7c4:	bf b8 1f 00 00       	mov    $0x1fb8,%edi
  40e7c9:	48 c7 05 f4 ff 21 00 	movq   $0x0,0x21fff4(%rip)        # 62e7c8 <extern_userprovided_output>
  40e7d0:	00 00 00 00 
  40e7d4:	e8 b7 34 ff ff       	callq  401c90 <malloc@plt>
  40e7d9:	48 85 c0             	test   %rax,%rax
  40e7dc:	48 89 05 cd ff 21 00 	mov    %rax,0x21ffcd(%rip)        # 62e7b0 <extern_output_first>
  40e7e3:	74 2b                	je     40e810 <init_extern_output+0x50>
  40e7e5:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40e7e9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  40e7f0:	48 89 05 b1 ff 21 00 	mov    %rax,0x21ffb1(%rip)        # 62e7a8 <extern_output_block>
  40e7f7:	48 05 b4 1f 00 00    	add    $0x1fb4,%rax
  40e7fd:	48 89 15 bc ff 21 00 	mov    %rdx,0x21ffbc(%rip)        # 62e7c0 <extern_ptr>
  40e804:	48 89 05 ad ff 21 00 	mov    %rax,0x21ffad(%rip)        # 62e7b8 <extern_limit>
  40e80b:	48 83 c4 08          	add    $0x8,%rsp
  40e80f:	c3                   	retq   
  40e810:	e8 eb be 00 00       	callq  41a700 <caml_raise_out_of_memory>
  40e815:	90                   	nop
  40e816:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40e81d:	00 00 00 

000000000040e820 <free_extern_output.part.0>:
  40e820:	48 8b 3d 89 ff 21 00 	mov    0x21ff89(%rip),%rdi        # 62e7b0 <extern_output_first>
  40e827:	53                   	push   %rbx
  40e828:	48 85 ff             	test   %rdi,%rdi
  40e82b:	74 13                	je     40e840 <free_extern_output.part.0+0x20>
  40e82d:	0f 1f 00             	nopl   (%rax)
  40e830:	48 8b 1f             	mov    (%rdi),%rbx
  40e833:	e8 28 31 ff ff       	callq  401960 <free@plt>
  40e838:	48 85 db             	test   %rbx,%rbx
  40e83b:	48 89 df             	mov    %rbx,%rdi
  40e83e:	75 f0                	jne    40e830 <free_extern_output.part.0+0x10>
  40e840:	48 8b 3d 69 df 21 00 	mov    0x21df69(%rip),%rdi        # 62c7b0 <extern_stack>
  40e847:	48 c7 05 5e ff 21 00 	movq   $0x0,0x21ff5e(%rip)        # 62e7b0 <extern_output_first>
  40e84e:	00 00 00 00 
  40e852:	48 81 ff e0 e7 62 00 	cmp    $0x62e7e0,%rdi
  40e859:	74 1b                	je     40e876 <free_extern_output.part.0+0x56>
  40e85b:	e8 00 31 ff ff       	callq  401960 <free@plt>
  40e860:	48 c7 05 45 df 21 00 	movq   $0x62e7e0,0x21df45(%rip)        # 62c7b0 <extern_stack>
  40e867:	e0 e7 62 00 
  40e86b:	48 c7 05 32 df 21 00 	movq   $0x62f7e0,0x21df32(%rip)        # 62c7a8 <extern_stack_limit>
  40e872:	e0 f7 62 00 
  40e876:	5b                   	pop    %rbx
  40e877:	c3                   	retq   
  40e878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40e87f:	00 

000000000040e880 <extern_failwith>:
  40e880:	53                   	push   %rbx
  40e881:	48 89 fb             	mov    %rdi,%rbx
  40e884:	e8 a7 fe ff ff       	callq  40e730 <extern_replay_trail>
  40e889:	48 83 3d 37 ff 21 00 	cmpq   $0x0,0x21ff37(%rip)        # 62e7c8 <extern_userprovided_output>
  40e890:	00 
  40e891:	74 08                	je     40e89b <extern_failwith+0x1b>
  40e893:	48 89 df             	mov    %rbx,%rdi
  40e896:	e8 25 be 00 00       	callq  41a6c0 <caml_failwith>
  40e89b:	e8 80 ff ff ff       	callq  40e820 <free_extern_output.part.0>
  40e8a0:	eb f1                	jmp    40e893 <extern_failwith+0x13>
  40e8a2:	0f 1f 40 00          	nopl   0x0(%rax)
  40e8a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40e8ad:	00 00 00 

000000000040e8b0 <grow_extern_output>:
  40e8b0:	55                   	push   %rbp
  40e8b1:	53                   	push   %rbx
  40e8b2:	48 83 ec 08          	sub    $0x8,%rsp
  40e8b6:	48 83 3d 0a ff 21 00 	cmpq   $0x0,0x21ff0a(%rip)        # 62e7c8 <extern_userprovided_output>
  40e8bd:	00 
  40e8be:	75 76                	jne    40e936 <grow_extern_output+0x86>
  40e8c0:	48 8b 2d e1 fe 21 00 	mov    0x21fee1(%rip),%rbp        # 62e7a8 <extern_output_block>
  40e8c7:	48 8b 05 f2 fe 21 00 	mov    0x21fef2(%rip),%rax        # 62e7c0 <extern_ptr>
  40e8ce:	48 81 ff d2 0f 00 00 	cmp    $0xfd2,%rdi
  40e8d5:	48 89 45 08          	mov    %rax,0x8(%rbp)
  40e8d9:	7e 4d                	jle    40e928 <grow_extern_output+0x78>
  40e8db:	48 89 fb             	mov    %rdi,%rbx
  40e8de:	48 8d bf b8 1f 00 00 	lea    0x1fb8(%rdi),%rdi
  40e8e5:	e8 a6 33 ff ff       	callq  401c90 <malloc@plt>
  40e8ea:	48 85 c0             	test   %rax,%rax
  40e8ed:	74 42                	je     40e931 <grow_extern_output+0x81>
  40e8ef:	48 89 45 00          	mov    %rax,0x0(%rbp)
  40e8f3:	48 89 05 ae fe 21 00 	mov    %rax,0x21feae(%rip)        # 62e7a8 <extern_output_block>
  40e8fa:	48 83 c0 10          	add    $0x10,%rax
  40e8fe:	48 c7 40 f0 00 00 00 	movq   $0x0,-0x10(%rax)
  40e905:	00 
  40e906:	48 89 05 b3 fe 21 00 	mov    %rax,0x21feb3(%rip)        # 62e7c0 <extern_ptr>
  40e90d:	48 8d 84 18 a4 1f 00 	lea    0x1fa4(%rax,%rbx,1),%rax
  40e914:	00 
  40e915:	48 89 05 9c fe 21 00 	mov    %rax,0x21fe9c(%rip)        # 62e7b8 <extern_limit>
  40e91c:	48 83 c4 08          	add    $0x8,%rsp
  40e920:	5b                   	pop    %rbx
  40e921:	5d                   	pop    %rbp
  40e922:	c3                   	retq   
  40e923:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40e928:	bf b8 1f 00 00       	mov    $0x1fb8,%edi
  40e92d:	31 db                	xor    %ebx,%ebx
  40e92f:	eb b4                	jmp    40e8e5 <grow_extern_output+0x35>
  40e931:	e8 bc 35 ff ff       	callq  401ef2 <extern_out_of_memory>
  40e936:	bf 18 e2 41 00       	mov    $0x41e218,%edi
  40e93b:	e8 40 ff ff ff       	callq  40e880 <extern_failwith>

000000000040e940 <writecode16>:
  40e940:	55                   	push   %rbp
  40e941:	53                   	push   %rbx
  40e942:	89 fd                	mov    %edi,%ebp
  40e944:	48 89 f3             	mov    %rsi,%rbx
  40e947:	48 83 ec 08          	sub    $0x8,%rsp
  40e94b:	48 8b 05 6e fe 21 00 	mov    0x21fe6e(%rip),%rax        # 62e7c0 <extern_ptr>
  40e952:	48 8d 50 03          	lea    0x3(%rax),%rdx
  40e956:	48 3b 15 5b fe 21 00 	cmp    0x21fe5b(%rip),%rdx        # 62e7b8 <extern_limit>
  40e95d:	76 15                	jbe    40e974 <writecode16+0x34>
  40e95f:	bf 03 00 00 00       	mov    $0x3,%edi
  40e964:	e8 47 ff ff ff       	callq  40e8b0 <grow_extern_output>
  40e969:	48 8b 05 50 fe 21 00 	mov    0x21fe50(%rip),%rax        # 62e7c0 <extern_ptr>
  40e970:	48 8d 50 03          	lea    0x3(%rax),%rdx
  40e974:	89 d9                	mov    %ebx,%ecx
  40e976:	40 88 28             	mov    %bpl,(%rax)
  40e979:	88 58 02             	mov    %bl,0x2(%rax)
  40e97c:	c1 f9 08             	sar    $0x8,%ecx
  40e97f:	48 89 15 3a fe 21 00 	mov    %rdx,0x21fe3a(%rip)        # 62e7c0 <extern_ptr>
  40e986:	88 48 01             	mov    %cl,0x1(%rax)
  40e989:	48 83 c4 08          	add    $0x8,%rsp
  40e98d:	5b                   	pop    %rbx
  40e98e:	5d                   	pop    %rbp
  40e98f:	c3                   	retq   

000000000040e990 <writecode8>:
  40e990:	55                   	push   %rbp
  40e991:	53                   	push   %rbx
  40e992:	89 fd                	mov    %edi,%ebp
  40e994:	48 89 f3             	mov    %rsi,%rbx
  40e997:	48 83 ec 08          	sub    $0x8,%rsp
  40e99b:	48 8b 05 1e fe 21 00 	mov    0x21fe1e(%rip),%rax        # 62e7c0 <extern_ptr>
  40e9a2:	48 8d 50 02          	lea    0x2(%rax),%rdx
  40e9a6:	48 3b 15 0b fe 21 00 	cmp    0x21fe0b(%rip),%rdx        # 62e7b8 <extern_limit>
  40e9ad:	76 15                	jbe    40e9c4 <writecode8+0x34>
  40e9af:	bf 02 00 00 00       	mov    $0x2,%edi
  40e9b4:	e8 f7 fe ff ff       	callq  40e8b0 <grow_extern_output>
  40e9b9:	48 8b 05 00 fe 21 00 	mov    0x21fe00(%rip),%rax        # 62e7c0 <extern_ptr>
  40e9c0:	48 8d 50 02          	lea    0x2(%rax),%rdx
  40e9c4:	40 88 28             	mov    %bpl,(%rax)
  40e9c7:	88 58 01             	mov    %bl,0x1(%rax)
  40e9ca:	48 89 15 ef fd 21 00 	mov    %rdx,0x21fdef(%rip)        # 62e7c0 <extern_ptr>
  40e9d1:	48 83 c4 08          	add    $0x8,%rsp
  40e9d5:	5b                   	pop    %rbx
  40e9d6:	5d                   	pop    %rbp
  40e9d7:	c3                   	retq   
  40e9d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40e9df:	00 

000000000040e9e0 <writecode64>:
  40e9e0:	55                   	push   %rbp
  40e9e1:	53                   	push   %rbx
  40e9e2:	89 fd                	mov    %edi,%ebp
  40e9e4:	48 89 f3             	mov    %rsi,%rbx
  40e9e7:	48 83 ec 08          	sub    $0x8,%rsp
  40e9eb:	48 8b 05 ce fd 21 00 	mov    0x21fdce(%rip),%rax        # 62e7c0 <extern_ptr>
  40e9f2:	48 8d 50 09          	lea    0x9(%rax),%rdx
  40e9f6:	48 3b 15 bb fd 21 00 	cmp    0x21fdbb(%rip),%rdx        # 62e7b8 <extern_limit>
  40e9fd:	76 15                	jbe    40ea14 <writecode64+0x34>
  40e9ff:	bf 09 00 00 00       	mov    $0x9,%edi
  40ea04:	e8 a7 fe ff ff       	callq  40e8b0 <grow_extern_output>
  40ea09:	48 8b 05 b0 fd 21 00 	mov    0x21fdb0(%rip),%rax        # 62e7c0 <extern_ptr>
  40ea10:	48 8d 50 09          	lea    0x9(%rax),%rdx
  40ea14:	48 89 d9             	mov    %rbx,%rcx
  40ea17:	40 88 28             	mov    %bpl,(%rax)
  40ea1a:	88 58 08             	mov    %bl,0x8(%rax)
  40ea1d:	48 c1 f9 38          	sar    $0x38,%rcx
  40ea21:	48 89 15 98 fd 21 00 	mov    %rdx,0x21fd98(%rip)        # 62e7c0 <extern_ptr>
  40ea28:	88 48 01             	mov    %cl,0x1(%rax)
  40ea2b:	48 89 d9             	mov    %rbx,%rcx
  40ea2e:	48 c1 f9 30          	sar    $0x30,%rcx
  40ea32:	88 48 02             	mov    %cl,0x2(%rax)
  40ea35:	48 89 d9             	mov    %rbx,%rcx
  40ea38:	48 c1 f9 28          	sar    $0x28,%rcx
  40ea3c:	88 48 03             	mov    %cl,0x3(%rax)
  40ea3f:	48 89 d9             	mov    %rbx,%rcx
  40ea42:	48 c1 f9 20          	sar    $0x20,%rcx
  40ea46:	88 48 04             	mov    %cl,0x4(%rax)
  40ea49:	48 89 d9             	mov    %rbx,%rcx
  40ea4c:	48 c1 f9 18          	sar    $0x18,%rcx
  40ea50:	88 48 05             	mov    %cl,0x5(%rax)
  40ea53:	48 89 d9             	mov    %rbx,%rcx
  40ea56:	48 c1 f9 10          	sar    $0x10,%rcx
  40ea5a:	88 48 06             	mov    %cl,0x6(%rax)
  40ea5d:	48 89 d9             	mov    %rbx,%rcx
  40ea60:	48 c1 f9 08          	sar    $0x8,%rcx
  40ea64:	88 48 07             	mov    %cl,0x7(%rax)
  40ea67:	48 83 c4 08          	add    $0x8,%rsp
  40ea6b:	5b                   	pop    %rbx
  40ea6c:	5d                   	pop    %rbp
  40ea6d:	c3                   	retq   
  40ea6e:	66 90                	xchg   %ax,%ax

000000000040ea70 <writecode32>:
  40ea70:	55                   	push   %rbp
  40ea71:	53                   	push   %rbx
  40ea72:	89 fd                	mov    %edi,%ebp
  40ea74:	48 89 f3             	mov    %rsi,%rbx
  40ea77:	48 83 ec 08          	sub    $0x8,%rsp
  40ea7b:	48 8b 05 3e fd 21 00 	mov    0x21fd3e(%rip),%rax        # 62e7c0 <extern_ptr>
  40ea82:	48 8d 50 05          	lea    0x5(%rax),%rdx
  40ea86:	48 3b 15 2b fd 21 00 	cmp    0x21fd2b(%rip),%rdx        # 62e7b8 <extern_limit>
  40ea8d:	76 15                	jbe    40eaa4 <writecode32+0x34>
  40ea8f:	bf 05 00 00 00       	mov    $0x5,%edi
  40ea94:	e8 17 fe ff ff       	callq  40e8b0 <grow_extern_output>
  40ea99:	48 8b 05 20 fd 21 00 	mov    0x21fd20(%rip),%rax        # 62e7c0 <extern_ptr>
  40eaa0:	48 8d 50 05          	lea    0x5(%rax),%rdx
  40eaa4:	48 89 d9             	mov    %rbx,%rcx
  40eaa7:	40 88 28             	mov    %bpl,(%rax)
  40eaaa:	88 58 04             	mov    %bl,0x4(%rax)
  40eaad:	48 c1 f9 18          	sar    $0x18,%rcx
  40eab1:	48 89 15 08 fd 21 00 	mov    %rdx,0x21fd08(%rip)        # 62e7c0 <extern_ptr>
  40eab8:	88 48 01             	mov    %cl,0x1(%rax)
  40eabb:	48 89 d9             	mov    %rbx,%rcx
  40eabe:	48 c1 f9 10          	sar    $0x10,%rcx
  40eac2:	88 48 02             	mov    %cl,0x2(%rax)
  40eac5:	48 89 d9             	mov    %rbx,%rcx
  40eac8:	48 c1 f9 08          	sar    $0x8,%rcx
  40eacc:	88 48 03             	mov    %cl,0x3(%rax)
  40eacf:	48 83 c4 08          	add    $0x8,%rsp
  40ead3:	5b                   	pop    %rbx
  40ead4:	5d                   	pop    %rbp
  40ead5:	c3                   	retq   
  40ead6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40eadd:	00 00 00 

000000000040eae0 <extern_invalid_argument>:
  40eae0:	53                   	push   %rbx
  40eae1:	48 89 fb             	mov    %rdi,%rbx
  40eae4:	e8 47 fc ff ff       	callq  40e730 <extern_replay_trail>
  40eae9:	48 83 3d d7 fc 21 00 	cmpq   $0x0,0x21fcd7(%rip)        # 62e7c8 <extern_userprovided_output>
  40eaf0:	00 
  40eaf1:	74 08                	je     40eafb <extern_invalid_argument+0x1b>
  40eaf3:	48 89 df             	mov    %rbx,%rdi
  40eaf6:	e8 e5 bb 00 00       	callq  41a6e0 <caml_invalid_argument>
  40eafb:	e8 20 fd ff ff       	callq  40e820 <free_extern_output.part.0>
  40eb00:	eb f1                	jmp    40eaf3 <extern_invalid_argument+0x13>
  40eb02:	0f 1f 40 00          	nopl   0x0(%rax)
  40eb06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40eb0d:	00 00 00 

000000000040eb10 <extern_record_location.part.1>:
  40eb10:	48 8b 05 d1 0c 22 00 	mov    0x220cd1(%rip),%rax        # 62f7e8 <extern_trail_cur>
  40eb17:	48 3b 05 c2 0c 22 00 	cmp    0x220cc2(%rip),%rax        # 62f7e0 <extern_trail_limit>
  40eb1e:	53                   	push   %rbx
  40eb1f:	48 89 fb             	mov    %rdi,%rbx
  40eb22:	74 4c                	je     40eb70 <extern_record_location.part.1+0x60>
  40eb24:	48 8b 53 f8          	mov    -0x8(%rbx),%rdx
  40eb28:	48 83 c0 10          	add    $0x10,%rax
  40eb2c:	48 89 d1             	mov    %rdx,%rcx
  40eb2f:	80 e6 fc             	and    $0xfc,%dh
  40eb32:	48 c1 e9 08          	shr    $0x8,%rcx
  40eb36:	80 ce 02             	or     $0x2,%dh
  40eb39:	83 e1 03             	and    $0x3,%ecx
  40eb3c:	48 09 d9             	or     %rbx,%rcx
  40eb3f:	48 89 48 f0          	mov    %rcx,-0x10(%rax)
  40eb43:	48 8b 0b             	mov    (%rbx),%rcx
  40eb46:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
  40eb4a:	48 89 05 97 0c 22 00 	mov    %rax,0x220c97(%rip)        # 62f7e8 <extern_trail_cur>
  40eb51:	48 8b 05 d8 4c 22 00 	mov    0x224cd8(%rip),%rax        # 633830 <obj_counter>
  40eb58:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
  40eb5c:	48 89 03             	mov    %rax,(%rbx)
  40eb5f:	48 83 c0 01          	add    $0x1,%rax
  40eb63:	48 89 05 c6 4c 22 00 	mov    %rax,0x224cc6(%rip)        # 633830 <obj_counter>
  40eb6a:	5b                   	pop    %rbx
  40eb6b:	c3                   	retq   
  40eb6c:	0f 1f 40 00          	nopl   0x0(%rax)
  40eb70:	bf 18 40 00 00       	mov    $0x4018,%edi
  40eb75:	e8 16 31 ff ff       	callq  401c90 <malloc@plt>
  40eb7a:	48 85 c0             	test   %rax,%rax
  40eb7d:	74 25                	je     40eba4 <extern_record_location.part.1+0x94>
  40eb7f:	48 8b 15 6a 0c 22 00 	mov    0x220c6a(%rip),%rdx        # 62f7f0 <extern_trail_block>
  40eb86:	48 89 05 63 0c 22 00 	mov    %rax,0x220c63(%rip)        # 62f7f0 <extern_trail_block>
  40eb8d:	48 89 10             	mov    %rdx,(%rax)
  40eb90:	48 8d 90 18 40 00 00 	lea    0x4018(%rax),%rdx
  40eb97:	48 83 c0 08          	add    $0x8,%rax
  40eb9b:	48 89 15 3e 0c 22 00 	mov    %rdx,0x220c3e(%rip)        # 62f7e0 <extern_trail_limit>
  40eba2:	eb 80                	jmp    40eb24 <extern_record_location.part.1+0x14>
  40eba4:	e8 49 33 ff ff       	callq  401ef2 <extern_out_of_memory>
  40eba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040ebb0 <caml_serialize_int_1>:
  40ebb0:	48 8b 05 09 fc 21 00 	mov    0x21fc09(%rip),%rax        # 62e7c0 <extern_ptr>
  40ebb7:	53                   	push   %rbx
  40ebb8:	89 fb                	mov    %edi,%ebx
  40ebba:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40ebbe:	48 3b 15 f3 fb 21 00 	cmp    0x21fbf3(%rip),%rdx        # 62e7b8 <extern_limit>
  40ebc5:	76 15                	jbe    40ebdc <caml_serialize_int_1+0x2c>
  40ebc7:	bf 01 00 00 00       	mov    $0x1,%edi
  40ebcc:	e8 df fc ff ff       	callq  40e8b0 <grow_extern_output>
  40ebd1:	48 8b 05 e8 fb 21 00 	mov    0x21fbe8(%rip),%rax        # 62e7c0 <extern_ptr>
  40ebd8:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40ebdc:	88 18                	mov    %bl,(%rax)
  40ebde:	48 89 15 db fb 21 00 	mov    %rdx,0x21fbdb(%rip)        # 62e7c0 <extern_ptr>
  40ebe5:	5b                   	pop    %rbx
  40ebe6:	c3                   	retq   
  40ebe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40ebee:	00 00 

000000000040ebf0 <caml_serialize_int_2>:
  40ebf0:	48 8b 05 c9 fb 21 00 	mov    0x21fbc9(%rip),%rax        # 62e7c0 <extern_ptr>
  40ebf7:	53                   	push   %rbx
  40ebf8:	89 fb                	mov    %edi,%ebx
  40ebfa:	48 8d 50 02          	lea    0x2(%rax),%rdx
  40ebfe:	48 3b 15 b3 fb 21 00 	cmp    0x21fbb3(%rip),%rdx        # 62e7b8 <extern_limit>
  40ec05:	76 15                	jbe    40ec1c <caml_serialize_int_2+0x2c>
  40ec07:	bf 02 00 00 00       	mov    $0x2,%edi
  40ec0c:	e8 9f fc ff ff       	callq  40e8b0 <grow_extern_output>
  40ec11:	48 8b 05 a8 fb 21 00 	mov    0x21fba8(%rip),%rax        # 62e7c0 <extern_ptr>
  40ec18:	48 8d 50 02          	lea    0x2(%rax),%rdx
  40ec1c:	89 d9                	mov    %ebx,%ecx
  40ec1e:	88 58 01             	mov    %bl,0x1(%rax)
  40ec21:	48 89 15 98 fb 21 00 	mov    %rdx,0x21fb98(%rip)        # 62e7c0 <extern_ptr>
  40ec28:	c1 f9 08             	sar    $0x8,%ecx
  40ec2b:	88 08                	mov    %cl,(%rax)
  40ec2d:	5b                   	pop    %rbx
  40ec2e:	c3                   	retq   
  40ec2f:	90                   	nop

000000000040ec30 <caml_serialize_int_4>:
  40ec30:	48 8b 05 89 fb 21 00 	mov    0x21fb89(%rip),%rax        # 62e7c0 <extern_ptr>
  40ec37:	53                   	push   %rbx
  40ec38:	89 fb                	mov    %edi,%ebx
  40ec3a:	48 8d 48 04          	lea    0x4(%rax),%rcx
  40ec3e:	48 3b 0d 73 fb 21 00 	cmp    0x21fb73(%rip),%rcx        # 62e7b8 <extern_limit>
  40ec45:	76 15                	jbe    40ec5c <caml_serialize_int_4+0x2c>
  40ec47:	bf 04 00 00 00       	mov    $0x4,%edi
  40ec4c:	e8 5f fc ff ff       	callq  40e8b0 <grow_extern_output>
  40ec51:	48 8b 05 68 fb 21 00 	mov    0x21fb68(%rip),%rax        # 62e7c0 <extern_ptr>
  40ec58:	48 8d 48 04          	lea    0x4(%rax),%rcx
  40ec5c:	48 63 d3             	movslq %ebx,%rdx
  40ec5f:	88 58 03             	mov    %bl,0x3(%rax)
  40ec62:	48 89 0d 57 fb 21 00 	mov    %rcx,0x21fb57(%rip)        # 62e7c0 <extern_ptr>
  40ec69:	48 89 d6             	mov    %rdx,%rsi
  40ec6c:	48 c1 fe 18          	sar    $0x18,%rsi
  40ec70:	40 88 30             	mov    %sil,(%rax)
  40ec73:	48 89 d6             	mov    %rdx,%rsi
  40ec76:	48 c1 fa 08          	sar    $0x8,%rdx
  40ec7a:	48 c1 fe 10          	sar    $0x10,%rsi
  40ec7e:	88 50 02             	mov    %dl,0x2(%rax)
  40ec81:	40 88 70 01          	mov    %sil,0x1(%rax)
  40ec85:	5b                   	pop    %rbx
  40ec86:	c3                   	retq   
  40ec87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40ec8e:	00 00 

000000000040ec90 <caml_serialize_int_8>:
  40ec90:	48 8b 05 29 fb 21 00 	mov    0x21fb29(%rip),%rax        # 62e7c0 <extern_ptr>
  40ec97:	53                   	push   %rbx
  40ec98:	48 89 fb             	mov    %rdi,%rbx
  40ec9b:	48 8d 50 08          	lea    0x8(%rax),%rdx
  40ec9f:	48 3b 15 12 fb 21 00 	cmp    0x21fb12(%rip),%rdx        # 62e7b8 <extern_limit>
  40eca6:	76 15                	jbe    40ecbd <caml_serialize_int_8+0x2d>
  40eca8:	bf 08 00 00 00       	mov    $0x8,%edi
  40ecad:	e8 fe fb ff ff       	callq  40e8b0 <grow_extern_output>
  40ecb2:	48 8b 05 07 fb 21 00 	mov    0x21fb07(%rip),%rax        # 62e7c0 <extern_ptr>
  40ecb9:	48 8d 50 08          	lea    0x8(%rax),%rdx
  40ecbd:	48 89 d9             	mov    %rbx,%rcx
  40ecc0:	88 58 07             	mov    %bl,0x7(%rax)
  40ecc3:	48 89 15 f6 fa 21 00 	mov    %rdx,0x21faf6(%rip)        # 62e7c0 <extern_ptr>
  40ecca:	48 c1 f9 38          	sar    $0x38,%rcx
  40ecce:	88 08                	mov    %cl,(%rax)
  40ecd0:	48 89 d9             	mov    %rbx,%rcx
  40ecd3:	48 c1 f9 30          	sar    $0x30,%rcx
  40ecd7:	88 48 01             	mov    %cl,0x1(%rax)
  40ecda:	48 89 d9             	mov    %rbx,%rcx
  40ecdd:	48 c1 f9 28          	sar    $0x28,%rcx
  40ece1:	88 48 02             	mov    %cl,0x2(%rax)
  40ece4:	48 89 d9             	mov    %rbx,%rcx
  40ece7:	48 c1 f9 20          	sar    $0x20,%rcx
  40eceb:	88 48 03             	mov    %cl,0x3(%rax)
  40ecee:	48 89 d9             	mov    %rbx,%rcx
  40ecf1:	48 c1 f9 18          	sar    $0x18,%rcx
  40ecf5:	88 48 04             	mov    %cl,0x4(%rax)
  40ecf8:	48 89 d9             	mov    %rbx,%rcx
  40ecfb:	48 c1 f9 10          	sar    $0x10,%rcx
  40ecff:	88 48 05             	mov    %cl,0x5(%rax)
  40ed02:	48 89 d9             	mov    %rbx,%rcx
  40ed05:	48 c1 f9 08          	sar    $0x8,%rcx
  40ed09:	88 48 06             	mov    %cl,0x6(%rax)
  40ed0c:	5b                   	pop    %rbx
  40ed0d:	c3                   	retq   
  40ed0e:	66 90                	xchg   %ax,%ax

000000000040ed10 <caml_serialize_block_1>:
  40ed10:	41 54                	push   %r12
  40ed12:	49 89 fc             	mov    %rdi,%r12
  40ed15:	48 8b 3d a4 fa 21 00 	mov    0x21faa4(%rip),%rdi        # 62e7c0 <extern_ptr>
  40ed1c:	55                   	push   %rbp
  40ed1d:	53                   	push   %rbx
  40ed1e:	48 89 f3             	mov    %rsi,%rbx
  40ed21:	48 8d 2c 37          	lea    (%rdi,%rsi,1),%rbp
  40ed25:	48 3b 2d 8c fa 21 00 	cmp    0x21fa8c(%rip),%rbp        # 62e7b8 <extern_limit>
  40ed2c:	76 13                	jbe    40ed41 <caml_serialize_block_1+0x31>
  40ed2e:	48 89 f7             	mov    %rsi,%rdi
  40ed31:	e8 7a fb ff ff       	callq  40e8b0 <grow_extern_output>
  40ed36:	48 8b 3d 83 fa 21 00 	mov    0x21fa83(%rip),%rdi        # 62e7c0 <extern_ptr>
  40ed3d:	48 8d 2c 1f          	lea    (%rdi,%rbx,1),%rbp
  40ed41:	48 89 da             	mov    %rbx,%rdx
  40ed44:	4c 89 e6             	mov    %r12,%rsi
  40ed47:	e8 c4 2e ff ff       	callq  401c10 <memcpy@plt>
  40ed4c:	5b                   	pop    %rbx
  40ed4d:	48 89 2d 6c fa 21 00 	mov    %rbp,0x21fa6c(%rip)        # 62e7c0 <extern_ptr>
  40ed54:	5d                   	pop    %rbp
  40ed55:	41 5c                	pop    %r12
  40ed57:	c3                   	retq   
  40ed58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40ed5f:	00 

000000000040ed60 <caml_serialize_block_2>:
  40ed60:	55                   	push   %rbp
  40ed61:	53                   	push   %rbx
  40ed62:	48 89 fb             	mov    %rdi,%rbx
  40ed65:	48 8d 2c 36          	lea    (%rsi,%rsi,1),%rbp
  40ed69:	48 83 ec 18          	sub    $0x18,%rsp
  40ed6d:	48 8b 3d 4c fa 21 00 	mov    0x21fa4c(%rip),%rdi        # 62e7c0 <extern_ptr>
  40ed74:	48 8d 04 2f          	lea    (%rdi,%rbp,1),%rax
  40ed78:	48 39 05 39 fa 21 00 	cmp    %rax,0x21fa39(%rip)        # 62e7b8 <extern_limit>
  40ed7f:	72 3f                	jb     40edc0 <caml_serialize_block_2+0x60>
  40ed81:	48 85 f6             	test   %rsi,%rsi
  40ed84:	7e 27                	jle    40edad <caml_serialize_block_2+0x4d>
  40ed86:	48 8d 34 2b          	lea    (%rbx,%rbp,1),%rsi
  40ed8a:	48 89 f8             	mov    %rdi,%rax
  40ed8d:	0f 1f 00             	nopl   (%rax)
  40ed90:	0f b6 13             	movzbl (%rbx),%edx
  40ed93:	0f b6 4b 01          	movzbl 0x1(%rbx),%ecx
  40ed97:	48 83 c3 02          	add    $0x2,%rbx
  40ed9b:	48 83 c0 02          	add    $0x2,%rax
  40ed9f:	88 48 fe             	mov    %cl,-0x2(%rax)
  40eda2:	88 50 ff             	mov    %dl,-0x1(%rax)
  40eda5:	48 39 f3             	cmp    %rsi,%rbx
  40eda8:	75 e6                	jne    40ed90 <caml_serialize_block_2+0x30>
  40edaa:	48 01 ef             	add    %rbp,%rdi
  40edad:	48 89 3d 0c fa 21 00 	mov    %rdi,0x21fa0c(%rip)        # 62e7c0 <extern_ptr>
  40edb4:	48 83 c4 18          	add    $0x18,%rsp
  40edb8:	5b                   	pop    %rbx
  40edb9:	5d                   	pop    %rbp
  40edba:	c3                   	retq   
  40edbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40edc0:	48 89 ef             	mov    %rbp,%rdi
  40edc3:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  40edc8:	e8 e3 fa ff ff       	callq  40e8b0 <grow_extern_output>
  40edcd:	48 8b 3d ec f9 21 00 	mov    0x21f9ec(%rip),%rdi        # 62e7c0 <extern_ptr>
  40edd4:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40edd9:	eb a6                	jmp    40ed81 <caml_serialize_block_2+0x21>
  40eddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040ede0 <caml_serialize_block_4>:
  40ede0:	55                   	push   %rbp
  40ede1:	53                   	push   %rbx
  40ede2:	48 8d 2c b5 00 00 00 	lea    0x0(,%rsi,4),%rbp
  40ede9:	00 
  40edea:	48 89 fb             	mov    %rdi,%rbx
  40eded:	48 83 ec 18          	sub    $0x18,%rsp
  40edf1:	4c 8b 05 c8 f9 21 00 	mov    0x21f9c8(%rip),%r8        # 62e7c0 <extern_ptr>
  40edf8:	49 8d 04 28          	lea    (%r8,%rbp,1),%rax
  40edfc:	48 39 05 b5 f9 21 00 	cmp    %rax,0x21f9b5(%rip)        # 62e7b8 <extern_limit>
  40ee03:	72 4b                	jb     40ee50 <caml_serialize_block_4+0x70>
  40ee05:	48 85 f6             	test   %rsi,%rsi
  40ee08:	7e 34                	jle    40ee3e <caml_serialize_block_4+0x5e>
  40ee0a:	4c 89 c0             	mov    %r8,%rax
  40ee0d:	0f 1f 00             	nopl   (%rax)
  40ee10:	0f b6 7b 03          	movzbl 0x3(%rbx),%edi
  40ee14:	0f b6 0b             	movzbl (%rbx),%ecx
  40ee17:	48 83 c0 04          	add    $0x4,%rax
  40ee1b:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
  40ee1f:	48 83 c3 04          	add    $0x4,%rbx
  40ee23:	40 88 78 fc          	mov    %dil,-0x4(%rax)
  40ee27:	0f b6 7b fe          	movzbl -0x2(%rbx),%edi
  40ee2b:	88 48 ff             	mov    %cl,-0x1(%rax)
  40ee2e:	88 50 fe             	mov    %dl,-0x2(%rax)
  40ee31:	40 88 78 fd          	mov    %dil,-0x3(%rax)
  40ee35:	48 83 ee 01          	sub    $0x1,%rsi
  40ee39:	75 d5                	jne    40ee10 <caml_serialize_block_4+0x30>
  40ee3b:	49 01 e8             	add    %rbp,%r8
  40ee3e:	4c 89 05 7b f9 21 00 	mov    %r8,0x21f97b(%rip)        # 62e7c0 <extern_ptr>
  40ee45:	48 83 c4 18          	add    $0x18,%rsp
  40ee49:	5b                   	pop    %rbx
  40ee4a:	5d                   	pop    %rbp
  40ee4b:	c3                   	retq   
  40ee4c:	0f 1f 40 00          	nopl   0x0(%rax)
  40ee50:	48 89 ef             	mov    %rbp,%rdi
  40ee53:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  40ee58:	e8 53 fa ff ff       	callq  40e8b0 <grow_extern_output>
  40ee5d:	4c 8b 05 5c f9 21 00 	mov    0x21f95c(%rip),%r8        # 62e7c0 <extern_ptr>
  40ee64:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40ee69:	eb 9a                	jmp    40ee05 <caml_serialize_block_4+0x25>
  40ee6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040ee70 <caml_serialize_float_4>:
  40ee70:	48 83 ec 18          	sub    $0x18,%rsp
  40ee74:	be 01 00 00 00       	mov    $0x1,%esi
  40ee79:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
  40ee7e:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
  40ee84:	e8 57 ff ff ff       	callq  40ede0 <caml_serialize_block_4>
  40ee89:	48 83 c4 18          	add    $0x18,%rsp
  40ee8d:	c3                   	retq   
  40ee8e:	66 90                	xchg   %ax,%ax

000000000040ee90 <caml_serialize_block_8>:
  40ee90:	55                   	push   %rbp
  40ee91:	53                   	push   %rbx
  40ee92:	48 8d 2c f5 00 00 00 	lea    0x0(,%rsi,8),%rbp
  40ee99:	00 
  40ee9a:	48 89 fb             	mov    %rdi,%rbx
  40ee9d:	48 83 ec 18          	sub    $0x18,%rsp
  40eea1:	4c 8b 05 18 f9 21 00 	mov    0x21f918(%rip),%r8        # 62e7c0 <extern_ptr>
  40eea8:	49 8d 04 28          	lea    (%r8,%rbp,1),%rax
  40eeac:	48 39 05 05 f9 21 00 	cmp    %rax,0x21f905(%rip)        # 62e7b8 <extern_limit>
  40eeb3:	72 6b                	jb     40ef20 <caml_serialize_block_8+0x90>
  40eeb5:	48 85 f6             	test   %rsi,%rsi
  40eeb8:	7e 52                	jle    40ef0c <caml_serialize_block_8+0x7c>
  40eeba:	4c 89 c0             	mov    %r8,%rax
  40eebd:	0f 1f 00             	nopl   (%rax)
  40eec0:	0f b6 7b 07          	movzbl 0x7(%rbx),%edi
  40eec4:	0f b6 0b             	movzbl (%rbx),%ecx
  40eec7:	48 83 c0 08          	add    $0x8,%rax
  40eecb:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
  40eecf:	48 83 c3 08          	add    $0x8,%rbx
  40eed3:	40 88 78 f8          	mov    %dil,-0x8(%rax)
  40eed7:	0f b6 7b fe          	movzbl -0x2(%rbx),%edi
  40eedb:	88 48 ff             	mov    %cl,-0x1(%rax)
  40eede:	88 50 fe             	mov    %dl,-0x2(%rax)
  40eee1:	40 88 78 f9          	mov    %dil,-0x7(%rax)
  40eee5:	0f b6 7b fd          	movzbl -0x3(%rbx),%edi
  40eee9:	0f b6 4b fa          	movzbl -0x6(%rbx),%ecx
  40eeed:	0f b6 53 fb          	movzbl -0x5(%rbx),%edx
  40eef1:	40 88 78 fa          	mov    %dil,-0x6(%rax)
  40eef5:	0f b6 7b fc          	movzbl -0x4(%rbx),%edi
  40eef9:	88 48 fd             	mov    %cl,-0x3(%rax)
  40eefc:	88 50 fc             	mov    %dl,-0x4(%rax)
  40eeff:	40 88 78 fb          	mov    %dil,-0x5(%rax)
  40ef03:	48 83 ee 01          	sub    $0x1,%rsi
  40ef07:	75 b7                	jne    40eec0 <caml_serialize_block_8+0x30>
  40ef09:	49 01 e8             	add    %rbp,%r8
  40ef0c:	4c 89 05 ad f8 21 00 	mov    %r8,0x21f8ad(%rip)        # 62e7c0 <extern_ptr>
  40ef13:	48 83 c4 18          	add    $0x18,%rsp
  40ef17:	5b                   	pop    %rbx
  40ef18:	5d                   	pop    %rbp
  40ef19:	c3                   	retq   
  40ef1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40ef20:	48 89 ef             	mov    %rbp,%rdi
  40ef23:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  40ef28:	e8 83 f9 ff ff       	callq  40e8b0 <grow_extern_output>
  40ef2d:	4c 8b 05 8c f8 21 00 	mov    0x21f88c(%rip),%r8        # 62e7c0 <extern_ptr>
  40ef34:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40ef39:	e9 77 ff ff ff       	jmpq   40eeb5 <caml_serialize_block_8+0x25>
  40ef3e:	66 90                	xchg   %ax,%ax

000000000040ef40 <caml_serialize_block_float_8>:
  40ef40:	41 54                	push   %r12
  40ef42:	49 89 fc             	mov    %rdi,%r12
  40ef45:	48 8b 3d 74 f8 21 00 	mov    0x21f874(%rip),%rdi        # 62e7c0 <extern_ptr>
  40ef4c:	55                   	push   %rbp
  40ef4d:	53                   	push   %rbx
  40ef4e:	48 8d 1c f5 00 00 00 	lea    0x0(,%rsi,8),%rbx
  40ef55:	00 
  40ef56:	48 8d 2c 1f          	lea    (%rdi,%rbx,1),%rbp
  40ef5a:	48 3b 2d 57 f8 21 00 	cmp    0x21f857(%rip),%rbp        # 62e7b8 <extern_limit>
  40ef61:	76 13                	jbe    40ef76 <caml_serialize_block_float_8+0x36>
  40ef63:	48 89 df             	mov    %rbx,%rdi
  40ef66:	e8 45 f9 ff ff       	callq  40e8b0 <grow_extern_output>
  40ef6b:	48 8b 3d 4e f8 21 00 	mov    0x21f84e(%rip),%rdi        # 62e7c0 <extern_ptr>
  40ef72:	48 8d 2c 1f          	lea    (%rdi,%rbx,1),%rbp
  40ef76:	48 89 da             	mov    %rbx,%rdx
  40ef79:	4c 89 e6             	mov    %r12,%rsi
  40ef7c:	e8 8f 2c ff ff       	callq  401c10 <memcpy@plt>
  40ef81:	5b                   	pop    %rbx
  40ef82:	48 89 2d 37 f8 21 00 	mov    %rbp,0x21f837(%rip)        # 62e7c0 <extern_ptr>
  40ef89:	5d                   	pop    %rbp
  40ef8a:	41 5c                	pop    %r12
  40ef8c:	c3                   	retq   
  40ef8d:	0f 1f 00             	nopl   (%rax)

000000000040ef90 <caml_serialize_float_8>:
  40ef90:	48 83 ec 18          	sub    $0x18,%rsp
  40ef94:	be 01 00 00 00       	mov    $0x1,%esi
  40ef99:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  40ef9e:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
  40efa4:	e8 97 ff ff ff       	callq  40ef40 <caml_serialize_block_float_8>
  40efa9:	48 83 c4 18          	add    $0x18,%rsp
  40efad:	c3                   	retq   
  40efae:	66 90                	xchg   %ax,%ax

000000000040efb0 <caml_extern_find_code>:
  40efb0:	41 54                	push   %r12
  40efb2:	55                   	push   %rbp
  40efb3:	49 89 fc             	mov    %rdi,%r12
  40efb6:	8b 2d 84 24 23 00    	mov    0x232484(%rip),%ebp        # 641440 <caml_code_fragments_table>
  40efbc:	53                   	push   %rbx
  40efbd:	83 ed 01             	sub    $0x1,%ebp
  40efc0:	79 19                	jns    40efdb <caml_extern_find_code+0x2b>
  40efc2:	eb 4c                	jmp    40f010 <caml_extern_find_code+0x60>
  40efc4:	0f 1f 40 00          	nopl   0x0(%rax)
  40efc8:	4c 39 23             	cmp    %r12,(%rbx)
  40efcb:	77 06                	ja     40efd3 <caml_extern_find_code+0x23>
  40efcd:	4c 3b 63 08          	cmp    0x8(%rbx),%r12
  40efd1:	72 4d                	jb     40f020 <caml_extern_find_code+0x70>
  40efd3:	83 ed 01             	sub    $0x1,%ebp
  40efd6:	83 fd ff             	cmp    $0xffffffff,%ebp
  40efd9:	74 35                	je     40f010 <caml_extern_find_code+0x60>
  40efdb:	48 8b 15 66 24 23 00 	mov    0x232466(%rip),%rdx        # 641448 <caml_code_fragments_table+0x8>
  40efe2:	48 63 c5             	movslq %ebp,%rax
  40efe5:	48 8b 1c c2          	mov    (%rdx,%rax,8),%rbx
  40efe9:	80 7b 20 00          	cmpb   $0x0,0x20(%rbx)
  40efed:	75 d9                	jne    40efc8 <caml_extern_find_code+0x18>
  40efef:	48 8b 33             	mov    (%rbx),%rsi
  40eff2:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  40eff6:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
  40effa:	48 29 f2             	sub    %rsi,%rdx
  40effd:	e8 8e 5c 00 00       	callq  414c90 <caml_md5_block>
  40f002:	c6 43 20 01          	movb   $0x1,0x20(%rbx)
  40f006:	eb c0                	jmp    40efc8 <caml_extern_find_code+0x18>
  40f008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40f00f:	00 
  40f010:	5b                   	pop    %rbx
  40f011:	31 c0                	xor    %eax,%eax
  40f013:	5d                   	pop    %rbp
  40f014:	41 5c                	pop    %r12
  40f016:	c3                   	retq   
  40f017:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40f01e:	00 00 
  40f020:	48 89 d8             	mov    %rbx,%rax
  40f023:	5b                   	pop    %rbx
  40f024:	5d                   	pop    %rbp
  40f025:	41 5c                	pop    %r12
  40f027:	c3                   	retq   
  40f028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40f02f:	00 

000000000040f030 <extern_value>:
  40f030:	41 57                	push   %r15
  40f032:	41 56                	push   %r14
  40f034:	41 55                	push   %r13
  40f036:	41 54                	push   %r12
  40f038:	49 89 cd             	mov    %rcx,%r13
  40f03b:	55                   	push   %rbp
  40f03c:	53                   	push   %rbx
  40f03d:	48 89 fd             	mov    %rdi,%rbp
  40f040:	48 89 f7             	mov    %rsi,%rdi
  40f043:	be 98 c7 62 00       	mov    $0x62c798,%esi
  40f048:	49 89 d4             	mov    %rdx,%r12
  40f04b:	48 83 ec 38          	sub    $0x38,%rsp
  40f04f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40f056:	00 00 
  40f058:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40f05d:	31 c0                	xor    %eax,%eax
  40f05f:	e8 5c d6 00 00       	callq  41c6c0 <caml_convert_flag_list>
  40f064:	48 c7 05 81 07 22 00 	movq   $0x62f800,0x220781(%rip)        # 62f7f0 <extern_trail_block>
  40f06b:	00 f8 62 00 
  40f06f:	89 05 a3 47 22 00    	mov    %eax,0x2247a3(%rip)        # 633818 <extern_flags>
  40f075:	48 c7 05 68 07 22 00 	movq   $0x62f808,0x220768(%rip)        # 62f7e8 <extern_trail_cur>
  40f07c:	08 f8 62 00 
  40f080:	48 c7 05 55 07 22 00 	movq   $0x633818,0x220755(%rip)        # 62f7e0 <extern_trail_limit>
  40f087:	18 38 63 00 
  40f08b:	48 c7 05 9a 47 22 00 	movq   $0x0,0x22479a(%rip)        # 633830 <obj_counter>
  40f092:	00 00 00 00 
  40f096:	48 c7 05 87 47 22 00 	movq   $0x0,0x224787(%rip)        # 633828 <size_32>
  40f09d:	00 00 00 00 
  40f0a1:	48 c7 05 74 47 22 00 	movq   $0x0,0x224774(%rip)        # 633820 <size_64>
  40f0a8:	00 00 00 00 
  40f0ac:	48 8b 1d fd d6 21 00 	mov    0x21d6fd(%rip),%rbx        # 62c7b0 <extern_stack>
  40f0b3:	e9 99 00 00 00       	jmpq   40f151 <extern_value+0x121>
  40f0b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40f0bf:	00 
  40f0c0:	48 89 ee             	mov    %rbp,%rsi
  40f0c3:	48 d1 fe             	sar    %rsi
  40f0c6:	48 83 fe 3f          	cmp    $0x3f,%rsi
  40f0ca:	0f 86 e0 02 00 00    	jbe    40f3b0 <extern_value+0x380>
  40f0d0:	48 8d 86 80 00 00 00 	lea    0x80(%rsi),%rax
  40f0d7:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40f0dd:	0f 86 fd 02 00 00    	jbe    40f3e0 <extern_value+0x3b0>
  40f0e3:	48 8d 86 00 80 00 00 	lea    0x8000(%rsi),%rax
  40f0ea:	48 3d ff ff 00 00    	cmp    $0xffff,%rax
  40f0f0:	0f 86 fa 02 00 00    	jbe    40f3f0 <extern_value+0x3c0>
  40f0f6:	48 8d 86 00 00 00 40 	lea    0x40000000(%rsi),%rax
  40f0fd:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
  40f103:	0f 86 27 03 00 00    	jbe    40f430 <extern_value+0x400>
  40f109:	f6 05 08 47 22 00 04 	testb  $0x4,0x224708(%rip)        # 633818 <extern_flags>
  40f110:	0f 85 5a 0a 00 00    	jne    40fb70 <extern_value+0xb40>
  40f116:	bf 03 00 00 00       	mov    $0x3,%edi
  40f11b:	e8 c0 f8 ff ff       	callq  40e9e0 <writecode64>
  40f120:	48 3b 1d 89 d6 21 00 	cmp    0x21d689(%rip),%rbx        # 62c7b0 <extern_stack>
  40f127:	0f 84 ae 00 00 00    	je     40f1db <extern_value+0x1ab>
  40f12d:	48 8b 03             	mov    (%rbx),%rax
  40f130:	48 8d 50 08          	lea    0x8(%rax),%rdx
  40f134:	48 89 13             	mov    %rdx,(%rbx)
  40f137:	48 8b 28             	mov    (%rax),%rbp
  40f13a:	48 8d 53 f0          	lea    -0x10(%rbx),%rdx
  40f13e:	48 8b 43 08          	mov    0x8(%rbx),%rax
  40f142:	48 83 e8 01          	sub    $0x1,%rax
  40f146:	48 85 c0             	test   %rax,%rax
  40f149:	48 89 43 08          	mov    %rax,0x8(%rbx)
  40f14d:	48 0f 44 da          	cmove  %rdx,%rbx
  40f151:	40 f6 c5 01          	test   $0x1,%bpl
  40f155:	0f 85 65 ff ff ff    	jne    40f0c0 <extern_value+0x90>
  40f15b:	48 89 ef             	mov    %rbp,%rdi
  40f15e:	e8 dd 9b ff ff       	callq  408d40 <caml_page_table_lookup>
  40f163:	a8 07                	test   $0x7,%al
  40f165:	75 0e                	jne    40f175 <extern_value+0x145>
  40f167:	8b 05 33 f6 21 00    	mov    0x21f633(%rip),%eax        # 62e7a0 <caml_extern_allow_out_of_heap>
  40f16d:	85 c0                	test   %eax,%eax
  40f16f:	0f 84 fb 02 00 00    	je     40f470 <extern_value+0x440>
  40f175:	4c 8b 7d f8          	mov    -0x8(%rbp),%r15
  40f179:	41 0f b6 cf          	movzbl %r15b,%ecx
  40f17d:	4d 89 fe             	mov    %r15,%r14
  40f180:	49 c1 ee 0a          	shr    $0xa,%r14
  40f184:	81 f9 fa 00 00 00    	cmp    $0xfa,%ecx
  40f18a:	0f 84 b0 02 00 00    	je     40f440 <extern_value+0x410>
  40f190:	4d 85 f6             	test   %r14,%r14
  40f193:	0f 85 67 02 00 00    	jne    40f400 <extern_value+0x3d0>
  40f199:	83 f9 0f             	cmp    $0xf,%ecx
  40f19c:	0f 87 b6 02 00 00    	ja     40f458 <extern_value+0x428>
  40f1a2:	48 8b 05 17 f6 21 00 	mov    0x21f617(%rip),%rax        # 62e7c0 <extern_ptr>
  40f1a9:	48 3b 05 08 f6 21 00 	cmp    0x21f608(%rip),%rax        # 62e7b8 <extern_limit>
  40f1b0:	8d a9 80 00 00 00    	lea    0x80(%rcx),%ebp
  40f1b6:	0f 83 0b 02 00 00    	jae    40f3c7 <extern_value+0x397>
  40f1bc:	0f 1f 40 00          	nopl   0x0(%rax)
  40f1c0:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40f1c4:	48 89 15 f5 f5 21 00 	mov    %rdx,0x21f5f5(%rip)        # 62e7c0 <extern_ptr>
  40f1cb:	40 88 28             	mov    %bpl,(%rax)
  40f1ce:	48 3b 1d db d5 21 00 	cmp    0x21d5db(%rip),%rbx        # 62c7b0 <extern_stack>
  40f1d5:	0f 85 52 ff ff ff    	jne    40f12d <extern_value+0xfd>
  40f1db:	48 81 fb e0 e7 62 00 	cmp    $0x62e7e0,%rbx
  40f1e2:	74 1e                	je     40f202 <extern_value+0x1d2>
  40f1e4:	48 89 df             	mov    %rbx,%rdi
  40f1e7:	e8 74 27 ff ff       	callq  401960 <free@plt>
  40f1ec:	48 c7 05 b9 d5 21 00 	movq   $0x62e7e0,0x21d5b9(%rip)        # 62c7b0 <extern_stack>
  40f1f3:	e0 e7 62 00 
  40f1f7:	48 c7 05 a6 d5 21 00 	movq   $0x62f7e0,0x21d5a6(%rip)        # 62c7a8 <extern_stack_limit>
  40f1fe:	e0 f7 62 00 
  40f202:	48 8b 1d bf f5 21 00 	mov    0x21f5bf(%rip),%rbx        # 62e7c8 <extern_userprovided_output>
  40f209:	48 85 db             	test   %rbx,%rbx
  40f20c:	0f 84 6d 08 00 00    	je     40fa7f <extern_value+0xa4f>
  40f212:	e8 19 f5 ff ff       	callq  40e730 <extern_replay_trail>
  40f217:	48 8b 05 a2 f5 21 00 	mov    0x21f5a2(%rip),%rax        # 62e7c0 <extern_ptr>
  40f21e:	48 29 d8             	sub    %rbx,%rax
  40f221:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40f226:	48 39 d0             	cmp    %rdx,%rax
  40f229:	0f 8e 75 05 00 00    	jle    40f7a4 <extern_value+0x774>
  40f22f:	f6 05 e2 45 22 00 04 	testb  $0x4,0x2245e2(%rip)        # 633818 <extern_flags>
  40f236:	0f 85 7a 09 00 00    	jne    40fbb6 <extern_value+0xb86>
  40f23c:	48 89 c2             	mov    %rax,%rdx
  40f23f:	41 c6 04 24 84       	movb   $0x84,(%r12)
  40f244:	41 c6 44 24 01 95    	movb   $0x95,0x1(%r12)
  40f24a:	48 c1 fa 38          	sar    $0x38,%rdx
  40f24e:	41 c6 44 24 02 a6    	movb   $0xa6,0x2(%r12)
  40f254:	41 c6 44 24 03 bf    	movb   $0xbf,0x3(%r12)
  40f25a:	41 88 54 24 08       	mov    %dl,0x8(%r12)
  40f25f:	48 89 c2             	mov    %rax,%rdx
  40f262:	41 c6 44 24 04 00    	movb   $0x0,0x4(%r12)
  40f268:	48 c1 fa 30          	sar    $0x30,%rdx
  40f26c:	41 c6 44 24 05 00    	movb   $0x0,0x5(%r12)
  40f272:	41 c6 44 24 06 00    	movb   $0x0,0x6(%r12)
  40f278:	41 88 54 24 09       	mov    %dl,0x9(%r12)
  40f27d:	48 89 c2             	mov    %rax,%rdx
  40f280:	41 c6 44 24 07 00    	movb   $0x0,0x7(%r12)
  40f286:	48 c1 fa 28          	sar    $0x28,%rdx
  40f28a:	41 88 44 24 0f       	mov    %al,0xf(%r12)
  40f28f:	41 88 54 24 0a       	mov    %dl,0xa(%r12)
  40f294:	48 89 c2             	mov    %rax,%rdx
  40f297:	48 c1 fa 20          	sar    $0x20,%rdx
  40f29b:	41 88 54 24 0b       	mov    %dl,0xb(%r12)
  40f2a0:	48 89 c2             	mov    %rax,%rdx
  40f2a3:	48 c1 fa 18          	sar    $0x18,%rdx
  40f2a7:	41 88 54 24 0c       	mov    %dl,0xc(%r12)
  40f2ac:	48 89 c2             	mov    %rax,%rdx
  40f2af:	48 c1 fa 10          	sar    $0x10,%rdx
  40f2b3:	41 88 54 24 0d       	mov    %dl,0xd(%r12)
  40f2b8:	48 89 c2             	mov    %rax,%rdx
  40f2bb:	48 c1 fa 08          	sar    $0x8,%rdx
  40f2bf:	41 88 54 24 0e       	mov    %dl,0xe(%r12)
  40f2c4:	48 8b 15 65 45 22 00 	mov    0x224565(%rip),%rdx        # 633830 <obj_counter>
  40f2cb:	48 89 d1             	mov    %rdx,%rcx
  40f2ce:	41 88 54 24 17       	mov    %dl,0x17(%r12)
  40f2d3:	48 c1 f9 38          	sar    $0x38,%rcx
  40f2d7:	41 88 4c 24 10       	mov    %cl,0x10(%r12)
  40f2dc:	48 89 d1             	mov    %rdx,%rcx
  40f2df:	48 c1 f9 30          	sar    $0x30,%rcx
  40f2e3:	41 88 4c 24 11       	mov    %cl,0x11(%r12)
  40f2e8:	48 89 d1             	mov    %rdx,%rcx
  40f2eb:	48 c1 f9 28          	sar    $0x28,%rcx
  40f2ef:	41 88 4c 24 12       	mov    %cl,0x12(%r12)
  40f2f4:	48 89 d1             	mov    %rdx,%rcx
  40f2f7:	48 c1 f9 20          	sar    $0x20,%rcx
  40f2fb:	41 88 4c 24 13       	mov    %cl,0x13(%r12)
  40f300:	48 89 d1             	mov    %rdx,%rcx
  40f303:	48 c1 f9 18          	sar    $0x18,%rcx
  40f307:	41 88 4c 24 14       	mov    %cl,0x14(%r12)
  40f30c:	48 89 d1             	mov    %rdx,%rcx
  40f30f:	48 c1 f9 10          	sar    $0x10,%rcx
  40f313:	41 88 4c 24 15       	mov    %cl,0x15(%r12)
  40f318:	48 89 d1             	mov    %rdx,%rcx
  40f31b:	48 8b 15 fe 44 22 00 	mov    0x2244fe(%rip),%rdx        # 633820 <size_64>
  40f322:	48 c1 f9 08          	sar    $0x8,%rcx
  40f326:	41 88 4c 24 16       	mov    %cl,0x16(%r12)
  40f32b:	48 89 d1             	mov    %rdx,%rcx
  40f32e:	48 c1 f9 38          	sar    $0x38,%rcx
  40f332:	41 88 4c 24 18       	mov    %cl,0x18(%r12)
  40f337:	48 89 d1             	mov    %rdx,%rcx
  40f33a:	48 c1 f9 30          	sar    $0x30,%rcx
  40f33e:	41 88 4c 24 19       	mov    %cl,0x19(%r12)
  40f343:	48 89 d1             	mov    %rdx,%rcx
  40f346:	48 c1 f9 28          	sar    $0x28,%rcx
  40f34a:	41 88 4c 24 1a       	mov    %cl,0x1a(%r12)
  40f34f:	48 89 d1             	mov    %rdx,%rcx
  40f352:	48 c1 f9 20          	sar    $0x20,%rcx
  40f356:	41 88 4c 24 1b       	mov    %cl,0x1b(%r12)
  40f35b:	48 89 d1             	mov    %rdx,%rcx
  40f35e:	48 c1 f9 18          	sar    $0x18,%rcx
  40f362:	41 88 4c 24 1c       	mov    %cl,0x1c(%r12)
  40f367:	48 89 d1             	mov    %rdx,%rcx
  40f36a:	48 c1 f9 10          	sar    $0x10,%rcx
  40f36e:	41 88 4c 24 1d       	mov    %cl,0x1d(%r12)
  40f373:	48 89 d1             	mov    %rdx,%rcx
  40f376:	48 c1 f9 08          	sar    $0x8,%rcx
  40f37a:	41 88 4c 24 1e       	mov    %cl,0x1e(%r12)
  40f37f:	41 88 54 24 1f       	mov    %dl,0x1f(%r12)
  40f384:	41 c7 45 00 20 00 00 	movl   $0x20,0x0(%r13)
  40f38b:	00 
  40f38c:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40f391:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
  40f398:	00 00 
  40f39a:	0f 85 da 07 00 00    	jne    40fb7a <extern_value+0xb4a>
  40f3a0:	48 83 c4 38          	add    $0x38,%rsp
  40f3a4:	5b                   	pop    %rbx
  40f3a5:	5d                   	pop    %rbp
  40f3a6:	41 5c                	pop    %r12
  40f3a8:	41 5d                	pop    %r13
  40f3aa:	41 5e                	pop    %r14
  40f3ac:	41 5f                	pop    %r15
  40f3ae:	c3                   	retq   
  40f3af:	90                   	nop
  40f3b0:	48 8b 05 09 f4 21 00 	mov    0x21f409(%rip),%rax        # 62e7c0 <extern_ptr>
  40f3b7:	48 3b 05 fa f3 21 00 	cmp    0x21f3fa(%rip),%rax        # 62e7b8 <extern_limit>
  40f3be:	8d 6e 40             	lea    0x40(%rsi),%ebp
  40f3c1:	0f 82 f9 fd ff ff    	jb     40f1c0 <extern_value+0x190>
  40f3c7:	bf 01 00 00 00       	mov    $0x1,%edi
  40f3cc:	e8 df f4 ff ff       	callq  40e8b0 <grow_extern_output>
  40f3d1:	48 8b 05 e8 f3 21 00 	mov    0x21f3e8(%rip),%rax        # 62e7c0 <extern_ptr>
  40f3d8:	e9 e3 fd ff ff       	jmpq   40f1c0 <extern_value+0x190>
  40f3dd:	0f 1f 00             	nopl   (%rax)
  40f3e0:	31 ff                	xor    %edi,%edi
  40f3e2:	e8 a9 f5 ff ff       	callq  40e990 <writecode8>
  40f3e7:	e9 34 fd ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f3ec:	0f 1f 40 00          	nopl   0x0(%rax)
  40f3f0:	bf 01 00 00 00       	mov    $0x1,%edi
  40f3f5:	e8 46 f5 ff ff       	callq  40e940 <writecode16>
  40f3fa:	e9 21 fd ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f3ff:	90                   	nop
  40f400:	4c 89 f8             	mov    %r15,%rax
  40f403:	25 00 03 00 00       	and    $0x300,%eax
  40f408:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  40f40e:	0f 84 dc 00 00 00    	je     40f4f0 <extern_value+0x4c0>
  40f414:	8d 81 07 ff ff ff    	lea    -0xf9(%rcx),%eax
  40f41a:	83 f8 06             	cmp    $0x6,%eax
  40f41d:	0f 87 75 04 00 00    	ja     40f898 <extern_value+0x868>
  40f423:	ff 24 c5 78 e4 41 00 	jmpq   *0x41e478(,%rax,8)
  40f42a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40f430:	bf 02 00 00 00       	mov    $0x2,%edi
  40f435:	e8 36 f6 ff ff       	callq  40ea70 <writecode32>
  40f43a:	e9 e1 fc ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f43f:	90                   	nop
  40f440:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  40f444:	f6 c2 01             	test   $0x1,%dl
  40f447:	74 6f                	je     40f4b8 <extern_value+0x488>
  40f449:	48 89 d5             	mov    %rdx,%rbp
  40f44c:	e9 00 fd ff ff       	jmpq   40f151 <extern_value+0x121>
  40f451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40f458:	4c 89 fe             	mov    %r15,%rsi
  40f45b:	bf 08 00 00 00       	mov    $0x8,%edi
  40f460:	e8 0b f6 ff ff       	callq  40ea70 <writecode32>
  40f465:	e9 b6 fc ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f46a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40f470:	48 89 ef             	mov    %rbp,%rdi
  40f473:	e8 38 fb ff ff       	callq  40efb0 <caml_extern_find_code>
  40f478:	48 85 c0             	test   %rax,%rax
  40f47b:	49 89 c7             	mov    %rax,%r15
  40f47e:	0f 84 14 07 00 00    	je     40fb98 <extern_value+0xb68>
  40f484:	f6 05 8d 43 22 00 02 	testb  $0x2,0x22438d(%rip)        # 633818 <extern_flags>
  40f48b:	0f 84 39 07 00 00    	je     40fbca <extern_value+0xb9a>
  40f491:	48 89 ee             	mov    %rbp,%rsi
  40f494:	48 2b 30             	sub    (%rax),%rsi
  40f497:	bf 10 00 00 00       	mov    $0x10,%edi
  40f49c:	e8 cf f5 ff ff       	callq  40ea70 <writecode32>
  40f4a1:	49 8d 7f 10          	lea    0x10(%r15),%rdi
  40f4a5:	be 10 00 00 00       	mov    $0x10,%esi
  40f4aa:	e8 61 f8 ff ff       	callq  40ed10 <caml_serialize_block_1>
  40f4af:	e9 6c fc ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f4b4:	0f 1f 40 00          	nopl   0x0(%rax)
  40f4b8:	48 89 d7             	mov    %rdx,%rdi
  40f4bb:	89 0c 24             	mov    %ecx,(%rsp)
  40f4be:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40f4c3:	e8 78 98 ff ff       	callq  408d40 <caml_page_table_lookup>
  40f4c8:	a8 07                	test   $0x7,%al
  40f4ca:	8b 0c 24             	mov    (%rsp),%ecx
  40f4cd:	75 69                	jne    40f538 <extern_value+0x508>
  40f4cf:	4d 85 f6             	test   %r14,%r14
  40f4d2:	74 84                	je     40f458 <extern_value+0x428>
  40f4d4:	4c 89 f8             	mov    %r15,%rax
  40f4d7:	25 00 03 00 00       	and    $0x300,%eax
  40f4dc:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  40f4e2:	0f 85 b0 03 00 00    	jne    40f898 <extern_value+0x868>
  40f4e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40f4ef:	00 
  40f4f0:	48 8b 35 39 43 22 00 	mov    0x224339(%rip),%rsi        # 633830 <obj_counter>
  40f4f7:	48 2b 75 00          	sub    0x0(%rbp),%rsi
  40f4fb:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
  40f502:	0f 86 2e 04 00 00    	jbe    40f936 <extern_value+0x906>
  40f508:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
  40f50f:	0f 86 3f 04 00 00    	jbe    40f954 <extern_value+0x924>
  40f515:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40f51a:	48 39 c6             	cmp    %rax,%rsi
  40f51d:	0f 86 22 04 00 00    	jbe    40f945 <extern_value+0x915>
  40f523:	bf 14 00 00 00       	mov    $0x14,%edi
  40f528:	e8 b3 f4 ff ff       	callq  40e9e0 <writecode64>
  40f52d:	e9 ee fb ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40f538:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  40f53d:	0f b6 42 f8          	movzbl -0x8(%rdx),%eax
  40f541:	8d 70 0a             	lea    0xa(%rax),%esi
  40f544:	81 e6 fb 00 00 00    	and    $0xfb,%esi
  40f54a:	74 83                	je     40f4cf <extern_value+0x49f>
  40f54c:	3c fd                	cmp    $0xfd,%al
  40f54e:	0f 85 f5 fe ff ff    	jne    40f449 <extern_value+0x419>
  40f554:	e9 76 ff ff ff       	jmpq   40f4cf <extern_value+0x49f>
  40f559:	48 8b 45 00          	mov    0x0(%rbp),%rax
  40f55d:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
  40f562:	4c 8b 38             	mov    (%rax),%r15
  40f565:	0f 84 23 06 00 00    	je     40fb8e <extern_value+0xb5e>
  40f56b:	48 8b 05 4e f2 21 00 	mov    0x21f24e(%rip),%rax        # 62e7c0 <extern_ptr>
  40f572:	48 3b 05 3f f2 21 00 	cmp    0x21f23f(%rip),%rax        # 62e7b8 <extern_limit>
  40f579:	72 11                	jb     40f58c <extern_value+0x55c>
  40f57b:	bf 01 00 00 00       	mov    $0x1,%edi
  40f580:	e8 2b f3 ff ff       	callq  40e8b0 <grow_extern_output>
  40f585:	48 8b 05 34 f2 21 00 	mov    0x21f234(%rip),%rax        # 62e7c0 <extern_ptr>
  40f58c:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40f590:	4c 89 ff             	mov    %r15,%rdi
  40f593:	c6 00 12             	movb   $0x12,(%rax)
  40f596:	48 89 15 23 f2 21 00 	mov    %rdx,0x21f223(%rip)        # 62e7c0 <extern_ptr>
  40f59d:	e8 ae 24 ff ff       	callq  401a50 <strlen@plt>
  40f5a2:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40f5a6:	4c 89 ff             	mov    %r15,%rdi
  40f5a9:	e8 62 f7 ff ff       	callq  40ed10 <caml_serialize_block_1>
  40f5ae:	48 8b 45 00          	mov    0x0(%rbp),%rax
  40f5b2:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  40f5b7:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
  40f5bc:	48 89 ef             	mov    %rbp,%rdi
  40f5bf:	ff 50 20             	callq  *0x20(%rax)
  40f5c2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40f5c7:	48 8b 15 5a 42 22 00 	mov    0x22425a(%rip),%rdx        # 633828 <size_32>
  40f5ce:	48 83 c0 03          	add    $0x3,%rax
  40f5d2:	48 c1 e8 02          	shr    $0x2,%rax
  40f5d6:	48 8d 44 10 02       	lea    0x2(%rax,%rdx,1),%rax
  40f5db:	48 8b 15 3e 42 22 00 	mov    0x22423e(%rip),%rdx        # 633820 <size_64>
  40f5e2:	48 89 05 3f 42 22 00 	mov    %rax,0x22423f(%rip)        # 633828 <size_32>
  40f5e9:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40f5ee:	48 83 c0 07          	add    $0x7,%rax
  40f5f2:	48 c1 e8 03          	shr    $0x3,%rax
  40f5f6:	f6 05 1b 42 22 00 01 	testb  $0x1,0x22421b(%rip)        # 633818 <extern_flags>
  40f5fd:	48 8d 44 10 02       	lea    0x2(%rax,%rdx,1),%rax
  40f602:	48 89 05 17 42 22 00 	mov    %rax,0x224217(%rip)        # 633820 <size_64>
  40f609:	0f 85 11 fb ff ff    	jne    40f120 <extern_value+0xf0>
  40f60f:	48 89 ef             	mov    %rbp,%rdi
  40f612:	e8 f9 f4 ff ff       	callq  40eb10 <extern_record_location.part.1>
  40f617:	e9 04 fb ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f61c:	49 c1 ef 0a          	shr    $0xa,%r15
  40f620:	49 81 ff ff 00 00 00 	cmp    $0xff,%r15
  40f627:	0f 86 2b 04 00 00    	jbe    40fa58 <extern_value+0xa28>
  40f62d:	49 81 ff ff ff 1f 00 	cmp    $0x1fffff,%r15
  40f634:	0f 86 57 03 00 00    	jbe    40f991 <extern_value+0x961>
  40f63a:	f6 05 d7 41 22 00 04 	testb  $0x4,0x2241d7(%rip)        # 633818 <extern_flags>
  40f641:	0f 85 3d 05 00 00    	jne    40fb84 <extern_value+0xb54>
  40f647:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40f64c:	49 39 c7             	cmp    %rax,%r15
  40f64f:	0f 86 3c 03 00 00    	jbe    40f991 <extern_value+0x961>
  40f655:	4c 89 fe             	mov    %r15,%rsi
  40f658:	bf 17 00 00 00       	mov    $0x17,%edi
  40f65d:	e8 7e f3 ff ff       	callq  40e9e0 <writecode64>
  40f662:	e9 37 03 00 00       	jmpq   40f99e <extern_value+0x96e>
  40f667:	48 8b 05 52 f1 21 00 	mov    0x21f152(%rip),%rax        # 62e7c0 <extern_ptr>
  40f66e:	48 3b 05 43 f1 21 00 	cmp    0x21f143(%rip),%rax        # 62e7b8 <extern_limit>
  40f675:	72 11                	jb     40f688 <extern_value+0x658>
  40f677:	bf 01 00 00 00       	mov    $0x1,%edi
  40f67c:	e8 2f f2 ff ff       	callq  40e8b0 <grow_extern_output>
  40f681:	48 8b 05 38 f1 21 00 	mov    0x21f138(%rip),%rax        # 62e7c0 <extern_ptr>
  40f688:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40f68c:	c6 00 0c             	movb   $0xc,(%rax)
  40f68f:	be 08 00 00 00       	mov    $0x8,%esi
  40f694:	48 89 ef             	mov    %rbp,%rdi
  40f697:	48 89 15 22 f1 21 00 	mov    %rdx,0x21f122(%rip)        # 62e7c0 <extern_ptr>
  40f69e:	e8 6d f6 ff ff       	callq  40ed10 <caml_serialize_block_1>
  40f6a3:	48 83 05 7d 41 22 00 	addq   $0x3,0x22417d(%rip)        # 633828 <size_32>
  40f6aa:	03 
  40f6ab:	48 83 05 6d 41 22 00 	addq   $0x2,0x22416d(%rip)        # 633820 <size_64>
  40f6b2:	02 
  40f6b3:	f6 05 5e 41 22 00 01 	testb  $0x1,0x22415e(%rip)        # 633818 <extern_flags>
  40f6ba:	0f 85 60 fa ff ff    	jne    40f120 <extern_value+0xf0>
  40f6c0:	48 89 ef             	mov    %rbp,%rdi
  40f6c3:	e8 48 f4 ff ff       	callq  40eb10 <extern_record_location.part.1>
  40f6c8:	e9 53 fa ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f6cd:	48 89 ef             	mov    %rbp,%rdi
  40f6d0:	e8 bb ce ff ff       	callq  40c590 <caml_string_length>
  40f6d5:	48 83 f8 1f          	cmp    $0x1f,%rax
  40f6d9:	49 89 c7             	mov    %rax,%r15
  40f6dc:	0f 86 3e 03 00 00    	jbe    40fa20 <extern_value+0x9f0>
  40f6e2:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40f6e8:	0f 86 20 03 00 00    	jbe    40fa0e <extern_value+0x9de>
  40f6ee:	48 3d fb ff ff 00    	cmp    $0xfffffb,%rax
  40f6f4:	0f 86 cf 03 00 00    	jbe    40fac9 <extern_value+0xa99>
  40f6fa:	f6 05 17 41 22 00 04 	testb  $0x4,0x224117(%rip)        # 633818 <extern_flags>
  40f701:	0f 85 a5 04 00 00    	jne    40fbac <extern_value+0xb7c>
  40f707:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40f70c:	49 39 c7             	cmp    %rax,%r15
  40f70f:	0f 86 b4 03 00 00    	jbe    40fac9 <extern_value+0xa99>
  40f715:	4c 89 fe             	mov    %r15,%rsi
  40f718:	bf 15 00 00 00       	mov    $0x15,%edi
  40f71d:	e8 be f2 ff ff       	callq  40e9e0 <writecode64>
  40f722:	4c 89 fe             	mov    %r15,%rsi
  40f725:	48 89 ef             	mov    %rbp,%rdi
  40f728:	e8 e3 f5 ff ff       	callq  40ed10 <caml_serialize_block_1>
  40f72d:	49 8d 47 04          	lea    0x4(%r15),%rax
  40f731:	48 8b 15 f0 40 22 00 	mov    0x2240f0(%rip),%rdx        # 633828 <size_32>
  40f738:	49 83 c7 08          	add    $0x8,%r15
  40f73c:	49 c1 ef 03          	shr    $0x3,%r15
  40f740:	48 c1 e8 02          	shr    $0x2,%rax
  40f744:	48 8d 44 10 01       	lea    0x1(%rax,%rdx,1),%rax
  40f749:	48 89 05 d8 40 22 00 	mov    %rax,0x2240d8(%rip)        # 633828 <size_32>
  40f750:	48 8b 05 c9 40 22 00 	mov    0x2240c9(%rip),%rax        # 633820 <size_64>
  40f757:	f6 05 ba 40 22 00 01 	testb  $0x1,0x2240ba(%rip)        # 633818 <extern_flags>
  40f75e:	49 8d 44 07 01       	lea    0x1(%r15,%rax,1),%rax
  40f763:	48 89 05 b6 40 22 00 	mov    %rax,0x2240b6(%rip)        # 633820 <size_64>
  40f76a:	0f 85 b0 f9 ff ff    	jne    40f120 <extern_value+0xf0>
  40f770:	48 89 ef             	mov    %rbp,%rdi
  40f773:	e8 98 f3 ff ff       	callq  40eb10 <extern_record_location.part.1>
  40f778:	e9 a3 f9 ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f77d:	bf 30 e3 41 00       	mov    $0x41e330,%edi
  40f782:	e8 59 f3 ff ff       	callq  40eae0 <extern_invalid_argument>
  40f787:	4e 8d 3c f5 00 00 00 	lea    0x0(,%r14,8),%r15
  40f78e:	00 
  40f78f:	bf 11 00 00 00       	mov    $0x11,%edi
  40f794:	4c 89 fe             	mov    %r15,%rsi
  40f797:	4c 29 fd             	sub    %r15,%rbp
  40f79a:	e8 d1 f2 ff ff       	callq  40ea70 <writecode32>
  40f79f:	e9 ad f9 ff ff       	jmpq   40f151 <extern_value+0x121>
  40f7a4:	48 8b 0d 7d 40 22 00 	mov    0x22407d(%rip),%rcx        # 633828 <size_32>
  40f7ab:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  40f7b0:	48 39 d1             	cmp    %rdx,%rcx
  40f7b3:	0f 87 76 fa ff ff    	ja     40f22f <extern_value+0x1ff>
  40f7b9:	48 8b 35 60 40 22 00 	mov    0x224060(%rip),%rsi        # 633820 <size_64>
  40f7c0:	48 39 d6             	cmp    %rdx,%rsi
  40f7c3:	0f 87 66 fa ff ff    	ja     40f22f <extern_value+0x1ff>
  40f7c9:	48 89 c2             	mov    %rax,%rdx
  40f7cc:	41 c6 04 24 84       	movb   $0x84,(%r12)
  40f7d1:	41 c6 44 24 01 95    	movb   $0x95,0x1(%r12)
  40f7d7:	48 c1 fa 18          	sar    $0x18,%rdx
  40f7db:	41 c6 44 24 02 a6    	movb   $0xa6,0x2(%r12)
  40f7e1:	41 c6 44 24 03 be    	movb   $0xbe,0x3(%r12)
  40f7e7:	41 88 54 24 04       	mov    %dl,0x4(%r12)
  40f7ec:	48 89 c2             	mov    %rax,%rdx
  40f7ef:	41 88 44 24 07       	mov    %al,0x7(%r12)
  40f7f4:	48 c1 fa 10          	sar    $0x10,%rdx
  40f7f8:	41 88 4c 24 0f       	mov    %cl,0xf(%r12)
  40f7fd:	41 88 74 24 13       	mov    %sil,0x13(%r12)
  40f802:	41 88 54 24 05       	mov    %dl,0x5(%r12)
  40f807:	48 89 c2             	mov    %rax,%rdx
  40f80a:	48 c1 fa 08          	sar    $0x8,%rdx
  40f80e:	41 88 54 24 06       	mov    %dl,0x6(%r12)
  40f813:	48 8b 15 16 40 22 00 	mov    0x224016(%rip),%rdx        # 633830 <obj_counter>
  40f81a:	48 89 d7             	mov    %rdx,%rdi
  40f81d:	41 88 54 24 0b       	mov    %dl,0xb(%r12)
  40f822:	48 c1 ff 18          	sar    $0x18,%rdi
  40f826:	41 88 7c 24 08       	mov    %dil,0x8(%r12)
  40f82b:	48 89 d7             	mov    %rdx,%rdi
  40f82e:	48 c1 ff 10          	sar    $0x10,%rdi
  40f832:	41 88 7c 24 09       	mov    %dil,0x9(%r12)
  40f837:	48 89 d7             	mov    %rdx,%rdi
  40f83a:	48 89 ca             	mov    %rcx,%rdx
  40f83d:	48 c1 fa 18          	sar    $0x18,%rdx
  40f841:	48 c1 ff 08          	sar    $0x8,%rdi
  40f845:	41 88 54 24 0c       	mov    %dl,0xc(%r12)
  40f84a:	48 89 ca             	mov    %rcx,%rdx
  40f84d:	41 88 7c 24 0a       	mov    %dil,0xa(%r12)
  40f852:	48 c1 fa 10          	sar    $0x10,%rdx
  40f856:	41 88 54 24 0d       	mov    %dl,0xd(%r12)
  40f85b:	48 89 ca             	mov    %rcx,%rdx
  40f85e:	48 c1 fa 08          	sar    $0x8,%rdx
  40f862:	41 88 54 24 0e       	mov    %dl,0xe(%r12)
  40f867:	48 89 f2             	mov    %rsi,%rdx
  40f86a:	48 c1 fa 18          	sar    $0x18,%rdx
  40f86e:	41 88 54 24 10       	mov    %dl,0x10(%r12)
  40f873:	48 89 f2             	mov    %rsi,%rdx
  40f876:	48 c1 fa 10          	sar    $0x10,%rdx
  40f87a:	41 88 54 24 11       	mov    %dl,0x11(%r12)
  40f87f:	48 89 f2             	mov    %rsi,%rdx
  40f882:	48 c1 fa 08          	sar    $0x8,%rdx
  40f886:	41 88 54 24 12       	mov    %dl,0x12(%r12)
  40f88b:	41 c7 45 00 14 00 00 	movl   $0x14,0x0(%r13)
  40f892:	00 
  40f893:	e9 f4 fa ff ff       	jmpq   40f38c <extern_value+0x35c>
  40f898:	83 f9 0f             	cmp    $0xf,%ecx
  40f89b:	77 0a                	ja     40f8a7 <extern_value+0x877>
  40f89d:	49 83 fe 07          	cmp    $0x7,%r14
  40f8a1:	0f 86 1f 01 00 00    	jbe    40f9c6 <extern_value+0x996>
  40f8a7:	49 81 fe ff ff 3f 00 	cmp    $0x3fffff,%r14
  40f8ae:	0f 87 af 00 00 00    	ja     40f963 <extern_value+0x933>
  40f8b4:	4c 89 fe             	mov    %r15,%rsi
  40f8b7:	bf 08 00 00 00       	mov    $0x8,%edi
  40f8bc:	48 81 e6 ff fc ff ff 	and    $0xfffffffffffffcff,%rsi
  40f8c3:	e8 a8 f1 ff ff       	callq  40ea70 <writecode32>
  40f8c8:	8b 0d 4a 3f 22 00    	mov    0x223f4a(%rip),%ecx        # 633818 <extern_flags>
  40f8ce:	48 8b 05 53 3f 22 00 	mov    0x223f53(%rip),%rax        # 633828 <size_32>
  40f8d5:	83 e1 01             	and    $0x1,%ecx
  40f8d8:	48 8b 55 00          	mov    0x0(%rbp),%rdx
  40f8dc:	49 8d 44 06 01       	lea    0x1(%r14,%rax,1),%rax
  40f8e1:	48 89 05 40 3f 22 00 	mov    %rax,0x223f40(%rip)        # 633828 <size_32>
  40f8e8:	48 8b 05 31 3f 22 00 	mov    0x223f31(%rip),%rax        # 633820 <size_64>
  40f8ef:	49 8d 44 06 01       	lea    0x1(%r14,%rax,1),%rax
  40f8f4:	48 89 05 25 3f 22 00 	mov    %rax,0x223f25(%rip)        # 633820 <size_64>
  40f8fb:	0f 84 69 01 00 00    	je     40fa6a <extern_value+0xa3a>
  40f901:	49 83 fe 01          	cmp    $0x1,%r14
  40f905:	0f 84 3e fb ff ff    	je     40f449 <extern_value+0x419>
  40f90b:	48 8b 05 96 ce 21 00 	mov    0x21ce96(%rip),%rax        # 62c7a8 <extern_stack_limit>
  40f912:	48 83 c3 10          	add    $0x10,%rbx
  40f916:	48 39 c3             	cmp    %rax,%rbx
  40f919:	0f 83 bc 01 00 00    	jae    40fadb <extern_value+0xaab>
  40f91f:	4d 8d 46 ff          	lea    -0x1(%r14),%r8
  40f923:	48 83 c5 08          	add    $0x8,%rbp
  40f927:	48 89 2b             	mov    %rbp,(%rbx)
  40f92a:	48 89 d5             	mov    %rdx,%rbp
  40f92d:	4c 89 43 08          	mov    %r8,0x8(%rbx)
  40f931:	e9 1b f8 ff ff       	jmpq   40f151 <extern_value+0x121>
  40f936:	bf 04 00 00 00       	mov    $0x4,%edi
  40f93b:	e8 50 f0 ff ff       	callq  40e990 <writecode8>
  40f940:	e9 db f7 ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f945:	bf 06 00 00 00       	mov    $0x6,%edi
  40f94a:	e8 21 f1 ff ff       	callq  40ea70 <writecode32>
  40f94f:	e9 cc f7 ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f954:	bf 05 00 00 00       	mov    $0x5,%edi
  40f959:	e8 e2 ef ff ff       	callq  40e940 <writecode16>
  40f95e:	e9 bd f7 ff ff       	jmpq   40f120 <extern_value+0xf0>
  40f963:	8b 0d af 3e 22 00    	mov    0x223eaf(%rip),%ecx        # 633818 <extern_flags>
  40f969:	f6 c1 04             	test   $0x4,%cl
  40f96c:	0f 85 30 02 00 00    	jne    40fba2 <extern_value+0xb72>
  40f972:	4c 89 fe             	mov    %r15,%rsi
  40f975:	bf 13 00 00 00       	mov    $0x13,%edi
  40f97a:	89 0c 24             	mov    %ecx,(%rsp)
  40f97d:	48 81 e6 ff fc ff ff 	and    $0xfffffffffffffcff,%rsi
  40f984:	e8 57 f0 ff ff       	callq  40e9e0 <writecode64>
  40f989:	8b 0c 24             	mov    (%rsp),%ecx
  40f98c:	e9 3d ff ff ff       	jmpq   40f8ce <extern_value+0x89e>
  40f991:	4c 89 fe             	mov    %r15,%rsi
  40f994:	bf 07 00 00 00       	mov    $0x7,%edi
  40f999:	e8 d2 f0 ff ff       	callq  40ea70 <writecode32>
  40f99e:	4a 8d 34 fd 00 00 00 	lea    0x0(,%r15,8),%rsi
  40f9a5:	00 
  40f9a6:	48 89 ef             	mov    %rbp,%rdi
  40f9a9:	e8 62 f3 ff ff       	callq  40ed10 <caml_serialize_block_1>
  40f9ae:	48 8b 05 73 3e 22 00 	mov    0x223e73(%rip),%rax        # 633828 <size_32>
  40f9b5:	4a 8d 44 78 01       	lea    0x1(%rax,%r15,2),%rax
  40f9ba:	48 89 05 67 3e 22 00 	mov    %rax,0x223e67(%rip)        # 633828 <size_32>
  40f9c1:	e9 8a fd ff ff       	jmpq   40f750 <extern_value+0x720>
  40f9c6:	44 89 f0             	mov    %r14d,%eax
  40f9c9:	c1 e0 04             	shl    $0x4,%eax
  40f9cc:	44 8d bc 01 80 00 00 	lea    0x80(%rcx,%rax,1),%r15d
  40f9d3:	00 
  40f9d4:	48 8b 05 e5 ed 21 00 	mov    0x21ede5(%rip),%rax        # 62e7c0 <extern_ptr>
  40f9db:	48 3b 05 d6 ed 21 00 	cmp    0x21edd6(%rip),%rax        # 62e7b8 <extern_limit>
  40f9e2:	72 11                	jb     40f9f5 <extern_value+0x9c5>
  40f9e4:	bf 01 00 00 00       	mov    $0x1,%edi
  40f9e9:	e8 c2 ee ff ff       	callq  40e8b0 <grow_extern_output>
  40f9ee:	48 8b 05 cb ed 21 00 	mov    0x21edcb(%rip),%rax        # 62e7c0 <extern_ptr>
  40f9f5:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40f9f9:	44 88 38             	mov    %r15b,(%rax)
  40f9fc:	8b 0d 16 3e 22 00    	mov    0x223e16(%rip),%ecx        # 633818 <extern_flags>
  40fa02:	48 89 15 b7 ed 21 00 	mov    %rdx,0x21edb7(%rip)        # 62e7c0 <extern_ptr>
  40fa09:	e9 c0 fe ff ff       	jmpq   40f8ce <extern_value+0x89e>
  40fa0e:	48 89 c6             	mov    %rax,%rsi
  40fa11:	bf 09 00 00 00       	mov    $0x9,%edi
  40fa16:	e8 75 ef ff ff       	callq  40e990 <writecode8>
  40fa1b:	e9 02 fd ff ff       	jmpq   40f722 <extern_value+0x6f2>
  40fa20:	44 8d 70 20          	lea    0x20(%rax),%r14d
  40fa24:	48 8b 05 95 ed 21 00 	mov    0x21ed95(%rip),%rax        # 62e7c0 <extern_ptr>
  40fa2b:	48 3b 05 86 ed 21 00 	cmp    0x21ed86(%rip),%rax        # 62e7b8 <extern_limit>
  40fa32:	72 11                	jb     40fa45 <extern_value+0xa15>
  40fa34:	bf 01 00 00 00       	mov    $0x1,%edi
  40fa39:	e8 72 ee ff ff       	callq  40e8b0 <grow_extern_output>
  40fa3e:	48 8b 05 7b ed 21 00 	mov    0x21ed7b(%rip),%rax        # 62e7c0 <extern_ptr>
  40fa45:	48 8d 48 01          	lea    0x1(%rax),%rcx
  40fa49:	44 88 30             	mov    %r14b,(%rax)
  40fa4c:	48 89 0d 6d ed 21 00 	mov    %rcx,0x21ed6d(%rip)        # 62e7c0 <extern_ptr>
  40fa53:	e9 ca fc ff ff       	jmpq   40f722 <extern_value+0x6f2>
  40fa58:	4c 89 fe             	mov    %r15,%rsi
  40fa5b:	bf 0e 00 00 00       	mov    $0xe,%edi
  40fa60:	e8 2b ef ff ff       	callq  40e990 <writecode8>
  40fa65:	e9 34 ff ff ff       	jmpq   40f99e <extern_value+0x96e>
  40fa6a:	48 89 ef             	mov    %rbp,%rdi
  40fa6d:	48 89 14 24          	mov    %rdx,(%rsp)
  40fa71:	e8 9a f0 ff ff       	callq  40eb10 <extern_record_location.part.1>
  40fa76:	48 8b 14 24          	mov    (%rsp),%rdx
  40fa7a:	e9 82 fe ff ff       	jmpq   40f901 <extern_value+0x8d1>
  40fa7f:	48 8b 15 3a ed 21 00 	mov    0x21ed3a(%rip),%rdx        # 62e7c0 <extern_ptr>
  40fa86:	48 8b 05 1b ed 21 00 	mov    0x21ed1b(%rip),%rax        # 62e7a8 <extern_output_block>
  40fa8d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40fa91:	e8 9a ec ff ff       	callq  40e730 <extern_replay_trail>
  40fa96:	48 8b 15 13 ed 21 00 	mov    0x21ed13(%rip),%rdx        # 62e7b0 <extern_output_first>
  40fa9d:	31 c0                	xor    %eax,%eax
  40fa9f:	48 85 d2             	test   %rdx,%rdx
  40faa2:	0f 84 fc fc ff ff    	je     40f7a4 <extern_value+0x774>
  40faa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40faaf:	00 
  40fab0:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
  40fab4:	48 29 d1             	sub    %rdx,%rcx
  40fab7:	48 8b 12             	mov    (%rdx),%rdx
  40faba:	48 8d 44 01 f0       	lea    -0x10(%rcx,%rax,1),%rax
  40fabf:	48 85 d2             	test   %rdx,%rdx
  40fac2:	75 ec                	jne    40fab0 <extern_value+0xa80>
  40fac4:	e9 58 f7 ff ff       	jmpq   40f221 <extern_value+0x1f1>
  40fac9:	4c 89 fe             	mov    %r15,%rsi
  40facc:	bf 0a 00 00 00       	mov    $0xa,%edi
  40fad1:	e8 9a ef ff ff       	callq  40ea70 <writecode32>
  40fad6:	e9 47 fc ff ff       	jmpq   40f722 <extern_value+0x6f2>
  40fadb:	4c 8b 0d ce cc 21 00 	mov    0x21ccce(%rip),%r9        # 62c7b0 <extern_stack>
  40fae2:	4c 29 c8             	sub    %r9,%rax
  40fae5:	4c 29 cb             	sub    %r9,%rbx
  40fae8:	49 89 c7             	mov    %rax,%r15
  40faeb:	49 c1 ff 04          	sar    $0x4,%r15
  40faef:	4b 8d 04 3f          	lea    (%r15,%r15,1),%rax
  40faf3:	48 3d ff ff 3f 06    	cmp    $0x63fffff,%rax
  40faf9:	0f 87 80 00 00 00    	ja     40fb7f <extern_value+0xb4f>
  40faff:	49 81 f9 e0 e7 62 00 	cmp    $0x62e7e0,%r9
  40fb06:	74 35                	je     40fb3d <extern_value+0xb0d>
  40fb08:	49 c1 e7 05          	shl    $0x5,%r15
  40fb0c:	4c 89 cf             	mov    %r9,%rdi
  40fb0f:	48 89 14 24          	mov    %rdx,(%rsp)
  40fb13:	4c 89 fe             	mov    %r15,%rsi
  40fb16:	e8 e5 21 ff ff       	callq  401d00 <realloc@plt>
  40fb1b:	48 85 c0             	test   %rax,%rax
  40fb1e:	48 8b 14 24          	mov    (%rsp),%rdx
  40fb22:	74 5b                	je     40fb7f <extern_value+0xb4f>
  40fb24:	49 01 c7             	add    %rax,%r15
  40fb27:	48 89 05 82 cc 21 00 	mov    %rax,0x21cc82(%rip)        # 62c7b0 <extern_stack>
  40fb2e:	48 01 c3             	add    %rax,%rbx
  40fb31:	4c 89 3d 70 cc 21 00 	mov    %r15,0x21cc70(%rip)        # 62c7a8 <extern_stack_limit>
  40fb38:	e9 e2 fd ff ff       	jmpq   40f91f <extern_value+0x8ef>
  40fb3d:	49 c1 e7 05          	shl    $0x5,%r15
  40fb41:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
  40fb46:	48 89 14 24          	mov    %rdx,(%rsp)
  40fb4a:	4c 89 ff             	mov    %r15,%rdi
  40fb4d:	e8 3e 21 ff ff       	callq  401c90 <malloc@plt>
  40fb52:	48 85 c0             	test   %rax,%rax
  40fb55:	74 28                	je     40fb7f <extern_value+0xb4f>
  40fb57:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
  40fb5c:	b9 00 02 00 00       	mov    $0x200,%ecx
  40fb61:	48 89 c7             	mov    %rax,%rdi
  40fb64:	48 8b 14 24          	mov    (%rsp),%rdx
  40fb68:	4c 89 ce             	mov    %r9,%rsi
  40fb6b:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  40fb6e:	eb b4                	jmp    40fb24 <extern_value+0xaf4>
  40fb70:	bf 68 e2 41 00       	mov    $0x41e268,%edi
  40fb75:	e8 06 ed ff ff       	callq  40e880 <extern_failwith>
  40fb7a:	e8 f1 1e ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40fb7f:	e8 88 23 ff ff       	callq  401f0c <extern_stack_overflow>
  40fb84:	bf e8 e2 41 00       	mov    $0x41e2e8,%edi
  40fb89:	e8 f2 ec ff ff       	callq  40e880 <extern_failwith>
  40fb8e:	bf 58 e3 41 00       	mov    $0x41e358,%edi
  40fb93:	e8 48 ef ff ff       	callq  40eae0 <extern_invalid_argument>
  40fb98:	bf e0 e3 41 00       	mov    $0x41e3e0,%edi
  40fb9d:	e8 3e ef ff ff       	callq  40eae0 <extern_invalid_argument>
  40fba2:	bf 80 e3 41 00       	mov    $0x41e380,%edi
  40fba7:	e8 d4 ec ff ff       	callq  40e880 <extern_failwith>
  40fbac:	bf a8 e2 41 00       	mov    $0x41e2a8,%edi
  40fbb1:	e8 ca ec ff ff       	callq  40e880 <extern_failwith>
  40fbb6:	48 85 db             	test   %rbx,%rbx
  40fbb9:	75 05                	jne    40fbc0 <extern_value+0xb90>
  40fbbb:	e8 60 ec ff ff       	callq  40e820 <free_extern_output.part.0>
  40fbc0:	bf 10 e4 41 00       	mov    $0x41e410,%edi
  40fbc5:	e8 f6 aa 00 00       	callq  41a6c0 <caml_failwith>
  40fbca:	bf c0 e3 41 00       	mov    $0x41e3c0,%edi
  40fbcf:	e8 0c ef ff ff       	callq  40eae0 <extern_invalid_argument>
  40fbd4:	66 90                	xchg   %ax,%ax
  40fbd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40fbdd:	00 00 00 

000000000040fbe0 <caml_output_val>:
  40fbe0:	41 54                	push   %r12
  40fbe2:	55                   	push   %rbp
  40fbe3:	49 89 fc             	mov    %rdi,%r12
  40fbe6:	53                   	push   %rbx
  40fbe7:	48 89 d5             	mov    %rdx,%rbp
  40fbea:	48 89 f3             	mov    %rsi,%rbx
  40fbed:	48 83 ec 40          	sub    $0x40,%rsp
  40fbf1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40fbf8:	00 00 
  40fbfa:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40fbff:	31 c0                	xor    %eax,%eax
  40fc01:	e8 aa d4 ff ff       	callq  40d0b0 <caml_channel_binary_mode>
  40fc06:	85 c0                	test   %eax,%eax
  40fc08:	74 7d                	je     40fc87 <caml_output_val+0xa7>
  40fc0a:	e8 b1 eb ff ff       	callq  40e7c0 <init_extern_output>
  40fc0f:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  40fc14:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40fc19:	48 89 df             	mov    %rbx,%rdi
  40fc1c:	48 89 ee             	mov    %rbp,%rsi
  40fc1f:	e8 0c f4 ff ff       	callq  40f030 <extern_value>
  40fc24:	48 63 54 24 0c       	movslq 0xc(%rsp),%rdx
  40fc29:	48 8b 1d 80 eb 21 00 	mov    0x21eb80(%rip),%rbx        # 62e7b0 <extern_output_first>
  40fc30:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  40fc35:	4c 89 e7             	mov    %r12,%rdi
  40fc38:	e8 a3 d6 ff ff       	callq  40d2e0 <caml_really_putblock>
  40fc3d:	48 85 db             	test   %rbx,%rbx
  40fc40:	74 2c                	je     40fc6e <caml_output_val+0x8e>
  40fc42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40fc48:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  40fc4c:	48 8d 73 10          	lea    0x10(%rbx),%rsi
  40fc50:	4c 89 e7             	mov    %r12,%rdi
  40fc53:	48 29 f2             	sub    %rsi,%rdx
  40fc56:	e8 85 d6 ff ff       	callq  40d2e0 <caml_really_putblock>
  40fc5b:	48 8b 2b             	mov    (%rbx),%rbp
  40fc5e:	48 89 df             	mov    %rbx,%rdi
  40fc61:	e8 fa 1c ff ff       	callq  401960 <free@plt>
  40fc66:	48 85 ed             	test   %rbp,%rbp
  40fc69:	48 89 eb             	mov    %rbp,%rbx
  40fc6c:	75 da                	jne    40fc48 <caml_output_val+0x68>
  40fc6e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  40fc73:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40fc7a:	00 00 
  40fc7c:	75 13                	jne    40fc91 <caml_output_val+0xb1>
  40fc7e:	48 83 c4 40          	add    $0x40,%rsp
  40fc82:	5b                   	pop    %rbx
  40fc83:	5d                   	pop    %rbp
  40fc84:	41 5c                	pop    %r12
  40fc86:	c3                   	retq   
  40fc87:	bf 50 e4 41 00       	mov    $0x41e450,%edi
  40fc8c:	e8 2f aa 00 00       	callq  41a6c0 <caml_failwith>
  40fc91:	e8 da 1d ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40fc96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40fc9d:	00 00 00 

000000000040fca0 <caml_output_value>:
  40fca0:	55                   	push   %rbp
  40fca1:	53                   	push   %rbx
  40fca2:	48 83 ec 78          	sub    $0x78,%rsp
  40fca6:	48 8b 2d 9b cc 21 00 	mov    0x21cc9b(%rip),%rbp        # 62c948 <caml_local_roots>
  40fcad:	48 8b 05 c4 ea 21 00 	mov    0x21eac4(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  40fcb4:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  40fcb9:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  40fcbe:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  40fcc3:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  40fcca:	00 00 
  40fccc:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
  40fcd1:	31 c9                	xor    %ecx,%ecx
  40fcd3:	48 89 15 6e cc 21 00 	mov    %rdx,0x21cc6e(%rip)        # 62c948 <caml_local_roots>
  40fcda:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  40fcdf:	48 85 c0             	test   %rax,%rax
  40fce2:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  40fce7:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
  40fcec:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  40fcf1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40fcf6:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  40fcfd:	00 00 
  40fcff:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
  40fd06:	00 00 
  40fd08:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  40fd0d:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40fd12:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
  40fd17:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  40fd1b:	74 05                	je     40fd22 <caml_output_value+0x82>
  40fd1d:	48 89 df             	mov    %rbx,%rdi
  40fd20:	ff d0                	callq  *%rax
  40fd22:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  40fd27:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  40fd2c:	48 89 df             	mov    %rbx,%rdi
  40fd2f:	e8 ac fe ff ff       	callq  40fbe0 <caml_output_val>
  40fd34:	48 8b 05 35 ea 21 00 	mov    0x21ea35(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  40fd3b:	48 85 c0             	test   %rax,%rax
  40fd3e:	74 05                	je     40fd45 <caml_output_value+0xa5>
  40fd40:	48 89 df             	mov    %rbx,%rdi
  40fd43:	ff d0                	callq  *%rax
  40fd45:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  40fd4a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40fd51:	00 00 
  40fd53:	48 89 2d ee cb 21 00 	mov    %rbp,0x21cbee(%rip)        # 62c948 <caml_local_roots>
  40fd5a:	b8 01 00 00 00       	mov    $0x1,%eax
  40fd5f:	75 07                	jne    40fd68 <caml_output_value+0xc8>
  40fd61:	48 83 c4 78          	add    $0x78,%rsp
  40fd65:	5b                   	pop    %rbx
  40fd66:	5d                   	pop    %rbp
  40fd67:	c3                   	retq   
  40fd68:	e8 03 1d ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40fd6d:	0f 1f 00             	nopl   (%rax)

000000000040fd70 <caml_output_value_to_string>:
  40fd70:	41 55                	push   %r13
  40fd72:	41 54                	push   %r12
  40fd74:	55                   	push   %rbp
  40fd75:	53                   	push   %rbx
  40fd76:	48 89 f5             	mov    %rsi,%rbp
  40fd79:	48 89 fb             	mov    %rdi,%rbx
  40fd7c:	48 83 ec 48          	sub    $0x48,%rsp
  40fd80:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40fd87:	00 00 
  40fd89:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40fd8e:	31 c0                	xor    %eax,%eax
  40fd90:	e8 2b ea ff ff       	callq  40e7c0 <init_extern_output>
  40fd95:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  40fd9a:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40fd9f:	48 89 ee             	mov    %rbp,%rsi
  40fda2:	48 89 df             	mov    %rbx,%rdi
  40fda5:	e8 86 f2 ff ff       	callq  40f030 <extern_value>
  40fdaa:	48 63 7c 24 0c       	movslq 0xc(%rsp),%rdi
  40fdaf:	48 8b 2d fa e9 21 00 	mov    0x21e9fa(%rip),%rbp        # 62e7b0 <extern_output_first>
  40fdb6:	48 01 c7             	add    %rax,%rdi
  40fdb9:	e8 f2 c5 00 00       	callq  41c3b0 <caml_alloc_string>
  40fdbe:	48 63 54 24 0c       	movslq 0xc(%rsp),%rdx
  40fdc3:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  40fdc8:	48 89 c7             	mov    %rax,%rdi
  40fdcb:	49 89 c5             	mov    %rax,%r13
  40fdce:	e8 3d 1e ff ff       	callq  401c10 <memcpy@plt>
  40fdd3:	48 85 ed             	test   %rbp,%rbp
  40fdd6:	4c 63 64 24 0c       	movslq 0xc(%rsp),%r12
  40fddb:	74 34                	je     40fe11 <caml_output_value_to_string+0xa1>
  40fddd:	0f 1f 00             	nopl   (%rax)
  40fde0:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
  40fde4:	48 8d 75 10          	lea    0x10(%rbp),%rsi
  40fde8:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
  40fdec:	48 29 f3             	sub    %rsi,%rbx
  40fdef:	48 63 db             	movslq %ebx,%rbx
  40fdf2:	48 89 da             	mov    %rbx,%rdx
  40fdf5:	49 01 dc             	add    %rbx,%r12
  40fdf8:	e8 13 1e ff ff       	callq  401c10 <memcpy@plt>
  40fdfd:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
  40fe01:	48 89 ef             	mov    %rbp,%rdi
  40fe04:	e8 57 1b ff ff       	callq  401960 <free@plt>
  40fe09:	48 85 db             	test   %rbx,%rbx
  40fe0c:	48 89 dd             	mov    %rbx,%rbp
  40fe0f:	75 cf                	jne    40fde0 <caml_output_value_to_string+0x70>
  40fe11:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
  40fe16:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40fe1d:	00 00 
  40fe1f:	4c 89 e8             	mov    %r13,%rax
  40fe22:	75 0b                	jne    40fe2f <caml_output_value_to_string+0xbf>
  40fe24:	48 83 c4 48          	add    $0x48,%rsp
  40fe28:	5b                   	pop    %rbx
  40fe29:	5d                   	pop    %rbp
  40fe2a:	41 5c                	pop    %r12
  40fe2c:	41 5d                	pop    %r13
  40fe2e:	c3                   	retq   
  40fe2f:	e8 3c 1c ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40fe34:	66 90                	xchg   %ax,%ax
  40fe36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40fe3d:	00 00 00 

000000000040fe40 <caml_output_value_to_block>:
  40fe40:	41 56                	push   %r14
  40fe42:	41 55                	push   %r13
  40fe44:	49 89 cd             	mov    %rcx,%r13
  40fe47:	41 54                	push   %r12
  40fe49:	55                   	push   %rbp
  40fe4a:	4c 8d 62 14          	lea    0x14(%rdx),%r12
  40fe4e:	53                   	push   %rbx
  40fe4f:	48 89 d5             	mov    %rdx,%rbp
  40fe52:	bb 14 00 00 00       	mov    $0x14,%ebx
  40fe57:	48 83 ec 40          	sub    $0x40,%rsp
  40fe5b:	4c 89 25 66 e9 21 00 	mov    %r12,0x21e966(%rip)        # 62e7c8 <extern_userprovided_output>
  40fe62:	4c 89 25 57 e9 21 00 	mov    %r12,0x21e957(%rip)        # 62e7c0 <extern_ptr>
  40fe69:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40fe70:	00 00 
  40fe72:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40fe77:	31 c0                	xor    %eax,%eax
  40fe79:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
  40fe7d:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  40fe82:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40fe87:	48 89 05 2a e9 21 00 	mov    %rax,0x21e92a(%rip)        # 62e7b8 <extern_limit>
  40fe8e:	e8 9d f1 ff ff       	callq  40f030 <extern_value>
  40fe93:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  40fe97:	4c 8d 70 14          	lea    0x14(%rax),%r14
  40fe9b:	83 f9 14             	cmp    $0x14,%ecx
  40fe9e:	74 1c                	je     40febc <caml_output_value_to_block+0x7c>
  40fea0:	48 63 d9             	movslq %ecx,%rbx
  40fea3:	4c 8d 34 03          	lea    (%rbx,%rax,1),%r14
  40fea7:	4d 39 f5             	cmp    %r14,%r13
  40feaa:	7c 40                	jl     40feec <caml_output_value_to_block+0xac>
  40feac:	48 8d 7c 1d 00       	lea    0x0(%rbp,%rbx,1),%rdi
  40feb1:	48 89 c2             	mov    %rax,%rdx
  40feb4:	4c 89 e6             	mov    %r12,%rsi
  40feb7:	e8 74 1e ff ff       	callq  401d30 <memmove@plt>
  40febc:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  40fec1:	48 89 da             	mov    %rbx,%rdx
  40fec4:	48 89 ef             	mov    %rbp,%rdi
  40fec7:	e8 44 1d ff ff       	callq  401c10 <memcpy@plt>
  40fecc:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
  40fed1:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  40fed8:	00 00 
  40feda:	4c 89 f0             	mov    %r14,%rax
  40fedd:	75 17                	jne    40fef6 <caml_output_value_to_block+0xb6>
  40fedf:	48 83 c4 40          	add    $0x40,%rsp
  40fee3:	5b                   	pop    %rbx
  40fee4:	5d                   	pop    %rbp
  40fee5:	41 5c                	pop    %r12
  40fee7:	41 5d                	pop    %r13
  40fee9:	41 5e                	pop    %r14
  40feeb:	c3                   	retq   
  40feec:	bf 18 e2 41 00       	mov    $0x41e218,%edi
  40fef1:	e8 ca a7 00 00       	callq  41a6c0 <caml_failwith>
  40fef6:	e8 75 1b ff ff       	callq  401a70 <__stack_chk_fail@plt>
  40fefb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040ff00 <caml_output_value_to_buffer>:
  40ff00:	48 d1 fe             	sar    %rsi
  40ff03:	48 89 c8             	mov    %rcx,%rax
  40ff06:	48 89 d1             	mov    %rdx,%rcx
  40ff09:	48 89 f2             	mov    %rsi,%rdx
  40ff0c:	48 83 ec 08          	sub    $0x8,%rsp
  40ff10:	48 d1 f9             	sar    %rcx
  40ff13:	48 01 fa             	add    %rdi,%rdx
  40ff16:	4c 89 c6             	mov    %r8,%rsi
  40ff19:	48 89 c7             	mov    %rax,%rdi
  40ff1c:	e8 1f ff ff ff       	callq  40fe40 <caml_output_value_to_block>
  40ff21:	48 83 c4 08          	add    $0x8,%rsp
  40ff25:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  40ff2a:	c3                   	retq   
  40ff2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040ff30 <caml_output_value_to_malloc>:
  40ff30:	41 55                	push   %r13
  40ff32:	41 54                	push   %r12
  40ff34:	49 89 f5             	mov    %rsi,%r13
  40ff37:	55                   	push   %rbp
  40ff38:	53                   	push   %rbx
  40ff39:	48 89 fd             	mov    %rdi,%rbp
  40ff3c:	48 89 d3             	mov    %rdx,%rbx
  40ff3f:	49 89 cc             	mov    %rcx,%r12
  40ff42:	48 83 ec 48          	sub    $0x48,%rsp
  40ff46:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40ff4d:	00 00 
  40ff4f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40ff54:	31 c0                	xor    %eax,%eax
  40ff56:	e8 65 e8 ff ff       	callq  40e7c0 <init_extern_output>
  40ff5b:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  40ff60:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40ff65:	48 89 ef             	mov    %rbp,%rdi
  40ff68:	4c 89 ee             	mov    %r13,%rsi
  40ff6b:	e8 c0 f0 ff ff       	callq  40f030 <extern_value>
  40ff70:	48 63 7c 24 0c       	movslq 0xc(%rsp),%rdi
  40ff75:	48 89 c5             	mov    %rax,%rbp
  40ff78:	48 01 c7             	add    %rax,%rdi
  40ff7b:	e8 10 1d ff ff       	callq  401c90 <malloc@plt>
  40ff80:	48 85 c0             	test   %rax,%rax
  40ff83:	0f 84 90 00 00 00    	je     410019 <caml_output_value_to_malloc+0xe9>
  40ff89:	48 89 03             	mov    %rax,(%rbx)
  40ff8c:	48 63 5c 24 0c       	movslq 0xc(%rsp),%rbx
  40ff91:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  40ff96:	48 89 c7             	mov    %rax,%rdi
  40ff99:	48 01 dd             	add    %rbx,%rbp
  40ff9c:	48 89 da             	mov    %rbx,%rdx
  40ff9f:	49 89 2c 24          	mov    %rbp,(%r12)
  40ffa3:	e8 68 1c ff ff       	callq  401c10 <memcpy@plt>
  40ffa8:	48 8b 2d 01 e8 21 00 	mov    0x21e801(%rip),%rbp        # 62e7b0 <extern_output_first>
  40ffaf:	48 89 c1             	mov    %rax,%rcx
  40ffb2:	48 01 d9             	add    %rbx,%rcx
  40ffb5:	48 85 ed             	test   %rbp,%rbp
  40ffb8:	74 2e                	je     40ffe8 <caml_output_value_to_malloc+0xb8>
  40ffba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40ffc0:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
  40ffc4:	48 8d 75 10          	lea    0x10(%rbp),%rsi
  40ffc8:	48 89 cf             	mov    %rcx,%rdi
  40ffcb:	48 29 f3             	sub    %rsi,%rbx
  40ffce:	48 63 db             	movslq %ebx,%rbx
  40ffd1:	48 89 da             	mov    %rbx,%rdx
  40ffd4:	e8 37 1c ff ff       	callq  401c10 <memcpy@plt>
  40ffd9:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
  40ffdd:	48 89 c1             	mov    %rax,%rcx
  40ffe0:	48 01 d9             	add    %rbx,%rcx
  40ffe3:	48 85 ed             	test   %rbp,%rbp
  40ffe6:	75 d8                	jne    40ffc0 <caml_output_value_to_malloc+0x90>
  40ffe8:	48 83 3d d8 e7 21 00 	cmpq   $0x0,0x21e7d8(%rip)        # 62e7c8 <extern_userprovided_output>
  40ffef:	00 
  40fff0:	74 1b                	je     41000d <caml_output_value_to_malloc+0xdd>
  40fff2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  40fff7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40fffe:	00 00 
  410000:	75 12                	jne    410014 <caml_output_value_to_malloc+0xe4>
  410002:	48 83 c4 48          	add    $0x48,%rsp
  410006:	5b                   	pop    %rbx
  410007:	5d                   	pop    %rbp
  410008:	41 5c                	pop    %r12
  41000a:	41 5d                	pop    %r13
  41000c:	c3                   	retq   
  41000d:	e8 0e e8 ff ff       	callq  40e820 <free_extern_output.part.0>
  410012:	eb de                	jmp    40fff2 <caml_output_value_to_malloc+0xc2>
  410014:	e8 57 1a ff ff       	callq  401a70 <__stack_chk_fail@plt>
  410019:	e8 d4 1e ff ff       	callq  401ef2 <extern_out_of_memory>
  41001e:	66 90                	xchg   %ax,%ax

0000000000410020 <read64u>:
  410020:	48 8b 15 59 50 22 00 	mov    0x225059(%rip),%rdx        # 635080 <intern_src>
  410027:	0f b6 02             	movzbl (%rdx),%eax
  41002a:	48 83 c2 08          	add    $0x8,%rdx
  41002e:	48 c1 e0 38          	shl    $0x38,%rax
  410032:	48 89 c1             	mov    %rax,%rcx
  410035:	0f b6 42 f9          	movzbl -0x7(%rdx),%eax
  410039:	48 c1 e0 30          	shl    $0x30,%rax
  41003d:	48 01 c8             	add    %rcx,%rax
  410040:	0f b6 4a ff          	movzbl -0x1(%rdx),%ecx
  410044:	48 01 c1             	add    %rax,%rcx
  410047:	0f b6 42 fa          	movzbl -0x6(%rdx),%eax
  41004b:	48 c1 e0 28          	shl    $0x28,%rax
  41004f:	48 01 c8             	add    %rcx,%rax
  410052:	0f b6 4a fb          	movzbl -0x5(%rdx),%ecx
  410056:	48 c1 e1 20          	shl    $0x20,%rcx
  41005a:	48 01 c8             	add    %rcx,%rax
  41005d:	0f b6 4a fc          	movzbl -0x4(%rdx),%ecx
  410061:	48 c1 e1 18          	shl    $0x18,%rcx
  410065:	48 01 c1             	add    %rax,%rcx
  410068:	0f b6 42 fd          	movzbl -0x3(%rdx),%eax
  41006c:	48 c1 e0 10          	shl    $0x10,%rax
  410070:	48 01 c1             	add    %rax,%rcx
  410073:	0f b6 42 fe          	movzbl -0x2(%rdx),%eax
  410077:	48 89 15 02 50 22 00 	mov    %rdx,0x225002(%rip)        # 635080 <intern_src>
  41007e:	48 c1 e0 08          	shl    $0x8,%rax
  410082:	48 01 c8             	add    %rcx,%rax
  410085:	c3                   	retq   
  410086:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41008d:	00 00 00 

0000000000410090 <caml_parse_header>:
  410090:	48 83 ec 78          	sub    $0x78,%rsp
  410094:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41009b:	00 00 
  41009d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  4100a2:	31 c0                	xor    %eax,%eax
  4100a4:	48 8b 05 d5 4f 22 00 	mov    0x224fd5(%rip),%rax        # 635080 <intern_src>
  4100ab:	0f b6 08             	movzbl (%rax),%ecx
  4100ae:	44 0f b6 40 03       	movzbl 0x3(%rax),%r8d
  4100b3:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  4100b7:	c1 e1 18             	shl    $0x18,%ecx
  4100ba:	c1 e2 10             	shl    $0x10,%edx
  4100bd:	44 01 c1             	add    %r8d,%ecx
  4100c0:	01 d1                	add    %edx,%ecx
  4100c2:	0f b6 50 02          	movzbl 0x2(%rax),%edx
  4100c6:	c1 e2 08             	shl    $0x8,%edx
  4100c9:	01 ca                	add    %ecx,%edx
  4100cb:	48 8d 48 04          	lea    0x4(%rax),%rcx
  4100cf:	81 fa be a6 95 84    	cmp    $0x8495a6be,%edx
  4100d5:	89 16                	mov    %edx,(%rsi)
  4100d7:	48 89 0d a2 4f 22 00 	mov    %rcx,0x224fa2(%rip)        # 635080 <intern_src>
  4100de:	0f 84 8c 00 00 00    	je     410170 <caml_parse_header+0xe0>
  4100e4:	81 fa bf a6 95 84    	cmp    $0x8495a6bf,%edx
  4100ea:	75 4c                	jne    410138 <caml_parse_header+0xa8>
  4100ec:	c7 46 04 20 00 00 00 	movl   $0x20,0x4(%rsi)
  4100f3:	48 83 c0 08          	add    $0x8,%rax
  4100f7:	48 89 05 82 4f 22 00 	mov    %rax,0x224f82(%rip)        # 635080 <intern_src>
  4100fe:	e8 1d ff ff ff       	callq  410020 <read64u>
  410103:	48 89 46 08          	mov    %rax,0x8(%rsi)
  410107:	e8 14 ff ff ff       	callq  410020 <read64u>
  41010c:	48 89 46 10          	mov    %rax,0x10(%rsi)
  410110:	e8 0b ff ff ff       	callq  410020 <read64u>
  410115:	48 89 46 18          	mov    %rax,0x18(%rsi)
  410119:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
  41011e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  410125:	00 00 
  410127:	0f 85 c7 00 00 00    	jne    4101f4 <caml_parse_header+0x164>
  41012d:	48 83 c4 78          	add    $0x78,%rsp
  410131:	c3                   	retq   
  410132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  410138:	49 89 f9             	mov    %rdi,%r9
  41013b:	41 b8 b0 e4 41 00    	mov    $0x41e4b0,%r8d
  410141:	48 89 e7             	mov    %rsp,%rdi
  410144:	b9 64 00 00 00       	mov    $0x64,%ecx
  410149:	ba 01 00 00 00       	mov    $0x1,%edx
  41014e:	be 63 00 00 00       	mov    $0x63,%esi
  410153:	31 c0                	xor    %eax,%eax
  410155:	c6 44 24 63 00       	movb   $0x0,0x63(%rsp)
  41015a:	e8 f1 17 ff ff       	callq  401950 <__snprintf_chk@plt>
  41015f:	48 89 e7             	mov    %rsp,%rdi
  410162:	e8 59 a5 00 00       	callq  41a6c0 <caml_failwith>
  410167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41016e:	00 00 
  410170:	c7 46 04 14 00 00 00 	movl   $0x14,0x4(%rsi)
  410177:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
  41017b:	48 83 c0 14          	add    $0x14,%rax
  41017f:	0f b6 78 f3          	movzbl -0xd(%rax),%edi
  410183:	0f b6 50 f1          	movzbl -0xf(%rax),%edx
  410187:	c1 e1 18             	shl    $0x18,%ecx
  41018a:	01 f9                	add    %edi,%ecx
  41018c:	c1 e2 10             	shl    $0x10,%edx
  41018f:	01 d1                	add    %edx,%ecx
  410191:	0f b6 50 f2          	movzbl -0xe(%rax),%edx
  410195:	c1 e2 08             	shl    $0x8,%edx
  410198:	8d 3c 0a             	lea    (%rdx,%rcx,1),%edi
  41019b:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
  41019f:	0f b6 48 f4          	movzbl -0xc(%rax),%ecx
  4101a3:	0f b6 78 f7          	movzbl -0x9(%rax),%edi
  4101a7:	0f b6 50 f5          	movzbl -0xb(%rax),%edx
  4101ab:	c1 e1 18             	shl    $0x18,%ecx
  4101ae:	01 f9                	add    %edi,%ecx
  4101b0:	c1 e2 10             	shl    $0x10,%edx
  4101b3:	01 d1                	add    %edx,%ecx
  4101b5:	0f b6 50 f6          	movzbl -0xa(%rax),%edx
  4101b9:	c1 e2 08             	shl    $0x8,%edx
  4101bc:	8d 3c 0a             	lea    (%rdx,%rcx,1),%edi
  4101bf:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
  4101c3:	0f b6 48 fc          	movzbl -0x4(%rax),%ecx
  4101c7:	0f b6 78 ff          	movzbl -0x1(%rax),%edi
  4101cb:	0f b6 50 fd          	movzbl -0x3(%rax),%edx
  4101cf:	c1 e1 18             	shl    $0x18,%ecx
  4101d2:	c1 e2 10             	shl    $0x10,%edx
  4101d5:	01 f9                	add    %edi,%ecx
  4101d7:	01 d1                	add    %edx,%ecx
  4101d9:	0f b6 50 fe          	movzbl -0x2(%rax),%edx
  4101dd:	48 89 05 9c 4e 22 00 	mov    %rax,0x224e9c(%rip)        # 635080 <intern_src>
  4101e4:	c1 e2 08             	shl    $0x8,%edx
  4101e7:	01 ca                	add    %ecx,%edx
  4101e9:	89 d0                	mov    %edx,%eax
  4101eb:	48 89 46 18          	mov    %rax,0x18(%rsi)
  4101ef:	e9 25 ff ff ff       	jmpq   410119 <caml_parse_header+0x89>
  4101f4:	e8 77 18 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  4101f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000410200 <intern_resize_stack>:
  410200:	41 54                	push   %r12
  410202:	48 8b 15 af c5 21 00 	mov    0x21c5af(%rip),%rdx        # 62c7b8 <intern_stack_limit>
  410209:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
  410210:	aa aa aa 
  410213:	4c 8b 25 a6 c5 21 00 	mov    0x21c5a6(%rip),%r12        # 62c7c0 <intern_stack>
  41021a:	55                   	push   %rbp
  41021b:	53                   	push   %rbx
  41021c:	4c 29 e2             	sub    %r12,%rdx
  41021f:	4c 29 e7             	sub    %r12,%rdi
  410222:	48 c1 fa 03          	sar    $0x3,%rdx
  410226:	48 0f af d1          	imul   %rcx,%rdx
  41022a:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  41022e:	48 81 f9 ff ff 3f 06 	cmp    $0x63fffff,%rcx
  410235:	77 5e                	ja     410295 <intern_resize_stack+0x95>
  410237:	48 8d 1c 91          	lea    (%rcx,%rdx,4),%rbx
  41023b:	48 89 fd             	mov    %rdi,%rbp
  41023e:	48 c1 e3 03          	shl    $0x3,%rbx
  410242:	49 81 fc 40 38 63 00 	cmp    $0x633840,%r12
  410249:	74 2d                	je     410278 <intern_resize_stack+0x78>
  41024b:	48 89 de             	mov    %rbx,%rsi
  41024e:	4c 89 e7             	mov    %r12,%rdi
  410251:	e8 aa 1a ff ff       	callq  401d00 <realloc@plt>
  410256:	48 85 c0             	test   %rax,%rax
  410259:	74 3a                	je     410295 <intern_resize_stack+0x95>
  41025b:	48 01 c3             	add    %rax,%rbx
  41025e:	48 89 05 5b c5 21 00 	mov    %rax,0x21c55b(%rip)        # 62c7c0 <intern_stack>
  410265:	48 01 e8             	add    %rbp,%rax
  410268:	48 89 1d 49 c5 21 00 	mov    %rbx,0x21c549(%rip)        # 62c7b8 <intern_stack_limit>
  41026f:	5b                   	pop    %rbx
  410270:	5d                   	pop    %rbp
  410271:	41 5c                	pop    %r12
  410273:	c3                   	retq   
  410274:	0f 1f 40 00          	nopl   0x0(%rax)
  410278:	48 89 df             	mov    %rbx,%rdi
  41027b:	e8 10 1a ff ff       	callq  401c90 <malloc@plt>
  410280:	48 85 c0             	test   %rax,%rax
  410283:	74 10                	je     410295 <intern_resize_stack+0x95>
  410285:	b9 00 03 00 00       	mov    $0x300,%ecx
  41028a:	48 89 c7             	mov    %rax,%rdi
  41028d:	4c 89 e6             	mov    %r12,%rsi
  410290:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  410293:	eb c6                	jmp    41025b <intern_resize_stack+0x5b>
  410295:	e8 36 1d ff ff       	callq  401fd0 <intern_stack_overflow>
  41029a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004102a0 <intern_cleanup>:
  4102a0:	48 83 ec 08          	sub    $0x8,%rsp
  4102a4:	48 8b 3d cd 4d 22 00 	mov    0x224dcd(%rip),%rdi        # 635078 <intern_input>
  4102ab:	48 85 ff             	test   %rdi,%rdi
  4102ae:	74 10                	je     4102c0 <intern_cleanup+0x20>
  4102b0:	e8 3b 95 ff ff       	callq  4097f0 <caml_stat_free>
  4102b5:	48 c7 05 b8 4d 22 00 	movq   $0x0,0x224db8(%rip)        # 635078 <intern_input>
  4102bc:	00 00 00 00 
  4102c0:	48 8b 3d 91 4d 22 00 	mov    0x224d91(%rip),%rdi        # 635058 <intern_obj_table>
  4102c7:	48 85 ff             	test   %rdi,%rdi
  4102ca:	74 10                	je     4102dc <intern_cleanup+0x3c>
  4102cc:	e8 1f 95 ff ff       	callq  4097f0 <caml_stat_free>
  4102d1:	48 c7 05 7c 4d 22 00 	movq   $0x0,0x224d7c(%rip)        # 635058 <intern_obj_table>
  4102d8:	00 00 00 00 
  4102dc:	48 8b 3d 85 4d 22 00 	mov    0x224d85(%rip),%rdi        # 635068 <intern_extra_block>
  4102e3:	48 85 ff             	test   %rdi,%rdi
  4102e6:	74 48                	je     410330 <intern_cleanup+0x90>
  4102e8:	e8 03 8d ff ff       	callq  408ff0 <caml_free_for_heap>
  4102ed:	48 c7 05 70 4d 22 00 	movq   $0x0,0x224d70(%rip)        # 635068 <intern_extra_block>
  4102f4:	00 00 00 00 
  4102f8:	48 8b 3d c1 c4 21 00 	mov    0x21c4c1(%rip),%rdi        # 62c7c0 <intern_stack>
  4102ff:	48 81 ff 40 38 63 00 	cmp    $0x633840,%rdi
  410306:	74 1b                	je     410323 <intern_cleanup+0x83>
  410308:	e8 53 16 ff ff       	callq  401960 <free@plt>
  41030d:	48 c7 05 a8 c4 21 00 	movq   $0x633840,0x21c4a8(%rip)        # 62c7c0 <intern_stack>
  410314:	40 38 63 00 
  410318:	48 c7 05 95 c4 21 00 	movq   $0x635040,0x21c495(%rip)        # 62c7b8 <intern_stack_limit>
  41031f:	40 50 63 00 
  410323:	48 83 c4 08          	add    $0x8,%rsp
  410327:	c3                   	retq   
  410328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41032f:	00 
  410330:	48 8b 05 09 4d 22 00 	mov    0x224d09(%rip),%rax        # 635040 <intern_block>
  410337:	48 85 c0             	test   %rax,%rax
  41033a:	74 bc                	je     4102f8 <intern_cleanup+0x58>
  41033c:	48 8b 15 05 4d 22 00 	mov    0x224d05(%rip),%rdx        # 635048 <intern_header>
  410343:	48 c7 05 f2 4c 22 00 	movq   $0x0,0x224cf2(%rip)        # 635040 <intern_block>
  41034a:	00 00 00 00 
  41034e:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
  410352:	eb a4                	jmp    4102f8 <intern_cleanup+0x58>
  410354:	66 90                	xchg   %ax,%ax
  410356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41035d:	00 00 00 

0000000000410360 <intern_rec>:
  410360:	41 57                	push   %r15
  410362:	41 56                	push   %r14
  410364:	41 55                	push   %r13
  410366:	41 54                	push   %r12
  410368:	55                   	push   %rbp
  410369:	53                   	push   %rbx
  41036a:	48 89 fd             	mov    %rdi,%rbp
  41036d:	48 83 ec 48          	sub    $0x48,%rsp
  410371:	4c 8b 2d 48 c4 21 00 	mov    0x21c448(%rip),%r13        # 62c7c0 <intern_stack>
  410378:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41037f:	00 00 
  410381:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  410386:	31 c0                	xor    %eax,%eax
  410388:	49 8d 5d 18          	lea    0x18(%r13),%rbx
  41038c:	48 3b 1d 25 c4 21 00 	cmp    0x21c425(%rip),%rbx        # 62c7b8 <intern_stack_limit>
  410393:	0f 83 17 03 00 00    	jae    4106b0 <intern_rec+0x350>
  410399:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
  4103a0:	48 89 2b             	mov    %rbp,(%rbx)
  4103a3:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
  4103aa:	00 
  4103ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4103b0:	4c 39 eb             	cmp    %r13,%rbx
  4103b3:	74 27                	je     4103dc <intern_rec+0x7c>
  4103b5:	8b 43 10             	mov    0x10(%rbx),%eax
  4103b8:	48 8b 2b             	mov    (%rbx),%rbp
  4103bb:	83 f8 01             	cmp    $0x1,%eax
  4103be:	0f 84 c4 01 00 00    	je     410588 <intern_rec+0x228>
  4103c4:	72 6a                	jb     410430 <intern_rec+0xd0>
  4103c6:	83 f8 02             	cmp    $0x2,%eax
  4103c9:	75 e5                	jne    4103b0 <intern_rec+0x50>
  4103cb:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4103cf:	48 01 45 00          	add    %rax,0x0(%rbp)
  4103d3:	48 83 eb 18          	sub    $0x18,%rbx
  4103d7:	4c 39 eb             	cmp    %r13,%rbx
  4103da:	75 d9                	jne    4103b5 <intern_rec+0x55>
  4103dc:	48 81 fb 40 38 63 00 	cmp    $0x633840,%rbx
  4103e3:	74 1e                	je     410403 <intern_rec+0xa3>
  4103e5:	48 89 df             	mov    %rbx,%rdi
  4103e8:	e8 73 15 ff ff       	callq  401960 <free@plt>
  4103ed:	48 c7 05 c8 c3 21 00 	movq   $0x633840,0x21c3c8(%rip)        # 62c7c0 <intern_stack>
  4103f4:	40 38 63 00 
  4103f8:	48 c7 05 b5 c3 21 00 	movq   $0x635040,0x21c3b5(%rip)        # 62c7b8 <intern_stack_limit>
  4103ff:	40 50 63 00 
  410403:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  410408:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41040f:	00 00 
  410411:	0f 85 a8 09 00 00    	jne    410dbf <intern_rec+0xa5f>
  410417:	48 83 c4 48          	add    $0x48,%rsp
  41041b:	5b                   	pop    %rbx
  41041c:	5d                   	pop    %rbp
  41041d:	41 5c                	pop    %r12
  41041f:	41 5d                	pop    %r13
  410421:	41 5e                	pop    %r14
  410423:	41 5f                	pop    %r15
  410425:	c3                   	retq   
  410426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41042d:	00 00 00 
  410430:	48 8d 45 08          	lea    0x8(%rbp),%rax
  410434:	48 8d 53 e8          	lea    -0x18(%rbx),%rdx
  410438:	48 89 03             	mov    %rax,(%rbx)
  41043b:	48 8b 43 08          	mov    0x8(%rbx),%rax
  41043f:	48 83 e8 01          	sub    $0x1,%rax
  410443:	48 85 c0             	test   %rax,%rax
  410446:	48 89 43 08          	mov    %rax,0x8(%rbx)
  41044a:	48 0f 44 da          	cmove  %rdx,%rbx
  41044e:	48 8b 15 2b 4c 22 00 	mov    0x224c2b(%rip),%rdx        # 635080 <intern_src>
  410455:	44 0f b6 22          	movzbl (%rdx),%r12d
  410459:	4c 8d 7a 01          	lea    0x1(%rdx),%r15
  41045d:	4c 89 3d 1c 4c 22 00 	mov    %r15,0x224c1c(%rip)        # 635080 <intern_src>
  410464:	41 83 fc 3f          	cmp    $0x3f,%r12d
  410468:	4c 89 e0             	mov    %r12,%rax
  41046b:	0f 86 3f 01 00 00    	jbe    4105b0 <intern_rec+0x250>
  410471:	41 83 fc 7f          	cmp    $0x7f,%r12d
  410475:	0f 86 f5 01 00 00    	jbe    410670 <intern_rec+0x310>
  41047b:	41 c1 ec 04          	shr    $0x4,%r12d
  41047f:	83 e0 0f             	and    $0xf,%eax
  410482:	41 83 e4 07          	and    $0x7,%r12d
  410486:	4d 85 e4             	test   %r12,%r12
  410489:	4c 8d 34 c5 88 14 64 	lea    0x641488(,%rax,8),%r14
  410490:	00 
  410491:	0f 84 e1 00 00 00    	je     410578 <intern_rec+0x218>
  410497:	48 8b 15 d2 4b 22 00 	mov    0x224bd2(%rip),%rdx        # 635070 <intern_dest>
  41049e:	48 8b 0d b3 4b 22 00 	mov    0x224bb3(%rip),%rcx        # 635058 <intern_obj_table>
  4104a5:	4c 8d 7a 08          	lea    0x8(%rdx),%r15
  4104a9:	48 85 c9             	test   %rcx,%rcx
  4104ac:	4d 89 fe             	mov    %r15,%r14
  4104af:	74 16                	je     4104c7 <intern_rec+0x167>
  4104b1:	48 8b 35 a8 4b 22 00 	mov    0x224ba8(%rip),%rsi        # 635060 <obj_counter>
  4104b8:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
  4104bc:	4c 89 3c f1          	mov    %r15,(%rcx,%rsi,8)
  4104c0:	48 89 3d 99 4b 22 00 	mov    %rdi,0x224b99(%rip)        # 635060 <obj_counter>
  4104c7:	4c 89 e6             	mov    %r12,%rsi
  4104ca:	89 c1                	mov    %eax,%ecx
  4104cc:	48 c1 e6 0a          	shl    $0xa,%rsi
  4104d0:	48 01 ce             	add    %rcx,%rsi
  4104d3:	8b 0d 77 4b 22 00    	mov    0x224b77(%rip),%ecx        # 635050 <intern_color>
  4104d9:	48 01 f1             	add    %rsi,%rcx
  4104dc:	3d f8 00 00 00       	cmp    $0xf8,%eax
  4104e1:	48 89 0a             	mov    %rcx,(%rdx)
  4104e4:	4a 8d 54 e2 08       	lea    0x8(%rdx,%r12,8),%rdx
  4104e9:	48 89 15 80 4b 22 00 	mov    %rdx,0x224b80(%rip)        # 635070 <intern_dest>
  4104f0:	0f 85 92 01 00 00    	jne    410688 <intern_rec+0x328>
  4104f6:	49 83 fc 02          	cmp    $0x2,%r12
  4104fa:	48 8b 15 b7 c2 21 00 	mov    0x21c2b7(%rip),%rdx        # 62c7b8 <intern_stack_limit>
  410501:	74 2a                	je     41052d <intern_rec+0x1cd>
  410503:	48 8b 15 ae c2 21 00 	mov    0x21c2ae(%rip),%rdx        # 62c7b8 <intern_stack_limit>
  41050a:	48 83 c3 18          	add    $0x18,%rbx
  41050e:	48 39 d3             	cmp    %rdx,%rbx
  410511:	0f 83 9f 07 00 00    	jae    410cb6 <intern_rec+0x956>
  410517:	49 8d 47 10          	lea    0x10(%r15),%rax
  41051b:	49 83 ec 02          	sub    $0x2,%r12
  41051f:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
  410526:	4c 89 63 08          	mov    %r12,0x8(%rbx)
  41052a:	48 89 03             	mov    %rax,(%rbx)
  41052d:	48 8d 43 18          	lea    0x18(%rbx),%rax
  410531:	48 39 d0             	cmp    %rdx,%rax
  410534:	0f 83 b9 07 00 00    	jae    410cf3 <intern_rec+0x993>
  41053a:	48 8d 58 18          	lea    0x18(%rax),%rbx
  41053e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%rax)
  410545:	4c 89 38             	mov    %r15,(%rax)
  410548:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
  41054f:	00 
  410550:	48 39 d3             	cmp    %rdx,%rbx
  410553:	0f 83 ae 07 00 00    	jae    410d07 <intern_rec+0x9a7>
  410559:	4c 8b 2d 60 c2 21 00 	mov    0x21c260(%rip),%r13        # 62c7c0 <intern_stack>
  410560:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
  410567:	4c 89 3b             	mov    %r15,(%rbx)
  41056a:	48 c7 43 08 02 00 00 	movq   $0x2,0x8(%rbx)
  410571:	00 
  410572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  410578:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  41057c:	e9 2f fe ff ff       	jmpq   4103b0 <intern_rec+0x50>
  410581:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  410588:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
  41058d:	0f 88 40 fe ff ff    	js     4103d3 <intern_rec+0x73>
  410593:	48 89 ef             	mov    %rbp,%rdi
  410596:	e8 75 4c 00 00       	callq  415210 <caml_set_oo_id>
  41059b:	4c 8b 2d 1e c2 21 00 	mov    0x21c21e(%rip),%r13        # 62c7c0 <intern_stack>
  4105a2:	e9 2c fe ff ff       	jmpq   4103d3 <intern_rec+0x73>
  4105a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4105ae:	00 00 
  4105b0:	41 83 fc 1f          	cmp    $0x1f,%r12d
  4105b4:	0f 86 9e 00 00 00    	jbe    410658 <intern_rec+0x2f8>
  4105ba:	41 83 e4 1f          	and    $0x1f,%r12d
  4105be:	48 8b 15 ab 4a 22 00 	mov    0x224aab(%rip),%rdx        # 635070 <intern_dest>
  4105c5:	48 8b 0d 8c 4a 22 00 	mov    0x224a8c(%rip),%rcx        # 635058 <intern_obj_table>
  4105cc:	49 8d 44 24 08       	lea    0x8(%r12),%rax
  4105d1:	48 c1 e8 03          	shr    $0x3,%rax
  4105d5:	48 8d 7a 08          	lea    0x8(%rdx),%rdi
  4105d9:	48 85 c9             	test   %rcx,%rcx
  4105dc:	49 89 fe             	mov    %rdi,%r14
  4105df:	74 16                	je     4105f7 <intern_rec+0x297>
  4105e1:	48 8b 35 78 4a 22 00 	mov    0x224a78(%rip),%rsi        # 635060 <obj_counter>
  4105e8:	4c 8d 46 01          	lea    0x1(%rsi),%r8
  4105ec:	48 89 3c f1          	mov    %rdi,(%rcx,%rsi,8)
  4105f0:	4c 89 05 69 4a 22 00 	mov    %r8,0x224a69(%rip)        # 635060 <obj_counter>
  4105f7:	8b 35 53 4a 22 00    	mov    0x224a53(%rip),%esi        # 635050 <intern_color>
  4105fd:	48 89 c1             	mov    %rax,%rcx
  410600:	48 8d 04 c5 08 00 00 	lea    0x8(,%rax,8),%rax
  410607:	00 
  410608:	48 c1 e1 0a          	shl    $0xa,%rcx
  41060c:	48 8d 8c 0e fc 00 00 	lea    0xfc(%rsi,%rcx,1),%rcx
  410613:	00 
  410614:	4c 89 fe             	mov    %r15,%rsi
  410617:	48 89 0a             	mov    %rcx,(%rdx)
  41061a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  41061e:	48 c7 44 38 f0 00 00 	movq   $0x0,-0x10(%rax,%rdi,1)
  410625:	00 00 
  410627:	48 89 0d 42 4a 22 00 	mov    %rcx,0x224a42(%rip)        # 635070 <intern_dest>
  41062e:	48 8d 48 f7          	lea    -0x9(%rax),%rcx
  410632:	44 29 e1             	sub    %r12d,%ecx
  410635:	88 4c 02 ff          	mov    %cl,-0x1(%rdx,%rax,1)
  410639:	4c 89 e2             	mov    %r12,%rdx
  41063c:	e8 cf 15 ff ff       	callq  401c10 <memcpy@plt>
  410641:	4b 8d 04 27          	lea    (%r15,%r12,1),%rax
  410645:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  410649:	48 89 05 30 4a 22 00 	mov    %rax,0x224a30(%rip)        # 635080 <intern_src>
  410650:	e9 5b fd ff ff       	jmpq   4103b0 <intern_rec+0x50>
  410655:	0f 1f 00             	nopl   (%rax)
  410658:	41 80 fc 17          	cmp    $0x17,%r12b
  41065c:	0f 87 82 06 00 00    	ja     410ce4 <intern_rec+0x984>
  410662:	42 ff 24 e5 c8 e6 41 	jmpq   *0x41e6c8(,%r12,8)
  410669:	00 
  41066a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  410670:	83 e0 3f             	and    $0x3f,%eax
  410673:	4c 8d 74 00 01       	lea    0x1(%rax,%rax,1),%r14
  410678:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  41067c:	e9 2f fd ff ff       	jmpq   4103b0 <intern_rec+0x50>
  410681:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  410688:	48 83 c3 18          	add    $0x18,%rbx
  41068c:	48 3b 1d 25 c1 21 00 	cmp    0x21c125(%rip),%rbx        # 62c7b8 <intern_stack_limit>
  410693:	0f 83 34 06 00 00    	jae    410ccd <intern_rec+0x96d>
  410699:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
  4106a0:	4c 89 3b             	mov    %r15,(%rbx)
  4106a3:	4c 89 63 08          	mov    %r12,0x8(%rbx)
  4106a7:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  4106ab:	e9 00 fd ff ff       	jmpq   4103b0 <intern_rec+0x50>
  4106b0:	48 89 df             	mov    %rbx,%rdi
  4106b3:	e8 48 fb ff ff       	callq  410200 <intern_resize_stack>
  4106b8:	4c 8b 2d 01 c1 21 00 	mov    0x21c101(%rip),%r13        # 62c7c0 <intern_stack>
  4106bf:	48 89 c3             	mov    %rax,%rbx
  4106c2:	e9 d2 fc ff ff       	jmpq   410399 <intern_rec+0x39>
  4106c7:	e8 54 f9 ff ff       	callq  410020 <read64u>
  4106cc:	4c 8b 3d ad 49 22 00 	mov    0x2249ad(%rip),%r15        # 635080 <intern_src>
  4106d3:	49 89 c4             	mov    %rax,%r12
  4106d6:	e9 e3 fe ff ff       	jmpq   4105be <intern_rec+0x25e>
  4106db:	e8 40 f9 ff ff       	callq  410020 <read64u>
  4106e0:	4c 8b 0d 99 49 22 00 	mov    0x224999(%rip),%r9        # 635080 <intern_src>
  4106e7:	49 89 c2             	mov    %rax,%r10
  4106ea:	4c 8b 3d 7f 49 22 00 	mov    0x22497f(%rip),%r15        # 635070 <intern_dest>
  4106f1:	48 8b 05 60 49 22 00 	mov    0x224960(%rip),%rax        # 635058 <intern_obj_table>
  4106f8:	49 8d 4f 08          	lea    0x8(%r15),%rcx
  4106fc:	48 85 c0             	test   %rax,%rax
  4106ff:	49 89 ce             	mov    %rcx,%r14
  410702:	74 16                	je     41071a <intern_rec+0x3ba>
  410704:	48 8b 15 55 49 22 00 	mov    0x224955(%rip),%rdx        # 635060 <obj_counter>
  41070b:	48 8d 72 01          	lea    0x1(%rdx),%rsi
  41070f:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
  410713:	48 89 35 46 49 22 00 	mov    %rsi,0x224946(%rip)        # 635060 <obj_counter>
  41071a:	8b 15 30 49 22 00    	mov    0x224930(%rip),%edx        # 635050 <intern_color>
  410720:	4c 89 d0             	mov    %r10,%rax
  410723:	4e 8d 04 d5 08 00 00 	lea    0x8(,%r10,8),%r8
  41072a:	00 
  41072b:	48 c1 e0 0a          	shl    $0xa,%rax
  41072f:	4c 89 ce             	mov    %r9,%rsi
  410732:	48 89 cf             	mov    %rcx,%rdi
  410735:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
  41073a:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
  41073f:	48 8d 84 02 fe 00 00 	lea    0xfe(%rdx,%rax,1),%rax
  410746:	00 
  410747:	49 89 07             	mov    %rax,(%r15)
  41074a:	4d 01 c7             	add    %r8,%r15
  41074d:	49 83 e8 08          	sub    $0x8,%r8
  410751:	4c 89 c2             	mov    %r8,%rdx
  410754:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
  410759:	4c 89 3d 10 49 22 00 	mov    %r15,0x224910(%rip)        # 635070 <intern_dest>
  410760:	e8 ab 14 ff ff       	callq  401c10 <memcpy@plt>
  410765:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
  41076a:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
  41076f:	4d 01 c8             	add    %r9,%r8
  410772:	41 83 fc 0e          	cmp    $0xe,%r12d
  410776:	4c 89 05 03 49 22 00 	mov    %r8,0x224903(%rip)        # 635080 <intern_src>
  41077d:	0f 84 f5 fd ff ff    	je     410578 <intern_rec+0x218>
  410783:	41 83 fc 07          	cmp    $0x7,%r12d
  410787:	0f 84 eb fd ff ff    	je     410578 <intern_rec+0x218>
  41078d:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
  410792:	4d 85 d2             	test   %r10,%r10
  410795:	0f 84 dd fd ff ff    	je     410578 <intern_rec+0x218>
  41079b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4107a0:	0f b6 70 07          	movzbl 0x7(%rax),%esi
  4107a4:	0f b6 08             	movzbl (%rax),%ecx
  4107a7:	48 83 c0 08          	add    $0x8,%rax
  4107ab:	0f b6 50 f9          	movzbl -0x7(%rax),%edx
  4107af:	40 88 70 f8          	mov    %sil,-0x8(%rax)
  4107b3:	0f b6 70 fe          	movzbl -0x2(%rax),%esi
  4107b7:	88 48 ff             	mov    %cl,-0x1(%rax)
  4107ba:	88 50 fe             	mov    %dl,-0x2(%rax)
  4107bd:	0f b6 48 fa          	movzbl -0x6(%rax),%ecx
  4107c1:	0f b6 50 fb          	movzbl -0x5(%rax),%edx
  4107c5:	40 88 70 f9          	mov    %sil,-0x7(%rax)
  4107c9:	0f b6 70 fd          	movzbl -0x3(%rax),%esi
  4107cd:	88 48 fd             	mov    %cl,-0x3(%rax)
  4107d0:	40 88 70 fa          	mov    %sil,-0x6(%rax)
  4107d4:	0f b6 70 fc          	movzbl -0x4(%rax),%esi
  4107d8:	88 50 fc             	mov    %dl,-0x4(%rax)
  4107db:	40 88 70 fb          	mov    %sil,-0x5(%rax)
  4107df:	49 39 c7             	cmp    %rax,%r15
  4107e2:	75 bc                	jne    4107a0 <intern_rec+0x440>
  4107e4:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  4107e8:	e9 c3 fb ff ff       	jmpq   4103b0 <intern_rec+0x50>
  4107ed:	48 8d 42 02          	lea    0x2(%rdx),%rax
  4107f1:	48 89 05 88 48 22 00 	mov    %rax,0x224888(%rip)        # 635080 <intern_src>
  4107f8:	48 0f be 42 01       	movsbq 0x1(%rdx),%rax
  4107fd:	4c 8d 74 00 01       	lea    0x1(%rax,%rax,1),%r14
  410802:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  410806:	e9 a5 fb ff ff       	jmpq   4103b0 <intern_rec+0x50>
  41080b:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
  41080f:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  410813:	48 83 c2 03          	add    $0x3,%rdx
  410817:	48 89 15 62 48 22 00 	mov    %rdx,0x224862(%rip)        # 635080 <intern_src>
  41081e:	c1 e0 08             	shl    $0x8,%eax
  410821:	01 c8                	add    %ecx,%eax
  410823:	48 0f bf c0          	movswq %ax,%rax
  410827:	4c 8d 74 00 01       	lea    0x1(%rax,%rax,1),%r14
  41082c:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  410830:	e9 7b fb ff ff       	jmpq   4103b0 <intern_rec+0x50>
  410835:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  410839:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  41083d:	48 83 c2 05          	add    $0x5,%rdx
  410841:	c1 e1 18             	shl    $0x18,%ecx
  410844:	01 c1                	add    %eax,%ecx
  410846:	0f b6 42 fd          	movzbl -0x3(%rdx),%eax
  41084a:	c1 e0 10             	shl    $0x10,%eax
  41084d:	01 c1                	add    %eax,%ecx
  41084f:	0f b6 42 fe          	movzbl -0x2(%rdx),%eax
  410853:	48 89 15 26 48 22 00 	mov    %rdx,0x224826(%rip)        # 635080 <intern_src>
  41085a:	c1 e0 08             	shl    $0x8,%eax
  41085d:	01 c8                	add    %ecx,%eax
  41085f:	48 98                	cltq   
  410861:	4c 8d 74 00 01       	lea    0x1(%rax,%rax,1),%r14
  410866:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  41086a:	e9 41 fb ff ff       	jmpq   4103b0 <intern_rec+0x50>
  41086f:	e8 ac f7 ff ff       	callq  410020 <read64u>
  410874:	4c 8d 74 00 01       	lea    0x1(%rax,%rax,1),%r14
  410879:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  41087d:	e9 2e fb ff ff       	jmpq   4103b0 <intern_rec+0x50>
  410882:	48 8d 42 02          	lea    0x2(%rdx),%rax
  410886:	48 89 05 f3 47 22 00 	mov    %rax,0x2247f3(%rip)        # 635080 <intern_src>
  41088d:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
  410891:	48 8b 3d c8 47 22 00 	mov    0x2247c8(%rip),%rdi        # 635060 <obj_counter>
  410898:	48 8b 15 b9 47 22 00 	mov    0x2247b9(%rip),%rdx        # 635058 <intern_obj_table>
  41089f:	48 29 c7             	sub    %rax,%rdi
  4108a2:	4c 8b 34 fa          	mov    (%rdx,%rdi,8),%r14
  4108a6:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  4108aa:	e9 01 fb ff ff       	jmpq   4103b0 <intern_rec+0x50>
  4108af:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
  4108b3:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
  4108b7:	48 83 c2 03          	add    $0x3,%rdx
  4108bb:	48 89 15 be 47 22 00 	mov    %rdx,0x2247be(%rip)        # 635080 <intern_src>
  4108c2:	c1 e0 08             	shl    $0x8,%eax
  4108c5:	01 c8                	add    %ecx,%eax
  4108c7:	0f b7 c0             	movzwl %ax,%eax
  4108ca:	eb c5                	jmp    410891 <intern_rec+0x531>
  4108cc:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  4108d0:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  4108d4:	48 83 c2 05          	add    $0x5,%rdx
  4108d8:	c1 e1 18             	shl    $0x18,%ecx
  4108db:	01 c1                	add    %eax,%ecx
  4108dd:	0f b6 42 fd          	movzbl -0x3(%rdx),%eax
  4108e1:	c1 e0 10             	shl    $0x10,%eax
  4108e4:	01 c8                	add    %ecx,%eax
  4108e6:	0f b6 4a fe          	movzbl -0x2(%rdx),%ecx
  4108ea:	48 89 15 8f 47 22 00 	mov    %rdx,0x22478f(%rip)        # 635080 <intern_src>
  4108f1:	c1 e1 08             	shl    $0x8,%ecx
  4108f4:	01 c8                	add    %ecx,%eax
  4108f6:	eb 99                	jmp    410891 <intern_rec+0x531>
  4108f8:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  4108fc:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  410900:	4c 8d 4a 05          	lea    0x5(%rdx),%r9
  410904:	4c 89 0d 75 47 22 00 	mov    %r9,0x224775(%rip)        # 635080 <intern_src>
  41090b:	c1 e1 18             	shl    $0x18,%ecx
  41090e:	01 c1                	add    %eax,%ecx
  410910:	0f b6 42 02          	movzbl 0x2(%rdx),%eax
  410914:	c1 e0 10             	shl    $0x10,%eax
  410917:	01 c8                	add    %ecx,%eax
  410919:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
  41091d:	c1 e1 08             	shl    $0x8,%ecx
  410920:	44 8d 14 08          	lea    (%rax,%rcx,1),%r10d
  410924:	e9 c1 fd ff ff       	jmpq   4106ea <intern_rec+0x38a>
  410929:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  41092d:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  410931:	48 83 c2 05          	add    $0x5,%rdx
  410935:	c1 e1 18             	shl    $0x18,%ecx
  410938:	01 c1                	add    %eax,%ecx
  41093a:	0f b6 42 fd          	movzbl -0x3(%rdx),%eax
  41093e:	c1 e0 10             	shl    $0x10,%eax
  410941:	01 c1                	add    %eax,%ecx
  410943:	0f b6 42 fe          	movzbl -0x2(%rdx),%eax
  410947:	48 89 15 32 47 22 00 	mov    %rdx,0x224732(%rip)        # 635080 <intern_src>
  41094e:	c1 e0 08             	shl    $0x8,%eax
  410951:	44 8d 24 01          	lea    (%rcx,%rax,1),%r12d
  410955:	41 0f b6 c4          	movzbl %r12b,%eax
  410959:	49 c1 ec 0a          	shr    $0xa,%r12
  41095d:	e9 24 fb ff ff       	jmpq   410486 <intern_rec+0x126>
  410962:	4c 8d 7a 02          	lea    0x2(%rdx),%r15
  410966:	44 0f b6 62 01       	movzbl 0x1(%rdx),%r12d
  41096b:	4c 89 3d 0e 47 22 00 	mov    %r15,0x22470e(%rip)        # 635080 <intern_src>
  410972:	e9 47 fc ff ff       	jmpq   4105be <intern_rec+0x25e>
  410977:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  41097b:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  41097f:	4c 8d 7a 05          	lea    0x5(%rdx),%r15
  410983:	4c 89 3d f6 46 22 00 	mov    %r15,0x2246f6(%rip)        # 635080 <intern_src>
  41098a:	c1 e1 18             	shl    $0x18,%ecx
  41098d:	01 c1                	add    %eax,%ecx
  41098f:	0f b6 42 02          	movzbl 0x2(%rdx),%eax
  410993:	c1 e0 10             	shl    $0x10,%eax
  410996:	01 c8                	add    %ecx,%eax
  410998:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
  41099c:	c1 e1 08             	shl    $0x8,%ecx
  41099f:	44 8d 24 08          	lea    (%rax,%rcx,1),%r12d
  4109a3:	e9 16 fc ff ff       	jmpq   4105be <intern_rec+0x25e>
  4109a8:	48 8b 0d a9 46 22 00 	mov    0x2246a9(%rip),%rcx        # 635058 <intern_obj_table>
  4109af:	48 8b 05 ba 46 22 00 	mov    0x2246ba(%rip),%rax        # 635070 <intern_dest>
  4109b6:	48 85 c9             	test   %rcx,%rcx
  4109b9:	4c 8d 70 08          	lea    0x8(%rax),%r14
  4109bd:	74 16                	je     4109d5 <intern_rec+0x675>
  4109bf:	48 8b 35 9a 46 22 00 	mov    0x22469a(%rip),%rsi        # 635060 <obj_counter>
  4109c6:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
  4109ca:	4c 89 34 f1          	mov    %r14,(%rcx,%rsi,8)
  4109ce:	48 89 3d 8b 46 22 00 	mov    %rdi,0x22468b(%rip)        # 635060 <obj_counter>
  4109d5:	8b 0d 75 46 22 00    	mov    0x224675(%rip),%ecx        # 635050 <intern_color>
  4109db:	48 83 c2 09          	add    $0x9,%rdx
  4109df:	48 81 c1 fd 04 00 00 	add    $0x4fd,%rcx
  4109e6:	48 89 08             	mov    %rcx,(%rax)
  4109e9:	48 8d 48 10          	lea    0x10(%rax),%rcx
  4109ed:	48 89 0d 7c 46 22 00 	mov    %rcx,0x22467c(%rip)        # 635070 <intern_dest>
  4109f4:	48 8b 4a f8          	mov    -0x8(%rdx),%rcx
  4109f8:	41 83 fc 0c          	cmp    $0xc,%r12d
  4109fc:	48 89 15 7d 46 22 00 	mov    %rdx,0x22467d(%rip)        # 635080 <intern_src>
  410a03:	48 89 48 08          	mov    %rcx,0x8(%rax)
  410a07:	0f 84 6b fb ff ff    	je     410578 <intern_rec+0x218>
  410a0d:	0f b6 70 0f          	movzbl 0xf(%rax),%esi
  410a11:	0f b6 48 08          	movzbl 0x8(%rax),%ecx
  410a15:	0f b6 50 09          	movzbl 0x9(%rax),%edx
  410a19:	40 88 70 08          	mov    %sil,0x8(%rax)
  410a1d:	0f b6 70 0e          	movzbl 0xe(%rax),%esi
  410a21:	88 48 0f             	mov    %cl,0xf(%rax)
  410a24:	88 50 0e             	mov    %dl,0xe(%rax)
  410a27:	0f b6 48 0a          	movzbl 0xa(%rax),%ecx
  410a2b:	0f b6 50 0b          	movzbl 0xb(%rax),%edx
  410a2f:	40 88 70 09          	mov    %sil,0x9(%rax)
  410a33:	0f b6 70 0d          	movzbl 0xd(%rax),%esi
  410a37:	88 48 0d             	mov    %cl,0xd(%rax)
  410a3a:	40 88 70 0a          	mov    %sil,0xa(%rax)
  410a3e:	0f b6 70 0c          	movzbl 0xc(%rax),%esi
  410a42:	88 50 0c             	mov    %dl,0xc(%rax)
  410a45:	40 88 70 0b          	mov    %sil,0xb(%rax)
  410a49:	e9 2a fb ff ff       	jmpq   410578 <intern_rec+0x218>
  410a4e:	4c 8d 4a 02          	lea    0x2(%rdx),%r9
  410a52:	44 0f b6 52 01       	movzbl 0x1(%rdx),%r10d
  410a57:	4c 89 0d 22 46 22 00 	mov    %r9,0x224622(%rip)        # 635080 <intern_src>
  410a5e:	e9 87 fc ff ff       	jmpq   4106ea <intern_rec+0x38a>
  410a63:	0f b6 42 02          	movzbl 0x2(%rdx),%eax
  410a67:	44 8b 2d d2 09 23 00 	mov    0x2309d2(%rip),%r13d        # 641440 <caml_code_fragments_table>
  410a6e:	48 83 c2 15          	add    $0x15,%rdx
  410a72:	48 8b 72 f0          	mov    -0x10(%rdx),%rsi
  410a76:	48 8b 7a f8          	mov    -0x8(%rdx),%rdi
  410a7a:	44 0f b6 7a ec       	movzbl -0x14(%rdx),%r15d
  410a7f:	88 44 24 08          	mov    %al,0x8(%rsp)
  410a83:	0f b6 42 ee          	movzbl -0x12(%rdx),%eax
  410a87:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
  410a8c:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
  410a91:	88 44 24 10          	mov    %al,0x10(%rsp)
  410a95:	0f b6 42 ef          	movzbl -0x11(%rdx),%eax
  410a99:	41 83 ed 01          	sub    $0x1,%r13d
  410a9d:	48 89 15 dc 45 22 00 	mov    %rdx,0x2245dc(%rip)        # 635080 <intern_src>
  410aa4:	88 44 24 18          	mov    %al,0x18(%rsp)
  410aa8:	79 2e                	jns    410ad8 <intern_rec+0x778>
  410aaa:	e9 9e 02 00 00       	jmpq   410d4d <intern_rec+0x9ed>
  410aaf:	90                   	nop
  410ab0:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  410ab5:	ba 10 00 00 00       	mov    $0x10,%edx
  410aba:	4c 89 f6             	mov    %r14,%rsi
  410abd:	e8 ce 10 ff ff       	callq  401b90 <memcmp@plt>
  410ac2:	85 c0                	test   %eax,%eax
  410ac4:	0f 84 4d 02 00 00    	je     410d17 <intern_rec+0x9b7>
  410aca:	41 83 ed 01          	sub    $0x1,%r13d
  410ace:	41 83 fd ff          	cmp    $0xffffffff,%r13d
  410ad2:	0f 84 75 02 00 00    	je     410d4d <intern_rec+0x9ed>
  410ad8:	48 8b 15 69 09 23 00 	mov    0x230969(%rip),%rdx        # 641448 <caml_code_fragments_table+0x8>
  410adf:	49 63 c5             	movslq %r13d,%rax
  410ae2:	4c 8b 24 c2          	mov    (%rdx,%rax,8),%r12
  410ae6:	41 80 7c 24 20 00    	cmpb   $0x0,0x20(%r12)
  410aec:	4d 8d 74 24 10       	lea    0x10(%r12),%r14
  410af1:	75 bd                	jne    410ab0 <intern_rec+0x750>
  410af3:	49 8b 34 24          	mov    (%r12),%rsi
  410af7:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
  410afc:	4d 8d 74 24 10       	lea    0x10(%r12),%r14
  410b01:	4c 89 f7             	mov    %r14,%rdi
  410b04:	48 29 f2             	sub    %rsi,%rdx
  410b07:	e8 84 41 00 00       	callq  414c90 <caml_md5_block>
  410b0c:	41 c6 44 24 20 01    	movb   $0x1,0x20(%r12)
  410b12:	eb 9c                	jmp    410ab0 <intern_rec+0x750>
  410b14:	44 0f b6 62 01       	movzbl 0x1(%rdx),%r12d
  410b19:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
  410b1d:	48 83 c2 05          	add    $0x5,%rdx
  410b21:	41 c1 e4 18          	shl    $0x18,%r12d
  410b25:	41 01 c4             	add    %eax,%r12d
  410b28:	0f b6 42 fd          	movzbl -0x3(%rdx),%eax
  410b2c:	c1 e0 10             	shl    $0x10,%eax
  410b2f:	41 01 c4             	add    %eax,%r12d
  410b32:	0f b6 42 fe          	movzbl -0x2(%rdx),%eax
  410b36:	48 89 15 43 45 22 00 	mov    %rdx,0x224543(%rip)        # 635080 <intern_src>
  410b3d:	48 8b 15 74 bc 21 00 	mov    0x21bc74(%rip),%rdx        # 62c7b8 <intern_stack_limit>
  410b44:	c1 e0 08             	shl    $0x8,%eax
  410b47:	41 01 c4             	add    %eax,%r12d
  410b4a:	48 8d 43 18          	lea    0x18(%rbx),%rax
  410b4e:	48 39 d0             	cmp    %rdx,%rax
  410b51:	0f 83 45 02 00 00    	jae    410d9c <intern_rec+0xa3c>
  410b57:	48 8d 58 18          	lea    0x18(%rax),%rbx
  410b5b:	44 89 e7             	mov    %r12d,%edi
  410b5e:	48 89 28             	mov    %rbp,(%rax)
  410b61:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%rax)
  410b68:	48 89 78 08          	mov    %rdi,0x8(%rax)
  410b6c:	48 39 d3             	cmp    %rdx,%rbx
  410b6f:	0f 83 17 02 00 00    	jae    410d8c <intern_rec+0xa2c>
  410b75:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
  410b7c:	48 89 2b             	mov    %rbp,(%rbx)
  410b7f:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
  410b86:	00 
  410b87:	4c 8b 2d 32 bc 21 00 	mov    0x21bc32(%rip),%r13        # 62c7c0 <intern_stack>
  410b8e:	e9 1d f8 ff ff       	jmpq   4103b0 <intern_rec+0x50>
  410b93:	4c 89 ff             	mov    %r15,%rdi
  410b96:	e8 15 80 00 00       	callq  418bb0 <caml_find_custom_operations>
  410b9b:	48 85 c0             	test   %rax,%rax
  410b9e:	49 89 c7             	mov    %rax,%r15
  410ba1:	0f 84 09 02 00 00    	je     410db0 <intern_rec+0xa50>
  410ba7:	48 8b 05 d2 44 22 00 	mov    0x2244d2(%rip),%rax        # 635080 <intern_src>
  410bae:	48 83 c0 01          	add    $0x1,%rax
  410bb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  410bb8:	48 89 c2             	mov    %rax,%rdx
  410bbb:	48 83 c0 01          	add    $0x1,%rax
  410bbf:	80 78 fe 00          	cmpb   $0x0,-0x2(%rax)
  410bc3:	75 f3                	jne    410bb8 <intern_rec+0x858>
  410bc5:	48 8b 05 a4 44 22 00 	mov    0x2244a4(%rip),%rax        # 635070 <intern_dest>
  410bcc:	48 89 15 ad 44 22 00 	mov    %rdx,0x2244ad(%rip)        # 635080 <intern_src>
  410bd3:	48 8d 78 10          	lea    0x10(%rax),%rdi
  410bd7:	41 ff 57 28          	callq  *0x28(%r15)
  410bdb:	4c 8d 60 07          	lea    0x7(%rax),%r12
  410bdf:	48 8b 05 8a 44 22 00 	mov    0x22448a(%rip),%rax        # 635070 <intern_dest>
  410be6:	48 8b 0d 6b 44 22 00 	mov    0x22446b(%rip),%rcx        # 635058 <intern_obj_table>
  410bed:	49 c1 ec 03          	shr    $0x3,%r12
  410bf1:	4c 8d 68 08          	lea    0x8(%rax),%r13
  410bf5:	48 85 c9             	test   %rcx,%rcx
  410bf8:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
  410bfd:	4d 89 ee             	mov    %r13,%r14
  410c00:	74 16                	je     410c18 <intern_rec+0x8b8>
  410c02:	48 8b 35 57 44 22 00 	mov    0x224457(%rip),%rsi        # 635060 <obj_counter>
  410c09:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
  410c0d:	4c 89 2c f1          	mov    %r13,(%rcx,%rsi,8)
  410c11:	48 89 3d 48 44 22 00 	mov    %rdi,0x224448(%rip)        # 635060 <obj_counter>
  410c18:	8b 0d 32 44 22 00    	mov    0x224432(%rip),%ecx        # 635050 <intern_color>
  410c1e:	48 c1 e2 0a          	shl    $0xa,%rdx
  410c22:	4c 89 78 08          	mov    %r15,0x8(%rax)
  410c26:	48 8d 94 11 ff 00 00 	lea    0xff(%rcx,%rdx,1),%rdx
  410c2d:	00 
  410c2e:	48 89 10             	mov    %rdx,(%rax)
  410c31:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
  410c36:	74 44                	je     410c7c <intern_rec+0x91c>
  410c38:	4c 3b 2d 89 c2 21 00 	cmp    0x21c289(%rip),%r13        # 62cec8 <caml_young_end>
  410c3f:	73 3b                	jae    410c7c <intern_rec+0x91c>
  410c41:	4c 3b 2d 88 c2 21 00 	cmp    0x21c288(%rip),%r13        # 62ced0 <caml_young_start>
  410c48:	76 32                	jbe    410c7c <intern_rec+0x91c>
  410c4a:	48 8b 15 a7 c1 21 00 	mov    0x21c1a7(%rip),%rdx        # 62cdf8 <caml_custom_table+0x18>
  410c51:	48 3b 15 a8 c1 21 00 	cmp    0x21c1a8(%rip),%rdx        # 62ce00 <caml_custom_table+0x20>
  410c58:	0f 83 11 01 00 00    	jae    410d6f <intern_rec+0xa0f>
  410c5e:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
  410c62:	48 89 0d 8f c1 21 00 	mov    %rcx,0x21c18f(%rip)        # 62cdf8 <caml_custom_table+0x18>
  410c69:	4c 89 2a             	mov    %r13,(%rdx)
  410c6c:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
  410c73:	00 
  410c74:	48 c7 42 10 01 00 00 	movq   $0x1,0x10(%rdx)
  410c7b:	00 
  410c7c:	4a 8d 44 e0 10       	lea    0x10(%rax,%r12,8),%rax
  410c81:	4c 8b 2d 38 bb 21 00 	mov    0x21bb38(%rip),%r13        # 62c7c0 <intern_stack>
  410c88:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  410c8c:	48 89 05 dd 43 22 00 	mov    %rax,0x2243dd(%rip)        # 635070 <intern_dest>
  410c93:	e9 18 f7 ff ff       	jmpq   4103b0 <intern_rec+0x50>
  410c98:	e8 83 f3 ff ff       	callq  410020 <read64u>
  410c9d:	49 89 c4             	mov    %rax,%r12
  410ca0:	0f b6 c0             	movzbl %al,%eax
  410ca3:	49 c1 ec 0a          	shr    $0xa,%r12
  410ca7:	e9 da f7 ff ff       	jmpq   410486 <intern_rec+0x126>
  410cac:	e8 6f f3 ff ff       	callq  410020 <read64u>
  410cb1:	e9 db fb ff ff       	jmpq   410891 <intern_rec+0x531>
  410cb6:	48 89 df             	mov    %rbx,%rdi
  410cb9:	e8 42 f5 ff ff       	callq  410200 <intern_resize_stack>
  410cbe:	48 8b 15 f3 ba 21 00 	mov    0x21baf3(%rip),%rdx        # 62c7b8 <intern_stack_limit>
  410cc5:	48 89 c3             	mov    %rax,%rbx
  410cc8:	e9 4a f8 ff ff       	jmpq   410517 <intern_rec+0x1b7>
  410ccd:	48 89 df             	mov    %rbx,%rdi
  410cd0:	e8 2b f5 ff ff       	callq  410200 <intern_resize_stack>
  410cd5:	4c 8b 2d e4 ba 21 00 	mov    0x21bae4(%rip),%r13        # 62c7c0 <intern_stack>
  410cdc:	48 89 c3             	mov    %rax,%rbx
  410cdf:	e9 b5 f9 ff ff       	jmpq   410699 <intern_rec+0x339>
  410ce4:	e8 b7 f5 ff ff       	callq  4102a0 <intern_cleanup>
  410ce9:	bf 30 e6 41 00       	mov    $0x41e630,%edi
  410cee:	e8 cd 99 00 00       	callq  41a6c0 <caml_failwith>
  410cf3:	48 89 c7             	mov    %rax,%rdi
  410cf6:	e8 05 f5 ff ff       	callq  410200 <intern_resize_stack>
  410cfb:	48 8b 15 b6 ba 21 00 	mov    0x21bab6(%rip),%rdx        # 62c7b8 <intern_stack_limit>
  410d02:	e9 33 f8 ff ff       	jmpq   41053a <intern_rec+0x1da>
  410d07:	48 89 df             	mov    %rbx,%rdi
  410d0a:	e8 f1 f4 ff ff       	callq  410200 <intern_resize_stack>
  410d0f:	48 89 c3             	mov    %rax,%rbx
  410d12:	e9 42 f8 ff ff       	jmpq   410559 <intern_rec+0x1f9>
  410d17:	44 0f b6 74 24 18    	movzbl 0x18(%rsp),%r14d
  410d1d:	44 89 f8             	mov    %r15d,%eax
  410d20:	c1 e0 18             	shl    $0x18,%eax
  410d23:	42 8d 14 30          	lea    (%rax,%r14,1),%edx
  410d27:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
  410d2c:	c1 e0 10             	shl    $0x10,%eax
  410d2f:	01 d0                	add    %edx,%eax
  410d31:	0f b6 54 24 10       	movzbl 0x10(%rsp),%edx
  410d36:	c1 e2 08             	shl    $0x8,%edx
  410d39:	44 8d 34 10          	lea    (%rax,%rdx,1),%r14d
  410d3d:	4d 03 34 24          	add    (%r12),%r14
  410d41:	4d 3b 74 24 08       	cmp    0x8(%r12),%r14
  410d46:	73 05                	jae    410d4d <intern_rec+0x9ed>
  410d48:	4d 85 f6             	test   %r14,%r14
  410d4b:	75 12                	jne    410d5f <intern_rec+0x9ff>
  410d4d:	bf bf e4 41 00       	mov    $0x41e4bf,%edi
  410d52:	e8 59 4b 00 00       	callq  4158b0 <caml_named_value>
  410d57:	48 85 c0             	test   %rax,%rax
  410d5a:	74 68                	je     410dc4 <intern_rec+0xa64>
  410d5c:	4c 8b 30             	mov    (%rax),%r14
  410d5f:	4c 8b 2d 5a ba 21 00 	mov    0x21ba5a(%rip),%r13        # 62c7c0 <intern_stack>
  410d66:	4c 89 75 00          	mov    %r14,0x0(%rbp)
  410d6a:	e9 41 f6 ff ff       	jmpq   4103b0 <intern_rec+0x50>
  410d6f:	bf e0 cd 62 00       	mov    $0x62cde0,%edi
  410d74:	e8 a7 7d ff ff       	callq  408b20 <caml_realloc_custom_table>
  410d79:	48 8b 15 78 c0 21 00 	mov    0x21c078(%rip),%rdx        # 62cdf8 <caml_custom_table+0x18>
  410d80:	48 8b 05 e9 42 22 00 	mov    0x2242e9(%rip),%rax        # 635070 <intern_dest>
  410d87:	e9 d2 fe ff ff       	jmpq   410c5e <intern_rec+0x8fe>
  410d8c:	48 89 df             	mov    %rbx,%rdi
  410d8f:	e8 6c f4 ff ff       	callq  410200 <intern_resize_stack>
  410d94:	48 89 c3             	mov    %rax,%rbx
  410d97:	e9 d9 fd ff ff       	jmpq   410b75 <intern_rec+0x815>
  410d9c:	48 89 c7             	mov    %rax,%rdi
  410d9f:	e8 5c f4 ff ff       	callq  410200 <intern_resize_stack>
  410da4:	48 8b 15 0d ba 21 00 	mov    0x21ba0d(%rip),%rdx        # 62c7b8 <intern_stack_limit>
  410dab:	e9 a7 fd ff ff       	jmpq   410b57 <intern_rec+0x7f7>
  410db0:	e8 eb f4 ff ff       	callq  4102a0 <intern_cleanup>
  410db5:	bf 00 e6 41 00       	mov    $0x41e600,%edi
  410dba:	e8 01 99 00 00       	callq  41a6c0 <caml_failwith>
  410dbf:	e8 ac 0c ff ff       	callq  401a70 <__stack_chk_fail@plt>
  410dc4:	e8 d7 f4 ff ff       	callq  4102a0 <intern_cleanup>
  410dc9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  410dce:	e8 64 11 ff ff       	callq  401f37 <intern_bad_code_pointer>
  410dd3:	0f 1f 00             	nopl   (%rax)
  410dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  410ddd:	00 00 00 

0000000000410de0 <intern_add_to_heap.isra.0>:
  410de0:	48 8b 3d 81 42 22 00 	mov    0x224281(%rip),%rdi        # 635068 <intern_extra_block>
  410de7:	48 85 ff             	test   %rdi,%rdi
  410dea:	74 64                	je     410e50 <intern_add_to_heap.isra.0+0x70>
  410dec:	48 83 ec 08          	sub    $0x8,%rsp
  410df0:	48 8b 77 f0          	mov    -0x10(%rdi),%rsi
  410df4:	48 8b 05 75 42 22 00 	mov    0x224275(%rip),%rax        # 635070 <intern_dest>
  410dfb:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
  410dff:	48 01 fe             	add    %rdi,%rsi
  410e02:	48 39 c6             	cmp    %rax,%rsi
  410e05:	76 21                	jbe    410e28 <intern_add_to_heap.isra.0+0x48>
  410e07:	48 29 c6             	sub    %rax,%rsi
  410e0a:	48 89 c7             	mov    %rax,%rdi
  410e0d:	31 c9                	xor    %ecx,%ecx
  410e0f:	48 c1 fe 03          	sar    $0x3,%rsi
  410e13:	31 d2                	xor    %edx,%edx
  410e15:	e8 d6 ad 00 00       	callq  41bbf0 <caml_make_free_blocks>
  410e1a:	48 8b 05 4f 42 22 00 	mov    0x22424f(%rip),%rax        # 635070 <intern_dest>
  410e21:	48 8b 3d 40 42 22 00 	mov    0x224240(%rip),%rdi        # 635068 <intern_extra_block>
  410e28:	48 29 f8             	sub    %rdi,%rax
  410e2b:	48 c1 e8 03          	shr    $0x3,%rax
  410e2f:	48 01 05 aa 05 23 00 	add    %rax,0x2305aa(%rip)        # 6413e0 <caml_allocated_words>
  410e36:	e8 e5 81 ff ff       	callq  409020 <caml_add_to_heap>
  410e3b:	48 c7 05 22 42 22 00 	movq   $0x0,0x224222(%rip)        # 635068 <intern_extra_block>
  410e42:	00 00 00 00 
  410e46:	48 83 c4 08          	add    $0x8,%rsp
  410e4a:	c3                   	retq   
  410e4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  410e50:	48 c7 05 e5 41 22 00 	movq   $0x0,0x2241e5(%rip)        # 635040 <intern_block>
  410e57:	00 00 00 00 
  410e5b:	c3                   	retq   
  410e5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000410e60 <intern_alloc.part.1>:
  410e60:	53                   	push   %rbx
  410e61:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  410e65:	48 b9 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rcx
  410e6c:	ff 3f 00 
  410e6f:	48 89 f3             	mov    %rsi,%rbx
  410e72:	48 83 ec 10          	sub    $0x10,%rsp
  410e76:	48 39 c8             	cmp    %rcx,%rax
  410e79:	0f 87 a1 00 00 00    	ja     410f20 <intern_alloc.part.1+0xc0>
  410e7f:	85 d2                	test   %edx,%edx
  410e81:	0f 85 99 00 00 00    	jne    410f20 <intern_alloc.part.1+0xc0>
  410e87:	48 85 c0             	test   %rax,%rax
  410e8a:	75 44                	jne    410ed0 <intern_alloc.part.1+0x70>
  410e8c:	b8 68 1c 64 00       	mov    $0x641c68,%eax
  410e91:	48 89 05 a8 41 22 00 	mov    %rax,0x2241a8(%rip)        # 635040 <intern_block>
  410e98:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
  410e9c:	48 8b 40 f8          	mov    -0x8(%rax),%rax
  410ea0:	48 89 15 c9 41 22 00 	mov    %rdx,0x2241c9(%rip)        # 635070 <intern_dest>
  410ea7:	48 89 05 9a 41 22 00 	mov    %rax,0x22419a(%rip)        # 635048 <intern_header>
  410eae:	25 00 03 00 00       	and    $0x300,%eax
  410eb3:	89 05 97 41 22 00    	mov    %eax,0x224197(%rip)        # 635050 <intern_color>
  410eb9:	48 85 db             	test   %rbx,%rbx
  410ebc:	48 c7 05 99 41 22 00 	movq   $0x0,0x224199(%rip)        # 635060 <obj_counter>
  410ec3:	00 00 00 00 
  410ec7:	75 2f                	jne    410ef8 <intern_alloc.part.1+0x98>
  410ec9:	48 83 c4 10          	add    $0x10,%rsp
  410ecd:	5b                   	pop    %rbx
  410ece:	c3                   	retq   
  410ecf:	90                   	nop
  410ed0:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  410ed6:	be fc 00 00 00       	mov    $0xfc,%esi
  410edb:	48 89 c7             	mov    %rax,%rdi
  410ede:	0f 87 84 00 00 00    	ja     410f68 <intern_alloc.part.1+0x108>
  410ee4:	e8 97 b3 00 00       	callq  41c280 <caml_alloc_small>
  410ee9:	48 89 05 50 41 22 00 	mov    %rax,0x224150(%rip)        # 635040 <intern_block>
  410ef0:	eb a6                	jmp    410e98 <intern_alloc.part.1+0x38>
  410ef2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  410ef8:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
  410eff:	00 
  410f00:	e8 8b 0d ff ff       	callq  401c90 <malloc@plt>
  410f05:	48 85 c0             	test   %rax,%rax
  410f08:	48 89 05 49 41 22 00 	mov    %rax,0x224149(%rip)        # 635058 <intern_obj_table>
  410f0f:	75 b8                	jne    410ec9 <intern_alloc.part.1+0x69>
  410f11:	e8 8a f3 ff ff       	callq  4102a0 <intern_cleanup>
  410f16:	e8 e5 97 00 00       	callq  41a700 <caml_raise_out_of_memory>
  410f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  410f20:	48 8d 3c fd ff 0f 00 	lea    0xfff(,%rdi,8),%rdi
  410f27:	00 
  410f28:	89 54 24 0c          	mov    %edx,0xc(%rsp)
  410f2c:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
  410f33:	e8 e8 7f ff ff       	callq  408f20 <caml_alloc_for_heap>
  410f38:	48 85 c0             	test   %rax,%rax
  410f3b:	48 89 05 26 41 22 00 	mov    %rax,0x224126(%rip)        # 635068 <intern_extra_block>
  410f42:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  410f46:	74 c9                	je     410f11 <intern_alloc.part.1+0xb1>
  410f48:	85 d2                	test   %edx,%edx
  410f4a:	b9 00 03 00 00       	mov    $0x300,%ecx
  410f4f:	74 2f                	je     410f80 <intern_alloc.part.1+0x120>
  410f51:	89 0d f9 40 22 00    	mov    %ecx,0x2240f9(%rip)        # 635050 <intern_color>
  410f57:	48 89 05 12 41 22 00 	mov    %rax,0x224112(%rip)        # 635070 <intern_dest>
  410f5e:	e9 56 ff ff ff       	jmpq   410eb9 <intern_alloc.part.1+0x59>
  410f63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  410f68:	e8 c3 83 ff ff       	callq  409330 <caml_alloc_shr_no_raise>
  410f6d:	48 85 c0             	test   %rax,%rax
  410f70:	48 89 05 c9 40 22 00 	mov    %rax,0x2240c9(%rip)        # 635040 <intern_block>
  410f77:	0f 85 1b ff ff ff    	jne    410e98 <intern_alloc.part.1+0x38>
  410f7d:	eb 92                	jmp    410f11 <intern_alloc.part.1+0xb1>
  410f7f:	90                   	nop
  410f80:	48 89 c7             	mov    %rax,%rdi
  410f83:	e8 68 83 ff ff       	callq  4092f0 <caml_allocation_color>
  410f88:	89 c1                	mov    %eax,%ecx
  410f8a:	48 8b 05 d7 40 22 00 	mov    0x2240d7(%rip),%rax        # 635068 <intern_extra_block>
  410f91:	eb be                	jmp    410f51 <intern_alloc.part.1+0xf1>
  410f93:	0f 1f 00             	nopl   (%rax)
  410f96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  410f9d:	00 00 00 

0000000000410fa0 <caml_input_val_core>:
  410fa0:	41 54                	push   %r12
  410fa2:	55                   	push   %rbp
  410fa3:	89 f5                	mov    %esi,%ebp
  410fa5:	53                   	push   %rbx
  410fa6:	48 89 fb             	mov    %rdi,%rbx
  410fa9:	48 83 ec 60          	sub    $0x60,%rsp
  410fad:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  410fb4:	00 00 
  410fb6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  410fbb:	31 c0                	xor    %eax,%eax
  410fbd:	e8 ee c0 ff ff       	callq  40d0b0 <caml_channel_binary_mode>
  410fc2:	85 c0                	test   %eax,%eax
  410fc4:	0f 84 6a 01 00 00    	je     411134 <caml_input_val_core+0x194>
  410fca:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  410fcf:	ba 14 00 00 00       	mov    $0x14,%edx
  410fd4:	48 89 df             	mov    %rbx,%rdi
  410fd7:	e8 34 c5 ff ff       	callq  40d510 <caml_really_getblock>
  410fdc:	48 85 c0             	test   %rax,%rax
  410fdf:	0f 84 4a 01 00 00    	je     41112f <caml_input_val_core+0x18f>
  410fe5:	48 83 f8 13          	cmp    $0x13,%rax
  410fe9:	0f 8e 2c 01 00 00    	jle    41111b <caml_input_val_core+0x17b>
  410fef:	0f b6 54 24 30       	movzbl 0x30(%rsp),%edx
  410ff4:	0f b6 4c 24 33       	movzbl 0x33(%rsp),%ecx
  410ff9:	0f b6 44 24 31       	movzbl 0x31(%rsp),%eax
  410ffe:	c1 e2 18             	shl    $0x18,%edx
  411001:	01 ca                	add    %ecx,%edx
  411003:	c1 e0 10             	shl    $0x10,%eax
  411006:	48 8d 4c 24 30       	lea    0x30(%rsp),%rcx
  41100b:	01 c2                	add    %eax,%edx
  41100d:	0f b6 44 24 32       	movzbl 0x32(%rsp),%eax
  411012:	c1 e0 08             	shl    $0x8,%eax
  411015:	01 d0                	add    %edx,%eax
  411017:	48 8d 54 24 34       	lea    0x34(%rsp),%rdx
  41101c:	3d bf a6 95 84       	cmp    $0x8495a6bf,%eax
  411021:	48 89 15 58 40 22 00 	mov    %rdx,0x224058(%rip)        # 635080 <intern_src>
  411028:	0f 84 d2 00 00 00    	je     411100 <caml_input_val_core+0x160>
  41102e:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  411033:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  411038:	bf fb e4 41 00       	mov    $0x41e4fb,%edi
  41103d:	48 89 05 3c 40 22 00 	mov    %rax,0x22403c(%rip)        # 635080 <intern_src>
  411044:	e8 47 f0 ff ff       	callq  410090 <caml_parse_header>
  411049:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41104e:	e8 7d 87 ff ff       	callq  4097d0 <caml_stat_alloc>
  411053:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  411058:	48 89 c6             	mov    %rax,%rsi
  41105b:	48 89 df             	mov    %rbx,%rdi
  41105e:	49 89 c4             	mov    %rax,%r12
  411061:	e8 aa c4 ff ff       	callq  40d510 <caml_really_getblock>
  411066:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
  41106b:	0f 82 b4 00 00 00    	jb     411125 <caml_input_val_core+0x185>
  411071:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  411076:	4c 89 25 03 40 22 00 	mov    %r12,0x224003(%rip)        # 635080 <intern_src>
  41107d:	4c 89 25 f4 3f 22 00 	mov    %r12,0x223ff4(%rip)        # 635078 <intern_input>
  411084:	48 85 ff             	test   %rdi,%rdi
  411087:	75 67                	jne    4110f0 <caml_input_val_core+0x150>
  411089:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  41108e:	e8 cd f2 ff ff       	callq  410360 <intern_rec>
  411093:	85 ed                	test   %ebp,%ebp
  411095:	74 51                	je     4110e8 <caml_input_val_core+0x148>
  411097:	48 8b 3d ca 3f 22 00 	mov    0x223fca(%rip),%rdi        # 635068 <intern_extra_block>
  41109e:	e8 3d 7f ff ff       	callq  408fe0 <caml_disown_for_heap>
  4110a3:	48 c7 05 ba 3f 22 00 	movq   $0x0,0x223fba(%rip)        # 635068 <intern_extra_block>
  4110aa:	00 00 00 00 
  4110ae:	48 c7 05 87 3f 22 00 	movq   $0x0,0x223f87(%rip)        # 635040 <intern_block>
  4110b5:	00 00 00 00 
  4110b9:	e8 e2 f1 ff ff       	callq  4102a0 <intern_cleanup>
  4110be:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4110c3:	e8 88 79 ff ff       	callq  408a50 <caml_check_urgent_gc>
  4110c8:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  4110cd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4110d4:	00 00 
  4110d6:	75 66                	jne    41113e <caml_input_val_core+0x19e>
  4110d8:	48 83 c4 60          	add    $0x60,%rsp
  4110dc:	5b                   	pop    %rbx
  4110dd:	5d                   	pop    %rbp
  4110de:	41 5c                	pop    %r12
  4110e0:	c3                   	retq   
  4110e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4110e8:	e8 f3 fc ff ff       	callq  410de0 <intern_add_to_heap.isra.0>
  4110ed:	eb ca                	jmp    4110b9 <caml_input_val_core+0x119>
  4110ef:	90                   	nop
  4110f0:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  4110f5:	89 ea                	mov    %ebp,%edx
  4110f7:	e8 64 fd ff ff       	callq  410e60 <intern_alloc.part.1>
  4110fc:	eb 8b                	jmp    411089 <caml_input_val_core+0xe9>
  4110fe:	66 90                	xchg   %ax,%ax
  411100:	48 8d 71 14          	lea    0x14(%rcx),%rsi
  411104:	ba 0c 00 00 00       	mov    $0xc,%edx
  411109:	48 89 df             	mov    %rbx,%rdi
  41110c:	e8 ff c3 ff ff       	callq  40d510 <caml_really_getblock>
  411111:	48 83 f8 0b          	cmp    $0xb,%rax
  411115:	0f 8f 13 ff ff ff    	jg     41102e <caml_input_val_core+0x8e>
  41111b:	bf dd e4 41 00       	mov    $0x41e4dd,%edi
  411120:	e8 9b 95 00 00       	callq  41a6c0 <caml_failwith>
  411125:	4c 89 e7             	mov    %r12,%rdi
  411128:	e8 c3 86 ff ff       	callq  4097f0 <caml_stat_free>
  41112d:	eb ec                	jmp    41111b <caml_input_val_core+0x17b>
  41112f:	e8 0c 96 00 00       	callq  41a740 <caml_raise_end_of_file>
  411134:	bf 50 e6 41 00       	mov    $0x41e650,%edi
  411139:	e8 82 95 00 00       	callq  41a6c0 <caml_failwith>
  41113e:	e8 2d 09 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  411143:	0f 1f 00             	nopl   (%rax)
  411146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41114d:	00 00 00 

0000000000411150 <input_val_from_block.isra.2>:
  411150:	48 83 ec 18          	sub    $0x18,%rsp
  411154:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  41115b:	00 00 
  41115d:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  411162:	31 c9                	xor    %ecx,%ecx
  411164:	48 85 f6             	test   %rsi,%rsi
  411167:	74 10                	je     411179 <input_val_from_block.isra.2+0x29>
  411169:	48 89 f0             	mov    %rsi,%rax
  41116c:	31 d2                	xor    %edx,%edx
  41116e:	48 89 fe             	mov    %rdi,%rsi
  411171:	48 89 c7             	mov    %rax,%rdi
  411174:	e8 e7 fc ff ff       	callq  410e60 <intern_alloc.part.1>
  411179:	48 89 e7             	mov    %rsp,%rdi
  41117c:	e8 df f1 ff ff       	callq  410360 <intern_rec>
  411181:	e8 5a fc ff ff       	callq  410de0 <intern_add_to_heap.isra.0>
  411186:	e8 15 f1 ff ff       	callq  4102a0 <intern_cleanup>
  41118b:	48 8b 3c 24          	mov    (%rsp),%rdi
  41118f:	e8 bc 78 ff ff       	callq  408a50 <caml_check_urgent_gc>
  411194:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  411199:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  4111a0:	00 00 
  4111a2:	75 05                	jne    4111a9 <input_val_from_block.isra.2+0x59>
  4111a4:	48 83 c4 18          	add    $0x18,%rsp
  4111a8:	c3                   	retq   
  4111a9:	e8 c2 08 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  4111ae:	66 90                	xchg   %ax,%ax

00000000004111b0 <caml_input_val>:
  4111b0:	31 f6                	xor    %esi,%esi
  4111b2:	e9 e9 fd ff ff       	jmpq   410fa0 <caml_input_val_core>
  4111b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4111be:	00 00 

00000000004111c0 <caml_input_value>:
  4111c0:	55                   	push   %rbp
  4111c1:	53                   	push   %rbx
  4111c2:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  4111c9:	48 8b 2d 78 b7 21 00 	mov    0x21b778(%rip),%rbp        # 62c948 <caml_local_roots>
  4111d0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4111d7:	00 00 
  4111d9:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  4111e0:	00 
  4111e1:	31 c0                	xor    %eax,%eax
  4111e3:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  4111e8:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4111ed:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4111f2:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
  4111f7:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  4111fe:	00 00 
  411200:	48 89 05 41 b7 21 00 	mov    %rax,0x21b741(%rip)        # 62c948 <caml_local_roots>
  411207:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  41120e:	00 00 
  411210:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  411215:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  411219:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  41121e:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  411223:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41122a:	00 00 
  41122c:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  411233:	00 00 
  411235:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  41123c:	00 00 
  41123e:	48 89 05 03 b7 21 00 	mov    %rax,0x21b703(%rip)        # 62c948 <caml_local_roots>
  411245:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  41124a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  41124f:	48 8b 05 22 d5 21 00 	mov    0x21d522(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  411256:	48 85 c0             	test   %rax,%rax
  411259:	74 05                	je     411260 <caml_input_value+0xa0>
  41125b:	48 89 df             	mov    %rbx,%rdi
  41125e:	ff d0                	callq  *%rax
  411260:	31 f6                	xor    %esi,%esi
  411262:	48 89 df             	mov    %rbx,%rdi
  411265:	e8 36 fd ff ff       	callq  410fa0 <caml_input_val_core>
  41126a:	48 8b 15 ff d4 21 00 	mov    0x21d4ff(%rip),%rdx        # 62e770 <caml_channel_mutex_unlock>
  411271:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  411276:	48 85 d2             	test   %rdx,%rdx
  411279:	74 0a                	je     411285 <caml_input_value+0xc5>
  41127b:	48 89 df             	mov    %rbx,%rdi
  41127e:	ff d2                	callq  *%rdx
  411280:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  411285:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
  41128c:	00 
  41128d:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  411294:	00 00 
  411296:	48 89 2d ab b6 21 00 	mov    %rbp,0x21b6ab(%rip)        # 62c948 <caml_local_roots>
  41129d:	75 0a                	jne    4112a9 <caml_input_value+0xe9>
  41129f:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
  4112a6:	5b                   	pop    %rbx
  4112a7:	5d                   	pop    %rbp
  4112a8:	c3                   	retq   
  4112a9:	e8 c2 07 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  4112ae:	66 90                	xchg   %ax,%ax

00000000004112b0 <caml_input_value_to_outside_heap>:
  4112b0:	55                   	push   %rbp
  4112b1:	53                   	push   %rbx
  4112b2:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  4112b9:	48 8b 2d 88 b6 21 00 	mov    0x21b688(%rip),%rbp        # 62c948 <caml_local_roots>
  4112c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4112c7:	00 00 
  4112c9:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  4112d0:	00 
  4112d1:	31 c0                	xor    %eax,%eax
  4112d3:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  4112d8:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4112dd:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4112e2:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
  4112e7:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  4112ee:	00 00 
  4112f0:	48 89 05 51 b6 21 00 	mov    %rax,0x21b651(%rip)        # 62c948 <caml_local_roots>
  4112f7:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  4112fe:	00 00 
  411300:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  411305:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
  411309:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  41130e:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  411313:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41131a:	00 00 
  41131c:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  411323:	00 00 
  411325:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  41132c:	00 00 
  41132e:	48 89 05 13 b6 21 00 	mov    %rax,0x21b613(%rip)        # 62c948 <caml_local_roots>
  411335:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  41133a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  41133f:	48 8b 05 32 d4 21 00 	mov    0x21d432(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  411346:	48 85 c0             	test   %rax,%rax
  411349:	74 05                	je     411350 <caml_input_value_to_outside_heap+0xa0>
  41134b:	48 89 df             	mov    %rbx,%rdi
  41134e:	ff d0                	callq  *%rax
  411350:	be 01 00 00 00       	mov    $0x1,%esi
  411355:	48 89 df             	mov    %rbx,%rdi
  411358:	e8 43 fc ff ff       	callq  410fa0 <caml_input_val_core>
  41135d:	48 8b 15 0c d4 21 00 	mov    0x21d40c(%rip),%rdx        # 62e770 <caml_channel_mutex_unlock>
  411364:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  411369:	48 85 d2             	test   %rdx,%rdx
  41136c:	74 0a                	je     411378 <caml_input_value_to_outside_heap+0xc8>
  41136e:	48 89 df             	mov    %rbx,%rdi
  411371:	ff d2                	callq  *%rdx
  411373:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  411378:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
  41137f:	00 
  411380:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  411387:	00 00 
  411389:	48 89 2d b8 b5 21 00 	mov    %rbp,0x21b5b8(%rip)        # 62c948 <caml_local_roots>
  411390:	75 0a                	jne    41139c <caml_input_value_to_outside_heap+0xec>
  411392:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
  411399:	5b                   	pop    %rbx
  41139a:	5d                   	pop    %rbp
  41139b:	c3                   	retq   
  41139c:	e8 cf 06 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  4113a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4113a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4113ad:	00 00 00 

00000000004113b0 <caml_input_val_from_string>:
  4113b0:	41 55                	push   %r13
  4113b2:	41 54                	push   %r12
  4113b4:	48 89 f8             	mov    %rdi,%rax
  4113b7:	55                   	push   %rbp
  4113b8:	53                   	push   %rbx
  4113b9:	48 01 f0             	add    %rsi,%rax
  4113bc:	48 89 f3             	mov    %rsi,%rbx
  4113bf:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
  4113c6:	4c 8b 25 7b b5 21 00 	mov    0x21b57b(%rip),%r12        # 62c948 <caml_local_roots>
  4113cd:	48 89 05 ac 3c 22 00 	mov    %rax,0x223cac(%rip)        # 635080 <intern_src>
  4113d4:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  4113d9:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  4113de:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
  4113e3:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4113e8:	bf 07 e5 41 00       	mov    $0x41e507,%edi
  4113ed:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
  4113f4:	00 00 
  4113f6:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
  4113fb:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  411400:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
  411405:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  41140c:	00 00 
  41140e:	48 89 8c 24 c8 00 00 	mov    %rcx,0xc8(%rsp)
  411415:	00 
  411416:	31 c9                	xor    %ecx,%ecx
  411418:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
  41141f:	00 
  411420:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
  411427:	00 
  411428:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
  41142f:	00 00 
  411431:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  411438:	00 00 
  41143a:	48 c7 84 24 90 00 00 	movq   $0x1,0x90(%rsp)
  411441:	00 01 00 00 00 
  411446:	48 89 15 fb b4 21 00 	mov    %rdx,0x21b4fb(%rip)        # 62c948 <caml_local_roots>
  41144d:	48 c7 84 24 88 00 00 	movq   $0x1,0x88(%rsp)
  411454:	00 01 00 00 00 
  411459:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
  411460:	00 
  411461:	48 c7 05 0c 3c 22 00 	movq   $0x0,0x223c0c(%rip)        # 635078 <intern_input>
  411468:	00 00 00 00 
  41146c:	e8 1f ec ff ff       	callq  410090 <caml_parse_header>
  411471:	48 63 6c 24 24       	movslq 0x24(%rsp),%rbp
  411476:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41147b:	48 01 dd             	add    %rbx,%rbp
  41147e:	48 03 6c 24 28       	add    0x28(%rsp),%rbp
  411483:	e8 08 b1 ff ff       	callq  40c590 <caml_string_length>
  411488:	48 39 c5             	cmp    %rax,%rbp
  41148b:	77 6e                	ja     4114fb <caml_input_val_from_string+0x14b>
  41148d:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  411492:	48 85 ff             	test   %rdi,%rdi
  411495:	74 0c                	je     4114a3 <caml_input_val_from_string+0xf3>
  411497:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  41149c:	31 d2                	xor    %edx,%edx
  41149e:	e8 bd f9 ff ff       	callq  410e60 <intern_alloc.part.1>
  4114a3:	48 63 44 24 24       	movslq 0x24(%rsp),%rax
  4114a8:	4c 89 ef             	mov    %r13,%rdi
  4114ab:	48 01 c3             	add    %rax,%rbx
  4114ae:	48 03 5c 24 08       	add    0x8(%rsp),%rbx
  4114b3:	48 89 1d c6 3b 22 00 	mov    %rbx,0x223bc6(%rip)        # 635080 <intern_src>
  4114ba:	e8 a1 ee ff ff       	callq  410360 <intern_rec>
  4114bf:	e8 1c f9 ff ff       	callq  410de0 <intern_add_to_heap.isra.0>
  4114c4:	e8 d7 ed ff ff       	callq  4102a0 <intern_cleanup>
  4114c9:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  4114ce:	e8 7d 75 ff ff       	callq  408a50 <caml_check_urgent_gc>
  4114d3:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
  4114da:	00 
  4114db:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4114e2:	00 00 
  4114e4:	4c 89 25 5d b4 21 00 	mov    %r12,0x21b45d(%rip)        # 62c948 <caml_local_roots>
  4114eb:	75 18                	jne    411505 <caml_input_val_from_string+0x155>
  4114ed:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
  4114f4:	5b                   	pop    %rbx
  4114f5:	5d                   	pop    %rbp
  4114f6:	41 5c                	pop    %r12
  4114f8:	41 5d                	pop    %r13
  4114fa:	c3                   	retq   
  4114fb:	bf 78 e6 41 00       	mov    $0x41e678,%edi
  411500:	e8 bb 91 00 00       	callq  41a6c0 <caml_failwith>
  411505:	e8 66 05 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  41150a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000411510 <caml_input_value_from_string>:
  411510:	48 d1 fe             	sar    %rsi
  411513:	e9 98 fe ff ff       	jmpq   4113b0 <caml_input_val_from_string>
  411518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41151f:	00 

0000000000411520 <caml_input_value_from_malloc>:
  411520:	48 83 ec 38          	sub    $0x38,%rsp
  411524:	48 01 fe             	add    %rdi,%rsi
  411527:	48 89 3d 4a 3b 22 00 	mov    %rdi,0x223b4a(%rip)        # 635078 <intern_input>
  41152e:	48 89 35 4b 3b 22 00 	mov    %rsi,0x223b4b(%rip)        # 635080 <intern_src>
  411535:	bf 1d e5 41 00       	mov    $0x41e51d,%edi
  41153a:	48 89 e6             	mov    %rsp,%rsi
  41153d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  411544:	00 00 
  411546:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  41154b:	31 c0                	xor    %eax,%eax
  41154d:	e8 3e eb ff ff       	callq  410090 <caml_parse_header>
  411552:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  411557:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  41155c:	e8 ef fb ff ff       	callq  411150 <input_val_from_block.isra.2>
  411561:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  411566:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  41156d:	00 00 
  41156f:	75 05                	jne    411576 <caml_input_value_from_malloc+0x56>
  411571:	48 83 c4 38          	add    $0x38,%rsp
  411575:	c3                   	retq   
  411576:	e8 f5 04 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  41157b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000411580 <caml_input_value_from_block>:
  411580:	53                   	push   %rbx
  411581:	48 89 f3             	mov    %rsi,%rbx
  411584:	48 83 ec 30          	sub    $0x30,%rsp
  411588:	48 89 3d f1 3a 22 00 	mov    %rdi,0x223af1(%rip)        # 635080 <intern_src>
  41158f:	bf 35 e5 41 00       	mov    $0x41e535,%edi
  411594:	48 89 e6             	mov    %rsp,%rsi
  411597:	48 c7 05 d6 3a 22 00 	movq   $0x0,0x223ad6(%rip)        # 635078 <intern_input>
  41159e:	00 00 00 00 
  4115a2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4115a9:	00 00 
  4115ab:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4115b0:	31 c0                	xor    %eax,%eax
  4115b2:	e8 d9 ea ff ff       	callq  410090 <caml_parse_header>
  4115b7:	48 63 44 24 04       	movslq 0x4(%rsp),%rax
  4115bc:	48 03 44 24 08       	add    0x8(%rsp),%rax
  4115c1:	48 39 d8             	cmp    %rbx,%rax
  4115c4:	77 25                	ja     4115eb <caml_input_value_from_block+0x6b>
  4115c6:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  4115cb:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4115d0:	e8 7b fb ff ff       	callq  411150 <input_val_from_block.isra.2>
  4115d5:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  4115da:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  4115e1:	00 00 
  4115e3:	75 10                	jne    4115f5 <caml_input_value_from_block+0x75>
  4115e5:	48 83 c4 30          	add    $0x30,%rsp
  4115e9:	5b                   	pop    %rbx
  4115ea:	c3                   	retq   
  4115eb:	bf a0 e6 41 00       	mov    $0x41e6a0,%edi
  4115f0:	e8 cb 90 00 00       	callq  41a6c0 <caml_failwith>
  4115f5:	e8 76 04 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  4115fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000411600 <caml_marshal_data_size>:
  411600:	48 d1 fe             	sar    %rsi
  411603:	48 01 fe             	add    %rdi,%rsi
  411606:	0f b6 16             	movzbl (%rsi),%edx
  411609:	0f b6 4e 03          	movzbl 0x3(%rsi),%ecx
  41160d:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
  411611:	c1 e2 18             	shl    $0x18,%edx
  411614:	c1 e0 10             	shl    $0x10,%eax
  411617:	01 ca                	add    %ecx,%edx
  411619:	01 c2                	add    %eax,%edx
  41161b:	0f b6 46 02          	movzbl 0x2(%rsi),%eax
  41161f:	c1 e0 08             	shl    $0x8,%eax
  411622:	01 d0                	add    %edx,%eax
  411624:	48 8d 56 04          	lea    0x4(%rsi),%rdx
  411628:	3d be a6 95 84       	cmp    $0x8495a6be,%eax
  41162d:	48 89 15 4c 3a 22 00 	mov    %rdx,0x223a4c(%rip)        # 635080 <intern_src>
  411634:	74 42                	je     411678 <caml_marshal_data_size+0x78>
  411636:	48 83 ec 08          	sub    $0x8,%rsp
  41163a:	3d bf a6 95 84       	cmp    $0x8495a6bf,%eax
  41163f:	75 27                	jne    411668 <caml_marshal_data_size+0x68>
  411641:	48 83 c6 08          	add    $0x8,%rsi
  411645:	48 89 35 34 3a 22 00 	mov    %rsi,0x223a34(%rip)        # 635080 <intern_src>
  41164c:	e8 cf e9 ff ff       	callq  410020 <read64u>
  411651:	ba 0c 00 00 00       	mov    $0xc,%edx
  411656:	48 83 c4 08          	add    $0x8,%rsp
  41165a:	48 01 d0             	add    %rdx,%rax
  41165d:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  411662:	c3                   	retq   
  411663:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  411668:	bf 4c e5 41 00       	mov    $0x41e54c,%edi
  41166d:	e8 4e 90 00 00       	callq  41a6c0 <caml_failwith>
  411672:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  411678:	0f b6 46 04          	movzbl 0x4(%rsi),%eax
  41167c:	0f b6 4e 07          	movzbl 0x7(%rsi),%ecx
  411680:	48 83 c6 08          	add    $0x8,%rsi
  411684:	c1 e0 18             	shl    $0x18,%eax
  411687:	8d 14 08             	lea    (%rax,%rcx,1),%edx
  41168a:	0f b6 46 fd          	movzbl -0x3(%rsi),%eax
  41168e:	c1 e0 10             	shl    $0x10,%eax
  411691:	01 d0                	add    %edx,%eax
  411693:	0f b6 56 fe          	movzbl -0x2(%rsi),%edx
  411697:	48 89 35 e2 39 22 00 	mov    %rsi,0x2239e2(%rip)        # 635080 <intern_src>
  41169e:	c1 e2 08             	shl    $0x8,%edx
  4116a1:	01 d0                	add    %edx,%eax
  4116a3:	31 d2                	xor    %edx,%edx
  4116a5:	48 01 d0             	add    %rdx,%rax
  4116a8:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  4116ad:	c3                   	retq   
  4116ae:	66 90                	xchg   %ax,%ax

00000000004116b0 <caml_deserialize_uint_1>:
  4116b0:	48 8b 05 c9 39 22 00 	mov    0x2239c9(%rip),%rax        # 635080 <intern_src>
  4116b7:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4116bb:	0f b6 00             	movzbl (%rax),%eax
  4116be:	48 89 15 bb 39 22 00 	mov    %rdx,0x2239bb(%rip)        # 635080 <intern_src>
  4116c5:	c3                   	retq   
  4116c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4116cd:	00 00 00 

00000000004116d0 <caml_deserialize_sint_1>:
  4116d0:	48 8b 05 a9 39 22 00 	mov    0x2239a9(%rip),%rax        # 635080 <intern_src>
  4116d7:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4116db:	0f be 00             	movsbl (%rax),%eax
  4116de:	48 89 15 9b 39 22 00 	mov    %rdx,0x22399b(%rip)        # 635080 <intern_src>
  4116e5:	c3                   	retq   
  4116e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4116ed:	00 00 00 

00000000004116f0 <caml_deserialize_uint_2>:
  4116f0:	48 8b 15 89 39 22 00 	mov    0x223989(%rip),%rdx        # 635080 <intern_src>
  4116f7:	0f b6 02             	movzbl (%rdx),%eax
  4116fa:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  4116fe:	48 83 c2 02          	add    $0x2,%rdx
  411702:	48 89 15 77 39 22 00 	mov    %rdx,0x223977(%rip)        # 635080 <intern_src>
  411709:	c1 e0 08             	shl    $0x8,%eax
  41170c:	01 c8                	add    %ecx,%eax
  41170e:	0f b7 c0             	movzwl %ax,%eax
  411711:	c3                   	retq   
  411712:	0f 1f 40 00          	nopl   0x0(%rax)
  411716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41171d:	00 00 00 

0000000000411720 <caml_deserialize_sint_2>:
  411720:	48 8b 15 59 39 22 00 	mov    0x223959(%rip),%rdx        # 635080 <intern_src>
  411727:	0f b6 02             	movzbl (%rdx),%eax
  41172a:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
  41172e:	48 83 c2 02          	add    $0x2,%rdx
  411732:	48 89 15 47 39 22 00 	mov    %rdx,0x223947(%rip)        # 635080 <intern_src>
  411739:	c1 e0 08             	shl    $0x8,%eax
  41173c:	01 c8                	add    %ecx,%eax
  41173e:	98                   	cwtl   
  41173f:	c3                   	retq   

0000000000411740 <caml_deserialize_uint_4>:
  411740:	48 8b 15 39 39 22 00 	mov    0x223939(%rip),%rdx        # 635080 <intern_src>
  411747:	0f b6 0a             	movzbl (%rdx),%ecx
  41174a:	0f b6 72 03          	movzbl 0x3(%rdx),%esi
  41174e:	48 83 c2 04          	add    $0x4,%rdx
  411752:	0f b6 42 fd          	movzbl -0x3(%rdx),%eax
  411756:	c1 e1 18             	shl    $0x18,%ecx
  411759:	c1 e0 10             	shl    $0x10,%eax
  41175c:	01 f1                	add    %esi,%ecx
  41175e:	01 c1                	add    %eax,%ecx
  411760:	0f b6 42 fe          	movzbl -0x2(%rdx),%eax
  411764:	48 89 15 15 39 22 00 	mov    %rdx,0x223915(%rip)        # 635080 <intern_src>
  41176b:	c1 e0 08             	shl    $0x8,%eax
  41176e:	01 c8                	add    %ecx,%eax
  411770:	c3                   	retq   
  411771:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  411776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41177d:	00 00 00 

0000000000411780 <caml_deserialize_sint_4>:
  411780:	48 8b 15 f9 38 22 00 	mov    0x2238f9(%rip),%rdx        # 635080 <intern_src>
  411787:	0f b6 0a             	movzbl (%rdx),%ecx
  41178a:	0f b6 72 03          	movzbl 0x3(%rdx),%esi
  41178e:	48 83 c2 04          	add    $0x4,%rdx
  411792:	0f b6 42 fd          	movzbl -0x3(%rdx),%eax
  411796:	c1 e1 18             	shl    $0x18,%ecx
  411799:	c1 e0 10             	shl    $0x10,%eax
  41179c:	01 f1                	add    %esi,%ecx
  41179e:	01 c1                	add    %eax,%ecx
  4117a0:	0f b6 42 fe          	movzbl -0x2(%rdx),%eax
  4117a4:	48 89 15 d5 38 22 00 	mov    %rdx,0x2238d5(%rip)        # 635080 <intern_src>
  4117ab:	c1 e0 08             	shl    $0x8,%eax
  4117ae:	01 c8                	add    %ecx,%eax
  4117b0:	c3                   	retq   
  4117b1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4117b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4117bd:	00 00 00 

00000000004117c0 <caml_deserialize_float_4>:
  4117c0:	48 83 ec 18          	sub    $0x18,%rsp
  4117c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4117cb:	00 00 
  4117cd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4117d2:	31 c0                	xor    %eax,%eax
  4117d4:	48 8b 05 a5 38 22 00 	mov    0x2238a5(%rip),%rax        # 635080 <intern_src>
  4117db:	0f b6 70 03          	movzbl 0x3(%rax),%esi
  4117df:	0f b6 08             	movzbl (%rax),%ecx
  4117e2:	48 83 c0 04          	add    $0x4,%rax
  4117e6:	0f b6 50 fd          	movzbl -0x3(%rax),%edx
  4117ea:	40 88 74 24 04       	mov    %sil,0x4(%rsp)
  4117ef:	0f b6 70 fe          	movzbl -0x2(%rax),%esi
  4117f3:	48 89 05 86 38 22 00 	mov    %rax,0x223886(%rip)        # 635080 <intern_src>
  4117fa:	88 4c 24 07          	mov    %cl,0x7(%rsp)
  4117fe:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  411803:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41180a:	00 00 
  41180c:	88 54 24 06          	mov    %dl,0x6(%rsp)
  411810:	40 88 74 24 05       	mov    %sil,0x5(%rsp)
  411815:	f3 0f 10 44 24 04    	movss  0x4(%rsp),%xmm0
  41181b:	75 05                	jne    411822 <caml_deserialize_float_4+0x62>
  41181d:	48 83 c4 18          	add    $0x18,%rsp
  411821:	c3                   	retq   
  411822:	e8 49 02 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  411827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41182e:	00 00 

0000000000411830 <caml_deserialize_float_8>:
  411830:	48 8b 05 49 38 22 00 	mov    0x223849(%rip),%rax        # 635080 <intern_src>
  411837:	f2 0f 10 00          	movsd  (%rax),%xmm0
  41183b:	48 83 c0 08          	add    $0x8,%rax
  41183f:	48 89 05 3a 38 22 00 	mov    %rax,0x22383a(%rip)        # 635080 <intern_src>
  411846:	c3                   	retq   
  411847:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41184e:	00 00 

0000000000411850 <caml_deserialize_block_1>:
  411850:	55                   	push   %rbp
  411851:	53                   	push   %rbx
  411852:	48 89 f3             	mov    %rsi,%rbx
  411855:	48 89 f2             	mov    %rsi,%rdx
  411858:	48 83 ec 08          	sub    $0x8,%rsp
  41185c:	48 8b 2d 1d 38 22 00 	mov    0x22381d(%rip),%rbp        # 635080 <intern_src>
  411863:	48 01 eb             	add    %rbp,%rbx
  411866:	48 89 ee             	mov    %rbp,%rsi
  411869:	e8 a2 03 ff ff       	callq  401c10 <memcpy@plt>
  41186e:	48 89 1d 0b 38 22 00 	mov    %rbx,0x22380b(%rip)        # 635080 <intern_src>
  411875:	48 83 c4 08          	add    $0x8,%rsp
  411879:	5b                   	pop    %rbx
  41187a:	5d                   	pop    %rbp
  41187b:	c3                   	retq   
  41187c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000411880 <caml_deserialize_block_2>:
  411880:	48 85 f6             	test   %rsi,%rsi
  411883:	48 8b 05 f6 37 22 00 	mov    0x2237f6(%rip),%rax        # 635080 <intern_src>
  41188a:	7e 26                	jle    4118b2 <caml_deserialize_block_2+0x32>
  41188c:	48 8d 34 70          	lea    (%rax,%rsi,2),%rsi
  411890:	0f b6 10             	movzbl (%rax),%edx
  411893:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  411897:	48 83 c0 02          	add    $0x2,%rax
  41189b:	48 83 c7 02          	add    $0x2,%rdi
  41189f:	88 4f fe             	mov    %cl,-0x2(%rdi)
  4118a2:	88 57 ff             	mov    %dl,-0x1(%rdi)
  4118a5:	48 39 f0             	cmp    %rsi,%rax
  4118a8:	75 e6                	jne    411890 <caml_deserialize_block_2+0x10>
  4118aa:	48 89 35 cf 37 22 00 	mov    %rsi,0x2237cf(%rip)        # 635080 <intern_src>
  4118b1:	c3                   	retq   
  4118b2:	48 89 c6             	mov    %rax,%rsi
  4118b5:	eb f3                	jmp    4118aa <caml_deserialize_block_2+0x2a>
  4118b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4118be:	00 00 

00000000004118c0 <caml_deserialize_block_4>:
  4118c0:	48 85 f6             	test   %rsi,%rsi
  4118c3:	4c 8b 15 b6 37 22 00 	mov    0x2237b6(%rip),%r10        # 635080 <intern_src>
  4118ca:	7e 3f                	jle    41190b <caml_deserialize_block_4+0x4b>
  4118cc:	4c 89 d0             	mov    %r10,%rax
  4118cf:	48 89 f2             	mov    %rsi,%rdx
  4118d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4118d8:	44 0f b6 48 03       	movzbl 0x3(%rax),%r9d
  4118dd:	44 0f b6 00          	movzbl (%rax),%r8d
  4118e1:	48 83 c7 04          	add    $0x4,%rdi
  4118e5:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  4118e9:	48 83 c0 04          	add    $0x4,%rax
  4118ed:	44 88 4f fc          	mov    %r9b,-0x4(%rdi)
  4118f1:	44 0f b6 48 fe       	movzbl -0x2(%rax),%r9d
  4118f6:	44 88 47 ff          	mov    %r8b,-0x1(%rdi)
  4118fa:	88 4f fe             	mov    %cl,-0x2(%rdi)
  4118fd:	44 88 4f fd          	mov    %r9b,-0x3(%rdi)
  411901:	48 83 ea 01          	sub    $0x1,%rdx
  411905:	75 d1                	jne    4118d8 <caml_deserialize_block_4+0x18>
  411907:	4d 8d 14 b2          	lea    (%r10,%rsi,4),%r10
  41190b:	4c 89 15 6e 37 22 00 	mov    %r10,0x22376e(%rip)        # 635080 <intern_src>
  411912:	c3                   	retq   
  411913:	0f 1f 00             	nopl   (%rax)
  411916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41191d:	00 00 00 

0000000000411920 <caml_deserialize_block_8>:
  411920:	48 85 f6             	test   %rsi,%rsi
  411923:	4c 8b 15 56 37 22 00 	mov    0x223756(%rip),%r10        # 635080 <intern_src>
  41192a:	7e 61                	jle    41198d <caml_deserialize_block_8+0x6d>
  41192c:	4c 89 d0             	mov    %r10,%rax
  41192f:	48 89 f2             	mov    %rsi,%rdx
  411932:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  411938:	44 0f b6 48 07       	movzbl 0x7(%rax),%r9d
  41193d:	44 0f b6 00          	movzbl (%rax),%r8d
  411941:	48 83 c7 08          	add    $0x8,%rdi
  411945:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
  411949:	48 83 c0 08          	add    $0x8,%rax
  41194d:	44 88 4f f8          	mov    %r9b,-0x8(%rdi)
  411951:	44 0f b6 48 fe       	movzbl -0x2(%rax),%r9d
  411956:	44 88 47 ff          	mov    %r8b,-0x1(%rdi)
  41195a:	88 4f fe             	mov    %cl,-0x2(%rdi)
  41195d:	44 88 4f f9          	mov    %r9b,-0x7(%rdi)
  411961:	44 0f b6 48 fd       	movzbl -0x3(%rax),%r9d
  411966:	44 0f b6 40 fa       	movzbl -0x6(%rax),%r8d
  41196b:	0f b6 48 fb          	movzbl -0x5(%rax),%ecx
  41196f:	44 88 4f fa          	mov    %r9b,-0x6(%rdi)
  411973:	44 0f b6 48 fc       	movzbl -0x4(%rax),%r9d
  411978:	44 88 47 fd          	mov    %r8b,-0x3(%rdi)
  41197c:	88 4f fc             	mov    %cl,-0x4(%rdi)
  41197f:	44 88 4f fb          	mov    %r9b,-0x5(%rdi)
  411983:	48 83 ea 01          	sub    $0x1,%rdx
  411987:	75 af                	jne    411938 <caml_deserialize_block_8+0x18>
  411989:	4d 8d 14 f2          	lea    (%r10,%rsi,8),%r10
  41198d:	4c 89 15 ec 36 22 00 	mov    %r10,0x2236ec(%rip)        # 635080 <intern_src>
  411994:	c3                   	retq   
  411995:	90                   	nop
  411996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41199d:	00 00 00 

00000000004119a0 <caml_deserialize_uint_8>:
  4119a0:	48 83 ec 18          	sub    $0x18,%rsp
  4119a4:	be 01 00 00 00       	mov    $0x1,%esi
  4119a9:	48 89 e7             	mov    %rsp,%rdi
  4119ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4119b3:	00 00 
  4119b5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4119ba:	31 c0                	xor    %eax,%eax
  4119bc:	e8 5f ff ff ff       	callq  411920 <caml_deserialize_block_8>
  4119c1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  4119c6:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  4119cd:	00 00 
  4119cf:	48 8b 04 24          	mov    (%rsp),%rax
  4119d3:	75 05                	jne    4119da <caml_deserialize_uint_8+0x3a>
  4119d5:	48 83 c4 18          	add    $0x18,%rsp
  4119d9:	c3                   	retq   
  4119da:	e8 91 00 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  4119df:	90                   	nop

00000000004119e0 <caml_deserialize_sint_8>:
  4119e0:	48 83 ec 18          	sub    $0x18,%rsp
  4119e4:	be 01 00 00 00       	mov    $0x1,%esi
  4119e9:	48 89 e7             	mov    %rsp,%rdi
  4119ec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4119f3:	00 00 
  4119f5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4119fa:	31 c0                	xor    %eax,%eax
  4119fc:	e8 1f ff ff ff       	callq  411920 <caml_deserialize_block_8>
  411a01:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  411a06:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  411a0d:	00 00 
  411a0f:	48 8b 04 24          	mov    (%rsp),%rax
  411a13:	75 05                	jne    411a1a <caml_deserialize_sint_8+0x3a>
  411a15:	48 83 c4 18          	add    $0x18,%rsp
  411a19:	c3                   	retq   
  411a1a:	e8 51 00 ff ff       	callq  401a70 <__stack_chk_fail@plt>
  411a1f:	90                   	nop

0000000000411a20 <caml_deserialize_block_float_8>:
  411a20:	55                   	push   %rbp
  411a21:	53                   	push   %rbx
  411a22:	48 8d 1c f5 00 00 00 	lea    0x0(,%rsi,8),%rbx
  411a29:	00 
  411a2a:	48 83 ec 08          	sub    $0x8,%rsp
  411a2e:	48 8b 2d 4b 36 22 00 	mov    0x22364b(%rip),%rbp        # 635080 <intern_src>
  411a35:	48 89 da             	mov    %rbx,%rdx
  411a38:	48 89 ee             	mov    %rbp,%rsi
  411a3b:	48 01 eb             	add    %rbp,%rbx
  411a3e:	e8 cd 01 ff ff       	callq  401c10 <memcpy@plt>
  411a43:	48 89 1d 36 36 22 00 	mov    %rbx,0x223636(%rip)        # 635080 <intern_src>
  411a4a:	48 83 c4 08          	add    $0x8,%rsp
  411a4e:	5b                   	pop    %rbx
  411a4f:	5d                   	pop    %rbp
  411a50:	c3                   	retq   
  411a51:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  411a56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  411a5d:	00 00 00 

0000000000411a60 <caml_deserialize_error>:
  411a60:	53                   	push   %rbx
  411a61:	48 89 fb             	mov    %rdi,%rbx
  411a64:	e8 37 e8 ff ff       	callq  4102a0 <intern_cleanup>
  411a69:	48 89 df             	mov    %rbx,%rdi
  411a6c:	e8 4f 8c 00 00       	callq  41a6c0 <caml_failwith>
  411a71:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  411a78:	00 00 00 
  411a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000411a80 <caml_sys_error>:
  411a80:	41 54                	push   %r12
  411a82:	55                   	push   %rbp
  411a83:	53                   	push   %rbx
  411a84:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  411a8b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  411a92:	00 00 
  411a94:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  411a9b:	00 
  411a9c:	31 c0                	xor    %eax,%eax
  411a9e:	48 8b 05 a3 ae 21 00 	mov    0x21aea3(%rip),%rax        # 62c948 <caml_local_roots>
  411aa5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  411aaa:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  411ab1:	00 00 
  411ab3:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  411aba:	00 00 
  411abc:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  411ac3:	00 00 
  411ac5:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  411acc:	00 00 
  411ace:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  411ad3:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  411ad8:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  411adf:	00 00 
  411ae1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  411ae6:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  411aeb:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  411af0:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  411af5:	48 89 05 4c ae 21 00 	mov    %rax,0x21ae4c(%rip)        # 62c948 <caml_local_roots>
  411afc:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  411b01:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  411b06:	e8 65 fe fe ff       	callq  401970 <__errno_location@plt>
  411b0b:	8b 38                	mov    (%rax),%edi
  411b0d:	e8 2e 03 ff ff       	callq  401e40 <strerror@plt>
  411b12:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  411b17:	49 89 c4             	mov    %rax,%r12
  411b1a:	48 89 c7             	mov    %rax,%rdi
  411b1d:	48 83 fb 01          	cmp    $0x1,%rbx
  411b21:	74 66                	je     411b89 <caml_sys_error+0x109>
  411b23:	e8 28 ff fe ff       	callq  401a50 <strlen@plt>
  411b28:	48 89 df             	mov    %rbx,%rdi
  411b2b:	48 89 c5             	mov    %rax,%rbp
  411b2e:	e8 5d aa ff ff       	callq  40c590 <caml_string_length>
  411b33:	8d 7c 28 02          	lea    0x2(%rax,%rbp,1),%edi
  411b37:	48 89 c3             	mov    %rax,%rbx
  411b3a:	48 63 db             	movslq %ebx,%rbx
  411b3d:	48 63 ff             	movslq %edi,%rdi
  411b40:	e8 6b a8 00 00       	callq  41c3b0 <caml_alloc_string>
  411b45:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  411b4a:	48 89 da             	mov    %rbx,%rdx
  411b4d:	48 89 c7             	mov    %rax,%rdi
  411b50:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  411b55:	e8 d6 01 ff ff       	callq  401d30 <memmove@plt>
  411b5a:	48 89 d8             	mov    %rbx,%rax
  411b5d:	48 03 44 24 18       	add    0x18(%rsp),%rax
  411b62:	ba 3a 20 00 00       	mov    $0x203a,%edx
  411b67:	4c 89 e6             	mov    %r12,%rsi
  411b6a:	66 89 10             	mov    %dx,(%rax)
  411b6d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  411b72:	48 63 d5             	movslq %ebp,%rdx
  411b75:	48 8d 7c 03 02       	lea    0x2(%rbx,%rax,1),%rdi
  411b7a:	e8 b1 01 ff ff       	callq  401d30 <memmove@plt>
  411b7f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  411b84:	e8 97 8b 00 00       	callq  41a720 <caml_raise_sys_error>
  411b89:	e8 02 a9 00 00       	callq  41c490 <caml_copy_string>
  411b8e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  411b93:	eb ea                	jmp    411b7f <caml_sys_error+0xff>
  411b95:	90                   	nop
  411b96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  411b9d:	00 00 00 

0000000000411ba0 <caml_sys_check_path>:
  411ba0:	53                   	push   %rbx
  411ba1:	48 89 fb             	mov    %rdi,%rbx
  411ba4:	e8 37 aa ff ff       	callq  40c5e0 <caml_string_is_c_safe>
  411ba9:	85 c0                	test   %eax,%eax
  411bab:	74 02                	je     411baf <caml_sys_check_path+0xf>
  411bad:	5b                   	pop    %rbx
  411bae:	c3                   	retq   
  411baf:	e8 bc fd fe ff       	callq  401970 <__errno_location@plt>
  411bb4:	48 89 df             	mov    %rbx,%rdi
  411bb7:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  411bbd:	e8 be fe ff ff       	callq  411a80 <caml_sys_error>
  411bc2:	0f 1f 40 00          	nopl   0x0(%rax)
  411bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  411bcd:	00 00 00 

0000000000411bd0 <caml_sys_io_error>:
  411bd0:	53                   	push   %rbx
  411bd1:	48 89 fb             	mov    %rdi,%rbx
  411bd4:	e8 97 fd fe ff       	callq  401970 <__errno_location@plt>
  411bd9:	83 38 0b             	cmpl   $0xb,(%rax)
  411bdc:	74 08                	je     411be6 <caml_sys_io_error+0x16>
  411bde:	48 89 df             	mov    %rbx,%rdi
  411be1:	e8 9a fe ff ff       	callq  411a80 <caml_sys_error>
  411be6:	e8 85 8b 00 00       	callq  41a770 <caml_raise_sys_blocked_io>
  411beb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000411bf0 <caml_sys_exit>:
  411bf0:	41 57                	push   %r15
  411bf2:	41 56                	push   %r14
  411bf4:	41 55                	push   %r13
  411bf6:	41 54                	push   %r12
  411bf8:	55                   	push   %rbp
  411bf9:	53                   	push   %rbx
  411bfa:	48 89 fb             	mov    %rdi,%rbx
  411bfd:	48 d1 fb             	sar    %rbx
  411c00:	48 83 ec 28          	sub    $0x28,%rsp
  411c04:	f6 05 86 f7 22 00 04 	testb  $0x4,0x22f786(%rip)        # 641391 <caml_verb_gc+0x1>
  411c0b:	75 33                	jne    411c40 <caml_sys_exit+0x50>
  411c0d:	4c 8b 05 8c 34 22 00 	mov    0x22348c(%rip),%r8        # 6350a0 <caml_cplugins_prim>
  411c14:	4d 85 c0             	test   %r8,%r8
  411c17:	0f 84 b1 01 00 00    	je     411dce <caml_sys_exit+0x1de>
  411c1d:	48 63 f3             	movslq %ebx,%rsi
  411c20:	31 c9                	xor    %ecx,%ecx
  411c22:	31 d2                	xor    %edx,%edx
  411c24:	31 ff                	xor    %edi,%edi
  411c26:	41 ff d0             	callq  *%r8
  411c29:	48 83 c4 28          	add    $0x28,%rsp
  411c2d:	b8 01 00 00 00       	mov    $0x1,%eax
  411c32:	5b                   	pop    %rbx
  411c33:	5d                   	pop    %rbp
  411c34:	41 5c                	pop    %r12
  411c36:	41 5d                	pop    %r13
  411c38:	41 5e                	pop    %r14
  411c3a:	41 5f                	pop    %r15
  411c3c:	c3                   	retq   
  411c3d:	0f 1f 00             	nopl   (%rax)
  411c40:	48 8b 15 81 b2 21 00 	mov    0x21b281(%rip),%rdx        # 62cec8 <caml_young_end>
  411c47:	48 2b 15 5a b2 21 00 	sub    0x21b25a(%rip),%rdx        # 62cea8 <caml_young_ptr>
  411c4e:	66 0f ef c0          	pxor   %xmm0,%xmm0
  411c52:	f2 0f 10 1d c6 34 22 	movsd  0x2234c6(%rip),%xmm3        # 635120 <caml_stat_promoted_words>
  411c59:	00 
  411c5a:	48 c1 fa 03          	sar    $0x3,%rdx
  411c5e:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  411c63:	48 8b 15 76 f7 22 00 	mov    0x22f776(%rip),%rdx        # 6413e0 <caml_allocated_words>
  411c6a:	48 85 d2             	test   %rdx,%rdx
  411c6d:	f2 0f 58 05 b3 34 22 	addsd  0x2234b3(%rip),%xmm0        # 635128 <caml_stat_minor_words>
  411c74:	00 
  411c75:	0f 88 35 01 00 00    	js     411db0 <caml_sys_exit+0x1c0>
  411c7b:	66 0f ef c9          	pxor   %xmm1,%xmm1
  411c7f:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  411c84:	f2 0f 58 0d 8c 34 22 	addsd  0x22348c(%rip),%xmm1        # 635118 <caml_stat_major_words>
  411c8b:	00 
  411c8c:	66 0f 28 d0          	movapd %xmm0,%xmm2
  411c90:	48 8b 05 59 34 22 00 	mov    0x223459(%rip),%rax        # 6350f0 <caml_stat_compactions>
  411c97:	be 88 e7 41 00       	mov    $0x41e788,%esi
  411c9c:	bf 00 04 00 00       	mov    $0x400,%edi
  411ca1:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
  411ca7:	4c 8b 3d 62 34 22 00 	mov    0x223462(%rip),%r15        # 635110 <caml_stat_minor_collections>
  411cae:	4c 8b 35 53 34 22 00 	mov    0x223453(%rip),%r14        # 635108 <caml_stat_major_collections>
  411cb5:	4c 8b 2d 44 34 22 00 	mov    0x223444(%rip),%r13        # 635100 <caml_stat_heap_wsz>
  411cbc:	4c 8b 25 25 34 22 00 	mov    0x223425(%rip),%r12        # 6350e8 <caml_stat_heap_chunks>
  411cc3:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
  411cc9:	48 89 04 24          	mov    %rax,(%rsp)
  411ccd:	48 8b 2d 24 34 22 00 	mov    0x223424(%rip),%rbp        # 6350f8 <caml_stat_top_heap_wsz>
  411cd4:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
  411cd8:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
  411cde:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
  411ce2:	f2 48 0f 2c d2       	cvttsd2si %xmm2,%rdx
  411ce7:	e8 c4 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411cec:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
  411cf2:	be 9e e7 41 00       	mov    $0x41e79e,%esi
  411cf7:	bf 00 04 00 00       	mov    $0x400,%edi
  411cfc:	f2 48 0f 2c d0       	cvttsd2si %xmm0,%rdx
  411d01:	e8 aa 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411d06:	f2 0f 10 5c 24 08    	movsd  0x8(%rsp),%xmm3
  411d0c:	be b0 e7 41 00       	mov    $0x41e7b0,%esi
  411d11:	bf 00 04 00 00       	mov    $0x400,%edi
  411d16:	f2 48 0f 2c d3       	cvttsd2si %xmm3,%rdx
  411d1b:	e8 90 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411d20:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
  411d26:	be c5 e7 41 00       	mov    $0x41e7c5,%esi
  411d2b:	bf 00 04 00 00       	mov    $0x400,%edi
  411d30:	f2 48 0f 2c d1       	cvttsd2si %xmm1,%rdx
  411d35:	e8 76 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411d3a:	4c 89 fa             	mov    %r15,%rdx
  411d3d:	be d7 e7 41 00       	mov    $0x41e7d7,%esi
  411d42:	bf 00 04 00 00       	mov    $0x400,%edi
  411d47:	e8 64 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411d4c:	4c 89 f2             	mov    %r14,%rdx
  411d4f:	be ee e7 41 00       	mov    $0x41e7ee,%esi
  411d54:	bf 00 04 00 00       	mov    $0x400,%edi
  411d59:	e8 52 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411d5e:	4c 89 ea             	mov    %r13,%rdx
  411d61:	be 1a e8 41 00       	mov    $0x41e81a,%esi
  411d66:	bf 00 04 00 00       	mov    $0x400,%edi
  411d6b:	e8 40 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411d70:	4c 89 e2             	mov    %r12,%rdx
  411d73:	be 05 e8 41 00       	mov    $0x41e805,%esi
  411d78:	bf 00 04 00 00       	mov    $0x400,%edi
  411d7d:	e8 2e 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411d82:	48 89 ea             	mov    %rbp,%rdx
  411d85:	be 16 e8 41 00       	mov    $0x41e816,%esi
  411d8a:	bf 00 04 00 00       	mov    $0x400,%edi
  411d8f:	e8 1c 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411d94:	48 8b 14 24          	mov    (%rsp),%rdx
  411d98:	be 2a e8 41 00       	mov    $0x41e82a,%esi
  411d9d:	bf 00 04 00 00       	mov    $0x400,%edi
  411da2:	e8 09 9f 00 00       	callq  41bcb0 <caml_gc_message>
  411da7:	e9 61 fe ff ff       	jmpq   411c0d <caml_sys_exit+0x1d>
  411dac:	0f 1f 40 00          	nopl   0x0(%rax)
  411db0:	48 89 d1             	mov    %rdx,%rcx
  411db3:	66 0f ef c9          	pxor   %xmm1,%xmm1
  411db7:	48 d1 e9             	shr    %rcx
  411dba:	83 e2 01             	and    $0x1,%edx
  411dbd:	48 09 d1             	or     %rdx,%rcx
  411dc0:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
  411dc5:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  411dc9:	e9 b6 fe ff ff       	jmpq   411c84 <caml_sys_exit+0x94>
  411dce:	89 df                	mov    %ebx,%edi
  411dd0:	e8 fb ff fe ff       	callq  401dd0 <exit@plt>
  411dd5:	90                   	nop
  411dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  411ddd:	00 00 00 

0000000000411de0 <caml_sys_open>:
  411de0:	41 55                	push   %r13
  411de2:	41 54                	push   %r12
  411de4:	55                   	push   %rbp
  411de5:	53                   	push   %rbx
  411de6:	48 83 ec 78          	sub    $0x78,%rsp
  411dea:	48 8b 2d 57 ab 21 00 	mov    0x21ab57(%rip),%rbp        # 62c948 <caml_local_roots>
  411df1:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  411df6:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  411dfb:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  411e00:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  411e07:	00 00 
  411e09:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
  411e0e:	31 c9                	xor    %ecx,%ecx
  411e10:	48 89 15 31 ab 21 00 	mov    %rdx,0x21ab31(%rip)        # 62c948 <caml_local_roots>
  411e17:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  411e1c:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  411e21:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
  411e26:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  411e2d:	00 00 
  411e2f:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  411e34:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  411e39:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
  411e40:	00 00 
  411e42:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  411e47:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  411e4c:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
  411e51:	e8 4a fd ff ff       	callq  411ba0 <caml_sys_check_path>
  411e56:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  411e5b:	e8 f0 a0 00 00       	callq  41bf50 <caml_strdup>
  411e60:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  411e65:	be e0 c7 62 00       	mov    $0x62c7e0,%esi
  411e6a:	49 89 c4             	mov    %rax,%r12
  411e6d:	e8 4e a8 00 00       	callq  41c6c0 <caml_convert_flag_list>
  411e72:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  411e77:	41 89 c5             	mov    %eax,%r13d
  411e7a:	e8 81 8b 00 00       	callq  41aa00 <caml_enter_blocking_section>
  411e7f:	48 8b 05 1a 32 22 00 	mov    0x22321a(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  411e86:	48 d1 fb             	sar    %rbx
  411e89:	48 85 c0             	test   %rax,%rax
  411e8c:	0f 84 7e 00 00 00    	je     411f10 <caml_sys_open+0x130>
  411e92:	48 63 cb             	movslq %ebx,%rcx
  411e95:	49 63 d5             	movslq %r13d,%rdx
  411e98:	4c 89 e6             	mov    %r12,%rsi
  411e9b:	bf 01 00 00 00       	mov    $0x1,%edi
  411ea0:	ff d0                	callq  *%rax
  411ea2:	48 63 d8             	movslq %eax,%rbx
  411ea5:	83 fb ff             	cmp    $0xffffffff,%ebx
  411ea8:	74 4e                	je     411ef8 <caml_sys_open+0x118>
  411eaa:	ba 01 00 00 00       	mov    $0x1,%edx
  411eaf:	be 02 00 00 00       	mov    $0x2,%esi
  411eb4:	89 df                	mov    %ebx,%edi
  411eb6:	31 c0                	xor    %eax,%eax
  411eb8:	e8 33 fb fe ff       	callq  4019f0 <fcntl@plt>
  411ebd:	e8 8e 8b 00 00       	callq  41aa50 <caml_leave_blocking_section>
  411ec2:	4c 89 e7             	mov    %r12,%rdi
  411ec5:	e8 26 79 ff ff       	callq  4097f0 <caml_stat_free>
  411eca:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  411ecf:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  411ed6:	00 00 
  411ed8:	48 89 2d 69 aa 21 00 	mov    %rbp,0x21aa69(%rip)        # 62c948 <caml_local_roots>
  411edf:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  411ee4:	75 3f                	jne    411f25 <caml_sys_open+0x145>
  411ee6:	48 83 c4 78          	add    $0x78,%rsp
  411eea:	5b                   	pop    %rbx
  411eeb:	5d                   	pop    %rbp
  411eec:	41 5c                	pop    %r12
  411eee:	41 5d                	pop    %r13
  411ef0:	c3                   	retq   
  411ef1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  411ef8:	e8 53 8b 00 00       	callq  41aa50 <caml_leave_blocking_section>
  411efd:	4c 89 e7             	mov    %r12,%rdi
  411f00:	e8 eb 78 ff ff       	callq  4097f0 <caml_stat_free>
  411f05:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  411f0a:	e8 71 fb ff ff       	callq  411a80 <caml_sys_error>
  411f0f:	90                   	nop
  411f10:	89 da                	mov    %ebx,%edx
  411f12:	44 89 ee             	mov    %r13d,%esi
  411f15:	4c 89 e7             	mov    %r12,%rdi
  411f18:	e8 03 fe fe ff       	callq  401d20 <open64@plt>
  411f1d:	48 63 d8             	movslq %eax,%rbx
  411f20:	e9 80 ff ff ff       	jmpq   411ea5 <caml_sys_open+0xc5>
  411f25:	e8 46 fb fe ff       	callq  401a70 <__stack_chk_fail@plt>
  411f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000411f30 <caml_sys_close>:
  411f30:	53                   	push   %rbx
  411f31:	48 89 fb             	mov    %rdi,%rbx
  411f34:	48 d1 fb             	sar    %rbx
  411f37:	e8 c4 8a 00 00       	callq  41aa00 <caml_enter_blocking_section>
  411f3c:	48 8b 05 5d 31 22 00 	mov    0x22315d(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  411f43:	48 85 c0             	test   %rax,%rax
  411f46:	74 20                	je     411f68 <caml_sys_close+0x38>
  411f48:	48 63 f3             	movslq %ebx,%rsi
  411f4b:	31 c9                	xor    %ecx,%ecx
  411f4d:	31 d2                	xor    %edx,%edx
  411f4f:	bf 02 00 00 00       	mov    $0x2,%edi
  411f54:	ff d0                	callq  *%rax
  411f56:	e8 f5 8a 00 00       	callq  41aa50 <caml_leave_blocking_section>
  411f5b:	b8 01 00 00 00       	mov    $0x1,%eax
  411f60:	5b                   	pop    %rbx
  411f61:	c3                   	retq   
  411f62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  411f68:	89 df                	mov    %ebx,%edi
  411f6a:	e8 91 fb fe ff       	callq  401b00 <close@plt>
  411f6f:	e8 dc 8a 00 00       	callq  41aa50 <caml_leave_blocking_section>
  411f74:	b8 01 00 00 00       	mov    $0x1,%eax
  411f79:	5b                   	pop    %rbx
  411f7a:	c3                   	retq   
  411f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000411f80 <caml_sys_file_exists>:
  411f80:	55                   	push   %rbp
  411f81:	53                   	push   %rbx
  411f82:	48 89 fb             	mov    %rdi,%rbx
  411f85:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  411f8c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  411f93:	00 00 
  411f95:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
  411f9c:	00 
  411f9d:	31 c0                	xor    %eax,%eax
  411f9f:	e8 3c a6 ff ff       	callq  40c5e0 <caml_string_is_c_safe>
  411fa4:	85 c0                	test   %eax,%eax
  411fa6:	75 28                	jne    411fd0 <caml_sys_file_exists+0x50>
  411fa8:	b8 01 00 00 00       	mov    $0x1,%eax
  411fad:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
  411fb4:	00 
  411fb5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  411fbc:	00 00 
  411fbe:	75 6c                	jne    41202c <caml_sys_file_exists+0xac>
  411fc0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  411fc7:	5b                   	pop    %rbx
  411fc8:	5d                   	pop    %rbp
  411fc9:	c3                   	retq   
  411fca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  411fd0:	48 89 df             	mov    %rbx,%rdi
  411fd3:	e8 78 9f 00 00       	callq  41bf50 <caml_strdup>
  411fd8:	48 89 c5             	mov    %rax,%rbp
  411fdb:	e8 20 8a 00 00       	callq  41aa00 <caml_enter_blocking_section>
  411fe0:	48 8b 05 b9 30 22 00 	mov    0x2230b9(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  411fe7:	48 85 c0             	test   %rax,%rax
  411fea:	74 2c                	je     412018 <caml_sys_file_exists+0x98>
  411fec:	31 c9                	xor    %ecx,%ecx
  411fee:	48 89 e2             	mov    %rsp,%rdx
  411ff1:	48 89 ee             	mov    %rbp,%rsi
  411ff4:	bf 03 00 00 00       	mov    $0x3,%edi
  411ff9:	ff d0                	callq  *%rax
  411ffb:	89 c3                	mov    %eax,%ebx
  411ffd:	e8 4e 8a 00 00       	callq  41aa50 <caml_leave_blocking_section>
  412002:	48 89 ef             	mov    %rbp,%rdi
  412005:	e8 e6 77 ff ff       	callq  4097f0 <caml_stat_free>
  41200a:	85 db                	test   %ebx,%ebx
  41200c:	b8 03 00 00 00       	mov    $0x3,%eax
  412011:	74 9a                	je     411fad <caml_sys_file_exists+0x2d>
  412013:	eb 93                	jmp    411fa8 <caml_sys_file_exists+0x28>
  412015:	0f 1f 00             	nopl   (%rax)
  412018:	48 89 e2             	mov    %rsp,%rdx
  41201b:	48 89 ee             	mov    %rbp,%rsi
  41201e:	bf 01 00 00 00       	mov    $0x1,%edi
  412023:	e8 08 fa fe ff       	callq  401a30 <__xstat64@plt>
  412028:	89 c3                	mov    %eax,%ebx
  41202a:	eb d1                	jmp    411ffd <caml_sys_file_exists+0x7d>
  41202c:	e8 3f fa fe ff       	callq  401a70 <__stack_chk_fail@plt>
  412031:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  412036:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41203d:	00 00 00 

0000000000412040 <caml_sys_is_directory>:
  412040:	41 54                	push   %r12
  412042:	55                   	push   %rbp
  412043:	53                   	push   %rbx
  412044:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
  41204b:	48 8b 2d f6 a8 21 00 	mov    0x21a8f6(%rip),%rbp        # 62c948 <caml_local_roots>
  412052:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  412057:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41205c:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  412063:	00 00 
  412065:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  41206c:	00 00 
  41206e:	48 89 8c 24 e8 00 00 	mov    %rcx,0xe8(%rsp)
  412075:	00 
  412076:	31 c9                	xor    %ecx,%ecx
  412078:	48 89 15 c9 a8 21 00 	mov    %rdx,0x21a8c9(%rip)        # 62c948 <caml_local_roots>
  41207f:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  412084:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  412089:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  412090:	00 00 
  412092:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  412097:	e8 04 fb ff ff       	callq  411ba0 <caml_sys_check_path>
  41209c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4120a1:	e8 aa 9e 00 00       	callq  41bf50 <caml_strdup>
  4120a6:	49 89 c4             	mov    %rax,%r12
  4120a9:	e8 52 89 00 00       	callq  41aa00 <caml_enter_blocking_section>
  4120ae:	48 8b 05 eb 2f 22 00 	mov    0x222feb(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  4120b5:	48 85 c0             	test   %rax,%rax
  4120b8:	74 66                	je     412120 <caml_sys_is_directory+0xe0>
  4120ba:	31 c9                	xor    %ecx,%ecx
  4120bc:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
  4120c1:	4c 89 e6             	mov    %r12,%rsi
  4120c4:	bf 03 00 00 00       	mov    $0x3,%edi
  4120c9:	ff d0                	callq  *%rax
  4120cb:	89 c3                	mov    %eax,%ebx
  4120cd:	e8 7e 89 00 00       	callq  41aa50 <caml_leave_blocking_section>
  4120d2:	4c 89 e7             	mov    %r12,%rdi
  4120d5:	e8 16 77 ff ff       	callq  4097f0 <caml_stat_free>
  4120da:	83 fb ff             	cmp    $0xffffffff,%ebx
  4120dd:	74 57                	je     412136 <caml_sys_is_directory+0xf6>
  4120df:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4120e3:	48 89 2d 5e a8 21 00 	mov    %rbp,0x21a85e(%rip)        # 62c948 <caml_local_roots>
  4120ea:	25 00 f0 00 00       	and    $0xf000,%eax
  4120ef:	3d 00 40 00 00       	cmp    $0x4000,%eax
  4120f4:	0f 94 c0             	sete   %al
  4120f7:	48 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%rsi
  4120fe:	00 
  4120ff:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  412106:	00 00 
  412108:	0f b6 c0             	movzbl %al,%eax
  41210b:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  412110:	75 2e                	jne    412140 <caml_sys_is_directory+0x100>
  412112:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
  412119:	5b                   	pop    %rbx
  41211a:	5d                   	pop    %rbp
  41211b:	41 5c                	pop    %r12
  41211d:	c3                   	retq   
  41211e:	66 90                	xchg   %ax,%ax
  412120:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
  412125:	4c 89 e6             	mov    %r12,%rsi
  412128:	bf 01 00 00 00       	mov    $0x1,%edi
  41212d:	e8 fe f8 fe ff       	callq  401a30 <__xstat64@plt>
  412132:	89 c3                	mov    %eax,%ebx
  412134:	eb 97                	jmp    4120cd <caml_sys_is_directory+0x8d>
  412136:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41213b:	e8 40 f9 ff ff       	callq  411a80 <caml_sys_error>
  412140:	e8 2b f9 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  412145:	90                   	nop
  412146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41214d:	00 00 00 

0000000000412150 <caml_sys_remove>:
  412150:	41 54                	push   %r12
  412152:	55                   	push   %rbp
  412153:	53                   	push   %rbx
  412154:	48 83 ec 60          	sub    $0x60,%rsp
  412158:	4c 8b 25 e9 a7 21 00 	mov    0x21a7e9(%rip),%r12        # 62c948 <caml_local_roots>
  41215f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  412164:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  412169:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  412170:	00 00 
  412172:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  412179:	00 00 
  41217b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  412180:	31 c9                	xor    %ecx,%ecx
  412182:	48 89 15 bf a7 21 00 	mov    %rdx,0x21a7bf(%rip)        # 62c948 <caml_local_roots>
  412189:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  41218e:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
  412193:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41219a:	00 00 
  41219c:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  4121a1:	e8 fa f9 ff ff       	callq  411ba0 <caml_sys_check_path>
  4121a6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4121ab:	e8 a0 9d 00 00       	callq  41bf50 <caml_strdup>
  4121b0:	48 89 c5             	mov    %rax,%rbp
  4121b3:	e8 48 88 00 00       	callq  41aa00 <caml_enter_blocking_section>
  4121b8:	48 8b 05 e1 2e 22 00 	mov    0x222ee1(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  4121bf:	48 85 c0             	test   %rax,%rax
  4121c2:	74 4c                	je     412210 <caml_sys_remove+0xc0>
  4121c4:	31 c9                	xor    %ecx,%ecx
  4121c6:	31 d2                	xor    %edx,%edx
  4121c8:	48 89 ee             	mov    %rbp,%rsi
  4121cb:	bf 04 00 00 00       	mov    $0x4,%edi
  4121d0:	ff d0                	callq  *%rax
  4121d2:	89 c3                	mov    %eax,%ebx
  4121d4:	e8 77 88 00 00       	callq  41aa50 <caml_leave_blocking_section>
  4121d9:	48 89 ef             	mov    %rbp,%rdi
  4121dc:	e8 0f 76 ff ff       	callq  4097f0 <caml_stat_free>
  4121e1:	85 db                	test   %ebx,%ebx
  4121e3:	75 37                	jne    41221c <caml_sys_remove+0xcc>
  4121e5:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
  4121ea:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  4121f1:	00 00 
  4121f3:	4c 89 25 4e a7 21 00 	mov    %r12,0x21a74e(%rip)        # 62c948 <caml_local_roots>
  4121fa:	b8 01 00 00 00       	mov    $0x1,%eax
  4121ff:	75 25                	jne    412226 <caml_sys_remove+0xd6>
  412201:	48 83 c4 60          	add    $0x60,%rsp
  412205:	5b                   	pop    %rbx
  412206:	5d                   	pop    %rbp
  412207:	41 5c                	pop    %r12
  412209:	c3                   	retq   
  41220a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  412210:	48 89 ef             	mov    %rbp,%rdi
  412213:	e8 78 f7 fe ff       	callq  401990 <unlink@plt>
  412218:	89 c3                	mov    %eax,%ebx
  41221a:	eb b8                	jmp    4121d4 <caml_sys_remove+0x84>
  41221c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412221:	e8 5a f8 ff ff       	callq  411a80 <caml_sys_error>
  412226:	e8 45 f8 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41222b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000412230 <caml_sys_rename>:
  412230:	41 54                	push   %r12
  412232:	55                   	push   %rbp
  412233:	48 89 fd             	mov    %rdi,%rbp
  412236:	53                   	push   %rbx
  412237:	48 89 f3             	mov    %rsi,%rbx
  41223a:	e8 61 f9 ff ff       	callq  411ba0 <caml_sys_check_path>
  41223f:	48 89 df             	mov    %rbx,%rdi
  412242:	e8 59 f9 ff ff       	callq  411ba0 <caml_sys_check_path>
  412247:	48 89 ef             	mov    %rbp,%rdi
  41224a:	e8 01 9d 00 00       	callq  41bf50 <caml_strdup>
  41224f:	48 89 df             	mov    %rbx,%rdi
  412252:	48 89 c5             	mov    %rax,%rbp
  412255:	e8 f6 9c 00 00       	callq  41bf50 <caml_strdup>
  41225a:	49 89 c4             	mov    %rax,%r12
  41225d:	e8 9e 87 00 00       	callq  41aa00 <caml_enter_blocking_section>
  412262:	48 8b 05 37 2e 22 00 	mov    0x222e37(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  412269:	48 85 c0             	test   %rax,%rax
  41226c:	74 3a                	je     4122a8 <caml_sys_rename+0x78>
  41226e:	31 c9                	xor    %ecx,%ecx
  412270:	4c 89 e2             	mov    %r12,%rdx
  412273:	48 89 ee             	mov    %rbp,%rsi
  412276:	bf 05 00 00 00       	mov    $0x5,%edi
  41227b:	ff d0                	callq  *%rax
  41227d:	89 c3                	mov    %eax,%ebx
  41227f:	e8 cc 87 00 00       	callq  41aa50 <caml_leave_blocking_section>
  412284:	4c 89 e7             	mov    %r12,%rdi
  412287:	e8 64 75 ff ff       	callq  4097f0 <caml_stat_free>
  41228c:	48 89 ef             	mov    %rbp,%rdi
  41228f:	e8 5c 75 ff ff       	callq  4097f0 <caml_stat_free>
  412294:	85 db                	test   %ebx,%ebx
  412296:	75 1f                	jne    4122b7 <caml_sys_rename+0x87>
  412298:	5b                   	pop    %rbx
  412299:	b8 01 00 00 00       	mov    $0x1,%eax
  41229e:	5d                   	pop    %rbp
  41229f:	41 5c                	pop    %r12
  4122a1:	c3                   	retq   
  4122a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4122a8:	4c 89 e6             	mov    %r12,%rsi
  4122ab:	48 89 ef             	mov    %rbp,%rdi
  4122ae:	e8 bd fa fe ff       	callq  401d70 <rename@plt>
  4122b3:	89 c3                	mov    %eax,%ebx
  4122b5:	eb c8                	jmp    41227f <caml_sys_rename+0x4f>
  4122b7:	bf 01 00 00 00       	mov    $0x1,%edi
  4122bc:	e8 bf f7 ff ff       	callq  411a80 <caml_sys_error>
  4122c1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4122c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4122cd:	00 00 00 

00000000004122d0 <caml_sys_chdir>:
  4122d0:	41 54                	push   %r12
  4122d2:	55                   	push   %rbp
  4122d3:	53                   	push   %rbx
  4122d4:	48 83 ec 60          	sub    $0x60,%rsp
  4122d8:	4c 8b 25 69 a6 21 00 	mov    0x21a669(%rip),%r12        # 62c948 <caml_local_roots>
  4122df:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  4122e4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4122e9:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  4122f0:	00 00 
  4122f2:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  4122f9:	00 00 
  4122fb:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  412300:	31 c9                	xor    %ecx,%ecx
  412302:	48 89 15 3f a6 21 00 	mov    %rdx,0x21a63f(%rip)        # 62c948 <caml_local_roots>
  412309:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  41230e:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
  412313:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41231a:	00 00 
  41231c:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  412321:	e8 7a f8 ff ff       	callq  411ba0 <caml_sys_check_path>
  412326:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41232b:	e8 20 9c 00 00       	callq  41bf50 <caml_strdup>
  412330:	48 89 c5             	mov    %rax,%rbp
  412333:	e8 c8 86 00 00       	callq  41aa00 <caml_enter_blocking_section>
  412338:	48 8b 05 61 2d 22 00 	mov    0x222d61(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  41233f:	48 85 c0             	test   %rax,%rax
  412342:	74 4c                	je     412390 <caml_sys_chdir+0xc0>
  412344:	31 c9                	xor    %ecx,%ecx
  412346:	31 d2                	xor    %edx,%edx
  412348:	48 89 ee             	mov    %rbp,%rsi
  41234b:	bf 06 00 00 00       	mov    $0x6,%edi
  412350:	ff d0                	callq  *%rax
  412352:	89 c3                	mov    %eax,%ebx
  412354:	e8 f7 86 00 00       	callq  41aa50 <caml_leave_blocking_section>
  412359:	48 89 ef             	mov    %rbp,%rdi
  41235c:	e8 8f 74 ff ff       	callq  4097f0 <caml_stat_free>
  412361:	85 db                	test   %ebx,%ebx
  412363:	75 37                	jne    41239c <caml_sys_chdir+0xcc>
  412365:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
  41236a:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  412371:	00 00 
  412373:	4c 89 25 ce a5 21 00 	mov    %r12,0x21a5ce(%rip)        # 62c948 <caml_local_roots>
  41237a:	b8 01 00 00 00       	mov    $0x1,%eax
  41237f:	75 25                	jne    4123a6 <caml_sys_chdir+0xd6>
  412381:	48 83 c4 60          	add    $0x60,%rsp
  412385:	5b                   	pop    %rbx
  412386:	5d                   	pop    %rbp
  412387:	41 5c                	pop    %r12
  412389:	c3                   	retq   
  41238a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  412390:	48 89 ef             	mov    %rbp,%rdi
  412393:	e8 c8 f6 fe ff       	callq  401a60 <chdir@plt>
  412398:	89 c3                	mov    %eax,%ebx
  41239a:	eb b8                	jmp    412354 <caml_sys_chdir+0x84>
  41239c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4123a1:	e8 da f6 ff ff       	callq  411a80 <caml_sys_error>
  4123a6:	e8 c5 f6 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  4123ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004123b0 <caml_sys_getcwd>:
  4123b0:	48 81 ec 18 10 00 00 	sub    $0x1018,%rsp
  4123b7:	be 00 10 00 00       	mov    $0x1000,%esi
  4123bc:	48 89 e7             	mov    %rsp,%rdi
  4123bf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4123c6:	00 00 
  4123c8:	48 89 84 24 08 10 00 	mov    %rax,0x1008(%rsp)
  4123cf:	00 
  4123d0:	31 c0                	xor    %eax,%eax
  4123d2:	e8 09 f7 fe ff       	callq  401ae0 <getcwd@plt>
  4123d7:	48 85 c0             	test   %rax,%rax
  4123da:	74 23                	je     4123ff <caml_sys_getcwd+0x4f>
  4123dc:	48 89 e7             	mov    %rsp,%rdi
  4123df:	e8 ac a0 00 00       	callq  41c490 <caml_copy_string>
  4123e4:	48 8b 94 24 08 10 00 	mov    0x1008(%rsp),%rdx
  4123eb:	00 
  4123ec:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  4123f3:	00 00 
  4123f5:	75 12                	jne    412409 <caml_sys_getcwd+0x59>
  4123f7:	48 81 c4 18 10 00 00 	add    $0x1018,%rsp
  4123fe:	c3                   	retq   
  4123ff:	bf 01 00 00 00       	mov    $0x1,%edi
  412404:	e8 77 f6 ff ff       	callq  411a80 <caml_sys_error>
  412409:	e8 62 f6 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41240e:	66 90                	xchg   %ax,%ax

0000000000412410 <caml_sys_getenv>:
  412410:	53                   	push   %rbx
  412411:	48 89 fb             	mov    %rdi,%rbx
  412414:	e8 c7 a1 ff ff       	callq  40c5e0 <caml_string_is_c_safe>
  412419:	85 c0                	test   %eax,%eax
  41241b:	74 38                	je     412455 <caml_sys_getenv+0x45>
  41241d:	48 8b 05 7c 2c 22 00 	mov    0x222c7c(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  412424:	48 85 c0             	test   %rax,%rax
  412427:	74 1f                	je     412448 <caml_sys_getenv+0x38>
  412429:	bf 07 00 00 00       	mov    $0x7,%edi
  41242e:	31 c9                	xor    %ecx,%ecx
  412430:	31 d2                	xor    %edx,%edx
  412432:	48 89 de             	mov    %rbx,%rsi
  412435:	ff d0                	callq  *%rax
  412437:	48 89 c7             	mov    %rax,%rdi
  41243a:	48 85 ff             	test   %rdi,%rdi
  41243d:	74 16                	je     412455 <caml_sys_getenv+0x45>
  41243f:	5b                   	pop    %rbx
  412440:	e9 4b a0 00 00       	jmpq   41c490 <caml_copy_string>
  412445:	0f 1f 00             	nopl   (%rax)
  412448:	48 89 df             	mov    %rbx,%rdi
  41244b:	e8 e0 f4 fe ff       	callq  401930 <getenv@plt>
  412450:	48 89 c7             	mov    %rax,%rdi
  412453:	eb e5                	jmp    41243a <caml_sys_getenv+0x2a>
  412455:	e8 06 83 00 00       	callq  41a760 <caml_raise_not_found>
  41245a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000412460 <caml_sys_get_argv>:
  412460:	53                   	push   %rbx
  412461:	48 83 ec 70          	sub    $0x70,%rsp
  412465:	48 8b 1d dc a4 21 00 	mov    0x21a4dc(%rip),%rbx        # 62c948 <caml_local_roots>
  41246c:	48 8b 3d dd ef 22 00 	mov    0x22efdd(%rip),%rdi        # 641450 <caml_exe_name>
  412473:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41247a:	00 00 
  41247c:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  412481:	31 c0                	xor    %eax,%eax
  412483:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  412488:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
  41248f:	00 00 
  412491:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
  412498:	00 00 
  41249a:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  4124a1:	00 00 
  4124a3:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
  4124a8:	48 89 05 99 a4 21 00 	mov    %rax,0x21a499(%rip)        # 62c948 <caml_local_roots>
  4124af:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  4124b4:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  4124bb:	00 00 
  4124bd:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
  4124c4:	00 00 
  4124c6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  4124cb:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  4124d0:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  4124d5:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  4124da:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  4124df:	e8 ac 9f 00 00       	callq  41c490 <caml_copy_string>
  4124e4:	48 8b 3d 6d ef 22 00 	mov    0x22ef6d(%rip),%rdi        # 641458 <caml_main_argv>
  4124eb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4124f0:	e8 bb a1 00 00       	callq  41c6b0 <caml_copy_string_array>
  4124f5:	31 f6                	xor    %esi,%esi
  4124f7:	bf 02 00 00 00       	mov    $0x2,%edi
  4124fc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  412501:	e8 7a 9d 00 00       	callq  41c280 <caml_alloc_small>
  412506:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41250b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  412510:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  412515:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41251c:	00 00 
  41251e:	48 89 10             	mov    %rdx,(%rax)
  412521:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  412526:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  41252b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  41252f:	48 89 1d 12 a4 21 00 	mov    %rbx,0x21a412(%rip)        # 62c948 <caml_local_roots>
  412536:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41253b:	75 06                	jne    412543 <caml_sys_get_argv+0xe3>
  41253d:	48 83 c4 70          	add    $0x70,%rsp
  412541:	5b                   	pop    %rbx
  412542:	c3                   	retq   
  412543:	e8 28 f5 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  412548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41254f:	00 

0000000000412550 <caml_sys_system_command>:
  412550:	41 54                	push   %r12
  412552:	55                   	push   %rbp
  412553:	53                   	push   %rbx
  412554:	48 83 ec 60          	sub    $0x60,%rsp
  412558:	48 8b 2d e9 a3 21 00 	mov    0x21a3e9(%rip),%rbp        # 62c948 <caml_local_roots>
  41255f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  412564:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  412569:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  412570:	00 00 
  412572:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  412579:	00 00 
  41257b:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
  412580:	31 c9                	xor    %ecx,%ecx
  412582:	48 89 15 bf a3 21 00 	mov    %rdx,0x21a3bf(%rip)        # 62c948 <caml_local_roots>
  412589:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  41258e:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
  412593:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41259a:	00 00 
  41259c:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  4125a1:	e8 3a a0 ff ff       	callq  40c5e0 <caml_string_is_c_safe>
  4125a6:	85 c0                	test   %eax,%eax
  4125a8:	0f 84 88 00 00 00    	je     412636 <caml_sys_system_command+0xe6>
  4125ae:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4125b3:	e8 98 99 00 00       	callq  41bf50 <caml_strdup>
  4125b8:	49 89 c4             	mov    %rax,%r12
  4125bb:	e8 40 84 00 00       	callq  41aa00 <caml_enter_blocking_section>
  4125c0:	48 8b 05 d9 2a 22 00 	mov    0x222ad9(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  4125c7:	48 85 c0             	test   %rax,%rax
  4125ca:	74 54                	je     412620 <caml_sys_system_command+0xd0>
  4125cc:	31 c9                	xor    %ecx,%ecx
  4125ce:	31 d2                	xor    %edx,%edx
  4125d0:	4c 89 e6             	mov    %r12,%rsi
  4125d3:	bf 08 00 00 00       	mov    $0x8,%edi
  4125d8:	ff d0                	callq  *%rax
  4125da:	89 c3                	mov    %eax,%ebx
  4125dc:	e8 6f 84 00 00       	callq  41aa50 <caml_leave_blocking_section>
  4125e1:	4c 89 e7             	mov    %r12,%rdi
  4125e4:	e8 07 72 ff ff       	callq  4097f0 <caml_stat_free>
  4125e9:	83 fb ff             	cmp    $0xffffffff,%ebx
  4125ec:	74 3e                	je     41262c <caml_sys_system_command+0xdc>
  4125ee:	f6 c3 7f             	test   $0x7f,%bl
  4125f1:	b8 ff 01 00 00       	mov    $0x1ff,%eax
  4125f6:	75 08                	jne    412600 <caml_sys_system_command+0xb0>
  4125f8:	0f b6 df             	movzbl %bh,%ebx
  4125fb:	48 8d 44 1b 01       	lea    0x1(%rbx,%rbx,1),%rax
  412600:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
  412605:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  41260c:	00 00 
  41260e:	48 89 2d 33 a3 21 00 	mov    %rbp,0x21a333(%rip)        # 62c948 <caml_local_roots>
  412615:	75 34                	jne    41264b <caml_sys_system_command+0xfb>
  412617:	48 83 c4 60          	add    $0x60,%rsp
  41261b:	5b                   	pop    %rbx
  41261c:	5d                   	pop    %rbp
  41261d:	41 5c                	pop    %r12
  41261f:	c3                   	retq   
  412620:	4c 89 e7             	mov    %r12,%rdi
  412623:	e8 58 f4 fe ff       	callq  401a80 <system@plt>
  412628:	89 c3                	mov    %eax,%ebx
  41262a:	eb b0                	jmp    4125dc <caml_sys_system_command+0x8c>
  41262c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412631:	e8 4a f4 ff ff       	callq  411a80 <caml_sys_error>
  412636:	e8 35 f3 fe ff       	callq  401970 <__errno_location@plt>
  41263b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412640:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
  412646:	e8 35 f4 ff ff       	callq  411a80 <caml_sys_error>
  41264b:	e8 20 f4 fe ff       	callq  401a70 <__stack_chk_fail@plt>

0000000000412650 <caml_sys_time_unboxed>:
  412650:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  412657:	31 ff                	xor    %edi,%edi
  412659:	48 89 e6             	mov    %rsp,%rsi
  41265c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  412663:	00 00 
  412665:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
  41266c:	00 
  41266d:	31 c0                	xor    %eax,%eax
  41266f:	e8 ec f6 fe ff       	callq  401d60 <getrusage@plt>
  412674:	66 0f ef c0          	pxor   %xmm0,%xmm0
  412678:	f2 0f 10 15 78 b5 00 	movsd  0xb578(%rip),%xmm2        # 41dbf8 <caml_absf_mask+0x238>
  41267f:	00 
  412680:	66 0f ef c9          	pxor   %xmm1,%xmm1
  412684:	f2 48 0f 2a 44 24 08 	cvtsi2sdq 0x8(%rsp),%xmm0
  41268b:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
  41268f:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
  412696:	00 
  412697:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41269e:	00 00 
  4126a0:	f2 48 0f 2a 0c 24    	cvtsi2sdq (%rsp),%xmm1
  4126a6:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  4126aa:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4126ae:	f2 48 0f 2a 4c 24 10 	cvtsi2sdq 0x10(%rsp),%xmm1
  4126b5:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  4126b9:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4126bd:	f2 48 0f 2a 4c 24 18 	cvtsi2sdq 0x18(%rsp),%xmm1
  4126c4:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
  4126c8:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
  4126cc:	75 08                	jne    4126d6 <caml_sys_time_unboxed+0x86>
  4126ce:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  4126d5:	c3                   	retq   
  4126d6:	e8 95 f3 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  4126db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004126e0 <caml_sys_time>:
  4126e0:	48 83 ec 08          	sub    $0x8,%rsp
  4126e4:	e8 67 ff ff ff       	callq  412650 <caml_sys_time_unboxed>
  4126e9:	48 83 c4 08          	add    $0x8,%rsp
  4126ed:	e9 0e 8f ff ff       	jmpq   40b600 <caml_copy_double>
  4126f2:	0f 1f 40 00          	nopl   0x0(%rax)
  4126f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4126fd:	00 00 00 

0000000000412700 <caml_sys_random_seed>:
  412700:	41 57                	push   %r15
  412702:	41 56                	push   %r14
  412704:	31 d2                	xor    %edx,%edx
  412706:	41 55                	push   %r13
  412708:	41 54                	push   %r12
  41270a:	31 f6                	xor    %esi,%esi
  41270c:	55                   	push   %rbp
  41270d:	53                   	push   %rbx
  41270e:	bf 3b e8 41 00       	mov    $0x41e83b,%edi
  412713:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
  41271a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  412721:	00 00 
  412723:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  41272a:	00 
  41272b:	31 c0                	xor    %eax,%eax
  41272d:	e8 ee f5 fe ff       	callq  401d20 <open64@plt>
  412732:	83 f8 ff             	cmp    $0xffffffff,%eax
  412735:	0f 84 c5 00 00 00    	je     412800 <caml_sys_random_seed+0x100>
  41273b:	48 8d b4 24 a0 00 00 	lea    0xa0(%rsp),%rsi
  412742:	00 
  412743:	89 c3                	mov    %eax,%ebx
  412745:	ba 0c 00 00 00       	mov    $0xc,%edx
  41274a:	89 c7                	mov    %eax,%edi
  41274c:	e8 1f f4 fe ff       	callq  401b70 <read@plt>
  412751:	89 df                	mov    %ebx,%edi
  412753:	49 89 c4             	mov    %rax,%r12
  412756:	89 c5                	mov    %eax,%ebp
  412758:	e8 a3 f3 fe ff       	callq  401b00 <close@plt>
  41275d:	45 85 e4             	test   %r12d,%r12d
  412760:	0f 8e 9a 00 00 00    	jle    412800 <caml_sys_random_seed+0x100>
  412766:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
  41276b:	44 89 e0             	mov    %r12d,%eax
  41276e:	48 89 da             	mov    %rbx,%rdx
  412771:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  412778:	83 e8 01             	sub    $0x1,%eax
  41277b:	48 83 c2 08          	add    $0x8,%rdx
  41277f:	48 63 c8             	movslq %eax,%rcx
  412782:	0f b6 8c 0c a0 00 00 	movzbl 0xa0(%rsp,%rcx,1),%ecx
  412789:	00 
  41278a:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
  41278e:	85 c0                	test   %eax,%eax
  412790:	75 e6                	jne    412778 <caml_sys_random_seed+0x78>
  412792:	41 83 fc 0c          	cmp    $0xc,%r12d
  412796:	0f 85 d7 00 00 00    	jne    412873 <caml_sys_random_seed+0x173>
  41279c:	41 bd 0c 00 00 00    	mov    $0xc,%r13d
  4127a2:	31 f6                	xor    %esi,%esi
  4127a4:	4c 89 ef             	mov    %r13,%rdi
  4127a7:	e8 d4 9a 00 00       	callq  41c280 <caml_alloc_small>
  4127ac:	8d 55 ff             	lea    -0x1(%rbp),%edx
  4127af:	48 29 c3             	sub    %rax,%rbx
  4127b2:	48 89 de             	mov    %rbx,%rsi
  4127b5:	48 8d 7c d0 08       	lea    0x8(%rax,%rdx,8),%rdi
  4127ba:	48 89 c2             	mov    %rax,%rdx
  4127bd:	0f 1f 00             	nopl   (%rax)
  4127c0:	48 8b 0c 16          	mov    (%rsi,%rdx,1),%rcx
  4127c4:	48 83 c2 08          	add    $0x8,%rdx
  4127c8:	48 8d 4c 09 01       	lea    0x1(%rcx,%rcx,1),%rcx
  4127cd:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
  4127d1:	48 39 d7             	cmp    %rdx,%rdi
  4127d4:	75 ea                	jne    4127c0 <caml_sys_random_seed+0xc0>
  4127d6:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
  4127dd:	00 
  4127de:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  4127e5:	00 00 
  4127e7:	0f 85 9f 00 00 00    	jne    41288c <caml_sys_random_seed+0x18c>
  4127ed:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
  4127f4:	5b                   	pop    %rbx
  4127f5:	5d                   	pop    %rbp
  4127f6:	41 5c                	pop    %r12
  4127f8:	41 5d                	pop    %r13
  4127fa:	41 5e                	pop    %r14
  4127fc:	41 5f                	pop    %r15
  4127fe:	c3                   	retq   
  4127ff:	90                   	nop
  412800:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
  412805:	41 bd 04 00 00 00    	mov    $0x4,%r13d
  41280b:	bd 04 00 00 00       	mov    $0x4,%ebp
  412810:	ba 03 00 00 00       	mov    $0x3,%edx
  412815:	41 bf 02 00 00 00    	mov    $0x2,%r15d
  41281b:	41 be 01 00 00 00    	mov    $0x1,%r14d
  412821:	45 31 e4             	xor    %r12d,%r12d
  412824:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  412829:	31 f6                	xor    %esi,%esi
  41282b:	89 54 24 0c          	mov    %edx,0xc(%rsp)
  41282f:	4d 63 e4             	movslq %r12d,%r12
  412832:	4d 63 f6             	movslq %r14d,%r14
  412835:	4d 63 ff             	movslq %r15d,%r15
  412838:	e8 63 f2 fe ff       	callq  401aa0 <gettimeofday@plt>
  41283d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  412842:	4a 89 44 e4 20       	mov    %rax,0x20(%rsp,%r12,8)
  412847:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  41284c:	4a 89 44 f4 20       	mov    %rax,0x20(%rsp,%r14,8)
  412851:	e8 ba f1 fe ff       	callq  401a10 <getpid@plt>
  412856:	48 98                	cltq   
  412858:	4a 89 44 fc 20       	mov    %rax,0x20(%rsp,%r15,8)
  41285d:	e8 5e f5 fe ff       	callq  401dc0 <getppid@plt>
  412862:	48 63 54 24 0c       	movslq 0xc(%rsp),%rdx
  412867:	48 98                	cltq   
  412869:	48 89 44 d4 20       	mov    %rax,0x20(%rsp,%rdx,8)
  41286e:	e9 2f ff ff ff       	jmpq   4127a2 <caml_sys_random_seed+0xa2>
  412873:	41 8d 6c 24 04       	lea    0x4(%r12),%ebp
  412878:	45 8d 74 24 01       	lea    0x1(%r12),%r14d
  41287d:	45 8d 7c 24 02       	lea    0x2(%r12),%r15d
  412882:	41 8d 54 24 03       	lea    0x3(%r12),%edx
  412887:	4c 63 ed             	movslq %ebp,%r13
  41288a:	eb 98                	jmp    412824 <caml_sys_random_seed+0x124>
  41288c:	e8 df f1 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  412891:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  412896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41289d:	00 00 00 

00000000004128a0 <caml_sys_const_big_endian>:
  4128a0:	b8 01 00 00 00       	mov    $0x1,%eax
  4128a5:	c3                   	retq   
  4128a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4128ad:	00 00 00 

00000000004128b0 <caml_sys_const_word_size>:
  4128b0:	b8 81 00 00 00       	mov    $0x81,%eax
  4128b5:	c3                   	retq   
  4128b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4128bd:	00 00 00 

00000000004128c0 <caml_sys_const_int_size>:
  4128c0:	b8 7f 00 00 00       	mov    $0x7f,%eax
  4128c5:	c3                   	retq   
  4128c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4128cd:	00 00 00 

00000000004128d0 <caml_sys_const_max_wosize>:
  4128d0:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffff,%rax
  4128d7:	ff 7f 00 
  4128da:	c3                   	retq   
  4128db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004128e0 <caml_sys_const_ostype_unix>:
  4128e0:	b8 03 00 00 00       	mov    $0x3,%eax
  4128e5:	c3                   	retq   
  4128e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4128ed:	00 00 00 

00000000004128f0 <caml_sys_const_ostype_win32>:
  4128f0:	b8 01 00 00 00       	mov    $0x1,%eax
  4128f5:	c3                   	retq   
  4128f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4128fd:	00 00 00 

0000000000412900 <caml_sys_const_ostype_cygwin>:
  412900:	b8 01 00 00 00       	mov    $0x1,%eax
  412905:	c3                   	retq   
  412906:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41290d:	00 00 00 

0000000000412910 <caml_sys_const_backend_type>:
  412910:	b8 03 00 00 00       	mov    $0x3,%eax
  412915:	c3                   	retq   
  412916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41291d:	00 00 00 

0000000000412920 <caml_sys_get_config>:
  412920:	53                   	push   %rbx
  412921:	bf 48 e8 41 00       	mov    $0x41e848,%edi
  412926:	48 83 ec 60          	sub    $0x60,%rsp
  41292a:	48 8b 1d 17 a0 21 00 	mov    0x21a017(%rip),%rbx        # 62c948 <caml_local_roots>
  412931:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  412938:	00 00 
  41293a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  41293f:	31 c0                	xor    %eax,%eax
  412941:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  412946:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
  41294d:	00 
  41294e:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
  412955:	00 00 
  412957:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  41295c:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  412963:	00 00 
  412965:	48 89 05 dc 9f 21 00 	mov    %rax,0x219fdc(%rip)        # 62c948 <caml_local_roots>
  41296c:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  412971:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  412978:	00 00 
  41297a:	48 89 64 24 28       	mov    %rsp,0x28(%rsp)
  41297f:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  412984:	e8 07 9b 00 00       	callq  41c490 <caml_copy_string>
  412989:	31 f6                	xor    %esi,%esi
  41298b:	bf 03 00 00 00       	mov    $0x3,%edi
  412990:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  412995:	e8 e6 98 00 00       	callq  41c280 <caml_alloc_small>
  41299a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41299f:	48 89 04 24          	mov    %rax,(%rsp)
  4129a3:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  4129a8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4129af:	00 00 
  4129b1:	48 89 10             	mov    %rdx,(%rax)
  4129b4:	48 8b 04 24          	mov    (%rsp),%rax
  4129b8:	48 c7 40 08 81 00 00 	movq   $0x81,0x8(%rax)
  4129bf:	00 
  4129c0:	48 8b 04 24          	mov    (%rsp),%rax
  4129c4:	48 c7 40 10 01 00 00 	movq   $0x1,0x10(%rax)
  4129cb:	00 
  4129cc:	48 89 1d 75 9f 21 00 	mov    %rbx,0x219f75(%rip)        # 62c948 <caml_local_roots>
  4129d3:	48 8b 04 24          	mov    (%rsp),%rax
  4129d7:	75 06                	jne    4129df <caml_sys_get_config+0xbf>
  4129d9:	48 83 c4 60          	add    $0x60,%rsp
  4129dd:	5b                   	pop    %rbx
  4129de:	c3                   	retq   
  4129df:	e8 8c f0 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  4129e4:	66 90                	xchg   %ax,%ax
  4129e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4129ed:	00 00 00 

00000000004129f0 <caml_sys_read_directory>:
  4129f0:	41 54                	push   %r12
  4129f2:	55                   	push   %rbp
  4129f3:	53                   	push   %rbx
  4129f4:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  4129fb:	4c 8b 25 46 9f 21 00 	mov    0x219f46(%rip),%r12        # 62c948 <caml_local_roots>
  412a02:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  412a07:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  412a0c:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  412a13:	00 00 
  412a15:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  412a1c:	00 00 
  412a1e:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
  412a25:	00 
  412a26:	31 c9                	xor    %ecx,%ecx
  412a28:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
  412a2d:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
  412a32:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
  412a37:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
  412a3e:	00 00 
  412a40:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  412a47:	00 00 
  412a49:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
  412a4e:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
  412a53:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
  412a5a:	00 01 00 00 00 
  412a5f:	48 c7 44 24 78 01 00 	movq   $0x1,0x78(%rsp)
  412a66:	00 00 
  412a68:	48 89 15 d9 9e 21 00 	mov    %rdx,0x219ed9(%rip)        # 62c948 <caml_local_roots>
  412a6f:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  412a74:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
  412a7b:	00 
  412a7c:	e8 1f f1 ff ff       	callq  411ba0 <caml_sys_check_path>
  412a81:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  412a86:	be 32 00 00 00       	mov    $0x32,%esi
  412a8b:	e8 50 93 00 00       	callq  41bde0 <caml_ext_table_init>
  412a90:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412a95:	e8 b6 94 00 00       	callq  41bf50 <caml_strdup>
  412a9a:	48 89 c5             	mov    %rax,%rbp
  412a9d:	e8 5e 7f 00 00       	callq  41aa00 <caml_enter_blocking_section>
  412aa2:	48 8b 05 f7 25 22 00 	mov    0x2225f7(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  412aa9:	48 85 c0             	test   %rax,%rax
  412aac:	0f 84 7e 00 00 00    	je     412b30 <caml_sys_read_directory+0x140>
  412ab2:	31 c9                	xor    %ecx,%ecx
  412ab4:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  412ab9:	48 89 ee             	mov    %rbp,%rsi
  412abc:	bf 09 00 00 00       	mov    $0x9,%edi
  412ac1:	ff d0                	callq  *%rax
  412ac3:	89 c3                	mov    %eax,%ebx
  412ac5:	e8 86 7f 00 00       	callq  41aa50 <caml_leave_blocking_section>
  412aca:	48 89 ef             	mov    %rbp,%rdi
  412acd:	e8 1e 6d ff ff       	callq  4097f0 <caml_stat_free>
  412ad2:	83 fb ff             	cmp    $0xffffffff,%ebx
  412ad5:	74 6a                	je     412b41 <caml_sys_read_directory+0x151>
  412ad7:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  412adc:	31 f6                	xor    %esi,%esi
  412ade:	e8 2d 93 00 00       	callq  41be10 <caml_ext_table_add>
  412ae3:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  412ae8:	e8 c3 9b 00 00       	callq  41c6b0 <caml_copy_string_array>
  412aed:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  412af2:	be 01 00 00 00       	mov    $0x1,%esi
  412af7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  412afc:	e8 2f 94 00 00       	callq  41bf30 <caml_ext_table_free>
  412b01:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
  412b08:	00 
  412b09:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  412b10:	00 00 
  412b12:	4c 89 25 2f 9e 21 00 	mov    %r12,0x219e2f(%rip)        # 62c948 <caml_local_roots>
  412b19:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  412b1e:	75 3a                	jne    412b5a <caml_sys_read_directory+0x16a>
  412b20:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  412b27:	5b                   	pop    %rbx
  412b28:	5d                   	pop    %rbp
  412b29:	41 5c                	pop    %r12
  412b2b:	c3                   	retq   
  412b2c:	0f 1f 40 00          	nopl   0x0(%rax)
  412b30:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  412b35:	48 89 ef             	mov    %rbp,%rdi
  412b38:	e8 a3 65 00 00       	callq  4190e0 <caml_read_directory>
  412b3d:	89 c3                	mov    %eax,%ebx
  412b3f:	eb 84                	jmp    412ac5 <caml_sys_read_directory+0xd5>
  412b41:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  412b46:	be 01 00 00 00       	mov    $0x1,%esi
  412b4b:	e8 e0 93 00 00       	callq  41bf30 <caml_ext_table_free>
  412b50:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  412b55:	e8 26 ef ff ff       	callq  411a80 <caml_sys_error>
  412b5a:	e8 11 ef fe ff       	callq  401a70 <__stack_chk_fail@plt>
  412b5f:	90                   	nop

0000000000412b60 <caml_sys_isatty>:
  412b60:	48 83 ec 08          	sub    $0x8,%rsp
  412b64:	48 8b 47 08          	mov    0x8(%rdi),%rax
  412b68:	8b 38                	mov    (%rax),%edi
  412b6a:	e8 31 ee fe ff       	callq  4019a0 <isatty@plt>
  412b6f:	83 f8 01             	cmp    $0x1,%eax
  412b72:	48 19 c0             	sbb    %rax,%rax
  412b75:	48 83 c4 08          	add    $0x8,%rsp
  412b79:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  412b7d:	48 83 c0 03          	add    $0x3,%rax
  412b81:	c3                   	retq   
  412b82:	0f 1f 40 00          	nopl   0x0(%rax)
  412b86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  412b8d:	00 00 00 

0000000000412b90 <caml_load_plugin>:
  412b90:	55                   	push   %rbp
  412b91:	53                   	push   %rbx
  412b92:	31 d2                	xor    %edx,%edx
  412b94:	be 01 00 00 00       	mov    $0x1,%esi
  412b99:	48 89 fd             	mov    %rdi,%rbp
  412b9c:	48 83 ec 08          	sub    $0x8,%rsp
  412ba0:	e8 db 64 00 00       	callq  419080 <caml_dlopen>
  412ba5:	48 85 c0             	test   %rax,%rax
  412ba8:	74 2e                	je     412bd8 <caml_load_plugin+0x48>
  412baa:	be 4d e8 41 00       	mov    $0x41e84d,%esi
  412baf:	48 89 c7             	mov    %rax,%rdi
  412bb2:	48 89 c3             	mov    %rax,%rbx
  412bb5:	e8 f6 64 00 00       	callq  4190b0 <caml_dlsym>
  412bba:	48 85 c0             	test   %rax,%rax
  412bbd:	74 49                	je     412c08 <caml_load_plugin+0x78>
  412bbf:	48 89 2d 12 25 22 00 	mov    %rbp,0x222512(%rip)        # 6350d8 <cplugin_context+0x18>
  412bc6:	48 83 c4 08          	add    $0x8,%rsp
  412bca:	bf c0 50 63 00       	mov    $0x6350c0,%edi
  412bcf:	5b                   	pop    %rbx
  412bd0:	5d                   	pop    %rbp
  412bd1:	ff e0                	jmpq   *%rax
  412bd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  412bd8:	e8 f3 64 00 00       	callq  4190d0 <caml_dlerror>
  412bdd:	48 8b 3d 1c 9d 21 00 	mov    0x219d1c(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  412be4:	48 83 c4 08          	add    $0x8,%rsp
  412be8:	48 89 e9             	mov    %rbp,%rcx
  412beb:	5b                   	pop    %rbx
  412bec:	5d                   	pop    %rbp
  412bed:	49 89 c0             	mov    %rax,%r8
  412bf0:	ba 90 e8 41 00       	mov    $0x41e890,%edx
  412bf5:	be 01 00 00 00       	mov    $0x1,%esi
  412bfa:	31 c0                	xor    %eax,%eax
  412bfc:	e9 ff f1 fe ff       	jmpq   401e00 <__fprintf_chk@plt>
  412c01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  412c08:	48 83 c4 08          	add    $0x8,%rsp
  412c0c:	48 89 df             	mov    %rbx,%rdi
  412c0f:	5b                   	pop    %rbx
  412c10:	5d                   	pop    %rbp
  412c11:	e9 8a 64 00 00       	jmpq   4190a0 <caml_dlclose>
  412c16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  412c1d:	00 00 00 

0000000000412c20 <caml_cplugins_load>:
  412c20:	53                   	push   %rbx
  412c21:	e8 0a ed fe ff       	callq  401930 <getenv@plt>
  412c26:	48 85 c0             	test   %rax,%rax
  412c29:	74 47                	je     412c72 <caml_cplugins_load+0x52>
  412c2b:	0f b6 10             	movzbl (%rax),%edx
  412c2e:	48 89 c7             	mov    %rax,%rdi
  412c31:	84 d2                	test   %dl,%dl
  412c33:	74 3d                	je     412c72 <caml_cplugins_load+0x52>
  412c35:	48 8d 58 01          	lea    0x1(%rax),%rbx
  412c39:	eb 13                	jmp    412c4e <caml_cplugins_load+0x2e>
  412c3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  412c40:	0f b6 13             	movzbl (%rbx),%edx
  412c43:	48 89 d8             	mov    %rbx,%rax
  412c46:	48 83 c3 01          	add    $0x1,%rbx
  412c4a:	84 d2                	test   %dl,%dl
  412c4c:	74 1f                	je     412c6d <caml_cplugins_load+0x4d>
  412c4e:	80 fa 2c             	cmp    $0x2c,%dl
  412c51:	48 8d 4b ff          	lea    -0x1(%rbx),%rcx
  412c55:	75 e9                	jne    412c40 <caml_cplugins_load+0x20>
  412c57:	48 39 f9             	cmp    %rdi,%rcx
  412c5a:	77 1c                	ja     412c78 <caml_cplugins_load+0x58>
  412c5c:	0f b6 13             	movzbl (%rbx),%edx
  412c5f:	48 89 df             	mov    %rbx,%rdi
  412c62:	48 89 d8             	mov    %rbx,%rax
  412c65:	48 83 c3 01          	add    $0x1,%rbx
  412c69:	84 d2                	test   %dl,%dl
  412c6b:	75 e1                	jne    412c4e <caml_cplugins_load+0x2e>
  412c6d:	48 39 c7             	cmp    %rax,%rdi
  412c70:	72 16                	jb     412c88 <caml_cplugins_load+0x68>
  412c72:	5b                   	pop    %rbx
  412c73:	c3                   	retq   
  412c74:	0f 1f 40 00          	nopl   0x0(%rax)
  412c78:	c6 43 ff 00          	movb   $0x0,-0x1(%rbx)
  412c7c:	e8 0f ff ff ff       	callq  412b90 <caml_load_plugin>
  412c81:	eb d9                	jmp    412c5c <caml_cplugins_load+0x3c>
  412c83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  412c88:	5b                   	pop    %rbx
  412c89:	e9 02 ff ff ff       	jmpq   412b90 <caml_load_plugin>
  412c8e:	66 90                	xchg   %ax,%ax

0000000000412c90 <caml_cplugins_init>:
  412c90:	48 83 ec 08          	sub    $0x8,%rsp
  412c94:	48 89 3d 2d 24 22 00 	mov    %rdi,0x22242d(%rip)        # 6350c8 <cplugin_context+0x8>
  412c9b:	bf 66 e8 41 00       	mov    $0x41e866,%edi
  412ca0:	c7 05 16 24 22 00 00 	movl   $0x0,0x222416(%rip)        # 6350c0 <cplugin_context>
  412ca7:	00 00 00 
  412caa:	c7 05 10 24 22 00 ff 	movl   $0x1ff,0x222410(%rip)        # 6350c4 <cplugin_context+0x4>
  412cb1:	01 00 00 
  412cb4:	48 89 35 15 24 22 00 	mov    %rsi,0x222415(%rip)        # 6350d0 <cplugin_context+0x10>
  412cbb:	48 c7 05 1a 24 22 00 	movq   $0x41e85f,0x22241a(%rip)        # 6350e0 <cplugin_context+0x20>
  412cc2:	5f e8 41 00 
  412cc6:	e8 55 ff ff ff       	callq  412c20 <caml_cplugins_load>
  412ccb:	bf 74 e8 41 00       	mov    $0x41e874,%edi
  412cd0:	48 83 c4 08          	add    $0x8,%rsp
  412cd4:	e9 47 ff ff ff       	jmpq   412c20 <caml_cplugins_load>
  412cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000412ce0 <caml_sys_init>:
  412ce0:	55                   	push   %rbp
  412ce1:	53                   	push   %rbx
  412ce2:	48 89 fd             	mov    %rdi,%rbp
  412ce5:	48 89 f3             	mov    %rsi,%rbx
  412ce8:	48 83 ec 08          	sub    $0x8,%rsp
  412cec:	e8 9f ff ff ff       	callq  412c90 <caml_cplugins_init>
  412cf1:	48 89 2d 58 e7 22 00 	mov    %rbp,0x22e758(%rip)        # 641450 <caml_exe_name>
  412cf8:	48 89 1d 59 e7 22 00 	mov    %rbx,0x22e759(%rip)        # 641458 <caml_main_argv>
  412cff:	48 83 c4 08          	add    $0x8,%rsp
  412d03:	5b                   	pop    %rbx
  412d04:	5d                   	pop    %rbp
  412d05:	c3                   	retq   
  412d06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  412d0d:	00 00 00 

0000000000412d10 <test_and_compact>:
  412d10:	48 83 ec 18          	sub    $0x18,%rsp
  412d14:	48 8b 15 ed c6 22 00 	mov    0x22c6ed(%rip),%rdx        # 63f408 <caml_fl_cur_wsz>
  412d1b:	48 85 d2             	test   %rdx,%rdx
  412d1e:	0f 88 2c 01 00 00    	js     412e50 <test_and_compact+0x140>
  412d24:	66 0f ef c0          	pxor   %xmm0,%xmm0
  412d28:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
  412d2d:	48 8b 05 cc 23 22 00 	mov    0x2223cc(%rip),%rax        # 635100 <caml_stat_heap_wsz>
  412d34:	f2 0f 59 05 dc be 00 	mulsd  0xbedc(%rip),%xmm0        # 41ec18 <caml_absf_mask+0x1258>
  412d3b:	00 
  412d3c:	48 29 d0             	sub    %rdx,%rax
  412d3f:	0f 88 eb 00 00 00    	js     412e30 <test_and_compact+0x120>
  412d45:	66 0f ef c9          	pxor   %xmm1,%xmm1
  412d49:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  412d4e:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  412d52:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
  412d56:	0f 2e 05 af be 00 00 	ucomiss 0xbeaf(%rip),%xmm0        # 41ec0c <caml_absf_mask+0x124c>
  412d5d:	77 31                	ja     412d90 <test_and_compact+0x80>
  412d5f:	0f 2e 05 aa be 00 00 	ucomiss 0xbeaa(%rip),%xmm0        # 41ec10 <caml_absf_mask+0x1250>
  412d66:	72 78                	jb     412de0 <test_and_compact+0xd0>
  412d68:	0f 28 c8             	movaps %xmm0,%xmm1
  412d6b:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  412d72:	00 00 80 
  412d75:	f3 0f 5c 0d 93 be 00 	subss  0xbe93(%rip),%xmm1        # 41ec10 <caml_absf_mask+0x1250>
  412d7c:	00 
  412d7d:	f3 48 0f 2c d1       	cvttss2si %xmm1,%rdx
  412d82:	48 31 c2             	xor    %rax,%rdx
  412d85:	eb 16                	jmp    412d9d <test_and_compact+0x8d>
  412d87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  412d8e:	00 00 
  412d90:	ba 3f 42 0f 00       	mov    $0xf423f,%edx
  412d95:	f3 0f 10 05 6f be 00 	movss  0xbe6f(%rip),%xmm0        # 41ec0c <caml_absf_mask+0x124c>
  412d9c:	00 
  412d9d:	be b8 e8 41 00       	mov    $0x41e8b8,%esi
  412da2:	bf 00 02 00 00       	mov    $0x200,%edi
  412da7:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
  412dad:	e8 fe 8e 00 00       	callq  41bcb0 <caml_gc_message>
  412db2:	48 8b 05 a7 e6 22 00 	mov    0x22e6a7(%rip),%rax        # 641460 <caml_percent_max>
  412db9:	f3 0f 10 44 24 0c    	movss  0xc(%rsp),%xmm0
  412dbf:	48 85 c0             	test   %rax,%rax
  412dc2:	78 4c                	js     412e10 <test_and_compact+0x100>
  412dc4:	66 0f ef c9          	pxor   %xmm1,%xmm1
  412dc8:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
  412dcd:	0f 2e c1             	ucomiss %xmm1,%xmm0
  412dd0:	73 1e                	jae    412df0 <test_and_compact+0xe0>
  412dd2:	48 83 c4 18          	add    $0x18,%rsp
  412dd6:	c3                   	retq   
  412dd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  412dde:	00 00 
  412de0:	f3 48 0f 2c d0       	cvttss2si %xmm0,%rdx
  412de5:	eb b6                	jmp    412d9d <test_and_compact+0x8d>
  412de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  412dee:	00 00 
  412df0:	31 d2                	xor    %edx,%edx
  412df2:	be e8 e8 41 00       	mov    $0x41e8e8,%esi
  412df7:	bf 00 02 00 00       	mov    $0x200,%edi
  412dfc:	e8 af 8e 00 00       	callq  41bcb0 <caml_gc_message>
  412e01:	48 83 c4 18          	add    $0x18,%rsp
  412e05:	e9 e6 4e 00 00       	jmpq   417cf0 <caml_compact_heap>
  412e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  412e10:	48 89 c2             	mov    %rax,%rdx
  412e13:	66 0f ef c9          	pxor   %xmm1,%xmm1
  412e17:	48 d1 ea             	shr    %rdx
  412e1a:	83 e0 01             	and    $0x1,%eax
  412e1d:	48 09 c2             	or     %rax,%rdx
  412e20:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
  412e25:	f3 0f 58 c9          	addss  %xmm1,%xmm1
  412e29:	eb a2                	jmp    412dcd <test_and_compact+0xbd>
  412e2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  412e30:	48 89 c2             	mov    %rax,%rdx
  412e33:	66 0f ef c9          	pxor   %xmm1,%xmm1
  412e37:	48 d1 ea             	shr    %rdx
  412e3a:	83 e0 01             	and    $0x1,%eax
  412e3d:	48 09 c2             	or     %rax,%rdx
  412e40:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  412e45:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  412e49:	e9 00 ff ff ff       	jmpq   412d4e <test_and_compact+0x3e>
  412e4e:	66 90                	xchg   %ax,%ax
  412e50:	48 89 d0             	mov    %rdx,%rax
  412e53:	48 89 d1             	mov    %rdx,%rcx
  412e56:	66 0f ef c0          	pxor   %xmm0,%xmm0
  412e5a:	48 d1 e8             	shr    %rax
  412e5d:	83 e1 01             	and    $0x1,%ecx
  412e60:	48 09 c8             	or     %rcx,%rax
  412e63:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  412e68:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  412e6c:	e9 bc fe ff ff       	jmpq   412d2d <test_and_compact+0x1d>
  412e71:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  412e76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  412e7d:	00 00 00 

0000000000412e80 <caml_gc_stat>:
  412e80:	41 57                	push   %r15
  412e82:	41 56                	push   %r14
  412e84:	41 55                	push   %r13
  412e86:	41 54                	push   %r12
  412e88:	55                   	push   %rbp
  412e89:	53                   	push   %rbx
  412e8a:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  412e91:	48 8b 1d 68 e5 22 00 	mov    0x22e568(%rip),%rbx        # 641400 <caml_heap_start>
  412e98:	4c 8b 05 a9 9a 21 00 	mov    0x219aa9(%rip),%r8        # 62c948 <caml_local_roots>
  412e9f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  412ea6:	00 00 
  412ea8:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  412eaf:	00 
  412eb0:	31 c0                	xor    %eax,%eax
  412eb2:	48 85 db             	test   %rbx,%rbx
  412eb5:	0f 84 ee 03 00 00    	je     4132a9 <caml_gc_stat+0x429>
  412ebb:	44 8b 35 46 e5 22 00 	mov    0x22e546(%rip),%r14d        # 641408 <caml_gc_phase>
  412ec2:	4c 8b 3d 47 e5 22 00 	mov    0x22e547(%rip),%r15        # 641410 <caml_gc_sweep_hp>
  412ec9:	45 31 db             	xor    %r11d,%r11d
  412ecc:	31 c9                	xor    %ecx,%ecx
  412ece:	31 ed                	xor    %ebp,%ebp
  412ed0:	45 31 e4             	xor    %r12d,%r12d
  412ed3:	45 31 c9             	xor    %r9d,%r9d
  412ed6:	45 31 d2             	xor    %r10d,%r10d
  412ed9:	45 31 ed             	xor    %r13d,%r13d
  412edc:	0f 1f 40 00          	nopl   0x0(%rax)
  412ee0:	48 89 de             	mov    %rbx,%rsi
  412ee3:	48 03 73 f0          	add    -0x10(%rbx),%rsi
  412ee7:	49 83 c5 01          	add    $0x1,%r13
  412eeb:	48 89 da             	mov    %rbx,%rdx
  412eee:	48 89 cf             	mov    %rcx,%rdi
  412ef1:	48 39 de             	cmp    %rbx,%rsi
  412ef4:	77 38                	ja     412f2e <caml_gc_stat+0xae>
  412ef6:	eb 78                	jmp    412f70 <caml_gc_stat+0xf0>
  412ef8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  412eff:	00 
  412f00:	48 81 ff 00 02 00 00 	cmp    $0x200,%rdi
  412f07:	0f 84 2b 03 00 00    	je     413238 <caml_gc_stat+0x3b8>
  412f0d:	48 81 ff 00 03 00 00 	cmp    $0x300,%rdi
  412f14:	0f 84 fe 02 00 00    	je     413218 <caml_gc_stat+0x398>
  412f1a:	48 c1 e8 0a          	shr    $0xa,%rax
  412f1e:	48 89 cf             	mov    %rcx,%rdi
  412f21:	48 83 c0 01          	add    $0x1,%rax
  412f25:	48 8d 14 c2          	lea    (%rdx,%rax,8),%rdx
  412f29:	48 39 d6             	cmp    %rdx,%rsi
  412f2c:	76 42                	jbe    412f70 <caml_gc_stat+0xf0>
  412f2e:	48 8b 02             	mov    (%rdx),%rax
  412f31:	48 89 c7             	mov    %rax,%rdi
  412f34:	81 e7 00 03 00 00    	and    $0x300,%edi
  412f3a:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
  412f41:	0f 84 d1 02 00 00    	je     413218 <caml_gc_stat+0x398>
  412f47:	77 b7                	ja     412f00 <caml_gc_stat+0x80>
  412f49:	48 85 ff             	test   %rdi,%rdi
  412f4c:	75 cc                	jne    412f1a <caml_gc_stat+0x9a>
  412f4e:	48 c1 e8 0a          	shr    $0xa,%rax
  412f52:	48 85 c0             	test   %rax,%rax
  412f55:	0f 85 05 03 00 00    	jne    413260 <caml_gc_stat+0x3e0>
  412f5b:	b8 01 00 00 00       	mov    $0x1,%eax
  412f60:	49 83 c3 01          	add    $0x1,%r11
  412f64:	48 89 cf             	mov    %rcx,%rdi
  412f67:	48 8d 14 c2          	lea    (%rdx,%rax,8),%rdx
  412f6b:	48 39 d6             	cmp    %rdx,%rsi
  412f6e:	77 be                	ja     412f2e <caml_gc_stat+0xae>
  412f70:	48 8b 5b f8          	mov    -0x8(%rbx),%rbx
  412f74:	48 85 db             	test   %rbx,%rbx
  412f77:	0f 85 63 ff ff ff    	jne    412ee0 <caml_gc_stat+0x60>
  412f7d:	4b 8d 44 12 01       	lea    0x1(%r10,%r10,1),%rax
  412f82:	4f 8d 7c 2d 01       	lea    0x1(%r13,%r13,1),%r15
  412f87:	48 89 04 24          	mov    %rax,(%rsp)
  412f8b:	4b 8d 44 09 01       	lea    0x1(%r9,%r9,1),%rax
  412f90:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  412f95:	4b 8d 44 24 01       	lea    0x1(%r12,%r12,1),%rax
  412f9a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  412f9f:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
  412fa4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  412fa9:	48 8d 44 3f 01       	lea    0x1(%rdi,%rdi,1),%rax
  412fae:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  412fb3:	4b 8d 44 1b 01       	lea    0x1(%r11,%r11,1),%rax
  412fb8:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  412fbd:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  412fc2:	66 0f ef c0          	pxor   %xmm0,%xmm0
  412fc6:	48 8b 15 13 e4 22 00 	mov    0x22e413(%rip),%rdx        # 6413e0 <caml_allocated_words>
  412fcd:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
  412fd4:	00 00 
  412fd6:	48 89 05 6b 99 21 00 	mov    %rax,0x21996b(%rip)        # 62c948 <caml_local_roots>
  412fdd:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
  412fe2:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
  412fe7:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  412fee:	00 00 
  412ff0:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  412ff7:	00 00 
  412ff9:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  412ffe:	48 8b 05 ab 9e 21 00 	mov    0x219eab(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  413005:	48 2b 05 9c 9e 21 00 	sub    0x219e9c(%rip),%rax        # 62cea8 <caml_young_ptr>
  41300c:	f2 0f 10 15 0c 21 22 	movsd  0x22210c(%rip),%xmm2        # 635120 <caml_stat_promoted_words>
  413013:	00 
  413014:	48 c1 f8 03          	sar    $0x3,%rax
  413018:	48 85 d2             	test   %rdx,%rdx
  41301b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  413020:	f2 0f 58 05 00 21 22 	addsd  0x222100(%rip),%xmm0        # 635128 <caml_stat_minor_words>
  413027:	00 
  413028:	0f 88 5d 02 00 00    	js     41328b <caml_gc_stat+0x40b>
  41302e:	66 0f ef c9          	pxor   %xmm1,%xmm1
  413032:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  413037:	f2 0f 58 0d d9 20 22 	addsd  0x2220d9(%rip),%xmm1        # 635118 <caml_stat_major_words>
  41303e:	00 
  41303f:	bf 10 00 00 00       	mov    $0x10,%edi
  413044:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
  413049:	f2 0f 11 54 24 48    	movsd  %xmm2,0x48(%rsp)
  41304f:	48 8b 1d a2 20 22 00 	mov    0x2220a2(%rip),%rbx        # 6350f8 <caml_stat_top_heap_wsz>
  413056:	4c 8b 35 b3 20 22 00 	mov    0x2220b3(%rip),%r14        # 635110 <caml_stat_minor_collections>
  41305d:	f2 0f 11 44 24 40    	movsd  %xmm0,0x40(%rsp)
  413063:	4c 8b 2d 9e 20 22 00 	mov    0x22209e(%rip),%r13        # 635108 <caml_stat_major_collections>
  41306a:	4c 8b 25 8f 20 22 00 	mov    0x22208f(%rip),%r12        # 635100 <caml_stat_heap_wsz>
  413071:	48 8b 2d 78 20 22 00 	mov    0x222078(%rip),%rbp        # 6350f0 <caml_stat_compactions>
  413078:	f2 0f 11 4c 24 30    	movsd  %xmm1,0x30(%rsp)
  41307e:	e8 1d 93 00 00       	callq  41c3a0 <caml_alloc_tuple>
  413083:	f2 0f 10 44 24 40    	movsd  0x40(%rsp),%xmm0
  413089:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  41308e:	e8 6d 85 ff ff       	callq  40b600 <caml_copy_double>
  413093:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
  413098:	48 89 c6             	mov    %rax,%rsi
  41309b:	e8 70 66 ff ff       	callq  409710 <caml_modify>
  4130a0:	f2 0f 10 54 24 48    	movsd  0x48(%rsp),%xmm2
  4130a6:	66 0f 28 c2          	movapd %xmm2,%xmm0
  4130aa:	e8 51 85 ff ff       	callq  40b600 <caml_copy_double>
  4130af:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  4130b4:	48 89 c6             	mov    %rax,%rsi
  4130b7:	48 8d 79 08          	lea    0x8(%rcx),%rdi
  4130bb:	e8 50 66 ff ff       	callq  409710 <caml_modify>
  4130c0:	f2 0f 10 4c 24 30    	movsd  0x30(%rsp),%xmm1
  4130c6:	66 0f 28 c1          	movapd %xmm1,%xmm0
  4130ca:	e8 31 85 ff ff       	callq  40b600 <caml_copy_double>
  4130cf:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  4130d4:	48 89 c6             	mov    %rax,%rsi
  4130d7:	48 8d 79 10          	lea    0x10(%rcx),%rdi
  4130db:	e8 30 66 ff ff       	callq  409710 <caml_modify>
  4130e0:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  4130e5:	4b 8d 74 36 01       	lea    0x1(%r14,%r14,1),%rsi
  4130ea:	48 8d 78 18          	lea    0x18(%rax),%rdi
  4130ee:	e8 1d 66 ff ff       	callq  409710 <caml_modify>
  4130f3:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  4130f8:	4b 8d 74 2d 01       	lea    0x1(%r13,%r13,1),%rsi
  4130fd:	48 8d 78 20          	lea    0x20(%rax),%rdi
  413101:	e8 0a 66 ff ff       	callq  409710 <caml_modify>
  413106:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  41310b:	4b 8d 74 24 01       	lea    0x1(%r12,%r12,1),%rsi
  413110:	48 8d 78 28          	lea    0x28(%rax),%rdi
  413114:	e8 f7 65 ff ff       	callq  409710 <caml_modify>
  413119:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  41311e:	4c 89 fe             	mov    %r15,%rsi
  413121:	48 8d 78 30          	lea    0x30(%rax),%rdi
  413125:	e8 e6 65 ff ff       	callq  409710 <caml_modify>
  41312a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  41312f:	48 8b 34 24          	mov    (%rsp),%rsi
  413133:	48 8d 78 38          	lea    0x38(%rax),%rdi
  413137:	e8 d4 65 ff ff       	callq  409710 <caml_modify>
  41313c:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  413141:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  413146:	48 8d 78 40          	lea    0x40(%rax),%rdi
  41314a:	e8 c1 65 ff ff       	callq  409710 <caml_modify>
  41314f:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  413154:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  413159:	48 8d 78 48          	lea    0x48(%rax),%rdi
  41315d:	e8 ae 65 ff ff       	callq  409710 <caml_modify>
  413162:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  413167:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  41316c:	48 8d 78 50          	lea    0x50(%rax),%rdi
  413170:	e8 9b 65 ff ff       	callq  409710 <caml_modify>
  413175:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  41317a:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  41317f:	48 8d 78 58          	lea    0x58(%rax),%rdi
  413183:	e8 88 65 ff ff       	callq  409710 <caml_modify>
  413188:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  41318d:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  413192:	48 8d 78 60          	lea    0x60(%rax),%rdi
  413196:	e8 75 65 ff ff       	callq  409710 <caml_modify>
  41319b:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  4131a0:	48 8d 74 2d 01       	lea    0x1(%rbp,%rbp,1),%rsi
  4131a5:	48 8d 78 68          	lea    0x68(%rax),%rdi
  4131a9:	e8 62 65 ff ff       	callq  409710 <caml_modify>
  4131ae:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  4131b3:	48 8d 74 1b 01       	lea    0x1(%rbx,%rbx,1),%rsi
  4131b8:	48 8d 78 70          	lea    0x70(%rax),%rdi
  4131bc:	e8 4f 65 ff ff       	callq  409710 <caml_modify>
  4131c1:	e8 fa 2d ff ff       	callq  405fc0 <caml_stack_usage>
  4131c6:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  4131cb:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  4131d0:	48 8d 78 78          	lea    0x78(%rax),%rdi
  4131d4:	e8 37 65 ff ff       	callq  409710 <caml_modify>
  4131d9:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
  4131de:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  4131e3:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
  4131ea:	00 
  4131eb:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  4131f2:	00 00 
  4131f4:	4c 89 05 4d 97 21 00 	mov    %r8,0x21974d(%rip)        # 62c948 <caml_local_roots>
  4131fb:	0f 85 e8 00 00 00    	jne    4132e9 <caml_gc_stat+0x469>
  413201:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
  413208:	5b                   	pop    %rbx
  413209:	5d                   	pop    %rbp
  41320a:	41 5c                	pop    %r12
  41320c:	41 5d                	pop    %r13
  41320e:	41 5e                	pop    %r14
  413210:	41 5f                	pop    %r15
  413212:	c3                   	retq   
  413213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  413218:	48 c1 e8 0a          	shr    $0xa,%rax
  41321c:	49 83 c1 01          	add    $0x1,%r9
  413220:	48 89 cf             	mov    %rcx,%rdi
  413223:	4e 8d 54 10 01       	lea    0x1(%rax,%r10,1),%r10
  413228:	48 83 c0 01          	add    $0x1,%rax
  41322c:	e9 f4 fc ff ff       	jmpq   412f25 <caml_gc_stat+0xa5>
  413231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  413238:	48 83 c5 01          	add    $0x1,%rbp
  41323c:	48 c1 e8 0a          	shr    $0xa,%rax
  413240:	4e 8d 64 20 01       	lea    0x1(%rax,%r12,1),%r12
  413245:	48 83 c0 01          	add    $0x1,%rax
  413249:	48 89 cf             	mov    %rcx,%rdi
  41324c:	48 39 c8             	cmp    %rcx,%rax
  41324f:	0f 86 d0 fc ff ff    	jbe    412f25 <caml_gc_stat+0xa5>
  413255:	48 89 c1             	mov    %rax,%rcx
  413258:	48 89 c7             	mov    %rax,%rdi
  41325b:	e9 c5 fc ff ff       	jmpq   412f25 <caml_gc_stat+0xa5>
  413260:	41 83 fe 02          	cmp    $0x2,%r14d
  413264:	74 1a                	je     413280 <caml_gc_stat+0x400>
  413266:	4e 8d 54 10 01       	lea    0x1(%rax,%r10,1),%r10
  41326b:	49 83 c1 01          	add    $0x1,%r9
  41326f:	48 83 c0 01          	add    $0x1,%rax
  413273:	48 89 cf             	mov    %rcx,%rdi
  413276:	e9 aa fc ff ff       	jmpq   412f25 <caml_gc_stat+0xa5>
  41327b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  413280:	49 39 d7             	cmp    %rdx,%r15
  413283:	77 e1                	ja     413266 <caml_gc_stat+0x3e6>
  413285:	48 83 c5 01          	add    $0x1,%rbp
  413289:	eb b5                	jmp    413240 <caml_gc_stat+0x3c0>
  41328b:	48 89 d0             	mov    %rdx,%rax
  41328e:	66 0f ef c9          	pxor   %xmm1,%xmm1
  413292:	48 d1 e8             	shr    %rax
  413295:	83 e2 01             	and    $0x1,%edx
  413298:	48 09 d0             	or     %rdx,%rax
  41329b:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  4132a0:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  4132a4:	e9 8e fd ff ff       	jmpq   413037 <caml_gc_stat+0x1b7>
  4132a9:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  4132b0:	00 00 
  4132b2:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  4132b9:	00 00 
  4132bb:	41 bf 01 00 00 00    	mov    $0x1,%r15d
  4132c1:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  4132c8:	00 00 
  4132ca:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
  4132d1:	00 00 
  4132d3:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
  4132da:	00 00 
  4132dc:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
  4132e3:	00 
  4132e4:	e9 d4 fc ff ff       	jmpq   412fbd <caml_gc_stat+0x13d>
  4132e9:	e8 82 e7 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  4132ee:	66 90                	xchg   %ax,%ax

00000000004132f0 <caml_gc_quick_stat>:
  4132f0:	41 57                	push   %r15
  4132f2:	41 56                	push   %r14
  4132f4:	41 55                	push   %r13
  4132f6:	41 54                	push   %r12
  4132f8:	55                   	push   %rbp
  4132f9:	53                   	push   %rbx
  4132fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4132fe:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  413305:	48 8b 1d 3c 96 21 00 	mov    0x21963c(%rip),%rbx        # 62c948 <caml_local_roots>
  41330c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  413313:	00 00 
  413315:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  41331a:	31 c0                	xor    %eax,%eax
  41331c:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  413321:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  413328:	00 00 
  41332a:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  413331:	00 00 
  413333:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
  413338:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
  41333f:	00 00 
  413341:	48 89 05 00 96 21 00 	mov    %rax,0x219600(%rip)        # 62c948 <caml_local_roots>
  413348:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
  41334d:	f2 0f 10 15 cb 1d 22 	movsd  0x221dcb(%rip),%xmm2        # 635120 <caml_stat_promoted_words>
  413354:	00 
  413355:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  41335a:	48 8b 05 4f 9b 21 00 	mov    0x219b4f(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  413361:	48 2b 05 40 9b 21 00 	sub    0x219b40(%rip),%rax        # 62cea8 <caml_young_ptr>
  413368:	48 c1 f8 03          	sar    $0x3,%rax
  41336c:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  413371:	48 8b 05 68 e0 22 00 	mov    0x22e068(%rip),%rax        # 6413e0 <caml_allocated_words>
  413378:	48 85 c0             	test   %rax,%rax
  41337b:	f2 0f 58 05 a5 1d 22 	addsd  0x221da5(%rip),%xmm0        # 635128 <caml_stat_minor_words>
  413382:	00 
  413383:	0f 88 e7 01 00 00    	js     413570 <caml_gc_quick_stat+0x280>
  413389:	66 0f ef c9          	pxor   %xmm1,%xmm1
  41338d:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  413392:	f2 0f 58 0d 7e 1d 22 	addsd  0x221d7e(%rip),%xmm1        # 635118 <caml_stat_major_words>
  413399:	00 
  41339a:	48 8b 15 6f 1d 22 00 	mov    0x221d6f(%rip),%rdx        # 635110 <caml_stat_minor_collections>
  4133a1:	bf 10 00 00 00       	mov    $0x10,%edi
  4133a6:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
  4133ac:	4c 8b 3d 55 1d 22 00 	mov    0x221d55(%rip),%r15        # 635108 <caml_stat_major_collections>
  4133b3:	4c 8b 35 46 1d 22 00 	mov    0x221d46(%rip),%r14        # 635100 <caml_stat_heap_wsz>
  4133ba:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
  4133c0:	48 8b 2d 31 1d 22 00 	mov    0x221d31(%rip),%rbp        # 6350f8 <caml_stat_top_heap_wsz>
  4133c7:	4c 8b 25 22 1d 22 00 	mov    0x221d22(%rip),%r12        # 6350f0 <caml_stat_compactions>
  4133ce:	48 89 14 24          	mov    %rdx,(%rsp)
  4133d2:	4c 8b 2d 0f 1d 22 00 	mov    0x221d0f(%rip),%r13        # 6350e8 <caml_stat_heap_chunks>
  4133d9:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
  4133df:	e8 bc 8f 00 00       	callq  41c3a0 <caml_alloc_tuple>
  4133e4:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
  4133ea:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4133ef:	e8 0c 82 ff ff       	callq  40b600 <caml_copy_double>
  4133f4:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4133f9:	48 89 c6             	mov    %rax,%rsi
  4133fc:	e8 0f 63 ff ff       	callq  409710 <caml_modify>
  413401:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
  413407:	66 0f 28 c2          	movapd %xmm2,%xmm0
  41340b:	e8 f0 81 ff ff       	callq  40b600 <caml_copy_double>
  413410:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  413415:	48 89 c6             	mov    %rax,%rsi
  413418:	48 8d 79 08          	lea    0x8(%rcx),%rdi
  41341c:	e8 ef 62 ff ff       	callq  409710 <caml_modify>
  413421:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
  413427:	66 0f 28 c1          	movapd %xmm1,%xmm0
  41342b:	e8 d0 81 ff ff       	callq  40b600 <caml_copy_double>
  413430:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  413435:	48 89 c6             	mov    %rax,%rsi
  413438:	48 8d 79 10          	lea    0x10(%rcx),%rdi
  41343c:	e8 cf 62 ff ff       	callq  409710 <caml_modify>
  413441:	48 8b 14 24          	mov    (%rsp),%rdx
  413445:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  41344a:	48 8d 74 12 01       	lea    0x1(%rdx,%rdx,1),%rsi
  41344f:	48 8d 78 18          	lea    0x18(%rax),%rdi
  413453:	e8 b8 62 ff ff       	callq  409710 <caml_modify>
  413458:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  41345d:	4b 8d 74 3f 01       	lea    0x1(%r15,%r15,1),%rsi
  413462:	48 8d 78 20          	lea    0x20(%rax),%rdi
  413466:	e8 a5 62 ff ff       	callq  409710 <caml_modify>
  41346b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  413470:	4b 8d 74 36 01       	lea    0x1(%r14,%r14,1),%rsi
  413475:	48 8d 78 28          	lea    0x28(%rax),%rdi
  413479:	e8 92 62 ff ff       	callq  409710 <caml_modify>
  41347e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  413483:	4b 8d 74 2d 01       	lea    0x1(%r13,%r13,1),%rsi
  413488:	48 8d 78 30          	lea    0x30(%rax),%rdi
  41348c:	e8 7f 62 ff ff       	callq  409710 <caml_modify>
  413491:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  413496:	be 01 00 00 00       	mov    $0x1,%esi
  41349b:	48 8d 78 38          	lea    0x38(%rax),%rdi
  41349f:	e8 6c 62 ff ff       	callq  409710 <caml_modify>
  4134a4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4134a9:	be 01 00 00 00       	mov    $0x1,%esi
  4134ae:	48 8d 78 40          	lea    0x40(%rax),%rdi
  4134b2:	e8 59 62 ff ff       	callq  409710 <caml_modify>
  4134b7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4134bc:	be 01 00 00 00       	mov    $0x1,%esi
  4134c1:	48 8d 78 48          	lea    0x48(%rax),%rdi
  4134c5:	e8 46 62 ff ff       	callq  409710 <caml_modify>
  4134ca:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4134cf:	be 01 00 00 00       	mov    $0x1,%esi
  4134d4:	48 8d 78 50          	lea    0x50(%rax),%rdi
  4134d8:	e8 33 62 ff ff       	callq  409710 <caml_modify>
  4134dd:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4134e2:	be 01 00 00 00       	mov    $0x1,%esi
  4134e7:	48 8d 78 58          	lea    0x58(%rax),%rdi
  4134eb:	e8 20 62 ff ff       	callq  409710 <caml_modify>
  4134f0:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4134f5:	be 01 00 00 00       	mov    $0x1,%esi
  4134fa:	48 8d 78 60          	lea    0x60(%rax),%rdi
  4134fe:	e8 0d 62 ff ff       	callq  409710 <caml_modify>
  413503:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  413508:	4b 8d 74 24 01       	lea    0x1(%r12,%r12,1),%rsi
  41350d:	48 8d 78 68          	lea    0x68(%rax),%rdi
  413511:	e8 fa 61 ff ff       	callq  409710 <caml_modify>
  413516:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  41351b:	48 8d 74 2d 01       	lea    0x1(%rbp,%rbp,1),%rsi
  413520:	48 8d 78 70          	lea    0x70(%rax),%rdi
  413524:	e8 e7 61 ff ff       	callq  409710 <caml_modify>
  413529:	e8 92 2a ff ff       	callq  405fc0 <caml_stack_usage>
  41352e:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  413533:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  413538:	48 8d 78 78          	lea    0x78(%rax),%rdi
  41353c:	e8 cf 61 ff ff       	callq  409710 <caml_modify>
  413541:	48 89 1d 00 94 21 00 	mov    %rbx,0x219400(%rip)        # 62c948 <caml_local_roots>
  413548:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  41354d:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
  413552:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  413559:	00 00 
  41355b:	75 31                	jne    41358e <caml_gc_quick_stat+0x29e>
  41355d:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  413564:	5b                   	pop    %rbx
  413565:	5d                   	pop    %rbp
  413566:	41 5c                	pop    %r12
  413568:	41 5d                	pop    %r13
  41356a:	41 5e                	pop    %r14
  41356c:	41 5f                	pop    %r15
  41356e:	c3                   	retq   
  41356f:	90                   	nop
  413570:	48 89 c2             	mov    %rax,%rdx
  413573:	66 0f ef c9          	pxor   %xmm1,%xmm1
  413577:	48 d1 ea             	shr    %rdx
  41357a:	83 e0 01             	and    $0x1,%eax
  41357d:	48 09 c2             	or     %rax,%rdx
  413580:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  413585:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  413589:	e9 04 fe ff ff       	jmpq   413392 <caml_gc_quick_stat+0xa2>
  41358e:	e8 dd e4 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  413593:	0f 1f 00             	nopl   (%rax)
  413596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41359d:	00 00 00 

00000000004135a0 <caml_gc_minor_words_unboxed>:
  4135a0:	48 8b 05 09 99 21 00 	mov    0x219909(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  4135a7:	48 2b 05 fa 98 21 00 	sub    0x2198fa(%rip),%rax        # 62cea8 <caml_young_ptr>
  4135ae:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4135b2:	48 c1 f8 03          	sar    $0x3,%rax
  4135b6:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4135bb:	f2 0f 58 05 65 1b 22 	addsd  0x221b65(%rip),%xmm0        # 635128 <caml_stat_minor_words>
  4135c2:	00 
  4135c3:	c3                   	retq   
  4135c4:	66 90                	xchg   %ax,%ax
  4135c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4135cd:	00 00 00 

00000000004135d0 <caml_gc_minor_words>:
  4135d0:	48 8b 05 d9 98 21 00 	mov    0x2198d9(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  4135d7:	48 2b 05 ca 98 21 00 	sub    0x2198ca(%rip),%rax        # 62cea8 <caml_young_ptr>
  4135de:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4135e2:	53                   	push   %rbx
  4135e3:	48 8b 1d 5e 93 21 00 	mov    0x21935e(%rip),%rbx        # 62c948 <caml_local_roots>
  4135ea:	48 c1 f8 03          	sar    $0x3,%rax
  4135ee:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  4135f3:	f2 0f 58 05 2d 1b 22 	addsd  0x221b2d(%rip),%xmm0        # 635128 <caml_stat_minor_words>
  4135fa:	00 
  4135fb:	e8 00 80 ff ff       	callq  40b600 <caml_copy_double>
  413600:	48 89 1d 41 93 21 00 	mov    %rbx,0x219341(%rip)        # 62c948 <caml_local_roots>
  413607:	5b                   	pop    %rbx
  413608:	c3                   	retq   
  413609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000413610 <caml_gc_counters>:
  413610:	53                   	push   %rbx
  413611:	66 0f ef c0          	pxor   %xmm0,%xmm0
  413615:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  413619:	48 8b 1d 28 93 21 00 	mov    0x219328(%rip),%rbx        # 62c948 <caml_local_roots>
  413620:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  413627:	00 00 
  413629:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  41362e:	31 c0                	xor    %eax,%eax
  413630:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  413635:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  41363c:	00 00 
  41363e:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  413645:	00 00 
  413647:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
  41364c:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
  413653:	00 00 
  413655:	48 89 05 ec 92 21 00 	mov    %rax,0x2192ec(%rip)        # 62c948 <caml_local_roots>
  41365c:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
  413661:	f2 0f 10 15 b7 1a 22 	movsd  0x221ab7(%rip),%xmm2        # 635120 <caml_stat_promoted_words>
  413668:	00 
  413669:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  41366e:	48 8b 05 3b 98 21 00 	mov    0x21983b(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  413675:	48 2b 05 2c 98 21 00 	sub    0x21982c(%rip),%rax        # 62cea8 <caml_young_ptr>
  41367c:	48 c1 f8 03          	sar    $0x3,%rax
  413680:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  413685:	48 8b 05 54 dd 22 00 	mov    0x22dd54(%rip),%rax        # 6413e0 <caml_allocated_words>
  41368c:	48 85 c0             	test   %rax,%rax
  41368f:	f2 0f 58 05 91 1a 22 	addsd  0x221a91(%rip),%xmm0        # 635128 <caml_stat_minor_words>
  413696:	00 
  413697:	0f 88 b3 00 00 00    	js     413750 <caml_gc_counters+0x140>
  41369d:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4136a1:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  4136a6:	f2 0f 58 0d 6a 1a 22 	addsd  0x221a6a(%rip),%xmm1        # 635118 <caml_stat_major_words>
  4136ad:	00 
  4136ae:	bf 03 00 00 00       	mov    $0x3,%edi
  4136b3:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
  4136b9:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
  4136bf:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
  4136c5:	e8 d6 8c 00 00       	callq  41c3a0 <caml_alloc_tuple>
  4136ca:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
  4136d0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4136d5:	e8 26 7f ff ff       	callq  40b600 <caml_copy_double>
  4136da:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4136df:	48 89 c6             	mov    %rax,%rsi
  4136e2:	e8 29 60 ff ff       	callq  409710 <caml_modify>
  4136e7:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
  4136ed:	66 0f 28 c2          	movapd %xmm2,%xmm0
  4136f1:	e8 0a 7f ff ff       	callq  40b600 <caml_copy_double>
  4136f6:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4136fb:	48 89 c6             	mov    %rax,%rsi
  4136fe:	48 8d 79 08          	lea    0x8(%rcx),%rdi
  413702:	e8 09 60 ff ff       	callq  409710 <caml_modify>
  413707:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
  41370d:	66 0f 28 c1          	movapd %xmm1,%xmm0
  413711:	e8 ea 7e ff ff       	callq  40b600 <caml_copy_double>
  413716:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41371b:	48 89 c6             	mov    %rax,%rsi
  41371e:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
  413722:	e8 e9 5f ff ff       	callq  409710 <caml_modify>
  413727:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
  41372c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  413733:	00 00 
  413735:	48 89 1d 0c 92 21 00 	mov    %rbx,0x21920c(%rip)        # 62c948 <caml_local_roots>
  41373c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  413741:	75 2b                	jne    41376e <caml_gc_counters+0x15e>
  413743:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
  413747:	5b                   	pop    %rbx
  413748:	c3                   	retq   
  413749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  413750:	48 89 c2             	mov    %rax,%rdx
  413753:	66 0f ef c9          	pxor   %xmm1,%xmm1
  413757:	48 d1 ea             	shr    %rdx
  41375a:	83 e0 01             	and    $0x1,%eax
  41375d:	48 09 c2             	or     %rax,%rdx
  413760:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  413765:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  413769:	e9 38 ff ff ff       	jmpq   4136a6 <caml_gc_counters+0x96>
  41376e:	e8 fd e2 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  413773:	0f 1f 00             	nopl   (%rax)
  413776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41377d:	00 00 00 

0000000000413780 <caml_gc_huge_fallback_count>:
  413780:	48 63 05 81 97 21 00 	movslq 0x219781(%rip),%rax        # 62cf08 <caml_huge_fallback_count>
  413787:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  41378c:	c3                   	retq   
  41378d:	0f 1f 00             	nopl   (%rax)

0000000000413790 <caml_gc_get>:
  413790:	53                   	push   %rbx
  413791:	bf 08 00 00 00       	mov    $0x8,%edi
  413796:	48 83 ec 60          	sub    $0x60,%rsp
  41379a:	48 8b 1d a7 91 21 00 	mov    0x2191a7(%rip),%rbx        # 62c948 <caml_local_roots>
  4137a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4137a8:	00 00 
  4137aa:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  4137af:	31 c0                	xor    %eax,%eax
  4137b1:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  4137b6:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
  4137bd:	00 00 
  4137bf:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  4137c6:	00 00 
  4137c8:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  4137cd:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  4137d4:	00 00 
  4137d6:	48 89 05 6b 91 21 00 	mov    %rax,0x21916b(%rip)        # 62c948 <caml_local_roots>
  4137dd:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  4137e2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4137e7:	e8 b4 8b 00 00       	callq  41c3a0 <caml_alloc_tuple>
  4137ec:	48 8b 15 3d dc 22 00 	mov    0x22dc3d(%rip),%rdx        # 641430 <caml_minor_heap_wsz>
  4137f3:	48 89 c7             	mov    %rax,%rdi
  4137f6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4137fb:	48 8d 74 12 01       	lea    0x1(%rdx,%rdx,1),%rsi
  413800:	e8 0b 5f ff ff       	callq  409710 <caml_modify>
  413805:	48 8b 05 e4 db 22 00 	mov    0x22dbe4(%rip),%rax        # 6413f0 <caml_major_heap_increment>
  41380c:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  413811:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  413816:	48 8d 78 08          	lea    0x8(%rax),%rdi
  41381a:	e8 f1 5e ff ff       	callq  409710 <caml_modify>
  41381f:	48 8b 05 fa db 22 00 	mov    0x22dbfa(%rip),%rax        # 641420 <caml_percent_free>
  413826:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  41382b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  413830:	48 8d 78 10          	lea    0x10(%rax),%rdi
  413834:	e8 d7 5e ff ff       	callq  409710 <caml_modify>
  413839:	48 8b 05 50 db 22 00 	mov    0x22db50(%rip),%rax        # 641390 <caml_verb_gc>
  413840:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  413845:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41384a:	48 8d 78 18          	lea    0x18(%rax),%rdi
  41384e:	e8 bd 5e ff ff       	callq  409710 <caml_modify>
  413853:	48 8b 05 06 dc 22 00 	mov    0x22dc06(%rip),%rax        # 641460 <caml_percent_max>
  41385a:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  41385f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  413864:	48 8d 78 20          	lea    0x20(%rax),%rdi
  413868:	e8 a3 5e ff ff       	callq  409710 <caml_modify>
  41386d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  413872:	be 01 00 00 00       	mov    $0x1,%esi
  413877:	48 8d 78 28          	lea    0x28(%rax),%rdi
  41387b:	e8 90 5e ff ff       	callq  409710 <caml_modify>
  413880:	48 8b 05 79 bb 22 00 	mov    0x22bb79(%rip),%rax        # 63f400 <caml_allocation_policy>
  413887:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  41388c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  413891:	48 8d 78 30          	lea    0x30(%rax),%rdi
  413895:	e8 76 5e ff ff       	callq  409710 <caml_modify>
  41389a:	48 63 05 cf 8d 21 00 	movslq 0x218dcf(%rip),%rax        # 62c670 <caml_major_window>
  4138a1:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  4138a6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4138ab:	48 8d 78 38          	lea    0x38(%rax),%rdi
  4138af:	e8 5c 5e ff ff       	callq  409710 <caml_modify>
  4138b4:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  4138b9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4138c0:	00 00 
  4138c2:	48 89 1d 7f 90 21 00 	mov    %rbx,0x21907f(%rip)        # 62c948 <caml_local_roots>
  4138c9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4138ce:	75 06                	jne    4138d6 <caml_gc_get+0x146>
  4138d0:	48 83 c4 60          	add    $0x60,%rsp
  4138d4:	5b                   	pop    %rbx
  4138d5:	c3                   	retq   
  4138d6:	e8 95 e1 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  4138db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004138e0 <caml_gc_set>:
  4138e0:	55                   	push   %rbp
  4138e1:	53                   	push   %rbx
  4138e2:	48 89 fb             	mov    %rdi,%rbx
  4138e5:	48 83 ec 08          	sub    $0x8,%rsp
  4138e9:	48 8b 47 18          	mov    0x18(%rdi),%rax
  4138ed:	48 d1 f8             	sar    %rax
  4138f0:	48 89 05 99 da 22 00 	mov    %rax,0x22da99(%rip)        # 641390 <caml_verb_gc>
  4138f7:	48 8b 57 10          	mov    0x10(%rdi),%rdx
  4138fb:	b8 01 00 00 00       	mov    $0x1,%eax
  413900:	48 d1 fa             	sar    %rdx
  413903:	48 0f 44 d0          	cmove  %rax,%rdx
  413907:	48 39 15 12 db 22 00 	cmp    %rdx,0x22db12(%rip)        # 641420 <caml_percent_free>
  41390e:	74 16                	je     413926 <caml_gc_set+0x46>
  413910:	be 41 eb 41 00       	mov    $0x41eb41,%esi
  413915:	bf 20 00 00 00       	mov    $0x20,%edi
  41391a:	48 89 15 ff da 22 00 	mov    %rdx,0x22daff(%rip)        # 641420 <caml_percent_free>
  413921:	e8 8a 83 00 00       	callq  41bcb0 <caml_gc_message>
  413926:	48 8b 53 20          	mov    0x20(%rbx),%rdx
  41392a:	48 d1 fa             	sar    %rdx
  41392d:	48 3b 15 2c db 22 00 	cmp    0x22db2c(%rip),%rdx        # 641460 <caml_percent_max>
  413934:	74 16                	je     41394c <caml_gc_set+0x6c>
  413936:	be 5b eb 41 00       	mov    $0x41eb5b,%esi
  41393b:	bf 20 00 00 00       	mov    $0x20,%edi
  413940:	48 89 15 19 db 22 00 	mov    %rdx,0x22db19(%rip)        # 641460 <caml_percent_max>
  413947:	e8 64 83 00 00       	callq  41bcb0 <caml_gc_message>
  41394c:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  413950:	48 d1 fa             	sar    %rdx
  413953:	48 3b 15 96 da 22 00 	cmp    0x22da96(%rip),%rdx        # 6413f0 <caml_major_heap_increment>
  41395a:	74 27                	je     413983 <caml_gc_set+0xa3>
  41395c:	48 81 fa e8 03 00 00 	cmp    $0x3e8,%rdx
  413963:	48 89 15 86 da 22 00 	mov    %rdx,0x22da86(%rip)        # 6413f0 <caml_major_heap_increment>
  41396a:	0f 86 f0 00 00 00    	jbe    413a60 <caml_gc_set+0x180>
  413970:	48 c1 ea 0a          	shr    $0xa,%rdx
  413974:	be 10 e9 41 00       	mov    $0x41e910,%esi
  413979:	bf 20 00 00 00       	mov    $0x20,%edi
  41397e:	e8 2d 83 00 00       	callq  41bcb0 <caml_gc_message>
  413983:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
  413987:	48 8b 2d 72 ba 22 00 	mov    0x22ba72(%rip),%rbp        # 63f400 <caml_allocation_policy>
  41398e:	48 d1 ff             	sar    %rdi
  413991:	e8 ca 82 00 00       	callq  41bc60 <caml_set_allocation_policy>
  413996:	48 8b 15 63 ba 22 00 	mov    0x22ba63(%rip),%rdx        # 63f400 <caml_allocation_policy>
  41399d:	48 39 d5             	cmp    %rdx,%rbp
  4139a0:	74 0f                	je     4139b1 <caml_gc_set+0xd1>
  4139a2:	be 73 eb 41 00       	mov    $0x41eb73,%esi
  4139a7:	bf 20 00 00 00       	mov    $0x20,%edi
  4139ac:	e8 ff 82 00 00       	callq  41bcb0 <caml_gc_message>
  4139b1:	48 81 7b f8 ff 1f 00 	cmpq   $0x1fff,-0x8(%rbx)
  4139b8:	00 
  4139b9:	76 42                	jbe    4139fd <caml_gc_set+0x11d>
  4139bb:	48 8b 43 38          	mov    0x38(%rbx),%rax
  4139bf:	8b 2d ab 8c 21 00    	mov    0x218cab(%rip),%ebp        # 62c670 <caml_major_window>
  4139c5:	bf 01 00 00 00       	mov    $0x1,%edi
  4139ca:	48 d1 f8             	sar    %rax
  4139cd:	48 85 c0             	test   %rax,%rax
  4139d0:	7e 0c                	jle    4139de <caml_gc_set+0xfe>
  4139d2:	48 83 f8 32          	cmp    $0x32,%rax
  4139d6:	bf 32 00 00 00       	mov    $0x32,%edi
  4139db:	0f 4e f8             	cmovle %eax,%edi
  4139de:	e8 ad 43 ff ff       	callq  407d90 <caml_set_major_window>
  4139e3:	48 63 15 86 8c 21 00 	movslq 0x218c86(%rip),%rdx        # 62c670 <caml_major_window>
  4139ea:	39 d5                	cmp    %edx,%ebp
  4139ec:	74 0f                	je     4139fd <caml_gc_set+0x11d>
  4139ee:	be 58 e9 41 00       	mov    $0x41e958,%esi
  4139f3:	bf 20 00 00 00       	mov    $0x20,%edi
  4139f8:	e8 b3 82 00 00       	callq  41bcb0 <caml_gc_message>
  4139fd:	48 8b 03             	mov    (%rbx),%rax
  413a00:	bb 00 10 00 00       	mov    $0x1000,%ebx
  413a05:	48 d1 f8             	sar    %rax
  413a08:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
  413a0e:	7e 0f                	jle    413a1f <caml_gc_set+0x13f>
  413a10:	48 3d 00 00 00 10    	cmp    $0x10000000,%rax
  413a16:	bb 00 00 00 10       	mov    $0x10000000,%ebx
  413a1b:	48 0f 4e d8          	cmovle %rax,%rbx
  413a1f:	48 39 1d 0a da 22 00 	cmp    %rbx,0x22da0a(%rip)        # 641430 <caml_minor_heap_wsz>
  413a26:	74 23                	je     413a4b <caml_gc_set+0x16b>
  413a28:	48 89 da             	mov    %rbx,%rdx
  413a2b:	bf 20 00 00 00       	mov    $0x20,%edi
  413a30:	be 78 e9 41 00       	mov    $0x41e978,%esi
  413a35:	48 c1 ea 0a          	shr    $0xa,%rdx
  413a39:	e8 72 82 00 00       	callq  41bcb0 <caml_gc_message>
  413a3e:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
  413a45:	00 
  413a46:	e8 95 4c ff ff       	callq  4086e0 <caml_set_minor_heap_size>
  413a4b:	48 83 c4 08          	add    $0x8,%rsp
  413a4f:	b8 01 00 00 00       	mov    $0x1,%eax
  413a54:	5b                   	pop    %rbx
  413a55:	5d                   	pop    %rbp
  413a56:	c3                   	retq   
  413a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  413a5e:	00 00 
  413a60:	be 38 e9 41 00       	mov    $0x41e938,%esi
  413a65:	bf 20 00 00 00       	mov    $0x20,%edi
  413a6a:	e8 41 82 00 00       	callq  41bcb0 <caml_gc_message>
  413a6f:	e9 0f ff ff ff       	jmpq   413983 <caml_gc_set+0xa3>
  413a74:	66 90                	xchg   %ax,%ax
  413a76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413a7d:	00 00 00 

0000000000413a80 <caml_gc_minor>:
  413a80:	48 83 ec 08          	sub    $0x8,%rsp
  413a84:	e8 17 70 00 00       	callq  41aaa0 <caml_request_minor_gc>
  413a89:	e8 a2 4e ff ff       	callq  408930 <caml_gc_dispatch>
  413a8e:	b8 01 00 00 00       	mov    $0x1,%eax
  413a93:	48 83 c4 08          	add    $0x8,%rsp
  413a97:	c3                   	retq   
  413a98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  413a9f:	00 

0000000000413aa0 <caml_gc_major>:
  413aa0:	48 83 ec 08          	sub    $0x8,%rsp
  413aa4:	31 d2                	xor    %edx,%edx
  413aa6:	be 8e eb 41 00       	mov    $0x41eb8e,%esi
  413aab:	bf 01 00 00 00       	mov    $0x1,%edi
  413ab0:	e8 fb 81 00 00       	callq  41bcb0 <caml_gc_message>
  413ab5:	e8 36 49 ff ff       	callq  4083f0 <caml_empty_minor_heap>
  413aba:	e8 f1 3f ff ff       	callq  407ab0 <caml_finish_major_cycle>
  413abf:	e8 4c f2 ff ff       	callq  412d10 <test_and_compact>
  413ac4:	e8 a7 4a 00 00       	callq  418570 <caml_final_do_calls>
  413ac9:	b8 01 00 00 00       	mov    $0x1,%eax
  413ace:	48 83 c4 08          	add    $0x8,%rsp
  413ad2:	c3                   	retq   
  413ad3:	0f 1f 00             	nopl   (%rax)
  413ad6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413add:	00 00 00 

0000000000413ae0 <caml_gc_full_major>:
  413ae0:	48 83 ec 08          	sub    $0x8,%rsp
  413ae4:	31 d2                	xor    %edx,%edx
  413ae6:	be a0 e9 41 00       	mov    $0x41e9a0,%esi
  413aeb:	bf 01 00 00 00       	mov    $0x1,%edi
  413af0:	e8 bb 81 00 00       	callq  41bcb0 <caml_gc_message>
  413af5:	e8 f6 48 ff ff       	callq  4083f0 <caml_empty_minor_heap>
  413afa:	e8 b1 3f ff ff       	callq  407ab0 <caml_finish_major_cycle>
  413aff:	e8 6c 4a 00 00       	callq  418570 <caml_final_do_calls>
  413b04:	e8 e7 48 ff ff       	callq  4083f0 <caml_empty_minor_heap>
  413b09:	e8 a2 3f ff ff       	callq  407ab0 <caml_finish_major_cycle>
  413b0e:	e8 fd f1 ff ff       	callq  412d10 <test_and_compact>
  413b13:	e8 58 4a 00 00       	callq  418570 <caml_final_do_calls>
  413b18:	b8 01 00 00 00       	mov    $0x1,%eax
  413b1d:	48 83 c4 08          	add    $0x8,%rsp
  413b21:	c3                   	retq   
  413b22:	0f 1f 40 00          	nopl   0x0(%rax)
  413b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413b2d:	00 00 00 

0000000000413b30 <caml_gc_major_slice>:
  413b30:	48 83 ec 08          	sub    $0x8,%rsp
  413b34:	48 d1 ff             	sar    %rdi
  413b37:	e8 24 38 ff ff       	callq  407360 <caml_major_collection_slice>
  413b3c:	b8 01 00 00 00       	mov    $0x1,%eax
  413b41:	48 83 c4 08          	add    $0x8,%rsp
  413b45:	c3                   	retq   
  413b46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413b4d:	00 00 00 

0000000000413b50 <caml_gc_compaction>:
  413b50:	48 83 ec 08          	sub    $0x8,%rsp
  413b54:	31 d2                	xor    %edx,%edx
  413b56:	be a8 eb 41 00       	mov    $0x41eba8,%esi
  413b5b:	bf 10 00 00 00       	mov    $0x10,%edi
  413b60:	e8 4b 81 00 00       	callq  41bcb0 <caml_gc_message>
  413b65:	e8 86 48 ff ff       	callq  4083f0 <caml_empty_minor_heap>
  413b6a:	e8 41 3f ff ff       	callq  407ab0 <caml_finish_major_cycle>
  413b6f:	e8 fc 49 00 00       	callq  418570 <caml_final_do_calls>
  413b74:	e8 77 48 ff ff       	callq  4083f0 <caml_empty_minor_heap>
  413b79:	e8 32 3f ff ff       	callq  407ab0 <caml_finish_major_cycle>
  413b7e:	e8 6d 41 00 00       	callq  417cf0 <caml_compact_heap>
  413b83:	e8 e8 49 00 00       	callq  418570 <caml_final_do_calls>
  413b88:	b8 01 00 00 00       	mov    $0x1,%eax
  413b8d:	48 83 c4 08          	add    $0x8,%rsp
  413b91:	c3                   	retq   
  413b92:	0f 1f 40 00          	nopl   0x0(%rax)
  413b96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413b9d:	00 00 00 

0000000000413ba0 <caml_get_minor_free>:
  413ba0:	48 8b 05 01 93 21 00 	mov    0x219301(%rip),%rax        # 62cea8 <caml_young_ptr>
  413ba7:	48 2b 05 12 93 21 00 	sub    0x219312(%rip),%rax        # 62cec0 <caml_young_alloc_start>
  413bae:	48 c1 f8 03          	sar    $0x3,%rax
  413bb2:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  413bb7:	c3                   	retq   
  413bb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  413bbf:	00 

0000000000413bc0 <caml_get_major_bucket>:
  413bc0:	48 d1 ff             	sar    %rdi
  413bc3:	78 45                	js     413c0a <caml_get_major_bucket+0x4a>
  413bc5:	48 63 15 a4 8a 21 00 	movslq 0x218aa4(%rip),%rdx        # 62c670 <caml_major_window>
  413bcc:	b8 01 00 00 00       	mov    $0x1,%eax
  413bd1:	48 39 d7             	cmp    %rdx,%rdi
  413bd4:	7d 32                	jge    413c08 <caml_get_major_bucket+0x48>
  413bd6:	48 63 05 c3 8f 21 00 	movslq 0x218fc3(%rip),%rax        # 62cba0 <caml_major_ring_index>
  413bdd:	f2 0f 10 05 13 a0 00 	movsd  0xa013(%rip),%xmm0        # 41dbf8 <caml_absf_mask+0x238>
  413be4:	00 
  413be5:	48 01 c7             	add    %rax,%rdi
  413be8:	48 89 f8             	mov    %rdi,%rax
  413beb:	48 29 d0             	sub    %rdx,%rax
  413bee:	48 39 fa             	cmp    %rdi,%rdx
  413bf1:	48 0f 4e f8          	cmovle %rax,%rdi
  413bf5:	f2 0f 59 04 fd c0 cb 	mulsd  0x62cbc0(,%rdi,8),%xmm0
  413bfc:	62 00 
  413bfe:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  413c03:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  413c08:	f3 c3                	repz retq 
  413c0a:	50                   	push   %rax
  413c0b:	bf c3 eb 41 00       	mov    $0x41ebc3,%edi
  413c10:	e8 cb 6a 00 00       	callq  41a6e0 <caml_invalid_argument>
  413c15:	90                   	nop
  413c16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413c1d:	00 00 00 

0000000000413c20 <caml_get_major_credit>:
  413c20:	f2 0f 10 05 d0 9f 00 	movsd  0x9fd0(%rip),%xmm0        # 41dbf8 <caml_absf_mask+0x238>
  413c27:	00 
  413c28:	f2 0f 59 05 68 8f 21 	mulsd  0x218f68(%rip),%xmm0        # 62cb98 <caml_major_work_credit>
  413c2f:	00 
  413c30:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  413c35:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  413c3a:	c3                   	retq   
  413c3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000413c40 <caml_normalize_heap_increment>:
  413c40:	48 81 ff ff 7f 07 00 	cmp    $0x77fff,%rdi
  413c47:	b8 00 80 07 00       	mov    $0x78000,%eax
  413c4c:	77 02                	ja     413c50 <caml_normalize_heap_increment+0x10>
  413c4e:	f3 c3                	repz retq 
  413c50:	48 8d 87 ff 0f 00 00 	lea    0xfff(%rdi),%rax
  413c57:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
  413c5d:	c3                   	retq   
  413c5e:	66 90                	xchg   %ax,%ax

0000000000413c60 <caml_init_gc>:
  413c60:	41 57                	push   %r15
  413c62:	41 56                	push   %r14
  413c64:	49 89 d7             	mov    %rdx,%r15
  413c67:	41 55                	push   %r13
  413c69:	41 54                	push   %r12
  413c6b:	4d 89 c6             	mov    %r8,%r14
  413c6e:	55                   	push   %rbp
  413c6f:	53                   	push   %rbx
  413c70:	49 89 fc             	mov    %rdi,%r12
  413c73:	48 89 cd             	mov    %rcx,%rbp
  413c76:	4d 89 cd             	mov    %r9,%r13
  413c79:	bb 00 00 3c 00       	mov    $0x3c0000,%ebx
  413c7e:	48 83 ec 18          	sub    $0x18,%rsp
  413c82:	48 81 fe ff 7f 07 00 	cmp    $0x77fff,%rsi
  413c89:	76 0f                	jbe    413c9a <caml_init_gc+0x3a>
  413c8b:	48 8d 1c f5 f8 7f 00 	lea    0x7ff8(,%rsi,8),%rbx
  413c92:	00 
  413c93:	48 81 e3 00 80 ff ff 	and    $0xffffffffffff8000,%rbx
  413c9a:	e8 71 52 ff ff       	callq  408f10 <caml_init_alloc_for_heap>
  413c9f:	85 c0                	test   %eax,%eax
  413ca1:	0f 85 78 01 00 00    	jne    413e1f <caml_init_gc+0x1bf>
  413ca7:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
  413cae:	00 
  413caf:	48 8d 3c 1a          	lea    (%rdx,%rbx,1),%rdi
  413cb3:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  413cb8:	e8 03 51 ff ff       	callq  408dc0 <caml_page_table_initialize>
  413cbd:	85 c0                	test   %eax,%eax
  413cbf:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  413cc4:	0f 85 4b 01 00 00    	jne    413e15 <caml_init_gc+0x1b5>
  413cca:	49 81 fc ff 0f 00 00 	cmp    $0xfff,%r12
  413cd1:	0f 8e 19 01 00 00    	jle    413df0 <caml_init_gc+0x190>
  413cd7:	49 81 fc 01 00 00 10 	cmp    $0x10000001,%r12
  413cde:	b8 00 00 00 80       	mov    $0x80000000,%eax
  413ce3:	48 0f 4d d0          	cmovge %rax,%rdx
  413ce7:	48 89 d7             	mov    %rdx,%rdi
  413cea:	e8 f1 49 ff ff       	callq  4086e0 <caml_set_minor_heap_size>
  413cef:	48 85 ed             	test   %rbp,%rbp
  413cf2:	b8 01 00 00 00       	mov    $0x1,%eax
  413cf7:	48 89 df             	mov    %rbx,%rdi
  413cfa:	48 0f 44 e8          	cmove  %rax,%rbp
  413cfe:	4c 89 3d eb d6 22 00 	mov    %r15,0x22d6eb(%rip)        # 6413f0 <caml_major_heap_increment>
  413d05:	4c 89 35 54 d7 22 00 	mov    %r14,0x22d754(%rip)        # 641460 <caml_percent_max>
  413d0c:	48 89 2d 0d d7 22 00 	mov    %rbp,0x22d70d(%rip)        # 641420 <caml_percent_free>
  413d13:	e8 d8 3e ff ff       	callq  407bf0 <caml_init_major_heap>
  413d18:	4d 85 ed             	test   %r13,%r13
  413d1b:	b8 01 00 00 00       	mov    $0x1,%eax
  413d20:	7e 0d                	jle    413d2f <caml_init_gc+0xcf>
  413d22:	49 83 fd 32          	cmp    $0x32,%r13
  413d26:	b8 32 00 00 00       	mov    $0x32,%eax
  413d2b:	41 0f 4e c5          	cmovle %r13d,%eax
  413d2f:	48 8b 15 fa d6 22 00 	mov    0x22d6fa(%rip),%rdx        # 641430 <caml_minor_heap_wsz>
  413d36:	be 20 ea 41 00       	mov    $0x41ea20,%esi
  413d3b:	bf 20 00 00 00       	mov    $0x20,%edi
  413d40:	48 c1 eb 0a          	shr    $0xa,%rbx
  413d44:	89 05 26 89 21 00    	mov    %eax,0x218926(%rip)        # 62c670 <caml_major_window>
  413d4a:	48 c1 ea 0a          	shr    $0xa,%rdx
  413d4e:	e8 5d 7f 00 00       	callq  41bcb0 <caml_gc_message>
  413d53:	48 89 da             	mov    %rbx,%rdx
  413d56:	be 48 ea 41 00       	mov    $0x41ea48,%esi
  413d5b:	bf 20 00 00 00       	mov    $0x20,%edi
  413d60:	e8 4b 7f 00 00       	callq  41bcb0 <caml_gc_message>
  413d65:	48 8b 15 b4 d6 22 00 	mov    0x22d6b4(%rip),%rdx        # 641420 <caml_percent_free>
  413d6c:	be 70 ea 41 00       	mov    $0x41ea70,%esi
  413d71:	bf 20 00 00 00       	mov    $0x20,%edi
  413d76:	e8 35 7f 00 00       	callq  41bcb0 <caml_gc_message>
  413d7b:	48 8b 15 de d6 22 00 	mov    0x22d6de(%rip),%rdx        # 641460 <caml_percent_max>
  413d82:	be d1 eb 41 00       	mov    $0x41ebd1,%esi
  413d87:	bf 20 00 00 00       	mov    $0x20,%edi
  413d8c:	e8 1f 7f 00 00       	callq  41bcb0 <caml_gc_message>
  413d91:	48 8b 15 58 d6 22 00 	mov    0x22d658(%rip),%rdx        # 6413f0 <caml_major_heap_increment>
  413d98:	48 81 fa e8 03 00 00 	cmp    $0x3e8,%rdx
  413d9f:	77 5f                	ja     413e00 <caml_init_gc+0x1a0>
  413da1:	be b8 ea 41 00       	mov    $0x41eab8,%esi
  413da6:	bf 20 00 00 00       	mov    $0x20,%edi
  413dab:	e8 00 7f 00 00       	callq  41bcb0 <caml_gc_message>
  413db0:	48 8b 15 49 b6 22 00 	mov    0x22b649(%rip),%rdx        # 63f400 <caml_allocation_policy>
  413db7:	be d8 ea 41 00       	mov    $0x41ead8,%esi
  413dbc:	bf 20 00 00 00       	mov    $0x20,%edi
  413dc1:	e8 ea 7e 00 00       	callq  41bcb0 <caml_gc_message>
  413dc6:	48 63 15 a3 88 21 00 	movslq 0x2188a3(%rip),%rdx        # 62c670 <caml_major_window>
  413dcd:	48 83 c4 18          	add    $0x18,%rsp
  413dd1:	be ee eb 41 00       	mov    $0x41ebee,%esi
  413dd6:	5b                   	pop    %rbx
  413dd7:	5d                   	pop    %rbp
  413dd8:	41 5c                	pop    %r12
  413dda:	41 5d                	pop    %r13
  413ddc:	41 5e                	pop    %r14
  413dde:	41 5f                	pop    %r15
  413de0:	bf 20 00 00 00       	mov    $0x20,%edi
  413de5:	e9 c6 7e 00 00       	jmpq   41bcb0 <caml_gc_message>
  413dea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  413df0:	ba 00 80 00 00       	mov    $0x8000,%edx
  413df5:	e9 ed fe ff ff       	jmpq   413ce7 <caml_init_gc+0x87>
  413dfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  413e00:	48 c1 ea 0a          	shr    $0xa,%rdx
  413e04:	be 90 ea 41 00       	mov    $0x41ea90,%esi
  413e09:	bf 20 00 00 00       	mov    $0x20,%edi
  413e0e:	e8 9d 7e 00 00       	callq  41bcb0 <caml_gc_message>
  413e13:	eb 9b                	jmp    413db0 <caml_init_gc+0x150>
  413e15:	bf e8 e9 41 00       	mov    $0x41e9e8,%edi
  413e1a:	e8 d1 7e 00 00       	callq  41bcf0 <caml_fatal_error>
  413e1f:	bf c0 e9 41 00       	mov    $0x41e9c0,%edi
  413e24:	e8 c7 7e 00 00       	callq  41bcf0 <caml_fatal_error>
  413e29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000413e30 <caml_runtime_variant>:
  413e30:	bf 5a eb 41 00       	mov    $0x41eb5a,%edi
  413e35:	e9 56 86 00 00       	jmpq   41c490 <caml_copy_string>
  413e3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000413e40 <caml_runtime_parameters>:
  413e40:	48 83 ec 08          	sub    $0x8,%rsp
  413e44:	8b 05 26 88 21 00    	mov    0x218826(%rip),%eax        # 62c670 <caml_major_window>
  413e4a:	ff 35 38 d5 22 00    	pushq  0x22d538(%rip)        # 641388 <caml_runtime_warnings>
  413e50:	4c 8b 05 99 d5 22 00 	mov    0x22d599(%rip),%r8        # 6413f0 <caml_major_heap_increment>
  413e57:	48 8b 0d a2 90 21 00 	mov    0x2190a2(%rip),%rcx        # 62cf00 <caml_use_huge_pages>
  413e5e:	45 31 c9             	xor    %r9d,%r9d
  413e61:	8b 15 f5 93 22 00    	mov    0x2293f5(%rip),%edx        # 63d25c <caml_backtrace_active>
  413e67:	48 8b 35 92 b5 22 00 	mov    0x22b592(%rip),%rsi        # 63f400 <caml_allocation_policy>
  413e6e:	bf f8 ea 41 00       	mov    $0x41eaf8,%edi
  413e73:	50                   	push   %rax
  413e74:	8b 05 4e d5 22 00    	mov    0x22d54e(%rip),%eax        # 6413c8 <caml_parser_trace>
  413e7a:	ff 35 10 d5 22 00    	pushq  0x22d510(%rip)        # 641390 <caml_verb_gc>
  413e80:	ff 35 da 93 22 00    	pushq  0x2293da(%rip)        # 63d260 <caml_trace_level>
  413e86:	ff 35 a4 d5 22 00    	pushq  0x22d5a4(%rip)        # 641430 <caml_minor_heap_wsz>
  413e8c:	50                   	push   %rax
  413e8d:	ff 35 cd d5 22 00    	pushq  0x22d5cd(%rip)        # 641460 <caml_percent_max>
  413e93:	31 c0                	xor    %eax,%eax
  413e95:	ff 35 85 d5 22 00    	pushq  0x22d585(%rip)        # 641420 <caml_percent_free>
  413e9b:	e8 80 8d ff ff       	callq  40cc20 <caml_alloc_sprintf>
  413ea0:	48 83 c4 48          	add    $0x48,%rsp
  413ea4:	c3                   	retq   
  413ea5:	90                   	nop
  413ea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413ead:	00 00 00 

0000000000413eb0 <caml_ml_enable_runtime_warnings>:
  413eb0:	48 d1 ff             	sar    %rdi
  413eb3:	b8 01 00 00 00       	mov    $0x1,%eax
  413eb8:	48 63 ff             	movslq %edi,%rdi
  413ebb:	48 89 3d c6 d4 22 00 	mov    %rdi,0x22d4c6(%rip)        # 641388 <caml_runtime_warnings>
  413ec2:	c3                   	retq   
  413ec3:	0f 1f 00             	nopl   (%rax)
  413ec6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413ecd:	00 00 00 

0000000000413ed0 <caml_ml_runtime_warnings_enabled>:
  413ed0:	48 83 3d b0 d4 22 00 	cmpq   $0x1,0x22d4b0(%rip)        # 641388 <caml_runtime_warnings>
  413ed7:	01 
  413ed8:	48 19 c0             	sbb    %rax,%rax
  413edb:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  413edf:	48 83 c0 03          	add    $0x3,%rax
  413ee3:	c3                   	retq   
  413ee4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  413eeb:	00 00 00 
  413eee:	66 90                	xchg   %ax,%ax

0000000000413ef0 <caml_MD5Init>:
  413ef0:	c7 07 01 23 45 67    	movl   $0x67452301,(%rdi)
  413ef6:	c7 47 04 89 ab cd ef 	movl   $0xefcdab89,0x4(%rdi)
  413efd:	c7 47 08 fe dc ba 98 	movl   $0x98badcfe,0x8(%rdi)
  413f04:	c7 47 0c 76 54 32 10 	movl   $0x10325476,0xc(%rdi)
  413f0b:	c7 47 10 00 00 00 00 	movl   $0x0,0x10(%rdi)
  413f12:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%rdi)
  413f19:	c3                   	retq   
  413f1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000413f20 <caml_MD5Transform>:
  413f20:	41 57                	push   %r15
  413f22:	8b 07                	mov    (%rdi),%eax
  413f24:	41 56                	push   %r14
  413f26:	41 55                	push   %r13
  413f28:	41 54                	push   %r12
  413f2a:	55                   	push   %rbp
  413f2b:	53                   	push   %rbx
  413f2c:	44 8b 2e             	mov    (%rsi),%r13d
  413f2f:	8b 4f 04             	mov    0x4(%rdi),%ecx
  413f32:	33 4f 08             	xor    0x8(%rdi),%ecx
  413f35:	8b 5e 04             	mov    0x4(%rsi),%ebx
  413f38:	44 8b 47 04          	mov    0x4(%rdi),%r8d
  413f3c:	42 8d 94 28 78 a4 6a 	lea    -0x28955b88(%rax,%r13,1),%edx
  413f43:	d7 
  413f44:	8b 47 08             	mov    0x8(%rdi),%eax
  413f47:	33 47 0c             	xor    0xc(%rdi),%eax
  413f4a:	23 47 04             	and    0x4(%rdi),%eax
  413f4d:	44 8b 7f 08          	mov    0x8(%rdi),%r15d
  413f51:	33 47 0c             	xor    0xc(%rdi),%eax
  413f54:	44 8b 5f 04          	mov    0x4(%rdi),%r11d
  413f58:	89 5c 24 e0          	mov    %ebx,-0x20(%rsp)
  413f5c:	44 8b 56 18          	mov    0x18(%rsi),%r10d
  413f60:	01 d0                	add    %edx,%eax
  413f62:	8b 57 0c             	mov    0xc(%rdi),%edx
  413f65:	44 89 54 24 f0       	mov    %r10d,-0x10(%rsp)
  413f6a:	c1 c0 07             	rol    $0x7,%eax
  413f6d:	03 47 04             	add    0x4(%rdi),%eax
  413f70:	8d 94 1a 56 b7 c7 e8 	lea    -0x173848aa(%rdx,%rbx,1),%edx
  413f77:	8b 5e 14             	mov    0x14(%rsi),%ebx
  413f7a:	21 c1                	and    %eax,%ecx
  413f7c:	33 4f 08             	xor    0x8(%rdi),%ecx
  413f7f:	41 31 c0             	xor    %eax,%r8d
  413f82:	01 d1                	add    %edx,%ecx
  413f84:	8b 56 08             	mov    0x8(%rsi),%edx
  413f87:	c1 c1 0c             	rol    $0xc,%ecx
  413f8a:	01 c1                	add    %eax,%ecx
  413f8c:	41 21 c8             	and    %ecx,%r8d
  413f8f:	44 33 47 04          	xor    0x4(%rdi),%r8d
  413f93:	89 54 24 e4          	mov    %edx,-0x1c(%rsp)
  413f97:	41 8d 94 17 db 70 20 	lea    0x242070db(%r15,%rdx,1),%edx
  413f9e:	24 
  413f9f:	44 8b 7e 0c          	mov    0xc(%rsi),%r15d
  413fa3:	41 01 d0             	add    %edx,%r8d
  413fa6:	47 8d 8c 3b ee ce bd 	lea    -0x3e423112(%r11,%r15,1),%r9d
  413fad:	c1 
  413fae:	41 89 c3             	mov    %eax,%r11d
  413fb1:	41 31 cb             	xor    %ecx,%r11d
  413fb4:	41 c1 c8 0f          	ror    $0xf,%r8d
  413fb8:	44 89 7c 24 e8       	mov    %r15d,-0x18(%rsp)
  413fbd:	41 01 c8             	add    %ecx,%r8d
  413fc0:	44 89 da             	mov    %r11d,%edx
  413fc3:	44 8b 5e 10          	mov    0x10(%rsi),%r11d
  413fc7:	44 21 c2             	and    %r8d,%edx
  413fca:	31 c2                	xor    %eax,%edx
  413fcc:	44 01 ca             	add    %r9d,%edx
  413fcf:	46 8d 8c 18 af 0f 7c 	lea    -0xa83f051(%rax,%r11,1),%r9d
  413fd6:	f5 
  413fd7:	89 c8                	mov    %ecx,%eax
  413fd9:	c1 ca 0a             	ror    $0xa,%edx
  413fdc:	44 31 c0             	xor    %r8d,%eax
  413fdf:	44 89 5c 24 ec       	mov    %r11d,-0x14(%rsp)
  413fe4:	44 01 c2             	add    %r8d,%edx
  413fe7:	44 8b 76 1c          	mov    0x1c(%rsi),%r14d
  413feb:	44 8b 7e 24          	mov    0x24(%rsi),%r15d
  413fef:	21 d0                	and    %edx,%eax
  413ff1:	44 8b 5e 30          	mov    0x30(%rsi),%r11d
  413ff5:	31 c8                	xor    %ecx,%eax
  413ff7:	44 01 c8             	add    %r9d,%eax
  413ffa:	44 8d 8c 19 2a c6 87 	lea    0x4787c62a(%rcx,%rbx,1),%r9d
  414001:	47 
  414002:	44 89 c1             	mov    %r8d,%ecx
  414005:	c1 c0 07             	rol    $0x7,%eax
  414008:	31 d1                	xor    %edx,%ecx
  41400a:	44 89 74 24 f4       	mov    %r14d,-0xc(%rsp)
  41400f:	01 d0                	add    %edx,%eax
  414011:	21 c1                	and    %eax,%ecx
  414013:	89 c5                	mov    %eax,%ebp
  414015:	44 31 c1             	xor    %r8d,%ecx
  414018:	44 01 c9             	add    %r9d,%ecx
  41401b:	47 8d 8c 10 13 46 30 	lea    -0x57cfb9ed(%r8,%r10,1),%r9d
  414022:	a8 
  414023:	41 89 d0             	mov    %edx,%r8d
  414026:	c1 c1 0c             	rol    $0xc,%ecx
  414029:	41 31 c0             	xor    %eax,%r8d
  41402c:	44 8b 56 28          	mov    0x28(%rsi),%r10d
  414030:	01 c1                	add    %eax,%ecx
  414032:	41 21 c8             	and    %ecx,%r8d
  414035:	31 cd                	xor    %ecx,%ebp
  414037:	41 31 d0             	xor    %edx,%r8d
  41403a:	45 01 c8             	add    %r9d,%r8d
  41403d:	46 8d 8c 32 01 95 46 	lea    -0x2b96aff(%rdx,%r14,1),%r9d
  414044:	fd 
  414045:	89 ea                	mov    %ebp,%edx
  414047:	41 c1 c8 0f          	ror    $0xf,%r8d
  41404b:	41 01 c8             	add    %ecx,%r8d
  41404e:	44 21 c2             	and    %r8d,%edx
  414051:	31 c2                	xor    %eax,%edx
  414053:	44 01 ca             	add    %r9d,%edx
  414056:	44 8b 4e 20          	mov    0x20(%rsi),%r9d
  41405a:	c1 ca 0a             	ror    $0xa,%edx
  41405d:	44 01 c2             	add    %r8d,%edx
  414060:	44 89 4c 24 f8       	mov    %r9d,-0x8(%rsp)
  414065:	46 8d 8c 08 d8 98 80 	lea    0x698098d8(%rax,%r9,1),%r9d
  41406c:	69 
  41406d:	89 c8                	mov    %ecx,%eax
  41406f:	44 31 c0             	xor    %r8d,%eax
  414072:	89 d5                	mov    %edx,%ebp
  414074:	21 d0                	and    %edx,%eax
  414076:	31 c8                	xor    %ecx,%eax
  414078:	44 01 c8             	add    %r9d,%eax
  41407b:	46 8d 8c 39 af f7 44 	lea    -0x74bb0851(%rcx,%r15,1),%r9d
  414082:	8b 
  414083:	44 89 c1             	mov    %r8d,%ecx
  414086:	c1 c0 07             	rol    $0x7,%eax
  414089:	31 d1                	xor    %edx,%ecx
  41408b:	01 d0                	add    %edx,%eax
  41408d:	21 c1                	and    %eax,%ecx
  41408f:	31 c5                	xor    %eax,%ebp
  414091:	44 31 c1             	xor    %r8d,%ecx
  414094:	47 8d 84 10 b1 5b ff 	lea    -0xa44f(%r8,%r10,1),%r8d
  41409b:	ff 
  41409c:	44 01 c9             	add    %r9d,%ecx
  41409f:	41 89 e9             	mov    %ebp,%r9d
  4140a2:	89 c5                	mov    %eax,%ebp
  4140a4:	c1 c1 0c             	rol    $0xc,%ecx
  4140a7:	01 c1                	add    %eax,%ecx
  4140a9:	41 21 c9             	and    %ecx,%r9d
  4140ac:	41 31 d1             	xor    %edx,%r9d
  4140af:	45 01 c1             	add    %r8d,%r9d
  4140b2:	44 8b 46 2c          	mov    0x2c(%rsi),%r8d
  4140b6:	41 c1 c9 0f          	ror    $0xf,%r9d
  4140ba:	31 cd                	xor    %ecx,%ebp
  4140bc:	41 01 c9             	add    %ecx,%r9d
  4140bf:	44 89 44 24 fc       	mov    %r8d,-0x4(%rsp)
  4140c4:	46 8d 84 02 be d7 5c 	lea    -0x76a32842(%rdx,%r8,1),%r8d
  4140cb:	89 
  4140cc:	89 ea                	mov    %ebp,%edx
  4140ce:	44 21 ca             	and    %r9d,%edx
  4140d1:	31 c2                	xor    %eax,%edx
  4140d3:	44 01 c2             	add    %r8d,%edx
  4140d6:	46 8d 84 18 22 11 90 	lea    0x6b901122(%rax,%r11,1),%r8d
  4140dd:	6b 
  4140de:	89 c8                	mov    %ecx,%eax
  4140e0:	c1 ca 0a             	ror    $0xa,%edx
  4140e3:	44 31 c8             	xor    %r9d,%eax
  4140e6:	44 01 ca             	add    %r9d,%edx
  4140e9:	21 d0                	and    %edx,%eax
  4140eb:	41 89 d4             	mov    %edx,%r12d
  4140ee:	31 c8                	xor    %ecx,%eax
  4140f0:	44 01 c0             	add    %r8d,%eax
  4140f3:	44 8b 46 34          	mov    0x34(%rsi),%r8d
  4140f7:	c1 c0 07             	rol    $0x7,%eax
  4140fa:	01 d0                	add    %edx,%eax
  4140fc:	42 8d ac 01 93 71 98 	lea    -0x2678e6d(%rcx,%r8,1),%ebp
  414103:	fd 
  414104:	44 89 c9             	mov    %r9d,%ecx
  414107:	41 31 c4             	xor    %eax,%r12d
  41410a:	31 d1                	xor    %edx,%ecx
  41410c:	45 89 e6             	mov    %r12d,%r14d
  41410f:	41 89 c4             	mov    %eax,%r12d
  414112:	21 c1                	and    %eax,%ecx
  414114:	44 31 c9             	xor    %r9d,%ecx
  414117:	01 e9                	add    %ebp,%ecx
  414119:	8b 6e 38             	mov    0x38(%rsi),%ebp
  41411c:	c1 c1 0c             	rol    $0xc,%ecx
  41411f:	01 c1                	add    %eax,%ecx
  414121:	45 8d 8c 29 8e 43 79 	lea    -0x5986bc72(%r9,%rbp,1),%r9d
  414128:	a6 
  414129:	41 21 ce             	and    %ecx,%r14d
  41412c:	41 31 cc             	xor    %ecx,%r12d
  41412f:	41 31 d6             	xor    %edx,%r14d
  414132:	45 01 ce             	add    %r9d,%r14d
  414135:	44 8b 4e 3c          	mov    0x3c(%rsi),%r9d
  414139:	41 c1 ce 0f          	ror    $0xf,%r14d
  41413d:	41 01 ce             	add    %ecx,%r14d
  414140:	42 8d b4 0a 21 08 b4 	lea    0x49b40821(%rdx,%r9,1),%esi
  414147:	49 
  414148:	44 89 e2             	mov    %r12d,%edx
  41414b:	44 21 f2             	and    %r14d,%edx
  41414e:	31 c2                	xor    %eax,%edx
  414150:	01 f2                	add    %esi,%edx
  414152:	8b 74 24 e0          	mov    -0x20(%rsp),%esi
  414156:	c1 ca 0a             	ror    $0xa,%edx
  414159:	44 01 f2             	add    %r14d,%edx
  41415c:	8d b4 06 62 25 1e f6 	lea    -0x9e1da9e(%rsi,%rax,1),%esi
  414163:	44 89 f0             	mov    %r14d,%eax
  414166:	31 d0                	xor    %edx,%eax
  414168:	21 c8                	and    %ecx,%eax
  41416a:	44 31 f0             	xor    %r14d,%eax
  41416d:	01 f0                	add    %esi,%eax
  41416f:	8b 74 24 f0          	mov    -0x10(%rsp),%esi
  414173:	c1 c0 05             	rol    $0x5,%eax
  414176:	01 d0                	add    %edx,%eax
  414178:	8d b4 0e 40 b3 40 c0 	lea    -0x3fbf4cc0(%rsi,%rcx,1),%esi
  41417f:	89 d1                	mov    %edx,%ecx
  414181:	41 89 c4             	mov    %eax,%r12d
  414184:	31 c1                	xor    %eax,%ecx
  414186:	44 21 f1             	and    %r14d,%ecx
  414189:	31 d1                	xor    %edx,%ecx
  41418b:	01 f1                	add    %esi,%ecx
  41418d:	8b 74 24 fc          	mov    -0x4(%rsp),%esi
  414191:	c1 c1 09             	rol    $0x9,%ecx
  414194:	01 c1                	add    %eax,%ecx
  414196:	41 31 cc             	xor    %ecx,%r12d
  414199:	46 8d b4 36 51 5a 5e 	lea    0x265e5a51(%rsi,%r14,1),%r14d
  4141a0:	26 
  4141a1:	44 89 e6             	mov    %r12d,%esi
  4141a4:	41 89 cc             	mov    %ecx,%r12d
  4141a7:	21 d6                	and    %edx,%esi
  4141a9:	31 c6                	xor    %eax,%esi
  4141ab:	44 01 f6             	add    %r14d,%esi
  4141ae:	45 8d b4 15 aa c7 b6 	lea    -0x16493856(%r13,%rdx,1),%r14d
  4141b5:	e9 
  4141b6:	c1 c6 0e             	rol    $0xe,%esi
  4141b9:	01 ce                	add    %ecx,%esi
  4141bb:	41 31 f4             	xor    %esi,%r12d
  4141be:	44 89 e2             	mov    %r12d,%edx
  4141c1:	21 c2                	and    %eax,%edx
  4141c3:	31 ca                	xor    %ecx,%edx
  4141c5:	44 01 f2             	add    %r14d,%edx
  4141c8:	44 8d b4 03 5d 10 2f 	lea    -0x29d0efa3(%rbx,%rax,1),%r14d
  4141cf:	d6 
  4141d0:	89 f0                	mov    %esi,%eax
  4141d2:	c1 ca 0c             	ror    $0xc,%edx
  4141d5:	01 f2                	add    %esi,%edx
  4141d7:	31 d0                	xor    %edx,%eax
  4141d9:	21 c8                	and    %ecx,%eax
  4141db:	31 f0                	xor    %esi,%eax
  4141dd:	44 01 f0             	add    %r14d,%eax
  4141e0:	45 8d b4 0a 53 14 44 	lea    0x2441453(%r10,%rcx,1),%r14d
  4141e7:	02 
  4141e8:	89 d1                	mov    %edx,%ecx
  4141ea:	c1 c0 05             	rol    $0x5,%eax
  4141ed:	01 d0                	add    %edx,%eax
  4141ef:	31 c1                	xor    %eax,%ecx
  4141f1:	41 89 c4             	mov    %eax,%r12d
  4141f4:	21 f1                	and    %esi,%ecx
  4141f6:	31 d1                	xor    %edx,%ecx
  4141f8:	44 01 f1             	add    %r14d,%ecx
  4141fb:	45 8d b4 31 81 e6 a1 	lea    -0x275e197f(%r9,%rsi,1),%r14d
  414202:	d8 
  414203:	c1 c1 09             	rol    $0x9,%ecx
  414206:	01 c1                	add    %eax,%ecx
  414208:	41 31 cc             	xor    %ecx,%r12d
  41420b:	44 89 e6             	mov    %r12d,%esi
  41420e:	41 89 cc             	mov    %ecx,%r12d
  414211:	21 d6                	and    %edx,%esi
  414213:	31 c6                	xor    %eax,%esi
  414215:	44 01 f6             	add    %r14d,%esi
  414218:	44 8b 74 24 ec       	mov    -0x14(%rsp),%r14d
  41421d:	c1 c6 0e             	rol    $0xe,%esi
  414220:	01 ce                	add    %ecx,%esi
  414222:	41 31 f4             	xor    %esi,%r12d
  414225:	45 8d b4 16 c8 fb d3 	lea    -0x182c0438(%r14,%rdx,1),%r14d
  41422c:	e7 
  41422d:	44 89 e2             	mov    %r12d,%edx
  414230:	21 c2                	and    %eax,%edx
  414232:	31 ca                	xor    %ecx,%edx
  414234:	44 01 f2             	add    %r14d,%edx
  414237:	45 8d b4 07 e6 cd e1 	lea    0x21e1cde6(%r15,%rax,1),%r14d
  41423e:	21 
  41423f:	89 f0                	mov    %esi,%eax
  414241:	c1 ca 0c             	ror    $0xc,%edx
  414244:	01 f2                	add    %esi,%edx
  414246:	31 d0                	xor    %edx,%eax
  414248:	21 c8                	and    %ecx,%eax
  41424a:	31 f0                	xor    %esi,%eax
  41424c:	44 01 f0             	add    %r14d,%eax
  41424f:	44 8d b4 0d d6 07 37 	lea    -0x3cc8f82a(%rbp,%rcx,1),%r14d
  414256:	c3 
  414257:	89 d1                	mov    %edx,%ecx
  414259:	c1 c0 05             	rol    $0x5,%eax
  41425c:	01 d0                	add    %edx,%eax
  41425e:	31 c1                	xor    %eax,%ecx
  414260:	41 89 c4             	mov    %eax,%r12d
  414263:	21 f1                	and    %esi,%ecx
  414265:	31 d1                	xor    %edx,%ecx
  414267:	44 01 f1             	add    %r14d,%ecx
  41426a:	44 8b 74 24 e8       	mov    -0x18(%rsp),%r14d
  41426f:	c1 c1 09             	rol    $0x9,%ecx
  414272:	01 c1                	add    %eax,%ecx
  414274:	41 31 cc             	xor    %ecx,%r12d
  414277:	45 8d b4 36 87 0d d5 	lea    -0xb2af279(%r14,%rsi,1),%r14d
  41427e:	f4 
  41427f:	44 89 e6             	mov    %r12d,%esi
  414282:	41 89 cc             	mov    %ecx,%r12d
  414285:	21 d6                	and    %edx,%esi
  414287:	31 c6                	xor    %eax,%esi
  414289:	44 01 f6             	add    %r14d,%esi
  41428c:	44 8b 74 24 f8       	mov    -0x8(%rsp),%r14d
  414291:	c1 c6 0e             	rol    $0xe,%esi
  414294:	01 ce                	add    %ecx,%esi
  414296:	41 31 f4             	xor    %esi,%r12d
  414299:	45 8d b4 16 ed 14 5a 	lea    0x455a14ed(%r14,%rdx,1),%r14d
  4142a0:	45 
  4142a1:	44 89 e2             	mov    %r12d,%edx
  4142a4:	21 c2                	and    %eax,%edx
  4142a6:	31 ca                	xor    %ecx,%edx
  4142a8:	44 01 f2             	add    %r14d,%edx
  4142ab:	45 8d b4 00 05 e9 e3 	lea    -0x561c16fb(%r8,%rax,1),%r14d
  4142b2:	a9 
  4142b3:	89 f0                	mov    %esi,%eax
  4142b5:	c1 ca 0c             	ror    $0xc,%edx
  4142b8:	01 f2                	add    %esi,%edx
  4142ba:	31 d0                	xor    %edx,%eax
  4142bc:	21 c8                	and    %ecx,%eax
  4142be:	31 f0                	xor    %esi,%eax
  4142c0:	44 01 f0             	add    %r14d,%eax
  4142c3:	44 8b 74 24 e4       	mov    -0x1c(%rsp),%r14d
  4142c8:	c1 c0 05             	rol    $0x5,%eax
  4142cb:	01 d0                	add    %edx,%eax
  4142cd:	45 8d b4 0e f8 a3 ef 	lea    -0x3105c08(%r14,%rcx,1),%r14d
  4142d4:	fc 
  4142d5:	89 d1                	mov    %edx,%ecx
  4142d7:	41 89 c4             	mov    %eax,%r12d
  4142da:	31 c1                	xor    %eax,%ecx
  4142dc:	21 f1                	and    %esi,%ecx
  4142de:	31 d1                	xor    %edx,%ecx
  4142e0:	44 01 f1             	add    %r14d,%ecx
  4142e3:	44 8b 74 24 f4       	mov    -0xc(%rsp),%r14d
  4142e8:	c1 c1 09             	rol    $0x9,%ecx
  4142eb:	01 c1                	add    %eax,%ecx
  4142ed:	41 31 cc             	xor    %ecx,%r12d
  4142f0:	45 8d b4 36 d9 02 6f 	lea    0x676f02d9(%r14,%rsi,1),%r14d
  4142f7:	67 
  4142f8:	44 89 e6             	mov    %r12d,%esi
  4142fb:	41 89 cc             	mov    %ecx,%r12d
  4142fe:	21 d6                	and    %edx,%esi
  414300:	41 8d 94 13 8a 4c 2a 	lea    -0x72d5b376(%r11,%rdx,1),%edx
  414307:	8d 
  414308:	31 c6                	xor    %eax,%esi
  41430a:	44 01 f6             	add    %r14d,%esi
  41430d:	c1 c6 0e             	rol    $0xe,%esi
  414310:	01 ce                	add    %ecx,%esi
  414312:	41 31 f4             	xor    %esi,%r12d
  414315:	45 89 e6             	mov    %r12d,%r14d
  414318:	41 89 c4             	mov    %eax,%r12d
  41431b:	8d 84 03 42 39 fa ff 	lea    -0x5c6be(%rbx,%rax,1),%eax
  414322:	45 21 f4             	and    %r14d,%r12d
  414325:	41 31 cc             	xor    %ecx,%r12d
  414328:	44 01 e2             	add    %r12d,%edx
  41432b:	c1 ca 0c             	ror    $0xc,%edx
  41432e:	01 f2                	add    %esi,%edx
  414330:	41 31 d6             	xor    %edx,%r14d
  414333:	41 89 d4             	mov    %edx,%r12d
  414336:	41 01 c6             	add    %eax,%r14d
  414339:	8b 44 24 f8          	mov    -0x8(%rsp),%eax
  41433d:	41 c1 c6 04          	rol    $0x4,%r14d
  414341:	41 01 d6             	add    %edx,%r14d
  414344:	8d 84 08 81 f6 71 87 	lea    -0x788e097f(%rax,%rcx,1),%eax
  41434b:	89 f1                	mov    %esi,%ecx
  41434d:	45 31 f4             	xor    %r14d,%r12d
  414350:	31 d1                	xor    %edx,%ecx
  414352:	8d 94 15 0c 38 e5 fd 	lea    -0x21ac7f4(%rbp,%rdx,1),%edx
  414359:	44 31 f1             	xor    %r14d,%ecx
  41435c:	01 c1                	add    %eax,%ecx
  41435e:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
  414362:	c1 c1 0b             	rol    $0xb,%ecx
  414365:	44 01 f1             	add    %r14d,%ecx
  414368:	8d 84 30 22 61 9d 6d 	lea    0x6d9d6122(%rax,%rsi,1),%eax
  41436f:	44 89 e6             	mov    %r12d,%esi
  414372:	45 89 f4             	mov    %r14d,%r12d
  414375:	31 ce                	xor    %ecx,%esi
  414377:	41 31 cc             	xor    %ecx,%r12d
  41437a:	01 c6                	add    %eax,%esi
  41437c:	44 89 e0             	mov    %r12d,%eax
  41437f:	41 89 cc             	mov    %ecx,%r12d
  414382:	c1 c6 10             	rol    $0x10,%esi
  414385:	01 ce                	add    %ecx,%esi
  414387:	31 f0                	xor    %esi,%eax
  414389:	41 31 f4             	xor    %esi,%r12d
  41438c:	01 d0                	add    %edx,%eax
  41438e:	8b 54 24 e0          	mov    -0x20(%rsp),%edx
  414392:	c1 c8 09             	ror    $0x9,%eax
  414395:	01 f0                	add    %esi,%eax
  414397:	42 8d 94 32 44 ea be 	lea    -0x5b4115bc(%rdx,%r14,1),%edx
  41439e:	a4 
  41439f:	45 89 e6             	mov    %r12d,%r14d
  4143a2:	41 89 c4             	mov    %eax,%r12d
  4143a5:	41 31 c6             	xor    %eax,%r14d
  4143a8:	41 01 d6             	add    %edx,%r14d
  4143ab:	8b 54 24 ec          	mov    -0x14(%rsp),%edx
  4143af:	41 c1 c6 04          	rol    $0x4,%r14d
  4143b3:	41 01 c6             	add    %eax,%r14d
  4143b6:	8d 94 0a a9 cf de 4b 	lea    0x4bdecfa9(%rdx,%rcx,1),%edx
  4143bd:	89 f1                	mov    %esi,%ecx
  4143bf:	45 31 f4             	xor    %r14d,%r12d
  4143c2:	31 c1                	xor    %eax,%ecx
  4143c4:	41 8d 84 02 70 bc bf 	lea    -0x41404390(%r10,%rax,1),%eax
  4143cb:	be 
  4143cc:	44 31 f1             	xor    %r14d,%ecx
  4143cf:	01 d1                	add    %edx,%ecx
  4143d1:	8b 54 24 f4          	mov    -0xc(%rsp),%edx
  4143d5:	c1 c1 0b             	rol    $0xb,%ecx
  4143d8:	44 01 f1             	add    %r14d,%ecx
  4143db:	8d b4 32 60 4b bb f6 	lea    -0x944b4a0(%rdx,%rsi,1),%esi
  4143e2:	44 89 e2             	mov    %r12d,%edx
  4143e5:	41 89 cc             	mov    %ecx,%r12d
  4143e8:	31 ca                	xor    %ecx,%edx
  4143ea:	01 f2                	add    %esi,%edx
  4143ec:	44 89 f6             	mov    %r14d,%esi
  4143ef:	c1 c2 10             	rol    $0x10,%edx
  4143f2:	31 ce                	xor    %ecx,%esi
  4143f4:	01 ca                	add    %ecx,%edx
  4143f6:	41 8d 8c 0d fa 27 a1 	lea    -0x155ed806(%r13,%rcx,1),%ecx
  4143fd:	ea 
  4143fe:	31 d6                	xor    %edx,%esi
  414400:	41 31 d4             	xor    %edx,%r12d
  414403:	01 c6                	add    %eax,%esi
  414405:	43 8d 84 30 c6 7e 9b 	lea    0x289b7ec6(%r8,%r14,1),%eax
  41440c:	28 
  41440d:	45 89 e6             	mov    %r12d,%r14d
  414410:	c1 ce 09             	ror    $0x9,%esi
  414413:	41 89 d4             	mov    %edx,%r12d
  414416:	01 d6                	add    %edx,%esi
  414418:	41 31 f6             	xor    %esi,%r14d
  41441b:	41 31 f4             	xor    %esi,%r12d
  41441e:	41 01 c6             	add    %eax,%r14d
  414421:	44 89 e0             	mov    %r12d,%eax
  414424:	41 c1 c6 04          	rol    $0x4,%r14d
  414428:	41 01 f6             	add    %esi,%r14d
  41442b:	44 31 f0             	xor    %r14d,%eax
  41442e:	01 c8                	add    %ecx,%eax
  414430:	8b 4c 24 e8          	mov    -0x18(%rsp),%ecx
  414434:	c1 c0 0b             	rol    $0xb,%eax
  414437:	44 01 f0             	add    %r14d,%eax
  41443a:	8d 94 11 85 30 ef d4 	lea    -0x2b10cf7b(%rcx,%rdx,1),%edx
  414441:	89 f1                	mov    %esi,%ecx
  414443:	41 89 c4             	mov    %eax,%r12d
  414446:	44 31 f1             	xor    %r14d,%ecx
  414449:	31 c1                	xor    %eax,%ecx
  41444b:	01 d1                	add    %edx,%ecx
  41444d:	8b 54 24 f0          	mov    -0x10(%rsp),%edx
  414451:	c1 c1 10             	rol    $0x10,%ecx
  414454:	01 c1                	add    %eax,%ecx
  414456:	8d 94 32 05 1d 88 04 	lea    0x4881d05(%rdx,%rsi,1),%edx
  41445d:	44 89 f6             	mov    %r14d,%esi
  414460:	41 31 cc             	xor    %ecx,%r12d
  414463:	31 c6                	xor    %eax,%esi
  414465:	47 8d b4 37 39 d0 d4 	lea    -0x262b2fc7(%r15,%r14,1),%r14d
  41446c:	d9 
  41446d:	41 8d 84 03 e5 99 db 	lea    -0x1924661b(%r11,%rax,1),%eax
  414474:	e6 
  414475:	31 ce                	xor    %ecx,%esi
  414477:	01 d6                	add    %edx,%esi
  414479:	44 89 e2             	mov    %r12d,%edx
  41447c:	41 89 cc             	mov    %ecx,%r12d
  41447f:	c1 ce 09             	ror    $0x9,%esi
  414482:	01 ce                	add    %ecx,%esi
  414484:	31 f2                	xor    %esi,%edx
  414486:	44 01 f2             	add    %r14d,%edx
  414489:	c1 c2 04             	rol    $0x4,%edx
  41448c:	01 f2                	add    %esi,%edx
  41448e:	41 31 f4             	xor    %esi,%r12d
  414491:	45 89 e6             	mov    %r12d,%r14d
  414494:	41 31 d6             	xor    %edx,%r14d
  414497:	41 01 c6             	add    %eax,%r14d
  41449a:	41 8d 84 09 f8 7c a2 	lea    0x1fa27cf8(%r9,%rcx,1),%eax
  4144a1:	1f 
  4144a2:	89 f1                	mov    %esi,%ecx
  4144a4:	41 c1 c6 0b          	rol    $0xb,%r14d
  4144a8:	31 d1                	xor    %edx,%ecx
  4144aa:	41 01 d6             	add    %edx,%r14d
  4144ad:	44 31 f1             	xor    %r14d,%ecx
  4144b0:	01 c1                	add    %eax,%ecx
  4144b2:	8b 44 24 e4          	mov    -0x1c(%rsp),%eax
  4144b6:	c1 c1 10             	rol    $0x10,%ecx
  4144b9:	44 01 f1             	add    %r14d,%ecx
  4144bc:	8d 84 30 65 56 ac c4 	lea    -0x3b53a99b(%rax,%rsi,1),%eax
  4144c3:	89 d6                	mov    %edx,%esi
  4144c5:	41 8d 94 15 44 22 29 	lea    -0xbd6ddbc(%r13,%rdx,1),%edx
  4144cc:	f4 
  4144cd:	44 31 f6             	xor    %r14d,%esi
  4144d0:	41 89 cc             	mov    %ecx,%r12d
  4144d3:	31 ce                	xor    %ecx,%esi
  4144d5:	41 f7 d4             	not    %r12d
  4144d8:	01 f0                	add    %esi,%eax
  4144da:	44 89 f6             	mov    %r14d,%esi
  4144dd:	c1 c8 09             	ror    $0x9,%eax
  4144e0:	f7 d6                	not    %esi
  4144e2:	01 c8                	add    %ecx,%eax
  4144e4:	09 c6                	or     %eax,%esi
  4144e6:	31 ce                	xor    %ecx,%esi
  4144e8:	8d 8c 0d a7 23 94 ab 	lea    -0x546bdc59(%rbp,%rcx,1),%ecx
  4144ef:	89 c5                	mov    %eax,%ebp
  4144f1:	01 f2                	add    %esi,%edx
  4144f3:	8b 74 24 f4          	mov    -0xc(%rsp),%esi
  4144f7:	f7 d5                	not    %ebp
  4144f9:	c1 c2 06             	rol    $0x6,%edx
  4144fc:	01 c2                	add    %eax,%edx
  4144fe:	41 09 d4             	or     %edx,%r12d
  414501:	42 8d b4 36 97 ff 2a 	lea    0x432aff97(%rsi,%r14,1),%esi
  414508:	43 
  414509:	41 31 c4             	xor    %eax,%r12d
  41450c:	8d 84 03 39 a0 93 fc 	lea    -0x36c5fc7(%rbx,%rax,1),%eax
  414513:	44 01 e6             	add    %r12d,%esi
  414516:	c1 c6 0a             	rol    $0xa,%esi
  414519:	01 d6                	add    %edx,%esi
  41451b:	09 f5                	or     %esi,%ebp
  41451d:	31 d5                	xor    %edx,%ebp
  41451f:	01 e9                	add    %ebp,%ecx
  414521:	89 d5                	mov    %edx,%ebp
  414523:	41 8d 94 13 c3 59 5b 	lea    0x655b59c3(%r11,%rdx,1),%edx
  41452a:	65 
  41452b:	c1 c1 0f             	rol    $0xf,%ecx
  41452e:	f7 d5                	not    %ebp
  414530:	01 f1                	add    %esi,%ecx
  414532:	89 eb                	mov    %ebp,%ebx
  414534:	89 f5                	mov    %esi,%ebp
  414536:	09 cb                	or     %ecx,%ebx
  414538:	f7 d5                	not    %ebp
  41453a:	31 f3                	xor    %esi,%ebx
  41453c:	41 89 eb             	mov    %ebp,%r11d
  41453f:	01 d8                	add    %ebx,%eax
  414541:	8b 5c 24 e0          	mov    -0x20(%rsp),%ebx
  414545:	c1 c8 0b             	ror    $0xb,%eax
  414548:	01 c8                	add    %ecx,%eax
  41454a:	41 09 c3             	or     %eax,%r11d
  41454d:	41 31 cb             	xor    %ecx,%r11d
  414550:	44 01 da             	add    %r11d,%edx
  414553:	44 8b 5c 24 e8       	mov    -0x18(%rsp),%r11d
  414558:	c1 c2 06             	rol    $0x6,%edx
  41455b:	01 c2                	add    %eax,%edx
  41455d:	41 8d b4 33 92 cc 0c 	lea    -0x70f3336e(%r11,%rsi,1),%esi
  414564:	8f 
  414565:	41 89 cb             	mov    %ecx,%r11d
  414568:	41 8d 8c 0a 7d f4 ef 	lea    -0x100b83(%r10,%rcx,1),%ecx
  41456f:	ff 
  414570:	41 f7 d3             	not    %r11d
  414573:	41 89 c2             	mov    %eax,%r10d
  414576:	41 09 d3             	or     %edx,%r11d
  414579:	41 f7 d2             	not    %r10d
  41457c:	41 31 c3             	xor    %eax,%r11d
  41457f:	8d 84 03 d1 5d 84 85 	lea    -0x7a7ba22f(%rbx,%rax,1),%eax
  414586:	44 01 de             	add    %r11d,%esi
  414589:	c1 c6 0a             	rol    $0xa,%esi
  41458c:	01 d6                	add    %edx,%esi
  41458e:	41 09 f2             	or     %esi,%r10d
  414591:	41 31 d2             	xor    %edx,%r10d
  414594:	44 01 d1             	add    %r10d,%ecx
  414597:	41 89 d2             	mov    %edx,%r10d
  41459a:	c1 c1 0f             	rol    $0xf,%ecx
  41459d:	41 f7 d2             	not    %r10d
  4145a0:	01 f1                	add    %esi,%ecx
  4145a2:	41 09 ca             	or     %ecx,%r10d
  4145a5:	41 31 f2             	xor    %esi,%r10d
  4145a8:	44 01 d0             	add    %r10d,%eax
  4145ab:	44 8b 54 24 f8       	mov    -0x8(%rsp),%r10d
  4145b0:	44 8b 5c 24 f0       	mov    -0x10(%rsp),%r11d
  4145b5:	c1 c8 0b             	ror    $0xb,%eax
  4145b8:	8b 5c 24 ec          	mov    -0x14(%rsp),%ebx
  4145bc:	44 8b 74 24 e4       	mov    -0x1c(%rsp),%r14d
  4145c1:	01 c8                	add    %ecx,%eax
  4145c3:	41 8d 94 12 4f 7e a8 	lea    0x6fa87e4f(%r10,%rdx,1),%edx
  4145ca:	6f 
  4145cb:	41 89 f2             	mov    %esi,%r10d
  4145ce:	41 8d b4 31 e0 e6 2c 	lea    -0x1d31920(%r9,%rsi,1),%esi
  4145d5:	fe 
  4145d6:	41 f7 d2             	not    %r10d
  4145d9:	41 89 c9             	mov    %ecx,%r9d
  4145dc:	41 09 c2             	or     %eax,%r10d
  4145df:	41 f7 d1             	not    %r9d
  4145e2:	41 31 ca             	xor    %ecx,%r10d
  4145e5:	44 01 d2             	add    %r10d,%edx
  4145e8:	c1 c2 06             	rol    $0x6,%edx
  4145eb:	01 c2                	add    %eax,%edx
  4145ed:	41 09 d1             	or     %edx,%r9d
  4145f0:	41 31 c1             	xor    %eax,%r9d
  4145f3:	44 01 ce             	add    %r9d,%esi
  4145f6:	45 8d 8c 0b 14 43 01 	lea    -0x5cfebcec(%r11,%rcx,1),%r9d
  4145fd:	a3 
  4145fe:	89 c1                	mov    %eax,%ecx
  414600:	c1 c6 0a             	rol    $0xa,%esi
  414603:	f7 d1                	not    %ecx
  414605:	41 8d 84 00 a1 11 08 	lea    0x4e0811a1(%r8,%rax,1),%eax
  41460c:	4e 
  41460d:	01 d6                	add    %edx,%esi
  41460f:	41 89 d0             	mov    %edx,%r8d
  414612:	09 f1                	or     %esi,%ecx
  414614:	41 f7 d0             	not    %r8d
  414617:	41 89 f3             	mov    %esi,%r11d
  41461a:	31 d1                	xor    %edx,%ecx
  41461c:	41 f7 d3             	not    %r11d
  41461f:	8d 94 13 82 7e 53 f7 	lea    -0x8ac817e(%rbx,%rdx,1),%edx
  414626:	44 01 c9             	add    %r9d,%ecx
  414629:	8b 5c 24 fc          	mov    -0x4(%rsp),%ebx
  41462d:	c1 c1 0f             	rol    $0xf,%ecx
  414630:	01 f1                	add    %esi,%ecx
  414632:	41 09 c8             	or     %ecx,%r8d
  414635:	41 31 f0             	xor    %esi,%r8d
  414638:	41 01 c0             	add    %eax,%r8d
  41463b:	44 89 d8             	mov    %r11d,%eax
  41463e:	41 c1 c8 0b          	ror    $0xb,%r8d
  414642:	41 01 c8             	add    %ecx,%r8d
  414645:	44 09 c0             	or     %r8d,%eax
  414648:	31 c8                	xor    %ecx,%eax
  41464a:	01 d0                	add    %edx,%eax
  41464c:	8d 94 33 35 f2 3a bd 	lea    -0x42c50dcb(%rbx,%rsi,1),%edx
  414653:	89 ce                	mov    %ecx,%esi
  414655:	c1 c0 06             	rol    $0x6,%eax
  414658:	f7 d6                	not    %esi
  41465a:	41 8d 8c 0e bb d2 d7 	lea    0x2ad7d2bb(%r14,%rcx,1),%ecx
  414661:	2a 
  414662:	44 01 c0             	add    %r8d,%eax
  414665:	09 c6                	or     %eax,%esi
  414667:	44 31 c6             	xor    %r8d,%esi
  41466a:	01 d6                	add    %edx,%esi
  41466c:	44 89 c2             	mov    %r8d,%edx
  41466f:	c1 c6 0a             	rol    $0xa,%esi
  414672:	f7 d2                	not    %edx
  414674:	01 c6                	add    %eax,%esi
  414676:	09 f2                	or     %esi,%edx
  414678:	31 c2                	xor    %eax,%edx
  41467a:	01 ca                	add    %ecx,%edx
  41467c:	43 8d 8c 07 91 d3 86 	lea    -0x14792c6f(%r15,%r8,1),%ecx
  414683:	eb 
  414684:	41 89 c0             	mov    %eax,%r8d
  414687:	c1 c2 0f             	rol    $0xf,%edx
  41468a:	41 f7 d0             	not    %r8d
  41468d:	03 07                	add    (%rdi),%eax
  41468f:	01 f2                	add    %esi,%edx
  414691:	41 09 d0             	or     %edx,%r8d
  414694:	41 31 f0             	xor    %esi,%r8d
  414697:	41 01 c8             	add    %ecx,%r8d
  41469a:	8b 4f 04             	mov    0x4(%rdi),%ecx
  41469d:	89 07                	mov    %eax,(%rdi)
  41469f:	44 89 c0             	mov    %r8d,%eax
  4146a2:	c1 c8 0b             	ror    $0xb,%eax
  4146a5:	01 d1                	add    %edx,%ecx
  4146a7:	01 c8                	add    %ecx,%eax
  4146a9:	03 57 08             	add    0x8(%rdi),%edx
  4146ac:	03 77 0c             	add    0xc(%rdi),%esi
  4146af:	5b                   	pop    %rbx
  4146b0:	89 47 04             	mov    %eax,0x4(%rdi)
  4146b3:	5d                   	pop    %rbp
  4146b4:	89 57 08             	mov    %edx,0x8(%rdi)
  4146b7:	89 77 0c             	mov    %esi,0xc(%rdi)
  4146ba:	41 5c                	pop    %r12
  4146bc:	41 5d                	pop    %r13
  4146be:	41 5e                	pop    %r14
  4146c0:	41 5f                	pop    %r15
  4146c2:	c3                   	retq   
  4146c3:	0f 1f 00             	nopl   (%rax)
  4146c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4146cd:	00 00 00 

00000000004146d0 <caml_MD5Update>:
  4146d0:	41 57                	push   %r15
  4146d2:	41 56                	push   %r14
  4146d4:	49 89 ff             	mov    %rdi,%r15
  4146d7:	41 55                	push   %r13
  4146d9:	41 54                	push   %r12
  4146db:	49 89 d5             	mov    %rdx,%r13
  4146de:	55                   	push   %rbp
  4146df:	53                   	push   %rbx
  4146e0:	49 89 f6             	mov    %rsi,%r14
  4146e3:	48 83 ec 08          	sub    $0x8,%rsp
  4146e7:	8b 47 10             	mov    0x10(%rdi),%eax
  4146ea:	8b 4f 14             	mov    0x14(%rdi),%ecx
  4146ed:	8d 14 d0             	lea    (%rax,%rdx,8),%edx
  4146f0:	39 d0                	cmp    %edx,%eax
  4146f2:	89 57 10             	mov    %edx,0x10(%rdi)
  4146f5:	76 03                	jbe    4146fa <caml_MD5Update+0x2a>
  4146f7:	83 c1 01             	add    $0x1,%ecx
  4146fa:	4c 89 ea             	mov    %r13,%rdx
  4146fd:	c1 e8 03             	shr    $0x3,%eax
  414700:	49 8d 6f 18          	lea    0x18(%r15),%rbp
  414704:	48 c1 ea 1d          	shr    $0x1d,%rdx
  414708:	01 ca                	add    %ecx,%edx
  41470a:	83 e0 3f             	and    $0x3f,%eax
  41470d:	41 89 57 14          	mov    %edx,0x14(%r15)
  414711:	74 4e                	je     414761 <caml_MD5Update+0x91>
  414713:	ba 40 00 00 00       	mov    $0x40,%edx
  414718:	89 c7                	mov    %eax,%edi
  41471a:	29 c2                	sub    %eax,%edx
  41471c:	48 01 ef             	add    %rbp,%rdi
  41471f:	89 d3                	mov    %edx,%ebx
  414721:	49 39 dd             	cmp    %rbx,%r13
  414724:	48 89 d8             	mov    %rbx,%rax
  414727:	0f 82 43 01 00 00    	jb     414870 <caml_MD5Update+0x1a0>
  41472d:	83 fb 08             	cmp    $0x8,%ebx
  414730:	0f 83 5a 01 00 00    	jae    414890 <caml_MD5Update+0x1c0>
  414736:	a8 04                	test   $0x4,%al
  414738:	0f 85 b0 01 00 00    	jne    4148ee <caml_MD5Update+0x21e>
  41473e:	85 db                	test   %ebx,%ebx
  414740:	74 0e                	je     414750 <caml_MD5Update+0x80>
  414742:	41 0f b6 16          	movzbl (%r14),%edx
  414746:	a8 02                	test   $0x2,%al
  414748:	88 17                	mov    %dl,(%rdi)
  41474a:	0f 85 b1 01 00 00    	jne    414901 <caml_MD5Update+0x231>
  414750:	48 89 ee             	mov    %rbp,%rsi
  414753:	4c 89 ff             	mov    %r15,%rdi
  414756:	49 01 de             	add    %rbx,%r14
  414759:	49 29 dd             	sub    %rbx,%r13
  41475c:	e8 bf f7 ff ff       	callq  413f20 <caml_MD5Transform>
  414761:	49 83 fd 3f          	cmp    $0x3f,%r13
  414765:	76 72                	jbe    4147d9 <caml_MD5Update+0x109>
  414767:	4d 89 ec             	mov    %r13,%r12
  41476a:	4c 89 f3             	mov    %r14,%rbx
  41476d:	0f 1f 00             	nopl   (%rax)
  414770:	48 8b 03             	mov    (%rbx),%rax
  414773:	48 89 ee             	mov    %rbp,%rsi
  414776:	4c 89 ff             	mov    %r15,%rdi
  414779:	49 83 ec 40          	sub    $0x40,%r12
  41477d:	48 83 c3 40          	add    $0x40,%rbx
  414781:	48 89 45 00          	mov    %rax,0x0(%rbp)
  414785:	48 8b 43 c8          	mov    -0x38(%rbx),%rax
  414789:	48 89 45 08          	mov    %rax,0x8(%rbp)
  41478d:	48 8b 43 d0          	mov    -0x30(%rbx),%rax
  414791:	48 89 45 10          	mov    %rax,0x10(%rbp)
  414795:	48 8b 43 d8          	mov    -0x28(%rbx),%rax
  414799:	48 89 45 18          	mov    %rax,0x18(%rbp)
  41479d:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
  4147a1:	48 89 45 20          	mov    %rax,0x20(%rbp)
  4147a5:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
  4147a9:	48 89 45 28          	mov    %rax,0x28(%rbp)
  4147ad:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
  4147b1:	48 89 45 30          	mov    %rax,0x30(%rbp)
  4147b5:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  4147b9:	48 89 45 38          	mov    %rax,0x38(%rbp)
  4147bd:	e8 5e f7 ff ff       	callq  413f20 <caml_MD5Transform>
  4147c2:	49 83 fc 3f          	cmp    $0x3f,%r12
  4147c6:	77 a8                	ja     414770 <caml_MD5Update+0xa0>
  4147c8:	49 8d 45 c0          	lea    -0x40(%r13),%rax
  4147cc:	41 83 e5 3f          	and    $0x3f,%r13d
  4147d0:	48 83 e0 c0          	and    $0xffffffffffffffc0,%rax
  4147d4:	4d 8d 74 06 40       	lea    0x40(%r14,%rax,1),%r14
  4147d9:	41 83 fd 08          	cmp    $0x8,%r13d
  4147dd:	44 89 e8             	mov    %r13d,%eax
  4147e0:	72 5e                	jb     414840 <caml_MD5Update+0x170>
  4147e2:	49 8b 06             	mov    (%r14),%rax
  4147e5:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4147e9:	44 89 e8             	mov    %r13d,%eax
  4147ec:	49 8b 54 06 f8       	mov    -0x8(%r14,%rax,1),%rdx
  4147f1:	48 89 54 05 f8       	mov    %rdx,-0x8(%rbp,%rax,1)
  4147f6:	48 8d 55 08          	lea    0x8(%rbp),%rdx
  4147fa:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
  4147fe:	48 29 d5             	sub    %rdx,%rbp
  414801:	41 8d 44 2d 00       	lea    0x0(%r13,%rbp,1),%eax
  414806:	49 29 ee             	sub    %rbp,%r14
  414809:	83 e0 f8             	and    $0xfffffff8,%eax
  41480c:	83 f8 08             	cmp    $0x8,%eax
  41480f:	72 18                	jb     414829 <caml_MD5Update+0x159>
  414811:	83 e0 f8             	and    $0xfffffff8,%eax
  414814:	89 c5                	mov    %eax,%ebp
  414816:	31 c0                	xor    %eax,%eax
  414818:	89 c1                	mov    %eax,%ecx
  41481a:	83 c0 08             	add    $0x8,%eax
  41481d:	49 8b 34 0e          	mov    (%r14,%rcx,1),%rsi
  414821:	39 e8                	cmp    %ebp,%eax
  414823:	48 89 34 0a          	mov    %rsi,(%rdx,%rcx,1)
  414827:	72 ef                	jb     414818 <caml_MD5Update+0x148>
  414829:	48 83 c4 08          	add    $0x8,%rsp
  41482d:	5b                   	pop    %rbx
  41482e:	5d                   	pop    %rbp
  41482f:	41 5c                	pop    %r12
  414831:	41 5d                	pop    %r13
  414833:	41 5e                	pop    %r14
  414835:	41 5f                	pop    %r15
  414837:	c3                   	retq   
  414838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41483f:	00 
  414840:	41 83 e5 04          	and    $0x4,%r13d
  414844:	0f 85 90 00 00 00    	jne    4148da <caml_MD5Update+0x20a>
  41484a:	85 c0                	test   %eax,%eax
  41484c:	74 db                	je     414829 <caml_MD5Update+0x159>
  41484e:	41 0f b6 16          	movzbl (%r14),%edx
  414852:	a8 02                	test   $0x2,%al
  414854:	88 55 00             	mov    %dl,0x0(%rbp)
  414857:	74 d0                	je     414829 <caml_MD5Update+0x159>
  414859:	41 0f b7 54 06 fe    	movzwl -0x2(%r14,%rax,1),%edx
  41485f:	66 89 54 05 fe       	mov    %dx,-0x2(%rbp,%rax,1)
  414864:	eb c3                	jmp    414829 <caml_MD5Update+0x159>
  414866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41486d:	00 00 00 
  414870:	48 83 c4 08          	add    $0x8,%rsp
  414874:	4c 89 ea             	mov    %r13,%rdx
  414877:	4c 89 f6             	mov    %r14,%rsi
  41487a:	5b                   	pop    %rbx
  41487b:	5d                   	pop    %rbp
  41487c:	41 5c                	pop    %r12
  41487e:	41 5d                	pop    %r13
  414880:	41 5e                	pop    %r14
  414882:	41 5f                	pop    %r15
  414884:	e9 87 d3 fe ff       	jmpq   401c10 <memcpy@plt>
  414889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  414890:	49 8b 16             	mov    (%r14),%rdx
  414893:	4c 89 f6             	mov    %r14,%rsi
  414896:	48 89 17             	mov    %rdx,(%rdi)
  414899:	49 8b 54 1e f8       	mov    -0x8(%r14,%rbx,1),%rdx
  41489e:	48 89 54 1f f8       	mov    %rdx,-0x8(%rdi,%rbx,1)
  4148a3:	48 8d 57 08          	lea    0x8(%rdi),%rdx
  4148a7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
  4148ab:	48 29 d7             	sub    %rdx,%rdi
  4148ae:	48 29 fe             	sub    %rdi,%rsi
  4148b1:	01 df                	add    %ebx,%edi
  4148b3:	83 e7 f8             	and    $0xfffffff8,%edi
  4148b6:	83 ff 08             	cmp    $0x8,%edi
  4148b9:	0f 82 91 fe ff ff    	jb     414750 <caml_MD5Update+0x80>
  4148bf:	83 e7 f8             	and    $0xfffffff8,%edi
  4148c2:	31 c0                	xor    %eax,%eax
  4148c4:	89 c1                	mov    %eax,%ecx
  4148c6:	83 c0 08             	add    $0x8,%eax
  4148c9:	4c 8b 04 0e          	mov    (%rsi,%rcx,1),%r8
  4148cd:	39 f8                	cmp    %edi,%eax
  4148cf:	4c 89 04 0a          	mov    %r8,(%rdx,%rcx,1)
  4148d3:	72 ef                	jb     4148c4 <caml_MD5Update+0x1f4>
  4148d5:	e9 76 fe ff ff       	jmpq   414750 <caml_MD5Update+0x80>
  4148da:	41 8b 16             	mov    (%r14),%edx
  4148dd:	89 55 00             	mov    %edx,0x0(%rbp)
  4148e0:	41 8b 54 06 fc       	mov    -0x4(%r14,%rax,1),%edx
  4148e5:	89 54 05 fc          	mov    %edx,-0x4(%rbp,%rax,1)
  4148e9:	e9 3b ff ff ff       	jmpq   414829 <caml_MD5Update+0x159>
  4148ee:	41 8b 06             	mov    (%r14),%eax
  4148f1:	89 07                	mov    %eax,(%rdi)
  4148f3:	41 8b 44 1e fc       	mov    -0x4(%r14,%rbx,1),%eax
  4148f8:	89 44 1f fc          	mov    %eax,-0x4(%rdi,%rbx,1)
  4148fc:	e9 4f fe ff ff       	jmpq   414750 <caml_MD5Update+0x80>
  414901:	41 0f b7 44 1e fe    	movzwl -0x2(%r14,%rbx,1),%eax
  414907:	66 89 44 1f fe       	mov    %ax,-0x2(%rdi,%rbx,1)
  41490c:	e9 3f fe ff ff       	jmpq   414750 <caml_MD5Update+0x80>
  414911:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  414916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41491d:	00 00 00 

0000000000414920 <caml_MD5Final>:
  414920:	41 54                	push   %r12
  414922:	55                   	push   %rbp
  414923:	4c 8d 66 18          	lea    0x18(%rsi),%r12
  414927:	53                   	push   %rbx
  414928:	8b 46 10             	mov    0x10(%rsi),%eax
  41492b:	48 89 fd             	mov    %rdi,%rbp
  41492e:	48 89 f3             	mov    %rsi,%rbx
  414931:	c1 e8 03             	shr    $0x3,%eax
  414934:	83 e0 3f             	and    $0x3f,%eax
  414937:	89 c2                	mov    %eax,%edx
  414939:	49 8d 7c 14 01       	lea    0x1(%r12,%rdx,1),%rdi
  41493e:	c6 44 16 18 80       	movb   $0x80,0x18(%rsi,%rdx,1)
  414943:	ba 3f 00 00 00       	mov    $0x3f,%edx
  414948:	29 c2                	sub    %eax,%edx
  41494a:	83 fa 07             	cmp    $0x7,%edx
  41494d:	76 61                	jbe    4149b0 <caml_MD5Final+0x90>
  41494f:	ba 37 00 00 00       	mov    $0x37,%edx
  414954:	31 f6                	xor    %esi,%esi
  414956:	29 c2                	sub    %eax,%edx
  414958:	e8 63 d1 fe ff       	callq  401ac0 <memset@plt>
  41495d:	8b 43 10             	mov    0x10(%rbx),%eax
  414960:	48 89 df             	mov    %rbx,%rdi
  414963:	4c 89 e6             	mov    %r12,%rsi
  414966:	89 43 50             	mov    %eax,0x50(%rbx)
  414969:	8b 43 14             	mov    0x14(%rbx),%eax
  41496c:	89 43 54             	mov    %eax,0x54(%rbx)
  41496f:	e8 ac f5 ff ff       	callq  413f20 <caml_MD5Transform>
  414974:	48 8b 03             	mov    (%rbx),%rax
  414977:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  41497b:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  41497f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
  414983:	48 89 45 00          	mov    %rax,0x0(%rbp)
  414987:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  41498b:	31 c0                	xor    %eax,%eax
  41498d:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
  414994:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
  41499b:	00 
  41499c:	48 29 fb             	sub    %rdi,%rbx
  41499f:	8d 4b 58             	lea    0x58(%rbx),%ecx
  4149a2:	c1 e9 03             	shr    $0x3,%ecx
  4149a5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  4149a8:	5b                   	pop    %rbx
  4149a9:	5d                   	pop    %rbp
  4149aa:	41 5c                	pop    %r12
  4149ac:	c3                   	retq   
  4149ad:	0f 1f 00             	nopl   (%rax)
  4149b0:	85 d2                	test   %edx,%edx
  4149b2:	74 0f                	je     4149c3 <caml_MD5Final+0xa3>
  4149b4:	31 c0                	xor    %eax,%eax
  4149b6:	89 c1                	mov    %eax,%ecx
  4149b8:	83 c0 01             	add    $0x1,%eax
  4149bb:	39 d0                	cmp    %edx,%eax
  4149bd:	c6 04 0f 00          	movb   $0x0,(%rdi,%rcx,1)
  4149c1:	72 f3                	jb     4149b6 <caml_MD5Final+0x96>
  4149c3:	48 89 df             	mov    %rbx,%rdi
  4149c6:	4c 89 e6             	mov    %r12,%rsi
  4149c9:	e8 52 f5 ff ff       	callq  413f20 <caml_MD5Transform>
  4149ce:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
  4149d3:	4c 89 e1             	mov    %r12,%rcx
  4149d6:	31 c0                	xor    %eax,%eax
  4149d8:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
  4149df:	00 
  4149e0:	49 c7 44 24 30 00 00 	movq   $0x0,0x30(%r12)
  4149e7:	00 00 
  4149e9:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
  4149ed:	48 29 f9             	sub    %rdi,%rcx
  4149f0:	83 c1 38             	add    $0x38,%ecx
  4149f3:	c1 e9 03             	shr    $0x3,%ecx
  4149f6:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  4149f9:	e9 5f ff ff ff       	jmpq   41495d <caml_MD5Final+0x3d>
  4149fe:	66 90                	xchg   %ax,%ax

0000000000414a00 <caml_md5_string>:
  414a00:	53                   	push   %rbx
  414a01:	48 d1 fe             	sar    %rsi
  414a04:	48 d1 fa             	sar    %rdx
  414a07:	48 01 fe             	add    %rdi,%rsi
  414a0a:	48 83 ec 60          	sub    $0x60,%rsp
  414a0e:	48 89 e7             	mov    %rsp,%rdi
  414a11:	c7 04 24 01 23 45 67 	movl   $0x67452301,(%rsp)
  414a18:	c7 44 24 04 89 ab cd 	movl   $0xefcdab89,0x4(%rsp)
  414a1f:	ef 
  414a20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  414a27:	00 00 
  414a29:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  414a2e:	31 c0                	xor    %eax,%eax
  414a30:	c7 44 24 08 fe dc ba 	movl   $0x98badcfe,0x8(%rsp)
  414a37:	98 
  414a38:	c7 44 24 0c 76 54 32 	movl   $0x10325476,0xc(%rsp)
  414a3f:	10 
  414a40:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
  414a47:	00 
  414a48:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
  414a4f:	00 
  414a50:	e8 7b fc ff ff       	callq  4146d0 <caml_MD5Update>
  414a55:	bf 10 00 00 00       	mov    $0x10,%edi
  414a5a:	e8 51 79 00 00       	callq  41c3b0 <caml_alloc_string>
  414a5f:	48 89 e6             	mov    %rsp,%rsi
  414a62:	48 89 c7             	mov    %rax,%rdi
  414a65:	48 89 c3             	mov    %rax,%rbx
  414a68:	e8 b3 fe ff ff       	callq  414920 <caml_MD5Final>
  414a6d:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
  414a72:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  414a79:	00 00 
  414a7b:	75 09                	jne    414a86 <caml_md5_string+0x86>
  414a7d:	48 83 c4 60          	add    $0x60,%rsp
  414a81:	48 89 d8             	mov    %rbx,%rax
  414a84:	5b                   	pop    %rbx
  414a85:	c3                   	retq   
  414a86:	e8 e5 cf fe ff       	callq  401a70 <__stack_chk_fail@plt>
  414a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000414a90 <caml_md5_channel>:
  414a90:	41 57                	push   %r15
  414a92:	41 56                	push   %r14
  414a94:	41 55                	push   %r13
  414a96:	41 54                	push   %r12
  414a98:	49 89 fd             	mov    %rdi,%r13
  414a9b:	55                   	push   %rbp
  414a9c:	53                   	push   %rbx
  414a9d:	48 89 f5             	mov    %rsi,%rbp
  414aa0:	48 81 ec 78 10 00 00 	sub    $0x1078,%rsp
  414aa7:	4c 8b 35 9a 7e 21 00 	mov    0x217e9a(%rip),%r14        # 62c948 <caml_local_roots>
  414aae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  414ab5:	00 00 
  414ab7:	48 89 84 24 68 10 00 	mov    %rax,0x1068(%rsp)
  414abe:	00 
  414abf:	31 c0                	xor    %eax,%eax
  414ac1:	48 8b 05 b0 9c 21 00 	mov    0x219cb0(%rip),%rax        # 62e778 <caml_channel_mutex_lock>
  414ac8:	48 85 c0             	test   %rax,%rax
  414acb:	74 02                	je     414acf <caml_md5_channel+0x3f>
  414acd:	ff d0                	callq  *%rax
  414acf:	48 85 ed             	test   %rbp,%rbp
  414ad2:	c7 04 24 01 23 45 67 	movl   $0x67452301,(%rsp)
  414ad9:	c7 44 24 04 89 ab cd 	movl   $0xefcdab89,0x4(%rsp)
  414ae0:	ef 
  414ae1:	c7 44 24 08 fe dc ba 	movl   $0x98badcfe,0x8(%rsp)
  414ae8:	98 
  414ae9:	c7 44 24 0c 76 54 32 	movl   $0x10325476,0xc(%rsp)
  414af0:	10 
  414af1:	49 89 e7             	mov    %rsp,%r15
  414af4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
  414afb:	00 
  414afc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
  414b03:	00 
  414b04:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
  414b09:	0f 88 bf 00 00 00    	js     414bce <caml_md5_channel+0x13e>
  414b0f:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
  414b14:	0f 84 cd 00 00 00    	je     414be7 <caml_md5_channel+0x157>
  414b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  414b20:	48 81 fd 00 10 00 00 	cmp    $0x1000,%rbp
  414b27:	ba 00 10 00 00       	mov    $0x1000,%edx
  414b2c:	4c 89 e6             	mov    %r12,%rsi
  414b2f:	48 0f 46 d5          	cmovbe %rbp,%rdx
  414b33:	4c 89 ef             	mov    %r13,%rdi
  414b36:	e8 05 89 ff ff       	callq  40d440 <caml_getblock>
  414b3b:	48 63 d8             	movslq %eax,%rbx
  414b3e:	48 85 db             	test   %rbx,%rbx
  414b41:	0f 84 a8 00 00 00    	je     414bef <caml_md5_channel+0x15f>
  414b47:	48 89 da             	mov    %rbx,%rdx
  414b4a:	4c 89 e6             	mov    %r12,%rsi
  414b4d:	48 89 e7             	mov    %rsp,%rdi
  414b50:	48 29 dd             	sub    %rbx,%rbp
  414b53:	49 89 e7             	mov    %rsp,%r15
  414b56:	e8 75 fb ff ff       	callq  4146d0 <caml_MD5Update>
  414b5b:	48 85 ed             	test   %rbp,%rbp
  414b5e:	7f c0                	jg     414b20 <caml_md5_channel+0x90>
  414b60:	bf 10 00 00 00       	mov    $0x10,%edi
  414b65:	e8 46 78 00 00       	callq  41c3b0 <caml_alloc_string>
  414b6a:	4c 89 fe             	mov    %r15,%rsi
  414b6d:	48 89 c7             	mov    %rax,%rdi
  414b70:	48 89 c3             	mov    %rax,%rbx
  414b73:	e8 a8 fd ff ff       	callq  414920 <caml_MD5Final>
  414b78:	48 8b 05 f1 9b 21 00 	mov    0x219bf1(%rip),%rax        # 62e770 <caml_channel_mutex_unlock>
  414b7f:	48 85 c0             	test   %rax,%rax
  414b82:	74 05                	je     414b89 <caml_md5_channel+0xf9>
  414b84:	4c 89 ef             	mov    %r13,%rdi
  414b87:	ff d0                	callq  *%rax
  414b89:	48 8b 8c 24 68 10 00 	mov    0x1068(%rsp),%rcx
  414b90:	00 
  414b91:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  414b98:	00 00 
  414b9a:	4c 89 35 a7 7d 21 00 	mov    %r14,0x217da7(%rip)        # 62c948 <caml_local_roots>
  414ba1:	48 89 d8             	mov    %rbx,%rax
  414ba4:	75 4e                	jne    414bf4 <caml_md5_channel+0x164>
  414ba6:	48 81 c4 78 10 00 00 	add    $0x1078,%rsp
  414bad:	5b                   	pop    %rbx
  414bae:	5d                   	pop    %rbp
  414baf:	41 5c                	pop    %r12
  414bb1:	41 5d                	pop    %r13
  414bb3:	41 5e                	pop    %r14
  414bb5:	41 5f                	pop    %r15
  414bb7:	c3                   	retq   
  414bb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  414bbf:	00 
  414bc0:	48 63 d0             	movslq %eax,%rdx
  414bc3:	4c 89 e6             	mov    %r12,%rsi
  414bc6:	4c 89 ff             	mov    %r15,%rdi
  414bc9:	e8 02 fb ff ff       	callq  4146d0 <caml_MD5Update>
  414bce:	ba 00 10 00 00       	mov    $0x1000,%edx
  414bd3:	4c 89 e6             	mov    %r12,%rsi
  414bd6:	4c 89 ef             	mov    %r13,%rdi
  414bd9:	e8 62 88 ff ff       	callq  40d440 <caml_getblock>
  414bde:	85 c0                	test   %eax,%eax
  414be0:	75 de                	jne    414bc0 <caml_md5_channel+0x130>
  414be2:	e9 79 ff ff ff       	jmpq   414b60 <caml_md5_channel+0xd0>
  414be7:	49 89 e7             	mov    %rsp,%r15
  414bea:	e9 71 ff ff ff       	jmpq   414b60 <caml_md5_channel+0xd0>
  414bef:	e8 4c 5b 00 00       	callq  41a740 <caml_raise_end_of_file>
  414bf4:	e8 77 ce fe ff       	callq  401a70 <__stack_chk_fail@plt>
  414bf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000414c00 <caml_md5_chan>:
  414c00:	53                   	push   %rbx
  414c01:	48 89 f0             	mov    %rsi,%rax
  414c04:	48 d1 f8             	sar    %rax
  414c07:	48 83 ec 60          	sub    $0x60,%rsp
  414c0b:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
  414c10:	48 89 34 24          	mov    %rsi,(%rsp)
  414c14:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  414c19:	64 48 8b 1c 25 28 00 	mov    %fs:0x28,%rbx
  414c20:	00 00 
  414c22:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
  414c27:	31 db                	xor    %ebx,%ebx
  414c29:	48 8b 1d 18 7d 21 00 	mov    0x217d18(%rip),%rbx        # 62c948 <caml_local_roots>
  414c30:	48 89 0d 11 7d 21 00 	mov    %rcx,0x217d11(%rip)        # 62c948 <caml_local_roots>
  414c37:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  414c3c:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  414c43:	00 00 
  414c45:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  414c4c:	00 00 
  414c4e:	48 89 c6             	mov    %rax,%rsi
  414c51:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
  414c56:	48 89 64 24 30       	mov    %rsp,0x30(%rsp)
  414c5b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
  414c60:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  414c64:	e8 27 fe ff ff       	callq  414a90 <caml_md5_channel>
  414c69:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
  414c6e:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  414c75:	00 00 
  414c77:	48 89 1d ca 7c 21 00 	mov    %rbx,0x217cca(%rip)        # 62c948 <caml_local_roots>
  414c7e:	75 06                	jne    414c86 <caml_md5_chan+0x86>
  414c80:	48 83 c4 60          	add    $0x60,%rsp
  414c84:	5b                   	pop    %rbx
  414c85:	c3                   	retq   
  414c86:	e8 e5 cd fe ff       	callq  401a70 <__stack_chk_fail@plt>
  414c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000414c90 <caml_md5_block>:
  414c90:	53                   	push   %rbx
  414c91:	48 89 fb             	mov    %rdi,%rbx
  414c94:	48 83 ec 60          	sub    $0x60,%rsp
  414c98:	48 89 e7             	mov    %rsp,%rdi
  414c9b:	c7 04 24 01 23 45 67 	movl   $0x67452301,(%rsp)
  414ca2:	c7 44 24 04 89 ab cd 	movl   $0xefcdab89,0x4(%rsp)
  414ca9:	ef 
  414caa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  414cb1:	00 00 
  414cb3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  414cb8:	31 c0                	xor    %eax,%eax
  414cba:	c7 44 24 08 fe dc ba 	movl   $0x98badcfe,0x8(%rsp)
  414cc1:	98 
  414cc2:	c7 44 24 0c 76 54 32 	movl   $0x10325476,0xc(%rsp)
  414cc9:	10 
  414cca:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
  414cd1:	00 
  414cd2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
  414cd9:	00 
  414cda:	e8 f1 f9 ff ff       	callq  4146d0 <caml_MD5Update>
  414cdf:	48 89 e6             	mov    %rsp,%rsi
  414ce2:	48 89 df             	mov    %rbx,%rdi
  414ce5:	e8 36 fc ff ff       	callq  414920 <caml_MD5Final>
  414cea:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  414cef:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  414cf6:	00 00 
  414cf8:	75 06                	jne    414d00 <caml_md5_block+0x70>
  414cfa:	48 83 c4 60          	add    $0x60,%rsp
  414cfe:	5b                   	pop    %rbx
  414cff:	c3                   	retq   
  414d00:	e8 6b cd fe ff       	callq  401a70 <__stack_chk_fail@plt>
  414d05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  414d0c:	00 00 00 
  414d0f:	90                   	nop

0000000000414d10 <caml_static_alloc>:
  414d10:	48 d1 ff             	sar    %rdi
  414d13:	e9 b8 4a ff ff       	jmpq   4097d0 <caml_stat_alloc>
  414d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  414d1f:	00 

0000000000414d20 <caml_static_free>:
  414d20:	48 83 ec 08          	sub    $0x8,%rsp
  414d24:	e8 c7 4a ff ff       	callq  4097f0 <caml_stat_free>
  414d29:	b8 01 00 00 00       	mov    $0x1,%eax
  414d2e:	48 83 c4 08          	add    $0x8,%rsp
  414d32:	c3                   	retq   
  414d33:	0f 1f 00             	nopl   (%rax)
  414d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  414d3d:	00 00 00 

0000000000414d40 <caml_static_resize>:
  414d40:	48 d1 fe             	sar    %rsi
  414d43:	e9 b8 4a ff ff       	jmpq   409800 <caml_stat_resize>
  414d48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  414d4f:	00 

0000000000414d50 <caml_obj_is_block>:
  414d50:	83 e7 01             	and    $0x1,%edi
  414d53:	48 83 ff 01          	cmp    $0x1,%rdi
  414d57:	48 19 c0             	sbb    %rax,%rax
  414d5a:	83 e0 02             	and    $0x2,%eax
  414d5d:	48 83 c0 01          	add    $0x1,%rax
  414d61:	c3                   	retq   
  414d62:	0f 1f 40 00          	nopl   0x0(%rax)
  414d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  414d6d:	00 00 00 

0000000000414d70 <caml_obj_tag>:
  414d70:	40 f6 c7 01          	test   $0x1,%dil
  414d74:	b8 d1 07 00 00       	mov    $0x7d1,%eax
  414d79:	74 05                	je     414d80 <caml_obj_tag+0x10>
  414d7b:	c3                   	retq   
  414d7c:	0f 1f 40 00          	nopl   0x0(%rax)
  414d80:	40 f6 c7 07          	test   $0x7,%dil
  414d84:	b8 d5 07 00 00       	mov    $0x7d5,%eax
  414d89:	75 f0                	jne    414d7b <caml_obj_tag+0xb>
  414d8b:	53                   	push   %rbx
  414d8c:	48 89 fb             	mov    %rdi,%rbx
  414d8f:	e8 ac 3f ff ff       	callq  408d40 <caml_page_table_lookup>
  414d94:	89 c2                	mov    %eax,%edx
  414d96:	b8 d3 07 00 00       	mov    $0x7d3,%eax
  414d9b:	83 e2 07             	and    $0x7,%edx
  414d9e:	75 08                	jne    414da8 <caml_obj_tag+0x38>
  414da0:	5b                   	pop    %rbx
  414da1:	f3 c3                	repz retq 
  414da3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  414da8:	0f b6 43 f8          	movzbl -0x8(%rbx),%eax
  414dac:	5b                   	pop    %rbx
  414dad:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  414db2:	eb ed                	jmp    414da1 <caml_obj_tag+0x31>
  414db4:	66 90                	xchg   %ax,%ax
  414db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  414dbd:	00 00 00 

0000000000414dc0 <caml_obj_set_tag>:
  414dc0:	48 d1 fe             	sar    %rsi
  414dc3:	b8 01 00 00 00       	mov    $0x1,%eax
  414dc8:	40 88 77 f8          	mov    %sil,-0x8(%rdi)
  414dcc:	c3                   	retq   
  414dcd:	0f 1f 00             	nopl   (%rax)

0000000000414dd0 <caml_obj_block>:
  414dd0:	48 d1 ff             	sar    %rdi
  414dd3:	48 d1 fe             	sar    %rsi
  414dd6:	75 10                	jne    414de8 <caml_obj_block+0x18>
  414dd8:	89 ff                	mov    %edi,%edi
  414dda:	48 8d 04 fd 88 14 64 	lea    0x641488(,%rdi,8),%rax
  414de1:	00 
  414de2:	c3                   	retq   
  414de3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  414de8:	53                   	push   %rbx
  414de9:	48 89 f3             	mov    %rsi,%rbx
  414dec:	89 fe                	mov    %edi,%esi
  414dee:	48 89 df             	mov    %rbx,%rdi
  414df1:	e8 7a 73 00 00       	callq  41c170 <caml_alloc>
  414df6:	31 d2                	xor    %edx,%edx
  414df8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  414dff:	00 
  414e00:	48 c7 04 d0 01 00 00 	movq   $0x1,(%rax,%rdx,8)
  414e07:	00 
  414e08:	48 83 c2 01          	add    $0x1,%rdx
  414e0c:	48 39 d3             	cmp    %rdx,%rbx
  414e0f:	75 ef                	jne    414e00 <caml_obj_block+0x30>
  414e11:	5b                   	pop    %rbx
  414e12:	c3                   	retq   
  414e13:	0f 1f 00             	nopl   (%rax)
  414e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  414e1d:	00 00 00 

0000000000414e20 <caml_obj_dup>:
  414e20:	41 54                	push   %r12
  414e22:	55                   	push   %rbp
  414e23:	48 89 f8             	mov    %rdi,%rax
  414e26:	53                   	push   %rbx
  414e27:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  414e2e:	48 8b 2d 13 7b 21 00 	mov    0x217b13(%rip),%rbp        # 62c948 <caml_local_roots>
  414e35:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  414e3a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  414e3f:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  414e46:	00 00 
  414e48:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  414e4f:	00 00 
  414e51:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  414e58:	00 00 
  414e5a:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  414e5f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  414e64:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
  414e69:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  414e70:	00 00 
  414e72:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  414e79:	00 00 
  414e7b:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
  414e80:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
  414e85:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  414e8c:	00 00 
  414e8e:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
  414e95:	00 
  414e96:	31 c9                	xor    %ecx,%ecx
  414e98:	48 89 15 a9 7a 21 00 	mov    %rdx,0x217aa9(%rip)        # 62c948 <caml_local_roots>
  414e9f:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  414ea4:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
  414ea9:	48 8b 5f f8          	mov    -0x8(%rdi),%rbx
  414ead:	48 c1 eb 0a          	shr    $0xa,%rbx
  414eb1:	48 85 db             	test   %rbx,%rbx
  414eb4:	0f 84 86 00 00 00    	je     414f40 <caml_obj_dup+0x120>
  414eba:	0f b6 77 f8          	movzbl -0x8(%rdi),%esi
  414ebe:	81 fe fa 00 00 00    	cmp    $0xfa,%esi
  414ec4:	0f 87 ce 00 00 00    	ja     414f98 <caml_obj_dup+0x178>
  414eca:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
  414ed1:	77 7d                	ja     414f50 <caml_obj_dup+0x130>
  414ed3:	48 89 df             	mov    %rbx,%rdi
  414ed6:	31 d2                	xor    %edx,%edx
  414ed8:	48 c1 e3 03          	shl    $0x3,%rbx
  414edc:	e8 1f 74 00 00       	callq  41c300 <caml_alloc_small_with_my_or_given_profinfo>
  414ee1:	31 c9                	xor    %ecx,%ecx
  414ee3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  414ee8:	eb 0b                	jmp    414ef5 <caml_obj_dup+0xd5>
  414eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  414ef0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  414ef5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  414efa:	48 8b 14 0a          	mov    (%rdx,%rcx,1),%rdx
  414efe:	48 89 14 08          	mov    %rdx,(%rax,%rcx,1)
  414f02:	48 83 c1 08          	add    $0x8,%rcx
  414f06:	48 39 cb             	cmp    %rcx,%rbx
  414f09:	75 e5                	jne    414ef0 <caml_obj_dup+0xd0>
  414f0b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  414f10:	48 89 2d 31 7a 21 00 	mov    %rbp,0x217a31(%rip)        # 62c948 <caml_local_roots>
  414f17:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
  414f1e:	00 
  414f1f:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  414f26:	00 00 
  414f28:	0f 85 91 00 00 00    	jne    414fbf <caml_obj_dup+0x19f>
  414f2e:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
  414f35:	5b                   	pop    %rbx
  414f36:	5d                   	pop    %rbp
  414f37:	41 5c                	pop    %r12
  414f39:	c3                   	retq   
  414f3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  414f40:	48 89 2d 01 7a 21 00 	mov    %rbp,0x217a01(%rip)        # 62c948 <caml_local_roots>
  414f47:	eb ce                	jmp    414f17 <caml_obj_dup+0xf7>
  414f49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  414f50:	48 89 df             	mov    %rbx,%rdi
  414f53:	4c 8d 24 dd 00 00 00 	lea    0x0(,%rbx,8),%r12
  414f5a:	00 
  414f5b:	31 db                	xor    %ebx,%ebx
  414f5d:	e8 ae 44 ff ff       	callq  409410 <caml_alloc_shr>
  414f62:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  414f67:	eb 0c                	jmp    414f75 <caml_obj_dup+0x155>
  414f69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  414f70:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  414f75:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  414f7a:	48 8d 3c 18          	lea    (%rax,%rbx,1),%rdi
  414f7e:	48 8b 34 1a          	mov    (%rdx,%rbx,1),%rsi
  414f82:	48 83 c3 08          	add    $0x8,%rbx
  414f86:	e8 25 47 ff ff       	callq  4096b0 <caml_initialize>
  414f8b:	4c 39 e3             	cmp    %r12,%rbx
  414f8e:	75 e0                	jne    414f70 <caml_obj_dup+0x150>
  414f90:	e9 76 ff ff ff       	jmpq   414f0b <caml_obj_dup+0xeb>
  414f95:	0f 1f 00             	nopl   (%rax)
  414f98:	48 89 df             	mov    %rbx,%rdi
  414f9b:	e8 d0 71 00 00       	callq  41c170 <caml_alloc>
  414fa0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  414fa5:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
  414fac:	00 
  414fad:	48 89 c7             	mov    %rax,%rdi
  414fb0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  414fb5:	e8 56 cc fe ff       	callq  401c10 <memcpy@plt>
  414fba:	e9 4c ff ff ff       	jmpq   414f0b <caml_obj_dup+0xeb>
  414fbf:	e8 ac ca fe ff       	callq  401a70 <__stack_chk_fail@plt>
  414fc4:	66 90                	xchg   %ax,%ax
  414fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  414fcd:	00 00 00 

0000000000414fd0 <caml_obj_truncate>:
  414fd0:	41 57                	push   %r15
  414fd2:	41 56                	push   %r14
  414fd4:	41 55                	push   %r13
  414fd6:	41 54                	push   %r12
  414fd8:	55                   	push   %rbp
  414fd9:	53                   	push   %rbx
  414fda:	48 83 ec 18          	sub    $0x18,%rsp
  414fde:	48 8b 6f f8          	mov    -0x8(%rdi),%rbp
  414fe2:	48 89 e8             	mov    %rbp,%rax
  414fe5:	44 0f b6 e5          	movzbl %bpl,%r12d
  414fe9:	48 c1 ed 0a          	shr    $0xa,%rbp
  414fed:	25 00 03 00 00       	and    $0x300,%eax
  414ff2:	48 d1 fe             	sar    %rsi
  414ff5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  414ffa:	0f 84 85 00 00 00    	je     415085 <caml_obj_truncate+0xb5>
  415000:	48 39 ee             	cmp    %rbp,%rsi
  415003:	48 89 f3             	mov    %rsi,%rbx
  415006:	77 7d                	ja     415085 <caml_obj_truncate+0xb5>
  415008:	48 39 ee             	cmp    %rbp,%rsi
  41500b:	74 64                	je     415071 <caml_obj_truncate+0xa1>
  41500d:	41 81 fc fa 00 00 00 	cmp    $0xfa,%r12d
  415014:	49 89 fe             	mov    %rdi,%r14
  415017:	77 2d                	ja     415046 <caml_obj_truncate+0x76>
  415019:	48 39 ee             	cmp    %rbp,%rsi
  41501c:	73 28                	jae    415046 <caml_obj_truncate+0x76>
  41501e:	4c 8d 3c f7          	lea    (%rdi,%rsi,8),%r15
  415022:	4c 8d 2c ef          	lea    (%rdi,%rbp,8),%r13
  415026:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41502d:	00 00 00 
  415030:	4c 89 ff             	mov    %r15,%rdi
  415033:	be 01 00 00 00       	mov    $0x1,%esi
  415038:	49 83 c7 08          	add    $0x8,%r15
  41503c:	e8 cf 46 ff ff       	callq  409710 <caml_modify>
  415041:	4d 39 ef             	cmp    %r13,%r15
  415044:	75 ea                	jne    415030 <caml_obj_truncate+0x60>
  415046:	48 89 d8             	mov    %rbx,%rax
  415049:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
  41504e:	48 f7 d0             	not    %rax
  415051:	48 01 c5             	add    %rax,%rbp
  415054:	48 c1 e5 0a          	shl    $0xa,%rbp
  415058:	48 81 c5 fb 03 00 00 	add    $0x3fb,%rbp
  41505f:	49 89 2c de          	mov    %rbp,(%r14,%rbx,8)
  415063:	48 c1 e3 0a          	shl    $0xa,%rbx
  415067:	49 01 df             	add    %rbx,%r15
  41506a:	4d 01 fc             	add    %r15,%r12
  41506d:	4d 89 66 f8          	mov    %r12,-0x8(%r14)
  415071:	48 83 c4 18          	add    $0x18,%rsp
  415075:	b8 01 00 00 00       	mov    $0x1,%eax
  41507a:	5b                   	pop    %rbx
  41507b:	5d                   	pop    %rbp
  41507c:	41 5c                	pop    %r12
  41507e:	41 5d                	pop    %r13
  415080:	41 5e                	pop    %r14
  415082:	41 5f                	pop    %r15
  415084:	c3                   	retq   
  415085:	bf 20 ec 41 00       	mov    $0x41ec20,%edi
  41508a:	e8 51 56 00 00       	callq  41a6e0 <caml_invalid_argument>
  41508f:	90                   	nop

0000000000415090 <caml_obj_add_offset>:
  415090:	48 63 46 08          	movslq 0x8(%rsi),%rax
  415094:	48 01 f8             	add    %rdi,%rax
  415097:	c3                   	retq   
  415098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41509f:	00 

00000000004150a0 <caml_lazy_follow_forward>:
  4150a0:	53                   	push   %rbx
  4150a1:	48 89 fb             	mov    %rdi,%rbx
  4150a4:	83 e7 01             	and    $0x1,%edi
  4150a7:	74 07                	je     4150b0 <caml_lazy_follow_forward+0x10>
  4150a9:	48 89 d8             	mov    %rbx,%rax
  4150ac:	5b                   	pop    %rbx
  4150ad:	c3                   	retq   
  4150ae:	66 90                	xchg   %ax,%ax
  4150b0:	48 89 df             	mov    %rbx,%rdi
  4150b3:	e8 88 3c ff ff       	callq  408d40 <caml_page_table_lookup>
  4150b8:	a8 07                	test   $0x7,%al
  4150ba:	74 ed                	je     4150a9 <caml_lazy_follow_forward+0x9>
  4150bc:	80 7b f8 fa          	cmpb   $0xfa,-0x8(%rbx)
  4150c0:	75 e7                	jne    4150a9 <caml_lazy_follow_forward+0x9>
  4150c2:	48 8b 03             	mov    (%rbx),%rax
  4150c5:	5b                   	pop    %rbx
  4150c6:	c3                   	retq   
  4150c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4150ce:	00 00 

00000000004150d0 <caml_lazy_make_forward>:
  4150d0:	53                   	push   %rbx
  4150d1:	be fa 00 00 00       	mov    $0xfa,%esi
  4150d6:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  4150dd:	48 8b 1d 64 78 21 00 	mov    0x217864(%rip),%rbx        # 62c948 <caml_local_roots>
  4150e4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4150eb:	00 00 
  4150ed:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  4150f4:	00 
  4150f5:	31 c0                	xor    %eax,%eax
  4150f7:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  4150fc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  415101:	bf 01 00 00 00       	mov    $0x1,%edi
  415106:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
  41510b:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  415112:	00 00 
  415114:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  415119:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41511e:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  415125:	00 00 
  415127:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41512e:	00 00 
  415130:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  415137:	00 00 
  415139:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  41513e:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  415143:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  41514a:	00 00 
  41514c:	48 89 05 f5 77 21 00 	mov    %rax,0x2177f5(%rip)        # 62c948 <caml_local_roots>
  415153:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  415158:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  41515d:	e8 1e 71 00 00       	callq  41c280 <caml_alloc_small>
  415162:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  415167:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41516c:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
  415173:	00 
  415174:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41517b:	00 00 
  41517d:	48 89 10             	mov    %rdx,(%rax)
  415180:	48 89 1d c1 77 21 00 	mov    %rbx,0x2177c1(%rip)        # 62c948 <caml_local_roots>
  415187:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41518c:	75 09                	jne    415197 <caml_lazy_make_forward+0xc7>
  41518e:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
  415195:	5b                   	pop    %rbx
  415196:	c3                   	retq   
  415197:	e8 d4 c8 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41519c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004151a0 <caml_get_public_method>:
  4151a0:	4c 8b 07             	mov    (%rdi),%r8
  4151a3:	bf 03 00 00 00       	mov    $0x3,%edi
  4151a8:	41 8b 08             	mov    (%r8),%ecx
  4151ab:	39 cf                	cmp    %ecx,%edi
  4151ad:	7d 56                	jge    415205 <caml_get_public_method+0x65>
  4151af:	8d 14 0f             	lea    (%rdi,%rcx,1),%edx
  4151b2:	d1 fa                	sar    %edx
  4151b4:	83 ca 01             	or     $0x1,%edx
  4151b7:	48 63 c2             	movslq %edx,%rax
  4151ba:	49 3b 34 c0          	cmp    (%r8,%rax,8),%rsi
  4151be:	7d 1b                	jge    4151db <caml_get_public_method+0x3b>
  4151c0:	eb 2d                	jmp    4151ef <caml_get_public_method+0x4f>
  4151c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4151c8:	8d 04 11             	lea    (%rcx,%rdx,1),%eax
  4151cb:	d1 f8                	sar    %eax
  4151cd:	83 c8 01             	or     $0x1,%eax
  4151d0:	48 63 f8             	movslq %eax,%rdi
  4151d3:	49 39 34 f8          	cmp    %rsi,(%r8,%rdi,8)
  4151d7:	7f 1f                	jg     4151f8 <caml_get_public_method+0x58>
  4151d9:	89 c2                	mov    %eax,%edx
  4151db:	39 d1                	cmp    %edx,%ecx
  4151dd:	7f e9                	jg     4151c8 <caml_get_public_method+0x28>
  4151df:	48 63 d2             	movslq %edx,%rdx
  4151e2:	31 c0                	xor    %eax,%eax
  4151e4:	49 8d 14 d0          	lea    (%r8,%rdx,8),%rdx
  4151e8:	48 3b 32             	cmp    (%rdx),%rsi
  4151eb:	74 13                	je     415200 <caml_get_public_method+0x60>
  4151ed:	f3 c3                	repz retq 
  4151ef:	89 d0                	mov    %edx,%eax
  4151f1:	89 fa                	mov    %edi,%edx
  4151f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4151f8:	8d 48 fe             	lea    -0x2(%rax),%ecx
  4151fb:	89 d7                	mov    %edx,%edi
  4151fd:	eb ac                	jmp    4151ab <caml_get_public_method+0xb>
  4151ff:	90                   	nop
  415200:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  415204:	c3                   	retq   
  415205:	89 fa                	mov    %edi,%edx
  415207:	eb d6                	jmp    4151df <caml_get_public_method+0x3f>
  415209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000415210 <caml_set_oo_id>:
  415210:	48 8b 15 f1 75 21 00 	mov    0x2175f1(%rip),%rdx        # 62c808 <oo_last_id>
  415217:	48 89 f8             	mov    %rdi,%rax
  41521a:	48 89 57 08          	mov    %rdx,0x8(%rdi)
  41521e:	48 83 c2 02          	add    $0x2,%rdx
  415222:	48 89 15 df 75 21 00 	mov    %rdx,0x2175df(%rip)        # 62c808 <oo_last_id>
  415229:	c3                   	retq   
  41522a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000415230 <caml_fresh_oo_id>:
  415230:	48 8b 05 d1 75 21 00 	mov    0x2175d1(%rip),%rax        # 62c808 <oo_last_id>
  415237:	48 8d 50 02          	lea    0x2(%rax),%rdx
  41523b:	48 89 15 c6 75 21 00 	mov    %rdx,0x2175c6(%rip)        # 62c808 <oo_last_id>
  415242:	c3                   	retq   
  415243:	0f 1f 00             	nopl   (%rax)
  415246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41524d:	00 00 00 

0000000000415250 <caml_int_as_pointer>:
  415250:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  415254:	c3                   	retq   
  415255:	90                   	nop
  415256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41525d:	00 00 00 

0000000000415260 <caml_obj_reachable_words>:
  415260:	40 f6 c7 01          	test   $0x1,%dil
  415264:	74 06                	je     41526c <caml_obj_reachable_words+0xc>
  415266:	b8 01 00 00 00       	mov    $0x1,%eax
  41526b:	c3                   	retq   
  41526c:	41 57                	push   %r15
  41526e:	41 56                	push   %r14
  415270:	41 55                	push   %r13
  415272:	41 54                	push   %r12
  415274:	55                   	push   %rbp
  415275:	53                   	push   %rbx
  415276:	48 89 fb             	mov    %rdi,%rbx
  415279:	48 83 ec 38          	sub    $0x38,%rsp
  41527d:	e8 be 3a ff ff       	callq  408d40 <caml_page_table_lookup>
  415282:	a8 03                	test   $0x3,%al
  415284:	0f 84 89 02 00 00    	je     415513 <caml_obj_reachable_words+0x2b3>
  41528a:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  41528e:	48 89 df             	mov    %rbx,%rdi
  415291:	48 8d 53 f8          	lea    -0x8(%rbx),%rdx
  415295:	3c f9                	cmp    $0xf9,%al
  415297:	0f 84 5e 02 00 00    	je     4154fb <caml_obj_reachable_words+0x29b>
  41529d:	48 89 c3             	mov    %rax,%rbx
  4152a0:	80 e4 fc             	and    $0xfc,%ah
  4152a3:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  4152aa:	00 00 
  4152ac:	48 c1 eb 08          	shr    $0x8,%rbx
  4152b0:	80 cc 02             	or     $0x2,%ah
  4152b3:	48 c7 44 24 08 40 51 	movq   $0x635140,0x8(%rsp)
  4152ba:	63 00 
  4152bc:	83 e3 03             	and    $0x3,%ebx
  4152bf:	48 c7 44 24 18 40 51 	movq   $0x635140,0x18(%rsp)
  4152c6:	63 00 
  4152c8:	48 09 df             	or     %rbx,%rdi
  4152cb:	bb 01 00 00 00       	mov    $0x1,%ebx
  4152d0:	48 89 3d 71 fe 21 00 	mov    %rdi,0x21fe71(%rip)        # 635148 <first_chunk.3737+0x8>
  4152d7:	48 89 02             	mov    %rax,(%rdx)
  4152da:	31 c0                	xor    %eax,%eax
  4152dc:	0f 1f 40 00          	nopl   0x0(%rax)
  4152e0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  4152e5:	8d 68 01             	lea    0x1(%rax),%ebp
  4152e8:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  4152ed:	48 8b 4c c2 08       	mov    0x8(%rdx,%rax,8),%rcx
  4152f2:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
  4152f6:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
  4152fa:	49 89 cc             	mov    %rcx,%r12
  4152fd:	49 89 c5             	mov    %rax,%r13
  415300:	49 c1 ed 0a          	shr    $0xa,%r13
  415304:	3c fa                	cmp    $0xfa,%al
  415306:	49 8d 54 35 01       	lea    0x1(%r13,%rsi,1),%rdx
  41530b:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  415310:	0f 87 a2 00 00 00    	ja     4153b8 <caml_obj_reachable_words+0x158>
  415316:	4d 85 ed             	test   %r13,%r13
  415319:	0f 84 99 00 00 00    	je     4153b8 <caml_obj_reachable_words+0x158>
  41531f:	31 c0                	xor    %eax,%eax
  415321:	45 31 f6             	xor    %r14d,%r14d
  415324:	eb 16                	jmp    41533c <caml_obj_reachable_words+0xdc>
  415326:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41532d:	00 00 00 
  415330:	41 83 c6 01          	add    $0x1,%r14d
  415334:	49 63 c6             	movslq %r14d,%rax
  415337:	49 39 c5             	cmp    %rax,%r13
  41533a:	76 7c                	jbe    4153b8 <caml_obj_reachable_words+0x158>
  41533c:	4d 8b 3c c4          	mov    (%r12,%rax,8),%r15
  415340:	41 f6 c7 01          	test   $0x1,%r15b
  415344:	75 ea                	jne    415330 <caml_obj_reachable_words+0xd0>
  415346:	4c 89 ff             	mov    %r15,%rdi
  415349:	e8 f2 39 ff ff       	callq  408d40 <caml_page_table_lookup>
  41534e:	a8 03                	test   $0x3,%al
  415350:	74 de                	je     415330 <caml_obj_reachable_words+0xd0>
  415352:	4d 8b 4f f8          	mov    -0x8(%r15),%r9
  415356:	4d 8d 47 f8          	lea    -0x8(%r15),%r8
  41535a:	41 80 f9 f9          	cmp    $0xf9,%r9b
  41535e:	0f 84 7c 00 00 00    	je     4153e0 <caml_obj_reachable_words+0x180>
  415364:	4c 89 c8             	mov    %r9,%rax
  415367:	25 00 03 00 00       	and    $0x300,%eax
  41536c:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  415372:	74 bc                	je     415330 <caml_obj_reachable_words+0xd0>
  415374:	81 fb 00 10 00 00    	cmp    $0x1000,%ebx
  41537a:	0f 84 98 00 00 00    	je     415418 <caml_obj_reachable_words+0x1b8>
  415380:	48 63 c3             	movslq %ebx,%rax
  415383:	83 c3 01             	add    $0x1,%ebx
  415386:	4c 89 cf             	mov    %r9,%rdi
  415389:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41538e:	41 83 c6 01          	add    $0x1,%r14d
  415392:	48 c1 ef 08          	shr    $0x8,%rdi
  415396:	83 e7 03             	and    $0x3,%edi
  415399:	49 09 ff             	or     %rdi,%r15
  41539c:	4c 89 7c c6 08       	mov    %r15,0x8(%rsi,%rax,8)
  4153a1:	4c 89 c8             	mov    %r9,%rax
  4153a4:	80 e4 fc             	and    $0xfc,%ah
  4153a7:	80 cc 02             	or     $0x2,%ah
  4153aa:	49 89 00             	mov    %rax,(%r8)
  4153ad:	49 63 c6             	movslq %r14d,%rax
  4153b0:	49 39 c5             	cmp    %rax,%r13
  4153b3:	77 87                	ja     41533c <caml_obj_reachable_words+0xdc>
  4153b5:	0f 1f 00             	nopl   (%rax)
  4153b8:	39 eb                	cmp    %ebp,%ebx
  4153ba:	75 10                	jne    4153cc <caml_obj_reachable_words+0x16c>
  4153bc:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  4153c1:	48 39 54 24 18       	cmp    %rdx,0x18(%rsp)
  4153c6:	0f 84 8c 00 00 00    	je     415458 <caml_obj_reachable_words+0x1f8>
  4153cc:	81 fd 00 10 00 00    	cmp    $0x1000,%ebp
  4153d2:	74 2c                	je     415400 <caml_obj_reachable_words+0x1a0>
  4153d4:	48 63 c5             	movslq %ebp,%rax
  4153d7:	e9 04 ff ff ff       	jmpq   4152e0 <caml_obj_reachable_words+0x80>
  4153dc:	0f 1f 40 00          	nopl   0x0(%rax)
  4153e0:	4c 89 c8             	mov    %r9,%rax
  4153e3:	48 c1 e8 0a          	shr    $0xa,%rax
  4153e7:	48 c1 e0 03          	shl    $0x3,%rax
  4153eb:	49 29 c7             	sub    %rax,%r15
  4153ee:	4d 8d 47 f8          	lea    -0x8(%r15),%r8
  4153f2:	4d 8b 4f f8          	mov    -0x8(%r15),%r9
  4153f6:	e9 69 ff ff ff       	jmpq   415364 <caml_obj_reachable_words+0x104>
  4153fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415400:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  415405:	31 ed                	xor    %ebp,%ebp
  415407:	48 8b 00             	mov    (%rax),%rax
  41540a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41540f:	eb c3                	jmp    4153d4 <caml_obj_reachable_words+0x174>
  415411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  415418:	bf 08 80 00 00       	mov    $0x8008,%edi
  41541d:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
  415422:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
  415427:	e8 64 c8 fe ff       	callq  401c90 <malloc@plt>
  41542c:	48 85 c0             	test   %rax,%rax
  41542f:	0f 84 f2 00 00 00    	je     415527 <caml_obj_reachable_words+0x2c7>
  415435:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  41543a:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
  41543f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  415444:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
  415449:	48 89 03             	mov    %rax,(%rbx)
  41544c:	bb 01 00 00 00       	mov    $0x1,%ebx
  415451:	31 c0                	xor    %eax,%eax
  415453:	e9 2e ff ff ff       	jmpq   415386 <caml_obj_reachable_words+0x126>
  415458:	85 db                	test   %ebx,%ebx
  41545a:	75 09                	jne    415465 <caml_obj_reachable_words+0x205>
  41545c:	48 81 fa 40 51 63 00 	cmp    $0x635140,%rdx
  415463:	74 6b                	je     4154d0 <caml_obj_reachable_words+0x270>
  415465:	31 c0                	xor    %eax,%eax
  415467:	bf 40 51 63 00       	mov    $0x635140,%edi
  41546c:	eb 05                	jmp    415473 <caml_obj_reachable_words+0x213>
  41546e:	66 90                	xchg   %ax,%ax
  415470:	48 63 c2             	movslq %edx,%rax
  415473:	8d 50 01             	lea    0x1(%rax),%edx
  415476:	48 8b 44 c7 08       	mov    0x8(%rdi,%rax,8),%rax
  41547b:	48 89 c6             	mov    %rax,%rsi
  41547e:	83 e0 03             	and    $0x3,%eax
  415481:	48 83 e6 fc          	and    $0xfffffffffffffffc,%rsi
  415485:	48 c1 e0 08          	shl    $0x8,%rax
  415489:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
  41548d:	80 e5 fc             	and    $0xfc,%ch
  415490:	48 09 c8             	or     %rcx,%rax
  415493:	39 da                	cmp    %ebx,%edx
  415495:	48 89 46 f8          	mov    %rax,-0x8(%rsi)
  415499:	75 07                	jne    4154a2 <caml_obj_reachable_words+0x242>
  41549b:	48 3b 7c 24 08       	cmp    0x8(%rsp),%rdi
  4154a0:	74 20                	je     4154c2 <caml_obj_reachable_words+0x262>
  4154a2:	81 fa 00 10 00 00    	cmp    $0x1000,%edx
  4154a8:	75 c6                	jne    415470 <caml_obj_reachable_words+0x210>
  4154aa:	48 81 ff 40 51 63 00 	cmp    $0x635140,%rdi
  4154b1:	48 8b 2f             	mov    (%rdi),%rbp
  4154b4:	74 3b                	je     4154f1 <caml_obj_reachable_words+0x291>
  4154b6:	e8 a5 c4 fe ff       	callq  401960 <free@plt>
  4154bb:	48 89 ef             	mov    %rbp,%rdi
  4154be:	31 d2                	xor    %edx,%edx
  4154c0:	eb ae                	jmp    415470 <caml_obj_reachable_words+0x210>
  4154c2:	48 81 ff 40 51 63 00 	cmp    $0x635140,%rdi
  4154c9:	74 05                	je     4154d0 <caml_obj_reachable_words+0x270>
  4154cb:	e8 90 c4 fe ff       	callq  401960 <free@plt>
  4154d0:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
  4154d6:	78 5d                	js     415535 <caml_obj_reachable_words+0x2d5>
  4154d8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  4154dd:	48 83 c4 38          	add    $0x38,%rsp
  4154e1:	5b                   	pop    %rbx
  4154e2:	5d                   	pop    %rbp
  4154e3:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  4154e8:	41 5c                	pop    %r12
  4154ea:	41 5d                	pop    %r13
  4154ec:	41 5e                	pop    %r14
  4154ee:	41 5f                	pop    %r15
  4154f0:	c3                   	retq   
  4154f1:	48 89 ef             	mov    %rbp,%rdi
  4154f4:	31 d2                	xor    %edx,%edx
  4154f6:	e9 75 ff ff ff       	jmpq   415470 <caml_obj_reachable_words+0x210>
  4154fb:	48 c1 e8 0a          	shr    $0xa,%rax
  4154ff:	48 c1 e0 03          	shl    $0x3,%rax
  415503:	48 29 c7             	sub    %rax,%rdi
  415506:	48 8d 57 f8          	lea    -0x8(%rdi),%rdx
  41550a:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  41550e:	e9 8a fd ff ff       	jmpq   41529d <caml_obj_reachable_words+0x3d>
  415513:	48 83 c4 38          	add    $0x38,%rsp
  415517:	b8 01 00 00 00       	mov    $0x1,%eax
  41551c:	5b                   	pop    %rbx
  41551d:	5d                   	pop    %rbp
  41551e:	41 5c                	pop    %r12
  415520:	41 5d                	pop    %r13
  415522:	41 5e                	pop    %r14
  415524:	41 5f                	pop    %r15
  415526:	c3                   	retq   
  415527:	48 c7 44 24 10 ff ff 	movq   $0xffffffffffffffff,0x10(%rsp)
  41552e:	ff ff 
  415530:	e9 30 ff ff ff       	jmpq   415465 <caml_obj_reachable_words+0x205>
  415535:	e8 c6 51 00 00       	callq  41a700 <caml_raise_out_of_memory>
  41553a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000415540 <caml_callbackN_exn>:
  415540:	41 55                	push   %r13
  415542:	41 54                	push   %r12
  415544:	49 89 d4             	mov    %rdx,%r12
  415547:	55                   	push   %rbp
  415548:	53                   	push   %rbx
  415549:	48 89 f8             	mov    %rdi,%rax
  41554c:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  415553:	4c 8b 2d ee 73 21 00 	mov    0x2173ee(%rip),%r13        # 62c948 <caml_local_roots>
  41555a:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  41555f:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  415564:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  41556b:	00 00 
  41556d:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
  415574:	00 00 
  415576:	48 89 bc 24 e8 00 00 	mov    %rdi,0xe8(%rsp)
  41557d:	00 
  41557e:	31 ff                	xor    %edi,%edi
  415580:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  415585:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  41558a:	85 f6                	test   %esi,%esi
  41558c:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
  415591:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  415598:	00 00 
  41559a:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
  41559f:	48 63 d6             	movslq %esi,%rdx
  4155a2:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  4155a9:	00 00 
  4155ab:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
  4155b0:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
  4155b5:	4c 89 64 24 78       	mov    %r12,0x78(%rsp)
  4155ba:	48 c7 84 24 b0 00 00 	movq   $0x1,0xb0(%rsp)
  4155c1:	00 01 00 00 00 
  4155c6:	48 c7 84 24 a8 00 00 	movq   $0x1,0xa8(%rsp)
  4155cd:	00 01 00 00 00 
  4155d2:	48 89 94 24 a0 00 00 	mov    %rdx,0xa0(%rsp)
  4155d9:	00 
  4155da:	48 8d 94 24 a0 00 00 	lea    0xa0(%rsp),%rdx
  4155e1:	00 
  4155e2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4155e7:	48 89 15 5a 73 21 00 	mov    %rdx,0x21735a(%rip)        # 62c948 <caml_local_roots>
  4155ee:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  4155f3:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
  4155fa:	00 
  4155fb:	0f 8e 8f 00 00 00    	jle    415690 <caml_callbackN_exn+0x150>
  415601:	89 f5                	mov    %esi,%ebp
  415603:	31 db                	xor    %ebx,%ebx
  415605:	eb 39                	jmp    415640 <caml_callbackN_exn+0x100>
  415607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41560e:	00 00 
  415610:	48 63 cb             	movslq %ebx,%rcx
  415613:	48 89 c7             	mov    %rax,%rdi
  415616:	48 83 c1 01          	add    $0x1,%rcx
  41561a:	49 8b 14 cc          	mov    (%r12,%rcx,8),%rdx
  41561e:	49 8b 74 cc f8       	mov    -0x8(%r12,%rcx,8),%rsi
  415623:	e8 90 48 00 00       	callq  419eb8 <caml_callback2_exn>
  415628:	48 89 c2             	mov    %rax,%rdx
  41562b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  415630:	83 e2 03             	and    $0x3,%edx
  415633:	48 83 fa 02          	cmp    $0x2,%rdx
  415637:	74 57                	je     415690 <caml_callbackN_exn+0x150>
  415639:	83 c3 02             	add    $0x2,%ebx
  41563c:	39 eb                	cmp    %ebp,%ebx
  41563e:	7d 50                	jge    415690 <caml_callbackN_exn+0x150>
  415640:	89 ea                	mov    %ebp,%edx
  415642:	29 da                	sub    %ebx,%edx
  415644:	83 fa 01             	cmp    $0x1,%edx
  415647:	74 77                	je     4156c0 <caml_callbackN_exn+0x180>
  415649:	83 fa 02             	cmp    $0x2,%edx
  41564c:	74 c2                	je     415610 <caml_callbackN_exn+0xd0>
  41564e:	48 63 d3             	movslq %ebx,%rdx
  415651:	48 89 c7             	mov    %rax,%rdi
  415654:	48 83 c2 02          	add    $0x2,%rdx
  415658:	48 8d 34 d5 00 00 00 	lea    0x0(,%rdx,8),%rsi
  41565f:	00 
  415660:	49 8b 0c d4          	mov    (%r12,%rdx,8),%rcx
  415664:	49 8b 54 34 f8       	mov    -0x8(%r12,%rsi,1),%rdx
  415669:	49 8b 74 34 f0       	mov    -0x10(%r12,%rsi,1),%rsi
  41566e:	e8 69 48 00 00       	callq  419edc <caml_callback3_exn>
  415673:	48 89 c2             	mov    %rax,%rdx
  415676:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41567b:	83 e2 03             	and    $0x3,%edx
  41567e:	48 83 fa 02          	cmp    $0x2,%rdx
  415682:	74 0c                	je     415690 <caml_callbackN_exn+0x150>
  415684:	83 c3 03             	add    $0x3,%ebx
  415687:	39 eb                	cmp    %ebp,%ebx
  415689:	7c b5                	jl     415640 <caml_callbackN_exn+0x100>
  41568b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415690:	48 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%rdi
  415697:	00 
  415698:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
  41569f:	00 00 
  4156a1:	4c 89 2d a0 72 21 00 	mov    %r13,0x2172a0(%rip)        # 62c948 <caml_local_roots>
  4156a8:	75 3e                	jne    4156e8 <caml_callbackN_exn+0x1a8>
  4156aa:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  4156b1:	5b                   	pop    %rbx
  4156b2:	5d                   	pop    %rbp
  4156b3:	41 5c                	pop    %r12
  4156b5:	41 5d                	pop    %r13
  4156b7:	c3                   	retq   
  4156b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4156bf:	00 
  4156c0:	48 63 d3             	movslq %ebx,%rdx
  4156c3:	48 89 c7             	mov    %rax,%rdi
  4156c6:	49 8b 34 d4          	mov    (%r12,%rdx,8),%rsi
  4156ca:	e8 cd 47 00 00       	callq  419e9c <caml_callback_exn>
  4156cf:	48 89 c2             	mov    %rax,%rdx
  4156d2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4156d7:	83 e2 03             	and    $0x3,%edx
  4156da:	48 83 fa 02          	cmp    $0x2,%rdx
  4156de:	74 b0                	je     415690 <caml_callbackN_exn+0x150>
  4156e0:	83 c3 01             	add    $0x1,%ebx
  4156e3:	e9 54 ff ff ff       	jmpq   41563c <caml_callbackN_exn+0xfc>
  4156e8:	e8 83 c3 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  4156ed:	0f 1f 00             	nopl   (%rax)

00000000004156f0 <caml_callback>:
  4156f0:	48 83 ec 08          	sub    $0x8,%rsp
  4156f4:	e8 a3 47 00 00       	callq  419e9c <caml_callback_exn>
  4156f9:	48 89 c2             	mov    %rax,%rdx
  4156fc:	83 e2 03             	and    $0x3,%edx
  4156ff:	48 83 fa 02          	cmp    $0x2,%rdx
  415703:	74 05                	je     41570a <caml_callback+0x1a>
  415705:	48 83 c4 08          	add    $0x8,%rsp
  415709:	c3                   	retq   
  41570a:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
  41570e:	48 89 c7             	mov    %rax,%rdi
  415711:	e8 4a 4d 00 00       	callq  41a460 <caml_raise>
  415716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41571d:	00 00 00 

0000000000415720 <caml_callback2>:
  415720:	48 83 ec 08          	sub    $0x8,%rsp
  415724:	e8 8f 47 00 00       	callq  419eb8 <caml_callback2_exn>
  415729:	48 89 c2             	mov    %rax,%rdx
  41572c:	83 e2 03             	and    $0x3,%edx
  41572f:	48 83 fa 02          	cmp    $0x2,%rdx
  415733:	74 05                	je     41573a <caml_callback2+0x1a>
  415735:	48 83 c4 08          	add    $0x8,%rsp
  415739:	c3                   	retq   
  41573a:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
  41573e:	48 89 c7             	mov    %rax,%rdi
  415741:	e8 1a 4d 00 00       	callq  41a460 <caml_raise>
  415746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41574d:	00 00 00 

0000000000415750 <caml_callback3>:
  415750:	48 83 ec 08          	sub    $0x8,%rsp
  415754:	e8 83 47 00 00       	callq  419edc <caml_callback3_exn>
  415759:	48 89 c2             	mov    %rax,%rdx
  41575c:	83 e2 03             	and    $0x3,%edx
  41575f:	48 83 fa 02          	cmp    $0x2,%rdx
  415763:	74 05                	je     41576a <caml_callback3+0x1a>
  415765:	48 83 c4 08          	add    $0x8,%rsp
  415769:	c3                   	retq   
  41576a:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
  41576e:	48 89 c7             	mov    %rax,%rdi
  415771:	e8 ea 4c 00 00       	callq  41a460 <caml_raise>
  415776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41577d:	00 00 00 

0000000000415780 <caml_callbackN>:
  415780:	48 83 ec 08          	sub    $0x8,%rsp
  415784:	e8 b7 fd ff ff       	callq  415540 <caml_callbackN_exn>
  415789:	48 89 c2             	mov    %rax,%rdx
  41578c:	83 e2 03             	and    $0x3,%edx
  41578f:	48 83 fa 02          	cmp    $0x2,%rdx
  415793:	74 05                	je     41579a <caml_callbackN+0x1a>
  415795:	48 83 c4 08          	add    $0x8,%rsp
  415799:	c3                   	retq   
  41579a:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
  41579e:	48 89 c7             	mov    %rax,%rdi
  4157a1:	e8 ba 4c 00 00       	callq  41a460 <caml_raise>
  4157a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4157ad:	00 00 00 

00000000004157b0 <caml_register_named_value>:
  4157b0:	41 56                	push   %r14
  4157b2:	41 55                	push   %r13
  4157b4:	41 54                	push   %r12
  4157b6:	55                   	push   %rbp
  4157b7:	49 89 f4             	mov    %rsi,%r12
  4157ba:	53                   	push   %rbx
  4157bb:	48 89 fb             	mov    %rdi,%rbx
  4157be:	e8 8d c2 fe ff       	callq  401a50 <strlen@plt>
  4157c3:	0f b6 33             	movzbl (%rbx),%esi
  4157c6:	48 89 c5             	mov    %rax,%rbp
  4157c9:	40 84 f6             	test   %sil,%sil
  4157cc:	0f 84 c8 00 00 00    	je     41589a <caml_register_named_value+0xea>
  4157d2:	48 89 da             	mov    %rbx,%rdx
  4157d5:	31 c9                	xor    %ecx,%ecx
  4157d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4157de:	00 00 
  4157e0:	8d 04 c9             	lea    (%rcx,%rcx,8),%eax
  4157e3:	48 83 c2 01          	add    $0x1,%rdx
  4157e7:	8d 04 41             	lea    (%rcx,%rax,2),%eax
  4157ea:	40 0f be ce          	movsbl %sil,%ecx
  4157ee:	0f b6 32             	movzbl (%rdx),%esi
  4157f1:	01 c1                	add    %eax,%ecx
  4157f3:	40 84 f6             	test   %sil,%sil
  4157f6:	75 e8                	jne    4157e0 <caml_register_named_value+0x30>
  4157f8:	89 c8                	mov    %ecx,%eax
  4157fa:	ba 4f ec c4 4e       	mov    $0x4ec4ec4f,%edx
  4157ff:	f7 e2                	mul    %edx
  415801:	c1 ea 02             	shr    $0x2,%edx
  415804:	8d 04 52             	lea    (%rdx,%rdx,2),%eax
  415807:	8d 04 82             	lea    (%rdx,%rax,4),%eax
  41580a:	89 ca                	mov    %ecx,%edx
  41580c:	29 c2                	sub    %eax,%edx
  41580e:	41 89 d6             	mov    %edx,%r14d
  415811:	4e 8b 2c f5 60 d1 63 	mov    0x63d160(,%r14,8),%r13
  415818:	00 
  415819:	4d 85 ed             	test   %r13,%r13
  41581c:	75 0b                	jne    415829 <caml_register_named_value+0x79>
  41581e:	eb 30                	jmp    415850 <caml_register_named_value+0xa0>
  415820:	4d 8b 6d 08          	mov    0x8(%r13),%r13
  415824:	4d 85 ed             	test   %r13,%r13
  415827:	74 27                	je     415850 <caml_register_named_value+0xa0>
  415829:	49 8d 75 10          	lea    0x10(%r13),%rsi
  41582d:	48 89 df             	mov    %rbx,%rdi
  415830:	e8 8b c3 fe ff       	callq  401bc0 <strcmp@plt>
  415835:	85 c0                	test   %eax,%eax
  415837:	75 e7                	jne    415820 <caml_register_named_value+0x70>
  415839:	4d 89 65 00          	mov    %r12,0x0(%r13)
  41583d:	b8 01 00 00 00       	mov    $0x1,%eax
  415842:	5b                   	pop    %rbx
  415843:	5d                   	pop    %rbp
  415844:	41 5c                	pop    %r12
  415846:	41 5d                	pop    %r13
  415848:	41 5e                	pop    %r14
  41584a:	c3                   	retq   
  41584b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415850:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
  415854:	e8 77 3f ff ff       	callq  4097d0 <caml_stat_alloc>
  415859:	48 8d 55 01          	lea    0x1(%rbp),%rdx
  41585d:	48 8d 78 10          	lea    0x10(%rax),%rdi
  415861:	48 89 de             	mov    %rbx,%rsi
  415864:	49 89 c5             	mov    %rax,%r13
  415867:	e8 a4 c3 fe ff       	callq  401c10 <memcpy@plt>
  41586c:	4a 8b 04 f5 60 d1 63 	mov    0x63d160(,%r14,8),%rax
  415873:	00 
  415874:	4d 89 65 00          	mov    %r12,0x0(%r13)
  415878:	4c 89 ef             	mov    %r13,%rdi
  41587b:	4e 89 2c f5 60 d1 63 	mov    %r13,0x63d160(,%r14,8)
  415882:	00 
  415883:	49 89 45 08          	mov    %rax,0x8(%r13)
  415887:	e8 24 0a ff ff       	callq  4062b0 <caml_register_global_root>
  41588c:	5b                   	pop    %rbx
  41588d:	b8 01 00 00 00       	mov    $0x1,%eax
  415892:	5d                   	pop    %rbp
  415893:	41 5c                	pop    %r12
  415895:	41 5d                	pop    %r13
  415897:	41 5e                	pop    %r14
  415899:	c3                   	retq   
  41589a:	31 d2                	xor    %edx,%edx
  41589c:	e9 6d ff ff ff       	jmpq   41580e <caml_register_named_value+0x5e>
  4158a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4158a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4158ad:	00 00 00 

00000000004158b0 <caml_named_value>:
  4158b0:	55                   	push   %rbp
  4158b1:	53                   	push   %rbx
  4158b2:	48 89 fd             	mov    %rdi,%rbp
  4158b5:	48 83 ec 08          	sub    $0x8,%rsp
  4158b9:	0f b6 17             	movzbl (%rdi),%edx
  4158bc:	84 d2                	test   %dl,%dl
  4158be:	74 79                	je     415939 <caml_named_value+0x89>
  4158c0:	48 89 fe             	mov    %rdi,%rsi
  4158c3:	31 c9                	xor    %ecx,%ecx
  4158c5:	0f 1f 00             	nopl   (%rax)
  4158c8:	8d 04 c9             	lea    (%rcx,%rcx,8),%eax
  4158cb:	48 83 c6 01          	add    $0x1,%rsi
  4158cf:	8d 04 41             	lea    (%rcx,%rax,2),%eax
  4158d2:	0f be ca             	movsbl %dl,%ecx
  4158d5:	0f b6 16             	movzbl (%rsi),%edx
  4158d8:	01 c1                	add    %eax,%ecx
  4158da:	84 d2                	test   %dl,%dl
  4158dc:	75 ea                	jne    4158c8 <caml_named_value+0x18>
  4158de:	89 c8                	mov    %ecx,%eax
  4158e0:	ba 4f ec c4 4e       	mov    $0x4ec4ec4f,%edx
  4158e5:	f7 e2                	mul    %edx
  4158e7:	c1 ea 02             	shr    $0x2,%edx
  4158ea:	8d 04 52             	lea    (%rdx,%rdx,2),%eax
  4158ed:	8d 04 82             	lea    (%rdx,%rax,4),%eax
  4158f0:	89 ca                	mov    %ecx,%edx
  4158f2:	29 c2                	sub    %eax,%edx
  4158f4:	48 8b 1c d5 60 d1 63 	mov    0x63d160(,%rdx,8),%rbx
  4158fb:	00 
  4158fc:	48 85 db             	test   %rbx,%rbx
  4158ff:	75 10                	jne    415911 <caml_named_value+0x61>
  415901:	eb 2d                	jmp    415930 <caml_named_value+0x80>
  415903:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415908:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  41590c:	48 85 db             	test   %rbx,%rbx
  41590f:	74 1f                	je     415930 <caml_named_value+0x80>
  415911:	48 8d 73 10          	lea    0x10(%rbx),%rsi
  415915:	48 89 ef             	mov    %rbp,%rdi
  415918:	e8 a3 c2 fe ff       	callq  401bc0 <strcmp@plt>
  41591d:	85 c0                	test   %eax,%eax
  41591f:	75 e7                	jne    415908 <caml_named_value+0x58>
  415921:	48 83 c4 08          	add    $0x8,%rsp
  415925:	48 89 d8             	mov    %rbx,%rax
  415928:	5b                   	pop    %rbx
  415929:	5d                   	pop    %rbp
  41592a:	c3                   	retq   
  41592b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415930:	48 83 c4 08          	add    $0x8,%rsp
  415934:	31 c0                	xor    %eax,%eax
  415936:	5b                   	pop    %rbx
  415937:	5d                   	pop    %rbp
  415938:	c3                   	retq   
  415939:	31 d2                	xor    %edx,%edx
  41593b:	eb b7                	jmp    4158f4 <caml_named_value+0x44>
  41593d:	0f 1f 00             	nopl   (%rax)

0000000000415940 <caml_iterate_named_values>:
  415940:	41 54                	push   %r12
  415942:	55                   	push   %rbp
  415943:	41 bc 60 d1 63 00    	mov    $0x63d160,%r12d
  415949:	53                   	push   %rbx
  41594a:	48 89 fd             	mov    %rdi,%rbp
  41594d:	0f 1f 00             	nopl   (%rax)
  415950:	49 8b 1c 24          	mov    (%r12),%rbx
  415954:	48 85 db             	test   %rbx,%rbx
  415957:	74 19                	je     415972 <caml_iterate_named_values+0x32>
  415959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  415960:	48 8d 73 10          	lea    0x10(%rbx),%rsi
  415964:	48 89 df             	mov    %rbx,%rdi
  415967:	ff d5                	callq  *%rbp
  415969:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  41596d:	48 85 db             	test   %rbx,%rbx
  415970:	75 ee                	jne    415960 <caml_iterate_named_values+0x20>
  415972:	49 83 c4 08          	add    $0x8,%r12
  415976:	49 81 fc c8 d1 63 00 	cmp    $0x63d1c8,%r12
  41597d:	75 d1                	jne    415950 <caml_iterate_named_values+0x10>
  41597f:	5b                   	pop    %rbx
  415980:	5d                   	pop    %rbp
  415981:	41 5c                	pop    %r12
  415983:	c3                   	retq   
  415984:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41598b:	00 00 00 
  41598e:	66 90                	xchg   %ax,%ax

0000000000415990 <do_set>:
  415990:	55                   	push   %rbp
  415991:	53                   	push   %rbx
  415992:	48 83 ec 08          	sub    $0x8,%rsp
  415996:	f6 c2 01             	test   $0x1,%dl
  415999:	75 09                	jne    4159a4 <do_set+0x14>
  41599b:	48 3b 15 26 75 21 00 	cmp    0x217526(%rip),%rdx        # 62cec8 <caml_young_end>
  4159a2:	72 0c                	jb     4159b0 <do_set+0x20>
  4159a4:	48 89 14 f7          	mov    %rdx,(%rdi,%rsi,8)
  4159a8:	48 83 c4 08          	add    $0x8,%rsp
  4159ac:	5b                   	pop    %rbx
  4159ad:	5d                   	pop    %rbp
  4159ae:	c3                   	retq   
  4159af:	90                   	nop
  4159b0:	48 3b 15 19 75 21 00 	cmp    0x217519(%rip),%rdx        # 62ced0 <caml_young_start>
  4159b7:	76 eb                	jbe    4159a4 <do_set+0x14>
  4159b9:	48 8d 04 f7          	lea    (%rdi,%rsi,8),%rax
  4159bd:	48 8b 08             	mov    (%rax),%rcx
  4159c0:	48 89 10             	mov    %rdx,(%rax)
  4159c3:	f6 c1 01             	test   $0x1,%cl
  4159c6:	75 18                	jne    4159e0 <do_set+0x50>
  4159c8:	48 3b 0d f9 74 21 00 	cmp    0x2174f9(%rip),%rcx        # 62cec8 <caml_young_end>
  4159cf:	73 0f                	jae    4159e0 <do_set+0x50>
  4159d1:	48 3b 0d f8 74 21 00 	cmp    0x2174f8(%rip),%rcx        # 62ced0 <caml_young_start>
  4159d8:	77 ce                	ja     4159a8 <do_set+0x18>
  4159da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4159e0:	48 8b 05 51 74 21 00 	mov    0x217451(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  4159e7:	48 3b 05 52 74 21 00 	cmp    0x217452(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  4159ee:	48 89 f5             	mov    %rsi,%rbp
  4159f1:	48 89 fb             	mov    %rdi,%rbx
  4159f4:	73 1a                	jae    415a10 <do_set+0x80>
  4159f6:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4159fa:	48 89 15 37 74 21 00 	mov    %rdx,0x217437(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  415a01:	48 89 18             	mov    %rbx,(%rax)
  415a04:	48 89 68 08          	mov    %rbp,0x8(%rax)
  415a08:	48 83 c4 08          	add    $0x8,%rsp
  415a0c:	5b                   	pop    %rbx
  415a0d:	5d                   	pop    %rbp
  415a0e:	c3                   	retq   
  415a0f:	90                   	nop
  415a10:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  415a15:	e8 e6 30 ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  415a1a:	48 8b 05 17 74 21 00 	mov    0x217417(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  415a21:	eb d3                	jmp    4159f6 <do_set+0x66>
  415a23:	0f 1f 00             	nopl   (%rax)
  415a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  415a2d:	00 00 00 

0000000000415a30 <do_check_key_clean.part.1>:
  415a30:	41 54                	push   %r12
  415a32:	4c 8d 24 f7          	lea    (%rdi,%rsi,8),%r12
  415a36:	55                   	push   %rbp
  415a37:	53                   	push   %rbx
  415a38:	49 8b 1c 24          	mov    (%r12),%rbx
  415a3c:	48 3b 1d cd 6d 21 00 	cmp    0x216dcd(%rip),%rbx        # 62c810 <caml_ephe_none>
  415a43:	74 05                	je     415a4a <do_check_key_clean.part.1+0x1a>
  415a45:	f6 c3 01             	test   $0x1,%bl
  415a48:	74 06                	je     415a50 <do_check_key_clean.part.1+0x20>
  415a4a:	5b                   	pop    %rbx
  415a4b:	5d                   	pop    %rbp
  415a4c:	41 5c                	pop    %r12
  415a4e:	c3                   	retq   
  415a4f:	90                   	nop
  415a50:	48 89 fd             	mov    %rdi,%rbp
  415a53:	48 89 df             	mov    %rbx,%rdi
  415a56:	e8 e5 32 ff ff       	callq  408d40 <caml_page_table_lookup>
  415a5b:	a8 01                	test   $0x1,%al
  415a5d:	74 eb                	je     415a4a <do_check_key_clean.part.1+0x1a>
  415a5f:	48 f7 43 f8 00 03 00 	testq  $0x300,-0x8(%rbx)
  415a66:	00 
  415a67:	75 e1                	jne    415a4a <do_check_key_clean.part.1+0x1a>
  415a69:	48 8b 05 a0 6d 21 00 	mov    0x216da0(%rip),%rax        # 62c810 <caml_ephe_none>
  415a70:	49 89 04 24          	mov    %rax,(%r12)
  415a74:	48 8b 05 95 6d 21 00 	mov    0x216d95(%rip),%rax        # 62c810 <caml_ephe_none>
  415a7b:	48 89 45 08          	mov    %rax,0x8(%rbp)
  415a7f:	5b                   	pop    %rbx
  415a80:	5d                   	pop    %rbp
  415a81:	41 5c                	pop    %r12
  415a83:	c3                   	retq   
  415a84:	66 90                	xchg   %ax,%ax
  415a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  415a8d:	00 00 00 

0000000000415a90 <caml_ephe_create>:
  415a90:	48 d1 ff             	sar    %rdi
  415a93:	53                   	push   %rbx
  415a94:	48 b8 fe ff ff ff ff 	movabs $0x3ffffffffffffe,%rax
  415a9b:	ff 3f 00 
  415a9e:	48 8d 5f 02          	lea    0x2(%rdi),%rbx
  415aa2:	48 83 c7 01          	add    $0x1,%rdi
  415aa6:	48 39 c7             	cmp    %rax,%rdi
  415aa9:	77 44                	ja     415aef <caml_ephe_create+0x5f>
  415aab:	be fb 00 00 00       	mov    $0xfb,%esi
  415ab0:	48 89 df             	mov    %rbx,%rdi
  415ab3:	e8 58 39 ff ff       	callq  409410 <caml_alloc_shr>
  415ab8:	48 83 fb 01          	cmp    $0x1,%rbx
  415abc:	ba 01 00 00 00       	mov    $0x1,%edx
  415ac1:	74 19                	je     415adc <caml_ephe_create+0x4c>
  415ac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415ac8:	48 8b 0d 41 6d 21 00 	mov    0x216d41(%rip),%rcx        # 62c810 <caml_ephe_none>
  415acf:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
  415ad3:	48 83 c2 01          	add    $0x1,%rdx
  415ad7:	48 39 d3             	cmp    %rdx,%rbx
  415ada:	75 ec                	jne    415ac8 <caml_ephe_create+0x38>
  415adc:	48 8b 15 e5 76 22 00 	mov    0x2276e5(%rip),%rdx        # 63d1c8 <caml_ephe_list_head>
  415ae3:	48 89 10             	mov    %rdx,(%rax)
  415ae6:	48 89 05 db 76 22 00 	mov    %rax,0x2276db(%rip)        # 63d1c8 <caml_ephe_list_head>
  415aed:	5b                   	pop    %rbx
  415aee:	c3                   	retq   
  415aef:	bf 2d ec 41 00       	mov    $0x41ec2d,%edi
  415af4:	e8 e7 4b 00 00       	callq  41a6e0 <caml_invalid_argument>
  415af9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000415b00 <caml_weak_create>:
  415b00:	eb 8e                	jmp    415a90 <caml_ephe_create>
  415b02:	0f 1f 40 00          	nopl   0x0(%rax)
  415b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  415b0d:	00 00 00 

0000000000415b10 <caml_ephe_set_key>:
  415b10:	48 d1 fe             	sar    %rsi
  415b13:	55                   	push   %rbp
  415b14:	53                   	push   %rbx
  415b15:	48 8d 5e 02          	lea    0x2(%rsi),%rbx
  415b19:	48 83 ec 18          	sub    $0x18,%rsp
  415b1d:	48 83 fb 01          	cmp    $0x1,%rbx
  415b21:	76 49                	jbe    415b6c <caml_ephe_set_key+0x5c>
  415b23:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  415b27:	48 89 fd             	mov    %rdi,%rbp
  415b2a:	48 c1 e8 0a          	shr    $0xa,%rax
  415b2e:	48 39 c3             	cmp    %rax,%rbx
  415b31:	73 39                	jae    415b6c <caml_ephe_set_key+0x5c>
  415b33:	83 3d ce b8 22 00 01 	cmpl   $0x1,0x22b8ce(%rip)        # 641408 <caml_gc_phase>
  415b3a:	74 1c                	je     415b58 <caml_ephe_set_key+0x48>
  415b3c:	48 89 de             	mov    %rbx,%rsi
  415b3f:	48 89 ef             	mov    %rbp,%rdi
  415b42:	e8 49 fe ff ff       	callq  415990 <do_set>
  415b47:	48 83 c4 18          	add    $0x18,%rsp
  415b4b:	b8 01 00 00 00       	mov    $0x1,%eax
  415b50:	5b                   	pop    %rbx
  415b51:	5d                   	pop    %rbp
  415b52:	c3                   	retq   
  415b53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415b58:	48 89 de             	mov    %rbx,%rsi
  415b5b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  415b60:	e8 cb fe ff ff       	callq  415a30 <do_check_key_clean.part.1>
  415b65:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  415b6a:	eb d0                	jmp    415b3c <caml_ephe_set_key+0x2c>
  415b6c:	bf 39 ec 41 00       	mov    $0x41ec39,%edi
  415b71:	e8 6a 4b 00 00       	callq  41a6e0 <caml_invalid_argument>
  415b76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  415b7d:	00 00 00 

0000000000415b80 <caml_ephe_unset_key>:
  415b80:	48 d1 fe             	sar    %rsi
  415b83:	55                   	push   %rbp
  415b84:	53                   	push   %rbx
  415b85:	48 8d 5e 02          	lea    0x2(%rsi),%rbx
  415b89:	48 83 ec 08          	sub    $0x8,%rsp
  415b8d:	48 83 fb 01          	cmp    $0x1,%rbx
  415b91:	76 3f                	jbe    415bd2 <caml_ephe_unset_key+0x52>
  415b93:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  415b97:	48 89 fd             	mov    %rdi,%rbp
  415b9a:	48 c1 e8 0a          	shr    $0xa,%rax
  415b9e:	48 39 c3             	cmp    %rax,%rbx
  415ba1:	73 2f                	jae    415bd2 <caml_ephe_unset_key+0x52>
  415ba3:	83 3d 5e b8 22 00 01 	cmpl   $0x1,0x22b85e(%rip)        # 641408 <caml_gc_phase>
  415baa:	74 1c                	je     415bc8 <caml_ephe_unset_key+0x48>
  415bac:	48 8b 05 5d 6c 21 00 	mov    0x216c5d(%rip),%rax        # 62c810 <caml_ephe_none>
  415bb3:	48 89 44 dd 00       	mov    %rax,0x0(%rbp,%rbx,8)
  415bb8:	48 83 c4 08          	add    $0x8,%rsp
  415bbc:	b8 01 00 00 00       	mov    $0x1,%eax
  415bc1:	5b                   	pop    %rbx
  415bc2:	5d                   	pop    %rbp
  415bc3:	c3                   	retq   
  415bc4:	0f 1f 40 00          	nopl   0x0(%rax)
  415bc8:	48 89 de             	mov    %rbx,%rsi
  415bcb:	e8 60 fe ff ff       	callq  415a30 <do_check_key_clean.part.1>
  415bd0:	eb da                	jmp    415bac <caml_ephe_unset_key+0x2c>
  415bd2:	bf 39 ec 41 00       	mov    $0x41ec39,%edi
  415bd7:	e8 04 4b 00 00       	callq  41a6e0 <caml_invalid_argument>
  415bdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000415be0 <caml_ephe_set_key_option>:
  415be0:	48 d1 fe             	sar    %rsi
  415be3:	55                   	push   %rbp
  415be4:	53                   	push   %rbx
  415be5:	48 8d 5e 02          	lea    0x2(%rsi),%rbx
  415be9:	48 83 ec 18          	sub    $0x18,%rsp
  415bed:	48 83 fb 01          	cmp    $0x1,%rbx
  415bf1:	76 71                	jbe    415c64 <caml_ephe_set_key_option+0x84>
  415bf3:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  415bf7:	48 89 fd             	mov    %rdi,%rbp
  415bfa:	48 c1 e8 0a          	shr    $0xa,%rax
  415bfe:	48 39 c3             	cmp    %rax,%rbx
  415c01:	73 61                	jae    415c64 <caml_ephe_set_key_option+0x84>
  415c03:	83 3d fe b7 22 00 01 	cmpl   $0x1,0x22b7fe(%rip)        # 641408 <caml_gc_phase>
  415c0a:	74 44                	je     415c50 <caml_ephe_set_key_option+0x70>
  415c0c:	48 83 fa 01          	cmp    $0x1,%rdx
  415c10:	74 05                	je     415c17 <caml_ephe_set_key_option+0x37>
  415c12:	f6 c2 01             	test   $0x1,%dl
  415c15:	74 19                	je     415c30 <caml_ephe_set_key_option+0x50>
  415c17:	48 8b 05 f2 6b 21 00 	mov    0x216bf2(%rip),%rax        # 62c810 <caml_ephe_none>
  415c1e:	48 89 44 dd 00       	mov    %rax,0x0(%rbp,%rbx,8)
  415c23:	48 83 c4 18          	add    $0x18,%rsp
  415c27:	b8 01 00 00 00       	mov    $0x1,%eax
  415c2c:	5b                   	pop    %rbx
  415c2d:	5d                   	pop    %rbp
  415c2e:	c3                   	retq   
  415c2f:	90                   	nop
  415c30:	48 8b 12             	mov    (%rdx),%rdx
  415c33:	48 89 de             	mov    %rbx,%rsi
  415c36:	48 89 ef             	mov    %rbp,%rdi
  415c39:	e8 52 fd ff ff       	callq  415990 <do_set>
  415c3e:	48 83 c4 18          	add    $0x18,%rsp
  415c42:	b8 01 00 00 00       	mov    $0x1,%eax
  415c47:	5b                   	pop    %rbx
  415c48:	5d                   	pop    %rbp
  415c49:	c3                   	retq   
  415c4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  415c50:	48 89 de             	mov    %rbx,%rsi
  415c53:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  415c58:	e8 d3 fd ff ff       	callq  415a30 <do_check_key_clean.part.1>
  415c5d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  415c62:	eb a8                	jmp    415c0c <caml_ephe_set_key_option+0x2c>
  415c64:	bf 39 ec 41 00       	mov    $0x41ec39,%edi
  415c69:	e8 72 4a 00 00       	callq  41a6e0 <caml_invalid_argument>
  415c6e:	66 90                	xchg   %ax,%ax

0000000000415c70 <caml_weak_set>:
  415c70:	e9 6b ff ff ff       	jmpq   415be0 <caml_ephe_set_key_option>
  415c75:	90                   	nop
  415c76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  415c7d:	00 00 00 

0000000000415c80 <caml_ephe_set_data>:
  415c80:	41 57                	push   %r15
  415c82:	41 56                	push   %r14
  415c84:	41 55                	push   %r13
  415c86:	41 54                	push   %r12
  415c88:	55                   	push   %rbp
  415c89:	53                   	push   %rbx
  415c8a:	48 89 fd             	mov    %rdi,%rbp
  415c8d:	48 83 ec 18          	sub    $0x18,%rsp
  415c91:	83 3d 70 b7 22 00 01 	cmpl   $0x1,0x22b770(%rip)        # 641408 <caml_gc_phase>
  415c98:	48 89 34 24          	mov    %rsi,(%rsp)
  415c9c:	74 2a                	je     415cc8 <caml_ephe_set_data+0x48>
  415c9e:	48 8b 14 24          	mov    (%rsp),%rdx
  415ca2:	48 89 ef             	mov    %rbp,%rdi
  415ca5:	be 01 00 00 00       	mov    $0x1,%esi
  415caa:	e8 e1 fc ff ff       	callq  415990 <do_set>
  415caf:	48 83 c4 18          	add    $0x18,%rsp
  415cb3:	b8 01 00 00 00       	mov    $0x1,%eax
  415cb8:	5b                   	pop    %rbx
  415cb9:	5d                   	pop    %rbp
  415cba:	41 5c                	pop    %r12
  415cbc:	41 5d                	pop    %r13
  415cbe:	41 5e                	pop    %r14
  415cc0:	41 5f                	pop    %r15
  415cc2:	c3                   	retq   
  415cc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415cc8:	4c 8b 77 f8          	mov    -0x8(%rdi),%r14
  415ccc:	49 c1 ee 0a          	shr    $0xa,%r14
  415cd0:	49 83 fe 02          	cmp    $0x2,%r14
  415cd4:	76 c8                	jbe    415c9e <caml_ephe_set_data+0x1e>
  415cd6:	48 8b 05 33 6b 21 00 	mov    0x216b33(%rip),%rax        # 62c810 <caml_ephe_none>
  415cdd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  415ce4:	00 
  415ce5:	bb 02 00 00 00       	mov    $0x2,%ebx
  415cea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  415cf0:	4c 8b 7c dd 00       	mov    0x0(%rbp,%rbx,8),%r15
  415cf5:	eb 22                	jmp    415d19 <caml_ephe_set_data+0x99>
  415cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  415cfe:	00 00 
  415d00:	48 8d 48 10          	lea    0x10(%rax),%rcx
  415d04:	48 89 0d 2d 71 21 00 	mov    %rcx,0x21712d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  415d0b:	48 89 28             	mov    %rbp,(%rax)
  415d0e:	48 89 58 08          	mov    %rbx,0x8(%rax)
  415d12:	48 8b 05 f7 6a 21 00 	mov    0x216af7(%rip),%rax        # 62c810 <caml_ephe_none>
  415d19:	49 39 c7             	cmp    %rax,%r15
  415d1c:	0f 84 cd 00 00 00    	je     415def <caml_ephe_set_data+0x16f>
  415d22:	41 f6 c7 01          	test   $0x1,%r15b
  415d26:	0f 85 c3 00 00 00    	jne    415def <caml_ephe_set_data+0x16f>
  415d2c:	4c 89 ff             	mov    %r15,%rdi
  415d2f:	4d 89 fd             	mov    %r15,%r13
  415d32:	e8 09 30 ff ff       	callq  408d40 <caml_page_table_lookup>
  415d37:	a8 03                	test   $0x3,%al
  415d39:	0f 84 e1 00 00 00    	je     415e20 <caml_ephe_set_data+0x1a0>
  415d3f:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
  415d44:	4d 8d 67 f8          	lea    -0x8(%r15),%r12
  415d48:	75 6e                	jne    415db8 <caml_ephe_set_data+0x138>
  415d4a:	4d 8b 3f             	mov    (%r15),%r15
  415d4d:	41 f6 c7 01          	test   $0x1,%r15b
  415d51:	75 65                	jne    415db8 <caml_ephe_set_data+0x138>
  415d53:	4c 89 ff             	mov    %r15,%rdi
  415d56:	e8 e5 2f ff ff       	callq  408d40 <caml_page_table_lookup>
  415d5b:	a8 07                	test   $0x7,%al
  415d5d:	74 59                	je     415db8 <caml_ephe_set_data+0x138>
  415d5f:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  415d64:	8d 48 0a             	lea    0xa(%rax),%ecx
  415d67:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  415d6d:	74 49                	je     415db8 <caml_ephe_set_data+0x138>
  415d6f:	3c fd                	cmp    $0xfd,%al
  415d71:	74 45                	je     415db8 <caml_ephe_set_data+0x138>
  415d73:	4c 89 7c dd 00       	mov    %r15,0x0(%rbp,%rbx,8)
  415d78:	4c 3b 3d 49 71 21 00 	cmp    0x217149(%rip),%r15        # 62cec8 <caml_young_end>
  415d7f:	73 91                	jae    415d12 <caml_ephe_set_data+0x92>
  415d81:	4c 3b 3d 48 71 21 00 	cmp    0x217148(%rip),%r15        # 62ced0 <caml_young_start>
  415d88:	76 88                	jbe    415d12 <caml_ephe_set_data+0x92>
  415d8a:	48 8b 05 a7 70 21 00 	mov    0x2170a7(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  415d91:	48 3b 05 a8 70 21 00 	cmp    0x2170a8(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  415d98:	0f 82 62 ff ff ff    	jb     415d00 <caml_ephe_set_data+0x80>
  415d9e:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  415da3:	e8 58 2d ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  415da8:	48 8b 05 89 70 21 00 	mov    0x217089(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  415daf:	e9 4c ff ff ff       	jmpq   415d00 <caml_ephe_set_data+0x80>
  415db4:	0f 1f 40 00          	nopl   0x0(%rax)
  415db8:	49 f7 04 24 00 03 00 	testq  $0x300,(%r12)
  415dbf:	00 
  415dc0:	75 5e                	jne    415e20 <caml_ephe_set_data+0x1a0>
  415dc2:	4c 3b 2d ff 70 21 00 	cmp    0x2170ff(%rip),%r13        # 62cec8 <caml_young_end>
  415dc9:	48 8b 05 40 6a 21 00 	mov    0x216a40(%rip),%rax        # 62c810 <caml_ephe_none>
  415dd0:	73 09                	jae    415ddb <caml_ephe_set_data+0x15b>
  415dd2:	4c 3b 2d f7 70 21 00 	cmp    0x2170f7(%rip),%r13        # 62ced0 <caml_young_start>
  415dd9:	77 14                	ja     415def <caml_ephe_set_data+0x16f>
  415ddb:	48 89 44 dd 00       	mov    %rax,0x0(%rbp,%rbx,8)
  415de0:	48 8b 05 29 6a 21 00 	mov    0x216a29(%rip),%rax        # 62c810 <caml_ephe_none>
  415de7:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
  415dee:	00 
  415def:	48 83 c3 01          	add    $0x1,%rbx
  415df3:	49 39 de             	cmp    %rbx,%r14
  415df6:	0f 85 f4 fe ff ff    	jne    415cf0 <caml_ephe_set_data+0x70>
  415dfc:	48 39 45 08          	cmp    %rax,0x8(%rbp)
  415e00:	0f 84 98 fe ff ff    	je     415c9e <caml_ephe_set_data+0x1e>
  415e06:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  415e0a:	85 d2                	test   %edx,%edx
  415e0c:	0f 84 8c fe ff ff    	je     415c9e <caml_ephe_set_data+0x1e>
  415e12:	48 89 45 08          	mov    %rax,0x8(%rbp)
  415e16:	e9 83 fe ff ff       	jmpq   415c9e <caml_ephe_set_data+0x1e>
  415e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415e20:	48 83 c3 01          	add    $0x1,%rbx
  415e24:	48 8b 05 e5 69 21 00 	mov    0x2169e5(%rip),%rax        # 62c810 <caml_ephe_none>
  415e2b:	49 39 de             	cmp    %rbx,%r14
  415e2e:	0f 85 bc fe ff ff    	jne    415cf0 <caml_ephe_set_data+0x70>
  415e34:	eb c6                	jmp    415dfc <caml_ephe_set_data+0x17c>
  415e36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  415e3d:	00 00 00 

0000000000415e40 <caml_ephe_unset_data>:
  415e40:	48 8b 05 c9 69 21 00 	mov    0x2169c9(%rip),%rax        # 62c810 <caml_ephe_none>
  415e47:	48 89 47 08          	mov    %rax,0x8(%rdi)
  415e4b:	b8 01 00 00 00       	mov    $0x1,%eax
  415e50:	c3                   	retq   
  415e51:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415e56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  415e5d:	00 00 00 

0000000000415e60 <caml_ephe_get_key>:
  415e60:	41 56                	push   %r14
  415e62:	41 55                	push   %r13
  415e64:	41 54                	push   %r12
  415e66:	55                   	push   %rbp
  415e67:	53                   	push   %rbx
  415e68:	48 89 f3             	mov    %rsi,%rbx
  415e6b:	48 d1 fb             	sar    %rbx
  415e6e:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  415e75:	4c 8b 25 cc 6a 21 00 	mov    0x216acc(%rip),%r12        # 62c948 <caml_local_roots>
  415e7c:	48 83 c3 02          	add    $0x2,%rbx
  415e80:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  415e87:	00 00 
  415e89:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  415e90:	00 
  415e91:	31 c0                	xor    %eax,%eax
  415e93:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  415e98:	48 83 fb 01          	cmp    $0x1,%rbx
  415e9c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  415ea1:	48 89 34 24          	mov    %rsi,(%rsp)
  415ea5:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
  415eaa:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  415eaf:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  415eb4:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  415ebb:	00 00 
  415ebd:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
  415ec4:	00 00 
  415ec6:	48 89 64 24 40       	mov    %rsp,0x40(%rsp)
  415ecb:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  415ed0:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  415ed5:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
  415edc:	00 00 
  415ede:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  415ee5:	00 00 
  415ee7:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  415eee:	00 00 
  415ef0:	48 89 05 51 6a 21 00 	mov    %rax,0x216a51(%rip)        # 62c948 <caml_local_roots>
  415ef7:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  415efc:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
  415f03:	00 00 
  415f05:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  415f0a:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  415f0f:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
  415f16:	00 
  415f17:	0f 86 1d 01 00 00    	jbe    41603a <caml_ephe_get_key+0x1da>
  415f1d:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  415f21:	48 89 fd             	mov    %rdi,%rbp
  415f24:	48 c1 e8 0a          	shr    $0xa,%rax
  415f28:	48 39 c3             	cmp    %rax,%rbx
  415f2b:	0f 83 09 01 00 00    	jae    41603a <caml_ephe_get_key+0x1da>
  415f31:	4c 8d 2c df          	lea    (%rdi,%rbx,8),%r13
  415f35:	49 8b 45 00          	mov    0x0(%r13),%rax
  415f39:	48 3b 05 d0 68 21 00 	cmp    0x2168d0(%rip),%rax        # 62c810 <caml_ephe_none>
  415f40:	0f 84 88 00 00 00    	je     415fce <caml_ephe_get_key+0x16e>
  415f46:	8b 15 bc b4 22 00    	mov    0x22b4bc(%rip),%edx        # 641408 <caml_gc_phase>
  415f4c:	49 89 c6             	mov    %rax,%r14
  415f4f:	83 fa 01             	cmp    $0x1,%edx
  415f52:	0f 84 a0 00 00 00    	je     415ff8 <caml_ephe_get_key+0x198>
  415f58:	85 d2                	test   %edx,%edx
  415f5a:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
  415f5f:	75 06                	jne    415f67 <caml_ephe_get_key+0x107>
  415f61:	41 f6 c6 01          	test   $0x1,%r14b
  415f65:	74 71                	je     415fd8 <caml_ephe_get_key+0x178>
  415f67:	31 f6                	xor    %esi,%esi
  415f69:	bf 01 00 00 00       	mov    $0x1,%edi
  415f6e:	e8 0d 63 00 00       	callq  41c280 <caml_alloc_small>
  415f73:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  415f78:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  415f7d:	48 89 10             	mov    %rdx,(%rax)
  415f80:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  415f85:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
  415f8c:	00 
  415f8d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  415f94:	00 00 
  415f96:	4c 89 25 ab 69 21 00 	mov    %r12,0x2169ab(%rip)        # 62c948 <caml_local_roots>
  415f9d:	0f 85 a1 00 00 00    	jne    416044 <caml_ephe_get_key+0x1e4>
  415fa3:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
  415faa:	5b                   	pop    %rbx
  415fab:	5d                   	pop    %rbp
  415fac:	41 5c                	pop    %r12
  415fae:	41 5d                	pop    %r13
  415fb0:	41 5e                	pop    %r14
  415fb2:	c3                   	retq   
  415fb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  415fb8:	48 8b 05 51 68 21 00 	mov    0x216851(%rip),%rax        # 62c810 <caml_ephe_none>
  415fbf:	49 89 45 00          	mov    %rax,0x0(%r13)
  415fc3:	48 8b 05 46 68 21 00 	mov    0x216846(%rip),%rax        # 62c810 <caml_ephe_none>
  415fca:	48 89 45 08          	mov    %rax,0x8(%rbp)
  415fce:	b8 01 00 00 00       	mov    $0x1,%eax
  415fd3:	eb b0                	jmp    415f85 <caml_ephe_get_key+0x125>
  415fd5:	0f 1f 00             	nopl   (%rax)
  415fd8:	4c 89 f7             	mov    %r14,%rdi
  415fdb:	e8 60 2d ff ff       	callq  408d40 <caml_page_table_lookup>
  415fe0:	a8 01                	test   $0x1,%al
  415fe2:	74 83                	je     415f67 <caml_ephe_get_key+0x107>
  415fe4:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  415fe9:	31 f6                	xor    %esi,%esi
  415feb:	e8 c0 12 ff ff       	callq  4072b0 <caml_darken>
  415ff0:	e9 72 ff ff ff       	jmpq   415f67 <caml_ephe_get_key+0x107>
  415ff5:	0f 1f 00             	nopl   (%rax)
  415ff8:	a8 01                	test   $0x1,%al
  415ffa:	74 14                	je     416010 <caml_ephe_get_key+0x1b0>
  415ffc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  416001:	e9 61 ff ff ff       	jmpq   415f67 <caml_ephe_get_key+0x107>
  416006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41600d:	00 00 00 
  416010:	48 89 c7             	mov    %rax,%rdi
  416013:	e8 28 2d ff ff       	callq  408d40 <caml_page_table_lookup>
  416018:	a8 01                	test   $0x1,%al
  41601a:	74 0a                	je     416026 <caml_ephe_get_key+0x1c6>
  41601c:	49 f7 46 f8 00 03 00 	testq  $0x300,-0x8(%r14)
  416023:	00 
  416024:	74 92                	je     415fb8 <caml_ephe_get_key+0x158>
  416026:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41602b:	8b 15 d7 b3 22 00    	mov    0x22b3d7(%rip),%edx        # 641408 <caml_gc_phase>
  416031:	4c 8b 34 d8          	mov    (%rax,%rbx,8),%r14
  416035:	e9 1e ff ff ff       	jmpq   415f58 <caml_ephe_get_key+0xf8>
  41603a:	bf 42 ec 41 00       	mov    $0x41ec42,%edi
  41603f:	e8 9c 46 00 00       	callq  41a6e0 <caml_invalid_argument>
  416044:	e8 27 ba fe ff       	callq  401a70 <__stack_chk_fail@plt>
  416049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000416050 <caml_weak_get>:
  416050:	e9 0b fe ff ff       	jmpq   415e60 <caml_ephe_get_key>
  416055:	90                   	nop
  416056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41605d:	00 00 00 

0000000000416060 <caml_ephe_get_data>:
  416060:	41 57                	push   %r15
  416062:	41 56                	push   %r14
  416064:	41 55                	push   %r13
  416066:	41 54                	push   %r12
  416068:	55                   	push   %rbp
  416069:	53                   	push   %rbx
  41606a:	48 89 fb             	mov    %rdi,%rbx
  41606d:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
  416074:	4c 8b 35 cd 68 21 00 	mov    0x2168cd(%rip),%r14        # 62c948 <caml_local_roots>
  41607b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  416082:	00 00 
  416084:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  41608b:	00 
  41608c:	31 c0                	xor    %eax,%eax
  41608e:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  416093:	83 3d 6e b3 22 00 01 	cmpl   $0x1,0x22b36e(%rip)        # 641408 <caml_gc_phase>
  41609a:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  4160a1:	00 00 
  4160a3:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  4160a8:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
  4160ad:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  4160b2:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  4160b7:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  4160be:	00 00 
  4160c0:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
  4160c7:	00 00 
  4160c9:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  4160d0:	00 00 
  4160d2:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
  4160d7:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
  4160dc:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
  4160e3:	00 01 00 00 00 
  4160e8:	48 c7 44 24 78 02 00 	movq   $0x2,0x78(%rsp)
  4160ef:	00 00 
  4160f1:	48 89 05 50 68 21 00 	mov    %rax,0x216850(%rip)        # 62c948 <caml_local_roots>
  4160f8:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4160fd:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  416104:	00 
  416105:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
  41610a:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
  416111:	00 
  416112:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  416116:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
  41611b:	0f 84 9f 00 00 00    	je     4161c0 <caml_ephe_get_data+0x160>
  416121:	48 8b 05 e8 66 21 00 	mov    0x2166e8(%rip),%rax        # 62c810 <caml_ephe_none>
  416128:	48 39 c7             	cmp    %rax,%rdi
  41612b:	74 63                	je     416190 <caml_ephe_get_data+0x130>
  41612d:	8b 05 d5 b2 22 00    	mov    0x22b2d5(%rip),%eax        # 641408 <caml_gc_phase>
  416133:	85 c0                	test   %eax,%eax
  416135:	75 06                	jne    41613d <caml_ephe_get_data+0xdd>
  416137:	40 f6 c7 01          	test   $0x1,%dil
  41613b:	74 63                	je     4161a0 <caml_ephe_get_data+0x140>
  41613d:	31 f6                	xor    %esi,%esi
  41613f:	bf 01 00 00 00       	mov    $0x1,%edi
  416144:	e8 37 61 00 00       	callq  41c280 <caml_alloc_small>
  416149:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41614e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  416153:	48 89 10             	mov    %rdx,(%rax)
  416156:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  41615b:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
  416162:	00 
  416163:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  41616a:	00 00 
  41616c:	4c 89 35 d5 67 21 00 	mov    %r14,0x2167d5(%rip)        # 62c948 <caml_local_roots>
  416173:	0f 85 c9 01 00 00    	jne    416342 <caml_ephe_get_data+0x2e2>
  416179:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
  416180:	5b                   	pop    %rbx
  416181:	5d                   	pop    %rbp
  416182:	41 5c                	pop    %r12
  416184:	41 5d                	pop    %r13
  416186:	41 5e                	pop    %r14
  416188:	41 5f                	pop    %r15
  41618a:	c3                   	retq   
  41618b:	48 39 c7             	cmp    %rax,%rdi
  41618e:	75 ad                	jne    41613d <caml_ephe_get_data+0xdd>
  416190:	b8 01 00 00 00       	mov    $0x1,%eax
  416195:	eb c4                	jmp    41615b <caml_ephe_get_data+0xfb>
  416197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41619e:	00 00 
  4161a0:	e8 9b 2b ff ff       	callq  408d40 <caml_page_table_lookup>
  4161a5:	a8 01                	test   $0x1,%al
  4161a7:	74 94                	je     41613d <caml_ephe_get_data+0xdd>
  4161a9:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4161ae:	31 f6                	xor    %esi,%esi
  4161b0:	e8 fb 10 ff ff       	callq  4072b0 <caml_darken>
  4161b5:	eb 86                	jmp    41613d <caml_ephe_get_data+0xdd>
  4161b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4161be:	00 00 
  4161c0:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  4161c4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
  4161cb:	00 
  4161cc:	bd 02 00 00 00       	mov    $0x2,%ebp
  4161d1:	48 c1 e8 0a          	shr    $0xa,%rax
  4161d5:	48 89 c2             	mov    %rax,%rdx
  4161d8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4161dd:	48 8b 05 2c 66 21 00 	mov    0x21662c(%rip),%rax        # 62c810 <caml_ephe_none>
  4161e4:	48 83 fa 02          	cmp    $0x2,%rdx
  4161e8:	76 a1                	jbe    41618b <caml_ephe_get_data+0x12b>
  4161ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4161f0:	4c 8b 3c eb          	mov    (%rbx,%rbp,8),%r15
  4161f4:	eb 23                	jmp    416219 <caml_ephe_get_data+0x1b9>
  4161f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4161fd:	00 00 00 
  416200:	48 8d 48 10          	lea    0x10(%rax),%rcx
  416204:	48 89 0d 2d 6c 21 00 	mov    %rcx,0x216c2d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  41620b:	48 89 18             	mov    %rbx,(%rax)
  41620e:	48 89 68 08          	mov    %rbp,0x8(%rax)
  416212:	48 8b 05 f7 65 21 00 	mov    0x2165f7(%rip),%rax        # 62c810 <caml_ephe_none>
  416219:	49 39 c7             	cmp    %rax,%r15
  41621c:	0f 84 cc 00 00 00    	je     4162ee <caml_ephe_get_data+0x28e>
  416222:	41 f6 c7 01          	test   $0x1,%r15b
  416226:	0f 85 c2 00 00 00    	jne    4162ee <caml_ephe_get_data+0x28e>
  41622c:	4c 89 ff             	mov    %r15,%rdi
  41622f:	4d 89 fd             	mov    %r15,%r13
  416232:	e8 09 2b ff ff       	callq  408d40 <caml_page_table_lookup>
  416237:	a8 03                	test   $0x3,%al
  416239:	0f 84 e1 00 00 00    	je     416320 <caml_ephe_get_data+0x2c0>
  41623f:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
  416244:	4d 8d 67 f8          	lea    -0x8(%r15),%r12
  416248:	75 6e                	jne    4162b8 <caml_ephe_get_data+0x258>
  41624a:	4d 8b 3f             	mov    (%r15),%r15
  41624d:	41 f6 c7 01          	test   $0x1,%r15b
  416251:	75 65                	jne    4162b8 <caml_ephe_get_data+0x258>
  416253:	4c 89 ff             	mov    %r15,%rdi
  416256:	e8 e5 2a ff ff       	callq  408d40 <caml_page_table_lookup>
  41625b:	a8 07                	test   $0x7,%al
  41625d:	74 59                	je     4162b8 <caml_ephe_get_data+0x258>
  41625f:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  416264:	8d 48 0a             	lea    0xa(%rax),%ecx
  416267:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  41626d:	74 49                	je     4162b8 <caml_ephe_get_data+0x258>
  41626f:	3c fd                	cmp    $0xfd,%al
  416271:	74 45                	je     4162b8 <caml_ephe_get_data+0x258>
  416273:	4c 89 3c eb          	mov    %r15,(%rbx,%rbp,8)
  416277:	4c 3b 3d 4a 6c 21 00 	cmp    0x216c4a(%rip),%r15        # 62cec8 <caml_young_end>
  41627e:	73 92                	jae    416212 <caml_ephe_get_data+0x1b2>
  416280:	4c 3b 3d 49 6c 21 00 	cmp    0x216c49(%rip),%r15        # 62ced0 <caml_young_start>
  416287:	76 89                	jbe    416212 <caml_ephe_get_data+0x1b2>
  416289:	48 8b 05 a8 6b 21 00 	mov    0x216ba8(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  416290:	48 3b 05 a9 6b 21 00 	cmp    0x216ba9(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  416297:	0f 82 63 ff ff ff    	jb     416200 <caml_ephe_get_data+0x1a0>
  41629d:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  4162a2:	e8 59 28 ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  4162a7:	48 8b 05 8a 6b 21 00 	mov    0x216b8a(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  4162ae:	e9 4d ff ff ff       	jmpq   416200 <caml_ephe_get_data+0x1a0>
  4162b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4162b8:	49 f7 04 24 00 03 00 	testq  $0x300,(%r12)
  4162bf:	00 
  4162c0:	75 5e                	jne    416320 <caml_ephe_get_data+0x2c0>
  4162c2:	4c 3b 2d ff 6b 21 00 	cmp    0x216bff(%rip),%r13        # 62cec8 <caml_young_end>
  4162c9:	48 8b 05 40 65 21 00 	mov    0x216540(%rip),%rax        # 62c810 <caml_ephe_none>
  4162d0:	73 09                	jae    4162db <caml_ephe_get_data+0x27b>
  4162d2:	4c 3b 2d f7 6b 21 00 	cmp    0x216bf7(%rip),%r13        # 62ced0 <caml_young_start>
  4162d9:	77 13                	ja     4162ee <caml_ephe_get_data+0x28e>
  4162db:	48 89 04 eb          	mov    %rax,(%rbx,%rbp,8)
  4162df:	48 8b 05 2a 65 21 00 	mov    0x21652a(%rip),%rax        # 62c810 <caml_ephe_none>
  4162e6:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
  4162ed:	00 
  4162ee:	48 83 c5 01          	add    $0x1,%rbp
  4162f2:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
  4162f7:	0f 85 f3 fe ff ff    	jne    4161f0 <caml_ephe_get_data+0x190>
  4162fd:	48 39 43 08          	cmp    %rax,0x8(%rbx)
  416301:	74 35                	je     416338 <caml_ephe_get_data+0x2d8>
  416303:	8b 54 24 14          	mov    0x14(%rsp),%edx
  416307:	85 d2                	test   %edx,%edx
  416309:	74 2d                	je     416338 <caml_ephe_get_data+0x2d8>
  41630b:	48 89 43 08          	mov    %rax,0x8(%rbx)
  41630f:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  416314:	e9 08 fe ff ff       	jmpq   416121 <caml_ephe_get_data+0xc1>
  416319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  416320:	48 83 c5 01          	add    $0x1,%rbp
  416324:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
  416329:	48 8b 05 e0 64 21 00 	mov    0x2164e0(%rip),%rax        # 62c810 <caml_ephe_none>
  416330:	0f 85 ba fe ff ff    	jne    4161f0 <caml_ephe_get_data+0x190>
  416336:	eb c5                	jmp    4162fd <caml_ephe_get_data+0x29d>
  416338:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  41633d:	e9 e6 fd ff ff       	jmpq   416128 <caml_ephe_get_data+0xc8>
  416342:	e8 29 b7 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  416347:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41634e:	00 00 

0000000000416350 <caml_ephe_get_key_copy>:
  416350:	41 57                	push   %r15
  416352:	41 56                	push   %r14
  416354:	41 55                	push   %r13
  416356:	41 54                	push   %r12
  416358:	55                   	push   %rbp
  416359:	53                   	push   %rbx
  41635a:	48 89 f3             	mov    %rsi,%rbx
  41635d:	48 d1 fb             	sar    %rbx
  416360:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  416367:	4c 8b 2d da 65 21 00 	mov    0x2165da(%rip),%r13        # 62c948 <caml_local_roots>
  41636e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  416375:	00 00 
  416377:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  41637e:	00 
  41637f:	31 c0                	xor    %eax,%eax
  416381:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  416386:	48 83 c3 02          	add    $0x2,%rbx
  41638a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41638f:	48 89 34 24          	mov    %rsi,(%rsp)
  416393:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
  416398:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  41639d:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4163a2:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  4163a9:	00 00 
  4163ab:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
  4163b2:	00 00 
  4163b4:	48 89 64 24 40       	mov    %rsp,0x40(%rsp)
  4163b9:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  4163be:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  4163c3:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
  4163ca:	00 00 
  4163cc:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  4163d3:	00 00 
  4163d5:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  4163dc:	00 00 
  4163de:	48 89 05 63 65 21 00 	mov    %rax,0x216563(%rip)        # 62c948 <caml_local_roots>
  4163e5:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  4163ea:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
  4163f1:	00 00 
  4163f3:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  4163f8:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  4163fd:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
  416404:	00 
  416405:	0f 84 1a 02 00 00    	je     416625 <caml_ephe_get_key_copy+0x2d5>
  41640b:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  41640f:	49 89 fc             	mov    %rdi,%r12
  416412:	48 c1 e8 0a          	shr    $0xa,%rax
  416416:	48 39 c3             	cmp    %rax,%rbx
  416419:	0f 83 06 02 00 00    	jae    416625 <caml_ephe_get_key_copy+0x2d5>
  41641f:	4c 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%r14
  416426:	00 
  416427:	4e 8d 3c 37          	lea    (%rdi,%r14,1),%r15
  41642b:	49 8b 2f             	mov    (%r15),%rbp
  41642e:	48 3b 2d db 63 21 00 	cmp    0x2163db(%rip),%rbp        # 62c810 <caml_ephe_none>
  416435:	0f 84 a5 00 00 00    	je     4164e0 <caml_ephe_get_key_copy+0x190>
  41643b:	83 3d c6 af 22 00 01 	cmpl   $0x1,0x22afc6(%rip)        # 641408 <caml_gc_phase>
  416442:	0f 84 78 01 00 00    	je     4165c0 <caml_ephe_get_key_copy+0x270>
  416448:	40 f6 c5 01          	test   $0x1,%bpl
  41644c:	0f 84 9e 00 00 00    	je     4164f0 <caml_ephe_get_key_copy+0x1a0>
  416452:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
  416457:	31 f6                	xor    %esi,%esi
  416459:	bf 01 00 00 00       	mov    $0x1,%edi
  41645e:	e8 1d 5e 00 00       	callq  41c280 <caml_alloc_small>
  416463:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  416468:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41646d:	48 89 10             	mov    %rdx,(%rax)
  416470:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  416475:	4c 89 2d cc 64 21 00 	mov    %r13,0x2164cc(%rip)        # 62c948 <caml_local_roots>
  41647c:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
  416483:	00 
  416484:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41648b:	00 00 
  41648d:	0f 85 9c 01 00 00    	jne    41662f <caml_ephe_get_key_copy+0x2df>
  416493:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
  41649a:	5b                   	pop    %rbx
  41649b:	5d                   	pop    %rbp
  41649c:	41 5c                	pop    %r12
  41649e:	41 5d                	pop    %r13
  4164a0:	41 5e                	pop    %r14
  4164a2:	41 5f                	pop    %r15
  4164a4:	c3                   	retq   
  4164a5:	41 f6 c4 01          	test   $0x1,%r12b
  4164a9:	0f 85 88 00 00 00    	jne    416537 <caml_ephe_get_key_copy+0x1e7>
  4164af:	4c 89 e7             	mov    %r12,%rdi
  4164b2:	4d 8d 7c 24 f8       	lea    -0x8(%r12),%r15
  4164b7:	e8 84 28 ff ff       	callq  408d40 <caml_page_table_lookup>
  4164bc:	a8 01                	test   $0x1,%al
  4164be:	49 8b 44 24 f8       	mov    -0x8(%r12),%rax
  4164c3:	74 7c                	je     416541 <caml_ephe_get_key_copy+0x1f1>
  4164c5:	f6 c4 03             	test   $0x3,%ah
  4164c8:	75 77                	jne    416541 <caml_ephe_get_key_copy+0x1f1>
  4164ca:	48 8b 05 3f 63 21 00 	mov    0x21633f(%rip),%rax        # 62c810 <caml_ephe_none>
  4164d1:	49 89 06             	mov    %rax,(%r14)
  4164d4:	48 8b 05 35 63 21 00 	mov    0x216335(%rip),%rax        # 62c810 <caml_ephe_none>
  4164db:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4164df:	90                   	nop
  4164e0:	4c 89 2d 61 64 21 00 	mov    %r13,0x216461(%rip)        # 62c948 <caml_local_roots>
  4164e7:	b8 01 00 00 00       	mov    $0x1,%eax
  4164ec:	eb 8e                	jmp    41647c <caml_ephe_get_key_copy+0x12c>
  4164ee:	66 90                	xchg   %ax,%ax
  4164f0:	48 89 ef             	mov    %rbp,%rdi
  4164f3:	e8 48 28 ff ff       	callq  408d40 <caml_page_table_lookup>
  4164f8:	a8 03                	test   $0x3,%al
  4164fa:	0f 84 52 ff ff ff    	je     416452 <caml_ephe_get_key_copy+0x102>
  416500:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  416504:	0f b6 75 f8          	movzbl -0x8(%rbp),%esi
  416508:	48 c1 ef 0a          	shr    $0xa,%rdi
  41650c:	e8 5f 5c 00 00       	callq  41c170 <caml_alloc>
  416511:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  416516:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41651b:	49 01 de             	add    %rbx,%r14
  41651e:	4d 8b 26             	mov    (%r14),%r12
  416521:	4c 3b 25 e8 62 21 00 	cmp    0x2162e8(%rip),%r12        # 62c810 <caml_ephe_none>
  416528:	74 b6                	je     4164e0 <caml_ephe_get_key_copy+0x190>
  41652a:	83 3d d7 ae 22 00 01 	cmpl   $0x1,0x22aed7(%rip)        # 641408 <caml_gc_phase>
  416531:	0f 84 6e ff ff ff    	je     4164a5 <caml_ephe_get_key_copy+0x155>
  416537:	49 8b 44 24 f8       	mov    -0x8(%r12),%rax
  41653c:	4d 8d 7c 24 f8       	lea    -0x8(%r12),%r15
  416541:	48 c1 e8 0a          	shr    $0xa,%rax
  416545:	41 80 3f fa          	cmpb   $0xfa,(%r15)
  416549:	0f 87 bc 00 00 00    	ja     41660b <caml_ephe_get_key_copy+0x2bb>
  41654f:	31 db                	xor    %ebx,%ebx
  416551:	48 85 c0             	test   %rax,%rax
  416554:	75 2e                	jne    416584 <caml_ephe_get_key_copy+0x234>
  416556:	e9 fc fe ff ff       	jmpq   416457 <caml_ephe_get_key_copy+0x107>
  41655b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  416560:	48 89 ef             	mov    %rbp,%rdi
  416563:	48 03 7c 24 18       	add    0x18(%rsp),%rdi
  416568:	4c 89 f6             	mov    %r14,%rsi
  41656b:	48 83 c3 01          	add    $0x1,%rbx
  41656f:	e8 9c 31 ff ff       	callq  409710 <caml_modify>
  416574:	49 8b 07             	mov    (%r15),%rax
  416577:	48 c1 e8 0a          	shr    $0xa,%rax
  41657b:	48 39 d8             	cmp    %rbx,%rax
  41657e:	0f 86 d3 fe ff ff    	jbe    416457 <caml_ephe_get_key_copy+0x107>
  416584:	8b 05 7e ae 22 00    	mov    0x22ae7e(%rip),%eax        # 641408 <caml_gc_phase>
  41658a:	48 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%rbp
  416591:	00 
  416592:	4d 8b 34 dc          	mov    (%r12,%rbx,8),%r14
  416596:	85 c0                	test   %eax,%eax
  416598:	75 c6                	jne    416560 <caml_ephe_get_key_copy+0x210>
  41659a:	41 f6 c6 01          	test   $0x1,%r14b
  41659e:	75 c0                	jne    416560 <caml_ephe_get_key_copy+0x210>
  4165a0:	4c 89 f7             	mov    %r14,%rdi
  4165a3:	e8 98 27 ff ff       	callq  408d40 <caml_page_table_lookup>
  4165a8:	a8 01                	test   $0x1,%al
  4165aa:	74 b4                	je     416560 <caml_ephe_get_key_copy+0x210>
  4165ac:	31 f6                	xor    %esi,%esi
  4165ae:	4c 89 f7             	mov    %r14,%rdi
  4165b1:	e8 fa 0c ff ff       	callq  4072b0 <caml_darken>
  4165b6:	eb a8                	jmp    416560 <caml_ephe_get_key_copy+0x210>
  4165b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4165bf:	00 
  4165c0:	40 f6 c5 01          	test   $0x1,%bpl
  4165c4:	0f 85 88 fe ff ff    	jne    416452 <caml_ephe_get_key_copy+0x102>
  4165ca:	48 89 ef             	mov    %rbp,%rdi
  4165cd:	e8 6e 27 ff ff       	callq  408d40 <caml_page_table_lookup>
  4165d2:	a8 01                	test   $0x1,%al
  4165d4:	74 0a                	je     4165e0 <caml_ephe_get_key_copy+0x290>
  4165d6:	48 f7 45 f8 00 03 00 	testq  $0x300,-0x8(%rbp)
  4165dd:	00 
  4165de:	74 10                	je     4165f0 <caml_ephe_get_key_copy+0x2a0>
  4165e0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4165e5:	48 8b 2c d8          	mov    (%rax,%rbx,8),%rbp
  4165e9:	e9 5a fe ff ff       	jmpq   416448 <caml_ephe_get_key_copy+0xf8>
  4165ee:	66 90                	xchg   %ax,%ax
  4165f0:	48 8b 05 19 62 21 00 	mov    0x216219(%rip),%rax        # 62c810 <caml_ephe_none>
  4165f7:	49 89 07             	mov    %rax,(%r15)
  4165fa:	48 8b 05 0f 62 21 00 	mov    0x21620f(%rip),%rax        # 62c810 <caml_ephe_none>
  416601:	49 89 44 24 08       	mov    %rax,0x8(%r12)
  416606:	e9 d5 fe ff ff       	jmpq   4164e0 <caml_ephe_get_key_copy+0x190>
  41660b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  416610:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  416617:	00 
  416618:	4c 89 e6             	mov    %r12,%rsi
  41661b:	e8 10 b7 fe ff       	callq  401d30 <memmove@plt>
  416620:	e9 32 fe ff ff       	jmpq   416457 <caml_ephe_get_key_copy+0x107>
  416625:	bf 4f ec 41 00       	mov    $0x41ec4f,%edi
  41662a:	e8 b1 40 00 00       	callq  41a6e0 <caml_invalid_argument>
  41662f:	e8 3c b4 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  416634:	66 90                	xchg   %ax,%ax
  416636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41663d:	00 00 00 

0000000000416640 <caml_weak_get_copy>:
  416640:	e9 0b fd ff ff       	jmpq   416350 <caml_ephe_get_key_copy>
  416645:	90                   	nop
  416646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41664d:	00 00 00 

0000000000416650 <caml_ephe_get_data_copy>:
  416650:	41 57                	push   %r15
  416652:	41 56                	push   %r14
  416654:	41 55                	push   %r13
  416656:	41 54                	push   %r12
  416658:	55                   	push   %rbp
  416659:	53                   	push   %rbx
  41665a:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
  416661:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  416668:	00 00 
  41666a:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  416671:	00 
  416672:	31 c0                	xor    %eax,%eax
  416674:	48 8b 05 cd 62 21 00 	mov    0x2162cd(%rip),%rax        # 62c948 <caml_local_roots>
  41667b:	83 3d 86 ad 22 00 01 	cmpl   $0x1,0x22ad86(%rip)        # 641408 <caml_gc_phase>
  416682:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  416687:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  41668e:	00 00 
  416690:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
  416697:	00 00 
  416699:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  4166a0:	00 00 
  4166a2:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  4166a7:	48 89 04 24          	mov    %rax,(%rsp)
  4166ab:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  4166b0:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  4166b7:	00 00 
  4166b9:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
  4166c0:	00 01 00 00 00 
  4166c5:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  4166ca:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  4166cf:	48 c7 44 24 78 02 00 	movq   $0x2,0x78(%rsp)
  4166d6:	00 00 
  4166d8:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
  4166dd:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
  4166e2:	48 89 05 5f 62 21 00 	mov    %rax,0x21625f(%rip)        # 62c948 <caml_local_roots>
  4166e9:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4166ee:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  4166f5:	00 
  4166f6:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
  4166fb:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
  416702:	00 
  416703:	4c 8b 77 08          	mov    0x8(%rdi),%r14
  416707:	0f 84 5b 01 00 00    	je     416868 <caml_ephe_get_data_copy+0x218>
  41670d:	48 8b 05 fc 60 21 00 	mov    0x2160fc(%rip),%rax        # 62c810 <caml_ephe_none>
  416714:	49 39 c6             	cmp    %rax,%r14
  416717:	0f 84 33 01 00 00    	je     416850 <caml_ephe_get_data_copy+0x200>
  41671d:	41 f6 c6 01          	test   $0x1,%r14b
  416721:	74 5d                	je     416780 <caml_ephe_get_data_copy+0x130>
  416723:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
  416728:	31 f6                	xor    %esi,%esi
  41672a:	bf 01 00 00 00       	mov    $0x1,%edi
  41672f:	e8 4c 5b 00 00       	callq  41c280 <caml_alloc_small>
  416734:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  416739:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  41673e:	48 89 10             	mov    %rdx,(%rax)
  416741:	48 8b 04 24          	mov    (%rsp),%rax
  416745:	48 89 05 fc 61 21 00 	mov    %rax,0x2161fc(%rip)        # 62c948 <caml_local_roots>
  41674c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  416751:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
  416758:	00 
  416759:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  416760:	00 00 
  416762:	0f 85 fa 03 00 00    	jne    416b62 <caml_ephe_get_data_copy+0x512>
  416768:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
  41676f:	5b                   	pop    %rbx
  416770:	5d                   	pop    %rbp
  416771:	41 5c                	pop    %r12
  416773:	41 5d                	pop    %r13
  416775:	41 5e                	pop    %r14
  416777:	41 5f                	pop    %r15
  416779:	c3                   	retq   
  41677a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  416780:	4c 89 f7             	mov    %r14,%rdi
  416783:	e8 b8 25 ff ff       	callq  408d40 <caml_page_table_lookup>
  416788:	a8 03                	test   $0x3,%al
  41678a:	74 97                	je     416723 <caml_ephe_get_data_copy+0xd3>
  41678c:	49 8b 7e f8          	mov    -0x8(%r14),%rdi
  416790:	41 0f b6 76 f8       	movzbl -0x8(%r14),%esi
  416795:	48 c1 ef 0a          	shr    $0xa,%rdi
  416799:	e8 d2 59 00 00       	callq  41c170 <caml_alloc>
  41679e:	83 3d 63 ac 22 00 01 	cmpl   $0x1,0x22ac63(%rip)        # 641408 <caml_gc_phase>
  4167a5:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
  4167aa:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4167af:	4c 8b 65 08          	mov    0x8(%rbp),%r12
  4167b3:	0f 84 4e 02 00 00    	je     416a07 <caml_ephe_get_data_copy+0x3b7>
  4167b9:	48 8b 05 50 60 21 00 	mov    0x216050(%rip),%rax        # 62c810 <caml_ephe_none>
  4167c0:	49 39 c4             	cmp    %rax,%r12
  4167c3:	0f 84 87 00 00 00    	je     416850 <caml_ephe_get_data_copy+0x200>
  4167c9:	41 80 7c 24 f8 fa    	cmpb   $0xfa,-0x8(%r12)
  4167cf:	4d 8d 6c 24 f8       	lea    -0x8(%r12),%r13
  4167d4:	0f 87 0e 02 00 00    	ja     4169e8 <caml_ephe_get_data_copy+0x398>
  4167da:	49 8b 44 24 f8       	mov    -0x8(%r12),%rax
  4167df:	31 db                	xor    %ebx,%ebx
  4167e1:	48 c1 e8 0a          	shr    $0xa,%rax
  4167e5:	48 85 c0             	test   %rax,%rax
  4167e8:	75 2b                	jne    416815 <caml_ephe_get_data_copy+0x1c5>
  4167ea:	e9 39 ff ff ff       	jmpq   416728 <caml_ephe_get_data_copy+0xd8>
  4167ef:	90                   	nop
  4167f0:	48 89 ef             	mov    %rbp,%rdi
  4167f3:	48 03 7c 24 28       	add    0x28(%rsp),%rdi
  4167f8:	4c 89 f6             	mov    %r14,%rsi
  4167fb:	48 83 c3 01          	add    $0x1,%rbx
  4167ff:	e8 0c 2f ff ff       	callq  409710 <caml_modify>
  416804:	49 8b 45 00          	mov    0x0(%r13),%rax
  416808:	48 c1 e8 0a          	shr    $0xa,%rax
  41680c:	48 39 d8             	cmp    %rbx,%rax
  41680f:	0f 86 13 ff ff ff    	jbe    416728 <caml_ephe_get_data_copy+0xd8>
  416815:	8b 05 ed ab 22 00    	mov    0x22abed(%rip),%eax        # 641408 <caml_gc_phase>
  41681b:	48 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%rbp
  416822:	00 
  416823:	4d 8b 34 dc          	mov    (%r12,%rbx,8),%r14
  416827:	85 c0                	test   %eax,%eax
  416829:	75 c5                	jne    4167f0 <caml_ephe_get_data_copy+0x1a0>
  41682b:	41 f6 c6 01          	test   $0x1,%r14b
  41682f:	75 bf                	jne    4167f0 <caml_ephe_get_data_copy+0x1a0>
  416831:	4c 89 f7             	mov    %r14,%rdi
  416834:	e8 07 25 ff ff       	callq  408d40 <caml_page_table_lookup>
  416839:	a8 01                	test   $0x1,%al
  41683b:	74 b3                	je     4167f0 <caml_ephe_get_data_copy+0x1a0>
  41683d:	31 f6                	xor    %esi,%esi
  41683f:	4c 89 f7             	mov    %r14,%rdi
  416842:	e8 69 0a ff ff       	callq  4072b0 <caml_darken>
  416847:	eb a7                	jmp    4167f0 <caml_ephe_get_data_copy+0x1a0>
  416849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  416850:	48 8b 04 24          	mov    (%rsp),%rax
  416854:	48 89 05 ed 60 21 00 	mov    %rax,0x2160ed(%rip)        # 62c948 <caml_local_roots>
  41685b:	b8 01 00 00 00       	mov    $0x1,%eax
  416860:	e9 ec fe ff ff       	jmpq   416751 <caml_ephe_get_data_copy+0x101>
  416865:	0f 1f 00             	nopl   (%rax)
  416868:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  41686c:	48 89 fb             	mov    %rdi,%rbx
  41686f:	48 c1 e8 0a          	shr    $0xa,%rax
  416873:	48 83 f8 02          	cmp    $0x2,%rax
  416877:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41687c:	0f 86 8b fe ff ff    	jbe    41670d <caml_ephe_get_data_copy+0xbd>
  416882:	48 8b 05 87 5f 21 00 	mov    0x215f87(%rip),%rax        # 62c810 <caml_ephe_none>
  416889:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
  416890:	00 
  416891:	bd 02 00 00 00       	mov    $0x2,%ebp
  416896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41689d:	00 00 00 
  4168a0:	4c 8b 3c eb          	mov    (%rbx,%rbp,8),%r15
  4168a4:	eb 23                	jmp    4168c9 <caml_ephe_get_data_copy+0x279>
  4168a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4168ad:	00 00 00 
  4168b0:	48 8d 48 10          	lea    0x10(%rax),%rcx
  4168b4:	48 89 0d 7d 65 21 00 	mov    %rcx,0x21657d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  4168bb:	48 89 18             	mov    %rbx,(%rax)
  4168be:	48 89 68 08          	mov    %rbp,0x8(%rax)
  4168c2:	48 8b 05 47 5f 21 00 	mov    0x215f47(%rip),%rax        # 62c810 <caml_ephe_none>
  4168c9:	49 39 c7             	cmp    %rax,%r15
  4168cc:	0f 84 cc 00 00 00    	je     41699e <caml_ephe_get_data_copy+0x34e>
  4168d2:	41 f6 c7 01          	test   $0x1,%r15b
  4168d6:	0f 85 c2 00 00 00    	jne    41699e <caml_ephe_get_data_copy+0x34e>
  4168dc:	4c 89 ff             	mov    %r15,%rdi
  4168df:	4d 89 fd             	mov    %r15,%r13
  4168e2:	e8 59 24 ff ff       	callq  408d40 <caml_page_table_lookup>
  4168e7:	a8 03                	test   $0x3,%al
  4168e9:	0f 84 e1 00 00 00    	je     4169d0 <caml_ephe_get_data_copy+0x380>
  4168ef:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
  4168f4:	4d 8d 67 f8          	lea    -0x8(%r15),%r12
  4168f8:	75 6e                	jne    416968 <caml_ephe_get_data_copy+0x318>
  4168fa:	4d 8b 3f             	mov    (%r15),%r15
  4168fd:	41 f6 c7 01          	test   $0x1,%r15b
  416901:	75 65                	jne    416968 <caml_ephe_get_data_copy+0x318>
  416903:	4c 89 ff             	mov    %r15,%rdi
  416906:	e8 35 24 ff ff       	callq  408d40 <caml_page_table_lookup>
  41690b:	a8 07                	test   $0x7,%al
  41690d:	74 59                	je     416968 <caml_ephe_get_data_copy+0x318>
  41690f:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  416914:	8d 48 0a             	lea    0xa(%rax),%ecx
  416917:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  41691d:	74 49                	je     416968 <caml_ephe_get_data_copy+0x318>
  41691f:	3c fd                	cmp    $0xfd,%al
  416921:	74 45                	je     416968 <caml_ephe_get_data_copy+0x318>
  416923:	4c 89 3c eb          	mov    %r15,(%rbx,%rbp,8)
  416927:	4c 3b 3d 9a 65 21 00 	cmp    0x21659a(%rip),%r15        # 62cec8 <caml_young_end>
  41692e:	73 92                	jae    4168c2 <caml_ephe_get_data_copy+0x272>
  416930:	4c 3b 3d 99 65 21 00 	cmp    0x216599(%rip),%r15        # 62ced0 <caml_young_start>
  416937:	76 89                	jbe    4168c2 <caml_ephe_get_data_copy+0x272>
  416939:	48 8b 05 f8 64 21 00 	mov    0x2164f8(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  416940:	48 3b 05 f9 64 21 00 	cmp    0x2164f9(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  416947:	0f 82 63 ff ff ff    	jb     4168b0 <caml_ephe_get_data_copy+0x260>
  41694d:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  416952:	e8 a9 21 ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  416957:	48 8b 05 da 64 21 00 	mov    0x2164da(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  41695e:	e9 4d ff ff ff       	jmpq   4168b0 <caml_ephe_get_data_copy+0x260>
  416963:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  416968:	49 f7 04 24 00 03 00 	testq  $0x300,(%r12)
  41696f:	00 
  416970:	75 5e                	jne    4169d0 <caml_ephe_get_data_copy+0x380>
  416972:	4c 3b 2d 4f 65 21 00 	cmp    0x21654f(%rip),%r13        # 62cec8 <caml_young_end>
  416979:	48 8b 05 90 5e 21 00 	mov    0x215e90(%rip),%rax        # 62c810 <caml_ephe_none>
  416980:	73 09                	jae    41698b <caml_ephe_get_data_copy+0x33b>
  416982:	4c 3b 2d 47 65 21 00 	cmp    0x216547(%rip),%r13        # 62ced0 <caml_young_start>
  416989:	77 13                	ja     41699e <caml_ephe_get_data_copy+0x34e>
  41698b:	48 89 04 eb          	mov    %rax,(%rbx,%rbp,8)
  41698f:	48 8b 05 7a 5e 21 00 	mov    0x215e7a(%rip),%rax        # 62c810 <caml_ephe_none>
  416996:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
  41699d:	00 
  41699e:	48 83 c5 01          	add    $0x1,%rbp
  4169a2:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
  4169a7:	0f 85 f3 fe ff ff    	jne    4168a0 <caml_ephe_get_data_copy+0x250>
  4169ad:	48 39 43 08          	cmp    %rax,0x8(%rbx)
  4169b1:	0f 84 5d fd ff ff    	je     416714 <caml_ephe_get_data_copy+0xc4>
  4169b7:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
  4169bb:	85 c9                	test   %ecx,%ecx
  4169bd:	0f 84 51 fd ff ff    	je     416714 <caml_ephe_get_data_copy+0xc4>
  4169c3:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4169c7:	e9 41 fd ff ff       	jmpq   41670d <caml_ephe_get_data_copy+0xbd>
  4169cc:	0f 1f 40 00          	nopl   0x0(%rax)
  4169d0:	48 83 c5 01          	add    $0x1,%rbp
  4169d4:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
  4169d9:	48 8b 05 30 5e 21 00 	mov    0x215e30(%rip),%rax        # 62c810 <caml_ephe_none>
  4169e0:	0f 85 ba fe ff ff    	jne    4168a0 <caml_ephe_get_data_copy+0x250>
  4169e6:	eb c5                	jmp    4169ad <caml_ephe_get_data_copy+0x35d>
  4169e8:	49 8b 54 24 f8       	mov    -0x8(%r12),%rdx
  4169ed:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4169f2:	4c 89 e6             	mov    %r12,%rsi
  4169f5:	48 c1 ea 0a          	shr    $0xa,%rdx
  4169f9:	48 c1 e2 03          	shl    $0x3,%rdx
  4169fd:	e8 2e b3 fe ff       	callq  401d30 <memmove@plt>
  416a02:	e9 21 fd ff ff       	jmpq   416728 <caml_ephe_get_data_copy+0xd8>
  416a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416a0b:	48 c1 e8 0a          	shr    $0xa,%rax
  416a0f:	48 83 f8 02          	cmp    $0x2,%rax
  416a13:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  416a18:	0f 86 9b fd ff ff    	jbe    4167b9 <caml_ephe_get_data_copy+0x169>
  416a1e:	48 8b 05 eb 5d 21 00 	mov    0x215deb(%rip),%rax        # 62c810 <caml_ephe_none>
  416a25:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
  416a2c:	00 
  416a2d:	bb 02 00 00 00       	mov    $0x2,%ebx
  416a32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  416a38:	4c 8b 74 dd 00       	mov    0x0(%rbp,%rbx,8),%r14
  416a3d:	eb 1a                	jmp    416a59 <caml_ephe_get_data_copy+0x409>
  416a3f:	90                   	nop
  416a40:	48 8d 48 10          	lea    0x10(%rax),%rcx
  416a44:	48 89 0d ed 63 21 00 	mov    %rcx,0x2163ed(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  416a4b:	48 89 28             	mov    %rbp,(%rax)
  416a4e:	48 89 58 08          	mov    %rbx,0x8(%rax)
  416a52:	48 8b 05 b7 5d 21 00 	mov    0x215db7(%rip),%rax        # 62c810 <caml_ephe_none>
  416a59:	49 39 c6             	cmp    %rax,%r14
  416a5c:	0f 84 c9 00 00 00    	je     416b2b <caml_ephe_get_data_copy+0x4db>
  416a62:	41 f6 c6 01          	test   $0x1,%r14b
  416a66:	0f 85 bf 00 00 00    	jne    416b2b <caml_ephe_get_data_copy+0x4db>
  416a6c:	4c 89 f7             	mov    %r14,%rdi
  416a6f:	4d 89 f7             	mov    %r14,%r15
  416a72:	e8 c9 22 ff ff       	callq  408d40 <caml_page_table_lookup>
  416a77:	a8 03                	test   $0x3,%al
  416a79:	0f 84 da 00 00 00    	je     416b59 <caml_ephe_get_data_copy+0x509>
  416a7f:	41 80 7e f8 fa       	cmpb   $0xfa,-0x8(%r14)
  416a84:	4d 8d 6e f8          	lea    -0x8(%r14),%r13
  416a88:	75 6a                	jne    416af4 <caml_ephe_get_data_copy+0x4a4>
  416a8a:	4d 8b 36             	mov    (%r14),%r14
  416a8d:	41 f6 c6 01          	test   $0x1,%r14b
  416a91:	75 61                	jne    416af4 <caml_ephe_get_data_copy+0x4a4>
  416a93:	4c 89 f7             	mov    %r14,%rdi
  416a96:	e8 a5 22 ff ff       	callq  408d40 <caml_page_table_lookup>
  416a9b:	a8 07                	test   $0x7,%al
  416a9d:	74 55                	je     416af4 <caml_ephe_get_data_copy+0x4a4>
  416a9f:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
  416aa4:	8d 48 0a             	lea    0xa(%rax),%ecx
  416aa7:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  416aad:	74 45                	je     416af4 <caml_ephe_get_data_copy+0x4a4>
  416aaf:	3c fd                	cmp    $0xfd,%al
  416ab1:	74 41                	je     416af4 <caml_ephe_get_data_copy+0x4a4>
  416ab3:	4c 89 74 dd 00       	mov    %r14,0x0(%rbp,%rbx,8)
  416ab8:	4c 3b 35 09 64 21 00 	cmp    0x216409(%rip),%r14        # 62cec8 <caml_young_end>
  416abf:	73 91                	jae    416a52 <caml_ephe_get_data_copy+0x402>
  416ac1:	4c 3b 35 08 64 21 00 	cmp    0x216408(%rip),%r14        # 62ced0 <caml_young_start>
  416ac8:	76 88                	jbe    416a52 <caml_ephe_get_data_copy+0x402>
  416aca:	48 8b 05 67 63 21 00 	mov    0x216367(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  416ad1:	48 3b 05 68 63 21 00 	cmp    0x216368(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  416ad8:	0f 82 62 ff ff ff    	jb     416a40 <caml_ephe_get_data_copy+0x3f0>
  416ade:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  416ae3:	e8 18 20 ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  416ae8:	48 8b 05 49 63 21 00 	mov    0x216349(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  416aef:	e9 4c ff ff ff       	jmpq   416a40 <caml_ephe_get_data_copy+0x3f0>
  416af4:	49 f7 45 00 00 03 00 	testq  $0x300,0x0(%r13)
  416afb:	00 
  416afc:	75 5b                	jne    416b59 <caml_ephe_get_data_copy+0x509>
  416afe:	4c 3b 3d c3 63 21 00 	cmp    0x2163c3(%rip),%r15        # 62cec8 <caml_young_end>
  416b05:	48 8b 05 04 5d 21 00 	mov    0x215d04(%rip),%rax        # 62c810 <caml_ephe_none>
  416b0c:	73 09                	jae    416b17 <caml_ephe_get_data_copy+0x4c7>
  416b0e:	4c 3b 3d bb 63 21 00 	cmp    0x2163bb(%rip),%r15        # 62ced0 <caml_young_start>
  416b15:	77 14                	ja     416b2b <caml_ephe_get_data_copy+0x4db>
  416b17:	48 89 44 dd 00       	mov    %rax,0x0(%rbp,%rbx,8)
  416b1c:	48 8b 05 ed 5c 21 00 	mov    0x215ced(%rip),%rax        # 62c810 <caml_ephe_none>
  416b23:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%rsp)
  416b2a:	00 
  416b2b:	48 83 c3 01          	add    $0x1,%rbx
  416b2f:	48 39 5c 24 08       	cmp    %rbx,0x8(%rsp)
  416b34:	0f 85 fe fe ff ff    	jne    416a38 <caml_ephe_get_data_copy+0x3e8>
  416b3a:	48 39 45 08          	cmp    %rax,0x8(%rbp)
  416b3e:	0f 84 7c fc ff ff    	je     4167c0 <caml_ephe_get_data_copy+0x170>
  416b44:	8b 54 24 14          	mov    0x14(%rsp),%edx
  416b48:	85 d2                	test   %edx,%edx
  416b4a:	0f 84 70 fc ff ff    	je     4167c0 <caml_ephe_get_data_copy+0x170>
  416b50:	48 89 45 08          	mov    %rax,0x8(%rbp)
  416b54:	e9 60 fc ff ff       	jmpq   4167b9 <caml_ephe_get_data_copy+0x169>
  416b59:	48 8b 05 b0 5c 21 00 	mov    0x215cb0(%rip),%rax        # 62c810 <caml_ephe_none>
  416b60:	eb c9                	jmp    416b2b <caml_ephe_get_data_copy+0x4db>
  416b62:	e8 09 af fe ff       	callq  401a70 <__stack_chk_fail@plt>
  416b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  416b6e:	00 00 

0000000000416b70 <caml_ephe_check_key>:
  416b70:	48 d1 fe             	sar    %rsi
  416b73:	41 54                	push   %r12
  416b75:	55                   	push   %rbp
  416b76:	48 83 c6 02          	add    $0x2,%rsi
  416b7a:	53                   	push   %rbx
  416b7b:	48 83 fe 01          	cmp    $0x1,%rsi
  416b7f:	76 73                	jbe    416bf4 <caml_ephe_check_key+0x84>
  416b81:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  416b85:	48 89 fb             	mov    %rdi,%rbx
  416b88:	48 c1 e8 0a          	shr    $0xa,%rax
  416b8c:	48 39 c6             	cmp    %rax,%rsi
  416b8f:	73 63                	jae    416bf4 <caml_ephe_check_key+0x84>
  416b91:	4c 8d 24 f7          	lea    (%rdi,%rsi,8),%r12
  416b95:	49 8b 2c 24          	mov    (%r12),%rbp
  416b99:	48 3b 2d 70 5c 21 00 	cmp    0x215c70(%rip),%rbp        # 62c810 <caml_ephe_none>
  416ba0:	74 48                	je     416bea <caml_ephe_check_key+0x7a>
  416ba2:	83 3d 5f a8 22 00 01 	cmpl   $0x1,0x22a85f(%rip)        # 641408 <caml_gc_phase>
  416ba9:	74 0d                	je     416bb8 <caml_ephe_check_key+0x48>
  416bab:	5b                   	pop    %rbx
  416bac:	b8 03 00 00 00       	mov    $0x3,%eax
  416bb1:	5d                   	pop    %rbp
  416bb2:	41 5c                	pop    %r12
  416bb4:	c3                   	retq   
  416bb5:	0f 1f 00             	nopl   (%rax)
  416bb8:	40 f6 c5 01          	test   $0x1,%bpl
  416bbc:	75 ed                	jne    416bab <caml_ephe_check_key+0x3b>
  416bbe:	48 89 ef             	mov    %rbp,%rdi
  416bc1:	e8 7a 21 ff ff       	callq  408d40 <caml_page_table_lookup>
  416bc6:	a8 01                	test   $0x1,%al
  416bc8:	74 e1                	je     416bab <caml_ephe_check_key+0x3b>
  416bca:	48 f7 45 f8 00 03 00 	testq  $0x300,-0x8(%rbp)
  416bd1:	00 
  416bd2:	75 d7                	jne    416bab <caml_ephe_check_key+0x3b>
  416bd4:	48 8b 05 35 5c 21 00 	mov    0x215c35(%rip),%rax        # 62c810 <caml_ephe_none>
  416bdb:	49 89 04 24          	mov    %rax,(%r12)
  416bdf:	48 8b 05 2a 5c 21 00 	mov    0x215c2a(%rip),%rax        # 62c810 <caml_ephe_none>
  416be6:	48 89 43 08          	mov    %rax,0x8(%rbx)
  416bea:	5b                   	pop    %rbx
  416beb:	b8 01 00 00 00       	mov    $0x1,%eax
  416bf0:	5d                   	pop    %rbp
  416bf1:	41 5c                	pop    %r12
  416bf3:	c3                   	retq   
  416bf4:	bf 5d ec 41 00       	mov    $0x41ec5d,%edi
  416bf9:	e8 e2 3a 00 00       	callq  41a6e0 <caml_invalid_argument>
  416bfe:	66 90                	xchg   %ax,%ax

0000000000416c00 <caml_weak_check>:
  416c00:	e9 6b ff ff ff       	jmpq   416b70 <caml_ephe_check_key>
  416c05:	90                   	nop
  416c06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  416c0d:	00 00 00 

0000000000416c10 <caml_ephe_check_data>:
  416c10:	83 3d f1 a7 22 00 01 	cmpl   $0x1,0x22a7f1(%rip)        # 641408 <caml_gc_phase>
  416c17:	74 1f                	je     416c38 <caml_ephe_check_data+0x28>
  416c19:	48 8b 05 f0 5b 21 00 	mov    0x215bf0(%rip),%rax        # 62c810 <caml_ephe_none>
  416c20:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  416c24:	48 39 c2             	cmp    %rax,%rdx
  416c27:	0f 95 c0             	setne  %al
  416c2a:	0f b6 c0             	movzbl %al,%eax
  416c2d:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  416c32:	c3                   	retq   
  416c33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  416c38:	41 57                	push   %r15
  416c3a:	41 56                	push   %r14
  416c3c:	41 55                	push   %r13
  416c3e:	41 54                	push   %r12
  416c40:	55                   	push   %rbp
  416c41:	53                   	push   %rbx
  416c42:	48 89 fd             	mov    %rdi,%rbp
  416c45:	bb 02 00 00 00       	mov    $0x2,%ebx
  416c4a:	48 83 ec 18          	sub    $0x18,%rsp
  416c4e:	4c 8b 77 f8          	mov    -0x8(%rdi),%r14
  416c52:	48 8b 05 b7 5b 21 00 	mov    0x215bb7(%rip),%rax        # 62c810 <caml_ephe_none>
  416c59:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  416c60:	00 
  416c61:	49 c1 ee 0a          	shr    $0xa,%r14
  416c65:	49 83 fe 02          	cmp    $0x2,%r14
  416c69:	0f 86 67 01 00 00    	jbe    416dd6 <caml_ephe_check_data+0x1c6>
  416c6f:	90                   	nop
  416c70:	4c 8b 7c dd 00       	mov    0x0(%rbp,%rbx,8),%r15
  416c75:	eb 22                	jmp    416c99 <caml_ephe_check_data+0x89>
  416c77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  416c7e:	00 00 
  416c80:	48 8d 48 10          	lea    0x10(%rax),%rcx
  416c84:	48 89 0d ad 61 21 00 	mov    %rcx,0x2161ad(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  416c8b:	48 89 28             	mov    %rbp,(%rax)
  416c8e:	48 89 58 08          	mov    %rbx,0x8(%rax)
  416c92:	48 8b 05 77 5b 21 00 	mov    0x215b77(%rip),%rax        # 62c810 <caml_ephe_none>
  416c99:	49 39 c7             	cmp    %rax,%r15
  416c9c:	0f 84 cd 00 00 00    	je     416d6f <caml_ephe_check_data+0x15f>
  416ca2:	41 f6 c7 01          	test   $0x1,%r15b
  416ca6:	0f 85 c3 00 00 00    	jne    416d6f <caml_ephe_check_data+0x15f>
  416cac:	4c 89 ff             	mov    %r15,%rdi
  416caf:	4d 89 fd             	mov    %r15,%r13
  416cb2:	e8 89 20 ff ff       	callq  408d40 <caml_page_table_lookup>
  416cb7:	a8 03                	test   $0x3,%al
  416cb9:	0f 84 01 01 00 00    	je     416dc0 <caml_ephe_check_data+0x1b0>
  416cbf:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
  416cc4:	4d 8d 67 f8          	lea    -0x8(%r15),%r12
  416cc8:	75 6e                	jne    416d38 <caml_ephe_check_data+0x128>
  416cca:	4d 8b 3f             	mov    (%r15),%r15
  416ccd:	41 f6 c7 01          	test   $0x1,%r15b
  416cd1:	75 65                	jne    416d38 <caml_ephe_check_data+0x128>
  416cd3:	4c 89 ff             	mov    %r15,%rdi
  416cd6:	e8 65 20 ff ff       	callq  408d40 <caml_page_table_lookup>
  416cdb:	a8 07                	test   $0x7,%al
  416cdd:	74 59                	je     416d38 <caml_ephe_check_data+0x128>
  416cdf:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  416ce4:	8d 48 0a             	lea    0xa(%rax),%ecx
  416ce7:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  416ced:	74 49                	je     416d38 <caml_ephe_check_data+0x128>
  416cef:	3c fd                	cmp    $0xfd,%al
  416cf1:	74 45                	je     416d38 <caml_ephe_check_data+0x128>
  416cf3:	4c 89 7c dd 00       	mov    %r15,0x0(%rbp,%rbx,8)
  416cf8:	4c 3b 3d c9 61 21 00 	cmp    0x2161c9(%rip),%r15        # 62cec8 <caml_young_end>
  416cff:	73 91                	jae    416c92 <caml_ephe_check_data+0x82>
  416d01:	4c 3b 3d c8 61 21 00 	cmp    0x2161c8(%rip),%r15        # 62ced0 <caml_young_start>
  416d08:	76 88                	jbe    416c92 <caml_ephe_check_data+0x82>
  416d0a:	48 8b 05 27 61 21 00 	mov    0x216127(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  416d11:	48 3b 05 28 61 21 00 	cmp    0x216128(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  416d18:	0f 82 62 ff ff ff    	jb     416c80 <caml_ephe_check_data+0x70>
  416d1e:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  416d23:	e8 d8 1d ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  416d28:	48 8b 05 09 61 21 00 	mov    0x216109(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  416d2f:	e9 4c ff ff ff       	jmpq   416c80 <caml_ephe_check_data+0x70>
  416d34:	0f 1f 40 00          	nopl   0x0(%rax)
  416d38:	49 f7 04 24 00 03 00 	testq  $0x300,(%r12)
  416d3f:	00 
  416d40:	75 7e                	jne    416dc0 <caml_ephe_check_data+0x1b0>
  416d42:	4c 3b 2d 7f 61 21 00 	cmp    0x21617f(%rip),%r13        # 62cec8 <caml_young_end>
  416d49:	48 8b 05 c0 5a 21 00 	mov    0x215ac0(%rip),%rax        # 62c810 <caml_ephe_none>
  416d50:	73 09                	jae    416d5b <caml_ephe_check_data+0x14b>
  416d52:	4c 3b 2d 77 61 21 00 	cmp    0x216177(%rip),%r13        # 62ced0 <caml_young_start>
  416d59:	77 14                	ja     416d6f <caml_ephe_check_data+0x15f>
  416d5b:	48 89 44 dd 00       	mov    %rax,0x0(%rbp,%rbx,8)
  416d60:	48 8b 05 a9 5a 21 00 	mov    0x215aa9(%rip),%rax        # 62c810 <caml_ephe_none>
  416d67:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
  416d6e:	00 
  416d6f:	48 83 c3 01          	add    $0x1,%rbx
  416d73:	49 39 de             	cmp    %rbx,%r14
  416d76:	0f 85 f4 fe ff ff    	jne    416c70 <caml_ephe_check_data+0x60>
  416d7c:	48 8b 55 08          	mov    0x8(%rbp),%rdx
  416d80:	48 39 c2             	cmp    %rax,%rdx
  416d83:	74 16                	je     416d9b <caml_ephe_check_data+0x18b>
  416d85:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  416d89:	85 c9                	test   %ecx,%ecx
  416d8b:	74 0e                	je     416d9b <caml_ephe_check_data+0x18b>
  416d8d:	48 89 45 08          	mov    %rax,0x8(%rbp)
  416d91:	48 89 c2             	mov    %rax,%rdx
  416d94:	48 8b 05 75 5a 21 00 	mov    0x215a75(%rip),%rax        # 62c810 <caml_ephe_none>
  416d9b:	48 39 c2             	cmp    %rax,%rdx
  416d9e:	0f 95 c0             	setne  %al
  416da1:	48 83 c4 18          	add    $0x18,%rsp
  416da5:	0f b6 c0             	movzbl %al,%eax
  416da8:	5b                   	pop    %rbx
  416da9:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  416dae:	5d                   	pop    %rbp
  416daf:	41 5c                	pop    %r12
  416db1:	41 5d                	pop    %r13
  416db3:	41 5e                	pop    %r14
  416db5:	41 5f                	pop    %r15
  416db7:	c3                   	retq   
  416db8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  416dbf:	00 
  416dc0:	48 83 c3 01          	add    $0x1,%rbx
  416dc4:	48 8b 05 45 5a 21 00 	mov    0x215a45(%rip),%rax        # 62c810 <caml_ephe_none>
  416dcb:	49 39 de             	cmp    %rbx,%r14
  416dce:	0f 85 9c fe ff ff    	jne    416c70 <caml_ephe_check_data+0x60>
  416dd4:	eb a6                	jmp    416d7c <caml_ephe_check_data+0x16c>
  416dd6:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  416dda:	eb bf                	jmp    416d9b <caml_ephe_check_data+0x18b>
  416ddc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000416de0 <caml_ephe_blit_key>:
  416de0:	41 57                	push   %r15
  416de2:	41 56                	push   %r14
  416de4:	48 d1 f9             	sar    %rcx
  416de7:	41 55                	push   %r13
  416de9:	41 54                	push   %r12
  416deb:	48 d1 fe             	sar    %rsi
  416dee:	55                   	push   %rbp
  416def:	53                   	push   %rbx
  416df0:	48 8d 41 02          	lea    0x2(%rcx),%rax
  416df4:	49 d1 f8             	sar    %r8
  416df7:	48 83 ec 48          	sub    $0x48,%rsp
  416dfb:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
  416e00:	48 83 c6 02          	add    $0x2,%rsi
  416e04:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  416e09:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  416e0e:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  416e13:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  416e18:	0f 84 ed 03 00 00    	je     41720b <caml_ephe_blit_key+0x42b>
  416e1e:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  416e22:	48 89 d3             	mov    %rdx,%rbx
  416e25:	49 89 fc             	mov    %rdi,%r12
  416e28:	48 c1 e8 0a          	shr    $0xa,%rax
  416e2c:	48 89 c2             	mov    %rax,%rdx
  416e2f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  416e34:	48 89 f0             	mov    %rsi,%rax
  416e37:	4c 01 c0             	add    %r8,%rax
  416e3a:	48 39 d0             	cmp    %rdx,%rax
  416e3d:	0f 87 c8 03 00 00    	ja     41720b <caml_ephe_blit_key+0x42b>
  416e43:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  416e48:	48 85 c0             	test   %rax,%rax
  416e4b:	0f 84 ba 03 00 00    	je     41720b <caml_ephe_blit_key+0x42b>
  416e51:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
  416e55:	48 03 44 24 08       	add    0x8(%rsp),%rax
  416e5a:	48 c1 ee 0a          	shr    $0xa,%rsi
  416e5e:	48 39 f0             	cmp    %rsi,%rax
  416e61:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  416e66:	0f 87 9f 03 00 00    	ja     41720b <caml_ephe_blit_key+0x42b>
  416e6c:	83 3d 95 a5 22 00 01 	cmpl   $0x1,0x22a595(%rip)        # 641408 <caml_gc_phase>
  416e73:	0f 84 b7 00 00 00    	je     416f30 <caml_ephe_blit_key+0x150>
  416e79:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  416e7e:	48 39 54 24 28       	cmp    %rdx,0x28(%rsp)
  416e83:	76 5b                	jbe    416ee0 <caml_ephe_blit_key+0x100>
  416e85:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  416e8a:	48 85 f6             	test   %rsi,%rsi
  416e8d:	74 3a                	je     416ec9 <caml_ephe_blit_key+0xe9>
  416e8f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  416e94:	48 89 c1             	mov    %rax,%rcx
  416e97:	48 8d 6c 30 02       	lea    0x2(%rax,%rsi,1),%rbp
  416e9c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  416ea1:	48 f7 d9             	neg    %rcx
  416ea4:	49 8d 04 cc          	lea    (%r12,%rcx,8),%rax
  416ea8:	49 89 d4             	mov    %rdx,%r12
  416eab:	4c 8d 2c f0          	lea    (%rax,%rsi,8),%r13
  416eaf:	90                   	nop
  416eb0:	4b 8b 54 e5 00       	mov    0x0(%r13,%r12,8),%rdx
  416eb5:	4c 89 e6             	mov    %r12,%rsi
  416eb8:	48 89 df             	mov    %rbx,%rdi
  416ebb:	49 83 c4 01          	add    $0x1,%r12
  416ebf:	e8 cc ea ff ff       	callq  415990 <do_set>
  416ec4:	49 39 ec             	cmp    %rbp,%r12
  416ec7:	75 e7                	jne    416eb0 <caml_ephe_blit_key+0xd0>
  416ec9:	48 83 c4 48          	add    $0x48,%rsp
  416ecd:	b8 01 00 00 00       	mov    $0x1,%eax
  416ed2:	5b                   	pop    %rbx
  416ed3:	5d                   	pop    %rbp
  416ed4:	41 5c                	pop    %r12
  416ed6:	41 5d                	pop    %r13
  416ed8:	41 5e                	pop    %r14
  416eda:	41 5f                	pop    %r15
  416edc:	c3                   	retq   
  416edd:	0f 1f 00             	nopl   (%rax)
  416ee0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  416ee5:	48 89 d0             	mov    %rdx,%rax
  416ee8:	48 83 e8 01          	sub    $0x1,%rax
  416eec:	78 db                	js     416ec9 <caml_ephe_blit_key+0xe9>
  416eee:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  416ef3:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  416ef8:	48 89 c1             	mov    %rax,%rcx
  416efb:	48 8d 6c 10 01       	lea    0x1(%rax,%rdx,1),%rbp
  416f00:	4c 8d 68 01          	lea    0x1(%rax),%r13
  416f04:	48 f7 d9             	neg    %rcx
  416f07:	49 8d 04 cc          	lea    (%r12,%rcx,8),%rax
  416f0b:	4c 8d 24 f0          	lea    (%rax,%rsi,8),%r12
  416f0f:	90                   	nop
  416f10:	49 8b 14 ec          	mov    (%r12,%rbp,8),%rdx
  416f14:	48 89 ee             	mov    %rbp,%rsi
  416f17:	48 89 df             	mov    %rbx,%rdi
  416f1a:	48 83 ed 01          	sub    $0x1,%rbp
  416f1e:	e8 6d ea ff ff       	callq  415990 <do_set>
  416f23:	4c 39 ed             	cmp    %r13,%rbp
  416f26:	75 e8                	jne    416f10 <caml_ephe_blit_key+0x130>
  416f28:	eb 9f                	jmp    416ec9 <caml_ephe_blit_key+0xe9>
  416f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  416f30:	48 83 7c 24 20 02    	cmpq   $0x2,0x20(%rsp)
  416f36:	0f 86 46 01 00 00    	jbe    417082 <caml_ephe_blit_key+0x2a2>
  416f3c:	48 8b 05 cd 58 21 00 	mov    0x2158cd(%rip),%rax        # 62c810 <caml_ephe_none>
  416f43:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
  416f4a:	00 
  416f4b:	bd 02 00 00 00       	mov    $0x2,%ebp
  416f50:	4d 8b 34 ec          	mov    (%r12,%rbp,8),%r14
  416f54:	eb 23                	jmp    416f79 <caml_ephe_blit_key+0x199>
  416f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  416f5d:	00 00 00 
  416f60:	48 8d 48 10          	lea    0x10(%rax),%rcx
  416f64:	48 89 0d cd 5e 21 00 	mov    %rcx,0x215ecd(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  416f6b:	4c 89 20             	mov    %r12,(%rax)
  416f6e:	48 89 68 08          	mov    %rbp,0x8(%rax)
  416f72:	48 8b 05 97 58 21 00 	mov    0x215897(%rip),%rax        # 62c810 <caml_ephe_none>
  416f79:	49 39 c6             	cmp    %rax,%r14
  416f7c:	0f 84 d0 00 00 00    	je     417052 <caml_ephe_blit_key+0x272>
  416f82:	41 f6 c6 01          	test   $0x1,%r14b
  416f86:	0f 85 c6 00 00 00    	jne    417052 <caml_ephe_blit_key+0x272>
  416f8c:	4c 89 f7             	mov    %r14,%rdi
  416f8f:	4d 89 f7             	mov    %r14,%r15
  416f92:	e8 a9 1d ff ff       	callq  408d40 <caml_page_table_lookup>
  416f97:	a8 03                	test   $0x3,%al
  416f99:	0f 84 51 02 00 00    	je     4171f0 <caml_ephe_blit_key+0x410>
  416f9f:	41 80 7e f8 fa       	cmpb   $0xfa,-0x8(%r14)
  416fa4:	4d 8d 6e f8          	lea    -0x8(%r14),%r13
  416fa8:	75 6e                	jne    417018 <caml_ephe_blit_key+0x238>
  416faa:	4d 8b 36             	mov    (%r14),%r14
  416fad:	41 f6 c6 01          	test   $0x1,%r14b
  416fb1:	75 65                	jne    417018 <caml_ephe_blit_key+0x238>
  416fb3:	4c 89 f7             	mov    %r14,%rdi
  416fb6:	e8 85 1d ff ff       	callq  408d40 <caml_page_table_lookup>
  416fbb:	a8 07                	test   $0x7,%al
  416fbd:	74 59                	je     417018 <caml_ephe_blit_key+0x238>
  416fbf:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
  416fc4:	8d 48 0a             	lea    0xa(%rax),%ecx
  416fc7:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  416fcd:	74 49                	je     417018 <caml_ephe_blit_key+0x238>
  416fcf:	3c fd                	cmp    $0xfd,%al
  416fd1:	74 45                	je     417018 <caml_ephe_blit_key+0x238>
  416fd3:	4d 89 34 ec          	mov    %r14,(%r12,%rbp,8)
  416fd7:	4c 3b 35 ea 5e 21 00 	cmp    0x215eea(%rip),%r14        # 62cec8 <caml_young_end>
  416fde:	73 92                	jae    416f72 <caml_ephe_blit_key+0x192>
  416fe0:	4c 3b 35 e9 5e 21 00 	cmp    0x215ee9(%rip),%r14        # 62ced0 <caml_young_start>
  416fe7:	76 89                	jbe    416f72 <caml_ephe_blit_key+0x192>
  416fe9:	48 8b 05 48 5e 21 00 	mov    0x215e48(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  416ff0:	48 3b 05 49 5e 21 00 	cmp    0x215e49(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  416ff7:	0f 82 63 ff ff ff    	jb     416f60 <caml_ephe_blit_key+0x180>
  416ffd:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  417002:	e8 f9 1a ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  417007:	48 8b 05 2a 5e 21 00 	mov    0x215e2a(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  41700e:	e9 4d ff ff ff       	jmpq   416f60 <caml_ephe_blit_key+0x180>
  417013:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  417018:	49 f7 45 00 00 03 00 	testq  $0x300,0x0(%r13)
  41701f:	00 
  417020:	0f 85 ca 01 00 00    	jne    4171f0 <caml_ephe_blit_key+0x410>
  417026:	4c 3b 3d 9b 5e 21 00 	cmp    0x215e9b(%rip),%r15        # 62cec8 <caml_young_end>
  41702d:	48 8b 05 dc 57 21 00 	mov    0x2157dc(%rip),%rax        # 62c810 <caml_ephe_none>
  417034:	73 09                	jae    41703f <caml_ephe_blit_key+0x25f>
  417036:	4c 3b 3d 93 5e 21 00 	cmp    0x215e93(%rip),%r15        # 62ced0 <caml_young_start>
  41703d:	77 13                	ja     417052 <caml_ephe_blit_key+0x272>
  41703f:	49 89 04 ec          	mov    %rax,(%r12,%rbp,8)
  417043:	48 8b 05 c6 57 21 00 	mov    0x2157c6(%rip),%rax        # 62c810 <caml_ephe_none>
  41704a:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%rsp)
  417051:	00 
  417052:	48 83 c5 01          	add    $0x1,%rbp
  417056:	48 39 6c 24 20       	cmp    %rbp,0x20(%rsp)
  41705b:	0f 85 ef fe ff ff    	jne    416f50 <caml_ephe_blit_key+0x170>
  417061:	49 39 44 24 08       	cmp    %rax,0x8(%r12)
  417066:	74 0d                	je     417075 <caml_ephe_blit_key+0x295>
  417068:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
  41706c:	85 c9                	test   %ecx,%ecx
  41706e:	74 05                	je     417075 <caml_ephe_blit_key+0x295>
  417070:	49 89 44 24 08       	mov    %rax,0x8(%r12)
  417075:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  417079:	48 c1 e8 0a          	shr    $0xa,%rax
  41707d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  417082:	48 83 7c 24 18 02    	cmpq   $0x2,0x18(%rsp)
  417088:	0f 86 eb fd ff ff    	jbe    416e79 <caml_ephe_blit_key+0x99>
  41708e:	48 8b 05 7b 57 21 00 	mov    0x21577b(%rip),%rax        # 62c810 <caml_ephe_none>
  417095:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
  41709c:	00 
  41709d:	bd 02 00 00 00       	mov    $0x2,%ebp
  4170a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4170a8:	4c 8b 34 eb          	mov    (%rbx,%rbp,8),%r14
  4170ac:	eb 1b                	jmp    4170c9 <caml_ephe_blit_key+0x2e9>
  4170ae:	66 90                	xchg   %ax,%ax
  4170b0:	48 8d 48 10          	lea    0x10(%rax),%rcx
  4170b4:	48 89 0d 7d 5d 21 00 	mov    %rcx,0x215d7d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  4170bb:	48 89 18             	mov    %rbx,(%rax)
  4170be:	48 89 68 08          	mov    %rbp,0x8(%rax)
  4170c2:	48 8b 05 47 57 21 00 	mov    0x215747(%rip),%rax        # 62c810 <caml_ephe_none>
  4170c9:	49 39 c6             	cmp    %rax,%r14
  4170cc:	0f 84 cc 00 00 00    	je     41719e <caml_ephe_blit_key+0x3be>
  4170d2:	41 f6 c6 01          	test   $0x1,%r14b
  4170d6:	0f 85 c2 00 00 00    	jne    41719e <caml_ephe_blit_key+0x3be>
  4170dc:	4c 89 f7             	mov    %r14,%rdi
  4170df:	4d 89 f7             	mov    %r14,%r15
  4170e2:	e8 59 1c ff ff       	callq  408d40 <caml_page_table_lookup>
  4170e7:	a8 03                	test   $0x3,%al
  4170e9:	0f 84 e1 00 00 00    	je     4171d0 <caml_ephe_blit_key+0x3f0>
  4170ef:	41 80 7e f8 fa       	cmpb   $0xfa,-0x8(%r14)
  4170f4:	4d 8d 6e f8          	lea    -0x8(%r14),%r13
  4170f8:	75 6e                	jne    417168 <caml_ephe_blit_key+0x388>
  4170fa:	4d 8b 36             	mov    (%r14),%r14
  4170fd:	41 f6 c6 01          	test   $0x1,%r14b
  417101:	75 65                	jne    417168 <caml_ephe_blit_key+0x388>
  417103:	4c 89 f7             	mov    %r14,%rdi
  417106:	e8 35 1c ff ff       	callq  408d40 <caml_page_table_lookup>
  41710b:	a8 07                	test   $0x7,%al
  41710d:	74 59                	je     417168 <caml_ephe_blit_key+0x388>
  41710f:	41 0f b6 46 f8       	movzbl -0x8(%r14),%eax
  417114:	8d 48 0a             	lea    0xa(%rax),%ecx
  417117:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  41711d:	74 49                	je     417168 <caml_ephe_blit_key+0x388>
  41711f:	3c fd                	cmp    $0xfd,%al
  417121:	74 45                	je     417168 <caml_ephe_blit_key+0x388>
  417123:	4c 89 34 eb          	mov    %r14,(%rbx,%rbp,8)
  417127:	4c 3b 35 9a 5d 21 00 	cmp    0x215d9a(%rip),%r14        # 62cec8 <caml_young_end>
  41712e:	73 92                	jae    4170c2 <caml_ephe_blit_key+0x2e2>
  417130:	4c 3b 35 99 5d 21 00 	cmp    0x215d99(%rip),%r14        # 62ced0 <caml_young_start>
  417137:	76 89                	jbe    4170c2 <caml_ephe_blit_key+0x2e2>
  417139:	48 8b 05 f8 5c 21 00 	mov    0x215cf8(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  417140:	48 3b 05 f9 5c 21 00 	cmp    0x215cf9(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  417147:	0f 82 63 ff ff ff    	jb     4170b0 <caml_ephe_blit_key+0x2d0>
  41714d:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  417152:	e8 a9 19 ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  417157:	48 8b 05 da 5c 21 00 	mov    0x215cda(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  41715e:	e9 4d ff ff ff       	jmpq   4170b0 <caml_ephe_blit_key+0x2d0>
  417163:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  417168:	49 f7 45 00 00 03 00 	testq  $0x300,0x0(%r13)
  41716f:	00 
  417170:	75 5e                	jne    4171d0 <caml_ephe_blit_key+0x3f0>
  417172:	4c 3b 3d 4f 5d 21 00 	cmp    0x215d4f(%rip),%r15        # 62cec8 <caml_young_end>
  417179:	48 8b 05 90 56 21 00 	mov    0x215690(%rip),%rax        # 62c810 <caml_ephe_none>
  417180:	73 09                	jae    41718b <caml_ephe_blit_key+0x3ab>
  417182:	4c 3b 3d 47 5d 21 00 	cmp    0x215d47(%rip),%r15        # 62ced0 <caml_young_start>
  417189:	77 13                	ja     41719e <caml_ephe_blit_key+0x3be>
  41718b:	48 89 04 eb          	mov    %rax,(%rbx,%rbp,8)
  41718f:	48 8b 05 7a 56 21 00 	mov    0x21567a(%rip),%rax        # 62c810 <caml_ephe_none>
  417196:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%rsp)
  41719d:	00 
  41719e:	48 83 c5 01          	add    $0x1,%rbp
  4171a2:	48 3b 6c 24 18       	cmp    0x18(%rsp),%rbp
  4171a7:	0f 85 fb fe ff ff    	jne    4170a8 <caml_ephe_blit_key+0x2c8>
  4171ad:	48 39 43 08          	cmp    %rax,0x8(%rbx)
  4171b1:	0f 84 c2 fc ff ff    	je     416e79 <caml_ephe_blit_key+0x99>
  4171b7:	8b 54 24 20          	mov    0x20(%rsp),%edx
  4171bb:	85 d2                	test   %edx,%edx
  4171bd:	0f 84 b6 fc ff ff    	je     416e79 <caml_ephe_blit_key+0x99>
  4171c3:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4171c7:	e9 ad fc ff ff       	jmpq   416e79 <caml_ephe_blit_key+0x99>
  4171cc:	0f 1f 40 00          	nopl   0x0(%rax)
  4171d0:	48 83 c5 01          	add    $0x1,%rbp
  4171d4:	48 3b 6c 24 18       	cmp    0x18(%rsp),%rbp
  4171d9:	48 8b 05 30 56 21 00 	mov    0x215630(%rip),%rax        # 62c810 <caml_ephe_none>
  4171e0:	0f 85 c2 fe ff ff    	jne    4170a8 <caml_ephe_blit_key+0x2c8>
  4171e6:	eb c5                	jmp    4171ad <caml_ephe_blit_key+0x3cd>
  4171e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4171ef:	00 
  4171f0:	48 83 c5 01          	add    $0x1,%rbp
  4171f4:	48 39 6c 24 20       	cmp    %rbp,0x20(%rsp)
  4171f9:	48 8b 05 10 56 21 00 	mov    0x215610(%rip),%rax        # 62c810 <caml_ephe_none>
  417200:	0f 85 4a fd ff ff    	jne    416f50 <caml_ephe_blit_key+0x170>
  417206:	e9 56 fe ff ff       	jmpq   417061 <caml_ephe_blit_key+0x281>
  41720b:	bf 68 ec 41 00       	mov    $0x41ec68,%edi
  417210:	e8 cb 34 00 00       	callq  41a6e0 <caml_invalid_argument>
  417215:	90                   	nop
  417216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41721d:	00 00 00 

0000000000417220 <caml_ephe_blit_data>:
  417220:	41 57                	push   %r15
  417222:	41 56                	push   %r14
  417224:	41 55                	push   %r13
  417226:	41 54                	push   %r12
  417228:	49 89 fc             	mov    %rdi,%r12
  41722b:	55                   	push   %rbp
  41722c:	53                   	push   %rbx
  41722d:	48 89 f5             	mov    %rsi,%rbp
  417230:	48 83 ec 18          	sub    $0x18,%rsp
  417234:	83 3d cd a1 22 00 01 	cmpl   $0x1,0x22a1cd(%rip)        # 641408 <caml_gc_phase>
  41723b:	74 33                	je     417270 <caml_ephe_blit_data+0x50>
  41723d:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
  417241:	49 8b 55 00          	mov    0x0(%r13),%rdx
  417245:	48 89 ef             	mov    %rbp,%rdi
  417248:	be 01 00 00 00       	mov    $0x1,%esi
  41724d:	e8 3e e7 ff ff       	callq  415990 <do_set>
  417252:	48 83 c4 18          	add    $0x18,%rsp
  417256:	b8 01 00 00 00       	mov    $0x1,%eax
  41725b:	5b                   	pop    %rbx
  41725c:	5d                   	pop    %rbp
  41725d:	41 5c                	pop    %r12
  41725f:	41 5d                	pop    %r13
  417261:	41 5e                	pop    %r14
  417263:	41 5f                	pop    %r15
  417265:	c3                   	retq   
  417266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41726d:	00 00 00 
  417270:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  417274:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  41727b:	00 
  41727c:	bb 02 00 00 00       	mov    $0x2,%ebx
  417281:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
  417285:	48 c1 e8 0a          	shr    $0xa,%rax
  417289:	48 89 c2             	mov    %rax,%rdx
  41728c:	48 89 04 24          	mov    %rax,(%rsp)
  417290:	48 8b 05 79 55 21 00 	mov    0x215579(%rip),%rax        # 62c810 <caml_ephe_none>
  417297:	48 83 fa 02          	cmp    $0x2,%rdx
  41729b:	0f 86 28 01 00 00    	jbe    4173c9 <caml_ephe_blit_data+0x1a9>
  4172a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4172a8:	4d 8b 3c dc          	mov    (%r12,%rbx,8),%r15
  4172ac:	eb 1b                	jmp    4172c9 <caml_ephe_blit_data+0xa9>
  4172ae:	66 90                	xchg   %ax,%ax
  4172b0:	48 8d 48 10          	lea    0x10(%rax),%rcx
  4172b4:	48 89 0d 7d 5b 21 00 	mov    %rcx,0x215b7d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  4172bb:	4c 89 20             	mov    %r12,(%rax)
  4172be:	48 89 58 08          	mov    %rbx,0x8(%rax)
  4172c2:	48 8b 05 47 55 21 00 	mov    0x215547(%rip),%rax        # 62c810 <caml_ephe_none>
  4172c9:	49 39 c7             	cmp    %rax,%r15
  4172cc:	0f 84 d0 00 00 00    	je     4173a2 <caml_ephe_blit_data+0x182>
  4172d2:	41 f6 c7 01          	test   $0x1,%r15b
  4172d6:	0f 85 c6 00 00 00    	jne    4173a2 <caml_ephe_blit_data+0x182>
  4172dc:	4c 89 ff             	mov    %r15,%rdi
  4172df:	4d 89 fe             	mov    %r15,%r14
  4172e2:	e8 59 1a ff ff       	callq  408d40 <caml_page_table_lookup>
  4172e7:	a8 03                	test   $0x3,%al
  4172e9:	0f 84 51 02 00 00    	je     417540 <caml_ephe_blit_data+0x320>
  4172ef:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
  4172f4:	4d 8d 6f f8          	lea    -0x8(%r15),%r13
  4172f8:	75 6e                	jne    417368 <caml_ephe_blit_data+0x148>
  4172fa:	4d 8b 3f             	mov    (%r15),%r15
  4172fd:	41 f6 c7 01          	test   $0x1,%r15b
  417301:	75 65                	jne    417368 <caml_ephe_blit_data+0x148>
  417303:	4c 89 ff             	mov    %r15,%rdi
  417306:	e8 35 1a ff ff       	callq  408d40 <caml_page_table_lookup>
  41730b:	a8 07                	test   $0x7,%al
  41730d:	74 59                	je     417368 <caml_ephe_blit_data+0x148>
  41730f:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  417314:	8d 48 0a             	lea    0xa(%rax),%ecx
  417317:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  41731d:	74 49                	je     417368 <caml_ephe_blit_data+0x148>
  41731f:	3c fd                	cmp    $0xfd,%al
  417321:	74 45                	je     417368 <caml_ephe_blit_data+0x148>
  417323:	4d 89 3c dc          	mov    %r15,(%r12,%rbx,8)
  417327:	4c 3b 3d 9a 5b 21 00 	cmp    0x215b9a(%rip),%r15        # 62cec8 <caml_young_end>
  41732e:	73 92                	jae    4172c2 <caml_ephe_blit_data+0xa2>
  417330:	4c 3b 3d 99 5b 21 00 	cmp    0x215b99(%rip),%r15        # 62ced0 <caml_young_start>
  417337:	76 89                	jbe    4172c2 <caml_ephe_blit_data+0xa2>
  417339:	48 8b 05 f8 5a 21 00 	mov    0x215af8(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  417340:	48 3b 05 f9 5a 21 00 	cmp    0x215af9(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  417347:	0f 82 63 ff ff ff    	jb     4172b0 <caml_ephe_blit_data+0x90>
  41734d:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  417352:	e8 a9 17 ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  417357:	48 8b 05 da 5a 21 00 	mov    0x215ada(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  41735e:	e9 4d ff ff ff       	jmpq   4172b0 <caml_ephe_blit_data+0x90>
  417363:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  417368:	49 f7 45 00 00 03 00 	testq  $0x300,0x0(%r13)
  41736f:	00 
  417370:	0f 85 ca 01 00 00    	jne    417540 <caml_ephe_blit_data+0x320>
  417376:	4c 3b 35 4b 5b 21 00 	cmp    0x215b4b(%rip),%r14        # 62cec8 <caml_young_end>
  41737d:	48 8b 05 8c 54 21 00 	mov    0x21548c(%rip),%rax        # 62c810 <caml_ephe_none>
  417384:	73 09                	jae    41738f <caml_ephe_blit_data+0x16f>
  417386:	4c 3b 35 43 5b 21 00 	cmp    0x215b43(%rip),%r14        # 62ced0 <caml_young_start>
  41738d:	77 13                	ja     4173a2 <caml_ephe_blit_data+0x182>
  41738f:	49 89 04 dc          	mov    %rax,(%r12,%rbx,8)
  417393:	48 8b 05 76 54 21 00 	mov    0x215476(%rip),%rax        # 62c810 <caml_ephe_none>
  41739a:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
  4173a1:	00 
  4173a2:	48 83 c3 01          	add    $0x1,%rbx
  4173a6:	48 39 1c 24          	cmp    %rbx,(%rsp)
  4173aa:	0f 85 f8 fe ff ff    	jne    4172a8 <caml_ephe_blit_data+0x88>
  4173b0:	49 39 44 24 08       	cmp    %rax,0x8(%r12)
  4173b5:	4d 8d 6c 24 08       	lea    0x8(%r12),%r13
  4173ba:	74 0d                	je     4173c9 <caml_ephe_blit_data+0x1a9>
  4173bc:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  4173c0:	85 c9                	test   %ecx,%ecx
  4173c2:	74 05                	je     4173c9 <caml_ephe_blit_data+0x1a9>
  4173c4:	49 89 44 24 08       	mov    %rax,0x8(%r12)
  4173c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4173cd:	48 c1 e8 0a          	shr    $0xa,%rax
  4173d1:	48 83 f8 02          	cmp    $0x2,%rax
  4173d5:	48 89 04 24          	mov    %rax,(%rsp)
  4173d9:	0f 86 62 fe ff ff    	jbe    417241 <caml_ephe_blit_data+0x21>
  4173df:	48 8b 05 2a 54 21 00 	mov    0x21542a(%rip),%rax        # 62c810 <caml_ephe_none>
  4173e6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  4173ed:	00 
  4173ee:	bb 02 00 00 00       	mov    $0x2,%ebx
  4173f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4173f8:	4c 8b 7c dd 00       	mov    0x0(%rbp,%rbx,8),%r15
  4173fd:	eb 1a                	jmp    417419 <caml_ephe_blit_data+0x1f9>
  4173ff:	90                   	nop
  417400:	48 8d 48 10          	lea    0x10(%rax),%rcx
  417404:	48 89 0d 2d 5a 21 00 	mov    %rcx,0x215a2d(%rip)        # 62ce38 <caml_ephe_ref_table+0x18>
  41740b:	48 89 28             	mov    %rbp,(%rax)
  41740e:	48 89 58 08          	mov    %rbx,0x8(%rax)
  417412:	48 8b 05 f7 53 21 00 	mov    0x2153f7(%rip),%rax        # 62c810 <caml_ephe_none>
  417419:	49 39 c7             	cmp    %rax,%r15
  41741c:	0f 84 cd 00 00 00    	je     4174ef <caml_ephe_blit_data+0x2cf>
  417422:	41 f6 c7 01          	test   $0x1,%r15b
  417426:	0f 85 c3 00 00 00    	jne    4174ef <caml_ephe_blit_data+0x2cf>
  41742c:	4c 89 ff             	mov    %r15,%rdi
  41742f:	4d 89 fe             	mov    %r15,%r14
  417432:	e8 09 19 ff ff       	callq  408d40 <caml_page_table_lookup>
  417437:	a8 03                	test   $0x3,%al
  417439:	0f 84 e1 00 00 00    	je     417520 <caml_ephe_blit_data+0x300>
  41743f:	41 80 7f f8 fa       	cmpb   $0xfa,-0x8(%r15)
  417444:	4d 8d 67 f8          	lea    -0x8(%r15),%r12
  417448:	75 6e                	jne    4174b8 <caml_ephe_blit_data+0x298>
  41744a:	4d 8b 3f             	mov    (%r15),%r15
  41744d:	41 f6 c7 01          	test   $0x1,%r15b
  417451:	75 65                	jne    4174b8 <caml_ephe_blit_data+0x298>
  417453:	4c 89 ff             	mov    %r15,%rdi
  417456:	e8 e5 18 ff ff       	callq  408d40 <caml_page_table_lookup>
  41745b:	a8 07                	test   $0x7,%al
  41745d:	74 59                	je     4174b8 <caml_ephe_blit_data+0x298>
  41745f:	41 0f b6 47 f8       	movzbl -0x8(%r15),%eax
  417464:	8d 48 0a             	lea    0xa(%rax),%ecx
  417467:	81 e1 fb 00 00 00    	and    $0xfb,%ecx
  41746d:	74 49                	je     4174b8 <caml_ephe_blit_data+0x298>
  41746f:	3c fd                	cmp    $0xfd,%al
  417471:	74 45                	je     4174b8 <caml_ephe_blit_data+0x298>
  417473:	4c 89 7c dd 00       	mov    %r15,0x0(%rbp,%rbx,8)
  417478:	4c 3b 3d 49 5a 21 00 	cmp    0x215a49(%rip),%r15        # 62cec8 <caml_young_end>
  41747f:	73 91                	jae    417412 <caml_ephe_blit_data+0x1f2>
  417481:	4c 3b 3d 48 5a 21 00 	cmp    0x215a48(%rip),%r15        # 62ced0 <caml_young_start>
  417488:	76 88                	jbe    417412 <caml_ephe_blit_data+0x1f2>
  41748a:	48 8b 05 a7 59 21 00 	mov    0x2159a7(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  417491:	48 3b 05 a8 59 21 00 	cmp    0x2159a8(%rip),%rax        # 62ce40 <caml_ephe_ref_table+0x20>
  417498:	0f 82 62 ff ff ff    	jb     417400 <caml_ephe_blit_data+0x1e0>
  41749e:	bf 20 ce 62 00       	mov    $0x62ce20,%edi
  4174a3:	e8 58 16 ff ff       	callq  408b00 <caml_realloc_ephe_ref_table>
  4174a8:	48 8b 05 89 59 21 00 	mov    0x215989(%rip),%rax        # 62ce38 <caml_ephe_ref_table+0x18>
  4174af:	e9 4c ff ff ff       	jmpq   417400 <caml_ephe_blit_data+0x1e0>
  4174b4:	0f 1f 40 00          	nopl   0x0(%rax)
  4174b8:	49 f7 04 24 00 03 00 	testq  $0x300,(%r12)
  4174bf:	00 
  4174c0:	75 5e                	jne    417520 <caml_ephe_blit_data+0x300>
  4174c2:	4c 3b 35 ff 59 21 00 	cmp    0x2159ff(%rip),%r14        # 62cec8 <caml_young_end>
  4174c9:	48 8b 05 40 53 21 00 	mov    0x215340(%rip),%rax        # 62c810 <caml_ephe_none>
  4174d0:	73 09                	jae    4174db <caml_ephe_blit_data+0x2bb>
  4174d2:	4c 3b 35 f7 59 21 00 	cmp    0x2159f7(%rip),%r14        # 62ced0 <caml_young_start>
  4174d9:	77 14                	ja     4174ef <caml_ephe_blit_data+0x2cf>
  4174db:	48 89 44 dd 00       	mov    %rax,0x0(%rbp,%rbx,8)
  4174e0:	48 8b 05 29 53 21 00 	mov    0x215329(%rip),%rax        # 62c810 <caml_ephe_none>
  4174e7:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
  4174ee:	00 
  4174ef:	48 83 c3 01          	add    $0x1,%rbx
  4174f3:	48 39 1c 24          	cmp    %rbx,(%rsp)
  4174f7:	0f 85 fb fe ff ff    	jne    4173f8 <caml_ephe_blit_data+0x1d8>
  4174fd:	48 39 45 08          	cmp    %rax,0x8(%rbp)
  417501:	0f 84 3a fd ff ff    	je     417241 <caml_ephe_blit_data+0x21>
  417507:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  41750b:	85 d2                	test   %edx,%edx
  41750d:	0f 84 2e fd ff ff    	je     417241 <caml_ephe_blit_data+0x21>
  417513:	48 89 45 08          	mov    %rax,0x8(%rbp)
  417517:	e9 25 fd ff ff       	jmpq   417241 <caml_ephe_blit_data+0x21>
  41751c:	0f 1f 40 00          	nopl   0x0(%rax)
  417520:	48 83 c3 01          	add    $0x1,%rbx
  417524:	48 39 1c 24          	cmp    %rbx,(%rsp)
  417528:	48 8b 05 e1 52 21 00 	mov    0x2152e1(%rip),%rax        # 62c810 <caml_ephe_none>
  41752f:	0f 85 c3 fe ff ff    	jne    4173f8 <caml_ephe_blit_data+0x1d8>
  417535:	eb c6                	jmp    4174fd <caml_ephe_blit_data+0x2dd>
  417537:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41753e:	00 00 
  417540:	48 83 c3 01          	add    $0x1,%rbx
  417544:	48 39 1c 24          	cmp    %rbx,(%rsp)
  417548:	48 8b 05 c1 52 21 00 	mov    0x2152c1(%rip),%rax        # 62c810 <caml_ephe_none>
  41754f:	0f 85 53 fd ff ff    	jne    4172a8 <caml_ephe_blit_data+0x88>
  417555:	e9 56 fe ff ff       	jmpq   4173b0 <caml_ephe_blit_data+0x190>
  41755a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000417560 <caml_weak_blit>:
  417560:	e9 7b f8 ff ff       	jmpq   416de0 <caml_ephe_blit_key>
  417565:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41756c:	00 00 00 
  41756f:	90                   	nop

0000000000417570 <compact_allocate>:
  417570:	48 8b 05 61 5c 22 00 	mov    0x225c61(%rip),%rax        # 63d1d8 <compact_fl>
  417577:	48 8b 48 e8          	mov    -0x18(%rax),%rcx
  41757b:	48 8b 50 f0          	mov    -0x10(%rax),%rdx
  41757f:	48 29 ca             	sub    %rcx,%rdx
  417582:	48 83 fa 20          	cmp    $0x20,%rdx
  417586:	77 52                	ja     4175da <compact_allocate+0x6a>
  417588:	48 8b 70 f8          	mov    -0x8(%rax),%rsi
  41758c:	4c 8b 46 f0          	mov    -0x10(%rsi),%r8
  417590:	4c 2b 46 e8          	sub    -0x18(%rsi),%r8
  417594:	49 83 f8 20          	cmp    $0x20,%r8
  417598:	77 40                	ja     4175da <compact_allocate+0x6a>
  41759a:	48 89 35 37 5c 22 00 	mov    %rsi,0x225c37(%rip)        # 63d1d8 <compact_fl>
  4175a1:	48 89 f0             	mov    %rsi,%rax
  4175a4:	31 f6                	xor    %esi,%esi
  4175a6:	eb 10                	jmp    4175b8 <compact_allocate+0x48>
  4175a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4175af:	00 
  4175b0:	be 01 00 00 00       	mov    $0x1,%esi
  4175b5:	48 89 c8             	mov    %rcx,%rax
  4175b8:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
  4175bc:	48 8b 51 f0          	mov    -0x10(%rcx),%rdx
  4175c0:	48 2b 51 e8          	sub    -0x18(%rcx),%rdx
  4175c4:	48 83 fa 20          	cmp    $0x20,%rdx
  4175c8:	76 e6                	jbe    4175b0 <compact_allocate+0x40>
  4175ca:	40 84 f6             	test   %sil,%sil
  4175cd:	75 30                	jne    4175ff <compact_allocate+0x8f>
  4175cf:	48 8b 48 e8          	mov    -0x18(%rax),%rcx
  4175d3:	48 8b 50 f0          	mov    -0x10(%rax),%rdx
  4175d7:	48 29 ca             	sub    %rcx,%rdx
  4175da:	48 39 d7             	cmp    %rdx,%rdi
  4175dd:	76 15                	jbe    4175f4 <compact_allocate+0x84>
  4175df:	90                   	nop
  4175e0:	48 8b 40 f8          	mov    -0x8(%rax),%rax
  4175e4:	48 8b 48 e8          	mov    -0x18(%rax),%rcx
  4175e8:	48 8b 50 f0          	mov    -0x10(%rax),%rdx
  4175ec:	48 29 ca             	sub    %rcx,%rdx
  4175ef:	48 39 fa             	cmp    %rdi,%rdx
  4175f2:	72 ec                	jb     4175e0 <compact_allocate+0x70>
  4175f4:	48 01 cf             	add    %rcx,%rdi
  4175f7:	48 89 78 e8          	mov    %rdi,-0x18(%rax)
  4175fb:	48 01 c8             	add    %rcx,%rax
  4175fe:	c3                   	retq   
  4175ff:	48 89 05 d2 5b 22 00 	mov    %rax,0x225bd2(%rip)        # 63d1d8 <compact_fl>
  417606:	eb c7                	jmp    4175cf <compact_allocate+0x5f>
  417608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41760f:	00 

0000000000417610 <invert_pointer_at>:
  417610:	55                   	push   %rbp
  417611:	53                   	push   %rbx
  417612:	48 83 ec 08          	sub    $0x8,%rsp
  417616:	48 8b 1f             	mov    (%rdi),%rbx
  417619:	f6 c3 03             	test   $0x3,%bl
  41761c:	74 0a                	je     417628 <invert_pointer_at+0x18>
  41761e:	48 83 c4 08          	add    $0x8,%rsp
  417622:	5b                   	pop    %rbx
  417623:	5d                   	pop    %rbp
  417624:	c3                   	retq   
  417625:	0f 1f 00             	nopl   (%rax)
  417628:	48 89 fd             	mov    %rdi,%rbp
  41762b:	48 89 df             	mov    %rbx,%rdi
  41762e:	e8 0d 17 ff ff       	callq  408d40 <caml_page_table_lookup>
  417633:	a8 01                	test   $0x1,%al
  417635:	74 e7                	je     41761e <invert_pointer_at+0xe>
  417637:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  41763b:	48 89 c2             	mov    %rax,%rdx
  41763e:	83 e2 03             	and    $0x3,%edx
  417641:	48 83 fa 01          	cmp    $0x1,%rdx
  417645:	74 19                	je     417660 <invert_pointer_at+0x50>
  417647:	48 83 fa 02          	cmp    $0x2,%rdx
  41764b:	48 89 45 00          	mov    %rax,0x0(%rbp)
  41764f:	75 7f                	jne    4176d0 <invert_pointer_at+0xc0>
  417651:	48 89 ef             	mov    %rbp,%rdi
  417654:	48 83 cf 02          	or     $0x2,%rdi
  417658:	48 89 7b f8          	mov    %rdi,-0x8(%rbx)
  41765c:	eb c0                	jmp    41761e <invert_pointer_at+0xe>
  41765e:	66 90                	xchg   %ax,%ax
  417660:	48 c1 e8 0a          	shr    $0xa,%rax
  417664:	48 89 de             	mov    %rbx,%rsi
  417667:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  41766e:	00 
  41766f:	48 29 d6             	sub    %rdx,%rsi
  417672:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
  417676:	48 8d 4e f8          	lea    -0x8(%rsi),%rcx
  41767a:	a8 03                	test   $0x3,%al
  41767c:	75 0c                	jne    41768a <invert_pointer_at+0x7a>
  41767e:	66 90                	xchg   %ax,%ax
  417680:	48 89 c1             	mov    %rax,%rcx
  417683:	48 8b 00             	mov    (%rax),%rax
  417686:	a8 03                	test   $0x3,%al
  417688:	74 f6                	je     417680 <invert_pointer_at+0x70>
  41768a:	48 89 c7             	mov    %rax,%rdi
  41768d:	48 c1 ef 02          	shr    $0x2,%rdi
  417691:	40 80 ff f7          	cmp    $0xf7,%dil
  417695:	74 0c                	je     4176a3 <invert_pointer_at+0x93>
  417697:	48 c1 e8 0a          	shr    $0xa,%rax
  41769b:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
  41769f:	48 83 c8 01          	or     $0x1,%rax
  4176a3:	48 c1 e2 07          	shl    $0x7,%rdx
  4176a7:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4176ab:	48 89 ef             	mov    %rbp,%rdi
  4176ae:	48 8d 82 00 fc ff ff 	lea    -0x400(%rdx),%rax
  4176b5:	48 83 cf 02          	or     $0x2,%rdi
  4176b9:	48 89 7b f8          	mov    %rdi,-0x8(%rbx)
  4176bd:	48 0d e7 03 00 00    	or     $0x3e7,%rax
  4176c3:	48 89 01             	mov    %rax,(%rcx)
  4176c6:	e9 53 ff ff ff       	jmpq   41761e <invert_pointer_at+0xe>
  4176cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4176d0:	48 89 6b f8          	mov    %rbp,-0x8(%rbx)
  4176d4:	e9 45 ff ff ff       	jmpq   41761e <invert_pointer_at+0xe>
  4176d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004176e0 <invert_root>:
  4176e0:	48 89 f7             	mov    %rsi,%rdi
  4176e3:	e9 28 ff ff ff       	jmpq   417610 <invert_pointer_at>
  4176e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4176ef:	00 

00000000004176f0 <do_compaction>:
  4176f0:	41 57                	push   %r15
  4176f2:	41 56                	push   %r14
  4176f4:	31 d2                	xor    %edx,%edx
  4176f6:	41 55                	push   %r13
  4176f8:	41 54                	push   %r12
  4176fa:	be 72 ec 41 00       	mov    $0x41ec72,%esi
  4176ff:	55                   	push   %rbp
  417700:	53                   	push   %rbx
  417701:	bf 10 00 00 00       	mov    $0x10,%edi
  417706:	48 83 ec 18          	sub    $0x18,%rsp
  41770a:	e8 a1 45 00 00       	callq  41bcb0 <caml_gc_message>
  41770f:	4c 8b 05 ea 9c 22 00 	mov    0x229cea(%rip),%r8        # 641400 <caml_heap_start>
  417716:	4d 85 c0             	test   %r8,%r8
  417719:	74 78                	je     417793 <do_compaction+0xa3>
  41771b:	4c 89 c7             	mov    %r8,%rdi
  41771e:	49 03 78 f0          	add    -0x10(%r8),%rdi
  417722:	4c 89 c2             	mov    %r8,%rdx
  417725:	4c 39 c7             	cmp    %r8,%rdi
  417728:	77 2a                	ja     417754 <do_compaction+0x64>
  41772a:	eb 5e                	jmp    41778a <do_compaction+0x9a>
  41772c:	0f 1f 40 00          	nopl   0x0(%rax)
  417730:	48 89 f1             	mov    %rsi,%rcx
  417733:	48 c1 e0 02          	shl    $0x2,%rax
  417737:	48 c1 e1 0a          	shl    $0xa,%rcx
  41773b:	25 fc 03 00 00       	and    $0x3fc,%eax
  417740:	48 83 c9 03          	or     $0x3,%rcx
  417744:	48 09 c8             	or     %rcx,%rax
  417747:	48 89 02             	mov    %rax,(%rdx)
  41774a:	48 8d 54 f2 08       	lea    0x8(%rdx,%rsi,8),%rdx
  41774f:	48 39 d7             	cmp    %rdx,%rdi
  417752:	76 36                	jbe    41778a <do_compaction+0x9a>
  417754:	48 8b 02             	mov    (%rdx),%rax
  417757:	48 89 c1             	mov    %rax,%rcx
  41775a:	48 89 c6             	mov    %rax,%rsi
  41775d:	81 e1 00 03 00 00    	and    $0x300,%ecx
  417763:	48 c1 ee 0a          	shr    $0xa,%rsi
  417767:	48 81 f9 00 02 00 00 	cmp    $0x200,%rcx
  41776e:	75 c0                	jne    417730 <do_compaction+0x40>
  417770:	48 89 f0             	mov    %rsi,%rax
  417773:	48 c1 e0 0a          	shl    $0xa,%rax
  417777:	48 0d f3 03 00 00    	or     $0x3f3,%rax
  41777d:	48 89 02             	mov    %rax,(%rdx)
  417780:	48 8d 54 f2 08       	lea    0x8(%rdx,%rsi,8),%rdx
  417785:	48 39 d7             	cmp    %rdx,%rdi
  417788:	77 ca                	ja     417754 <do_compaction+0x64>
  41778a:	4d 8b 40 f8          	mov    -0x8(%r8),%r8
  41778e:	4d 85 c0             	test   %r8,%r8
  417791:	75 88                	jne    41771b <do_compaction+0x2b>
  417793:	be 01 00 00 00       	mov    $0x1,%esi
  417798:	bf e0 76 41 00       	mov    $0x4176e0,%edi
  41779d:	e8 ae e6 fe ff       	callq  405e50 <caml_do_roots>
  4177a2:	31 c0                	xor    %eax,%eax
  4177a4:	e8 a7 0f 00 00       	callq  418750 <caml_final_invert_finalisable_values>
  4177a9:	4c 8b 25 50 9c 22 00 	mov    0x229c50(%rip),%r12        # 641400 <caml_heap_start>
  4177b0:	4d 85 e4             	test   %r12,%r12
  4177b3:	0f 84 10 05 00 00    	je     417cc9 <do_compaction+0x5d9>
  4177b9:	4c 89 e5             	mov    %r12,%rbp
  4177bc:	49 03 6c 24 f0       	add    -0x10(%r12),%rbp
  4177c1:	4c 89 e3             	mov    %r12,%rbx
  4177c4:	4c 39 e5             	cmp    %r12,%rbp
  4177c7:	76 71                	jbe    41783a <do_compaction+0x14a>
  4177c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4177d0:	48 8b 03             	mov    (%rbx),%rax
  4177d3:	a8 03                	test   $0x3,%al
  4177d5:	75 10                	jne    4177e7 <do_compaction+0xf7>
  4177d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4177de:	00 00 
  4177e0:	48 8b 00             	mov    (%rax),%rax
  4177e3:	a8 03                	test   $0x3,%al
  4177e5:	74 f9                	je     4177e0 <do_compaction+0xf0>
  4177e7:	49 89 c5             	mov    %rax,%r13
  4177ea:	48 c1 e8 02          	shr    $0x2,%rax
  4177ee:	49 c1 ed 0a          	shr    $0xa,%r13
  4177f2:	0f b6 c0             	movzbl %al,%eax
  4177f5:	49 83 c5 01          	add    $0x1,%r13
  4177f9:	3d f9 00 00 00       	cmp    $0xf9,%eax
  4177fe:	0f 84 0c 04 00 00    	je     417c10 <do_compaction+0x520>
  417804:	3d fa 00 00 00       	cmp    $0xfa,%eax
  417809:	77 26                	ja     417831 <do_compaction+0x141>
  41780b:	49 83 fd 01          	cmp    $0x1,%r13
  41780f:	74 20                	je     417831 <do_compaction+0x141>
  417811:	4c 8d 73 08          	lea    0x8(%rbx),%r14
  417815:	4e 8d 3c eb          	lea    (%rbx,%r13,8),%r15
  417819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  417820:	4c 89 f7             	mov    %r14,%rdi
  417823:	49 83 c6 08          	add    $0x8,%r14
  417827:	e8 e4 fd ff ff       	callq  417610 <invert_pointer_at>
  41782c:	4d 39 fe             	cmp    %r15,%r14
  41782f:	75 ef                	jne    417820 <do_compaction+0x130>
  417831:	4a 8d 1c eb          	lea    (%rbx,%r13,8),%rbx
  417835:	48 39 dd             	cmp    %rbx,%rbp
  417838:	77 96                	ja     4177d0 <do_compaction+0xe0>
  41783a:	4d 8b 64 24 f8       	mov    -0x8(%r12),%r12
  41783f:	4d 85 e4             	test   %r12,%r12
  417842:	0f 85 71 ff ff ff    	jne    4177b9 <do_compaction+0xc9>
  417848:	4c 8b 25 79 59 22 00 	mov    0x225979(%rip),%r12        # 63d1c8 <caml_ephe_list_head>
  41784f:	4d 85 e4             	test   %r12,%r12
  417852:	74 65                	je     4178b9 <do_compaction+0x1c9>
  417854:	41 bd c8 d1 63 00    	mov    $0x63d1c8,%r13d
  41785a:	49 8b 44 24 f8       	mov    -0x8(%r12),%rax
  41785f:	a8 03                	test   $0x3,%al
  417861:	75 0c                	jne    41786f <do_compaction+0x17f>
  417863:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  417868:	48 8b 00             	mov    (%rax),%rax
  41786b:	a8 03                	test   $0x3,%al
  41786d:	74 f9                	je     417868 <do_compaction+0x178>
  41786f:	48 c1 e8 0a          	shr    $0xa,%rax
  417873:	49 8d 5c 24 08       	lea    0x8(%r12),%rbx
  417878:	48 83 f8 01          	cmp    $0x1,%rax
  41787c:	49 8d 2c c4          	lea    (%r12,%rax,8),%rbp
  417880:	76 23                	jbe    4178a5 <do_compaction+0x1b5>
  417882:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  417888:	48 8b 05 81 4f 21 00 	mov    0x214f81(%rip),%rax        # 62c810 <caml_ephe_none>
  41788f:	48 39 03             	cmp    %rax,(%rbx)
  417892:	74 08                	je     41789c <do_compaction+0x1ac>
  417894:	48 89 df             	mov    %rbx,%rdi
  417897:	e8 74 fd ff ff       	callq  417610 <invert_pointer_at>
  41789c:	48 83 c3 08          	add    $0x8,%rbx
  4178a0:	48 39 dd             	cmp    %rbx,%rbp
  4178a3:	75 e3                	jne    417888 <do_compaction+0x198>
  4178a5:	4c 89 ef             	mov    %r13,%rdi
  4178a8:	4d 89 e5             	mov    %r12,%r13
  4178ab:	e8 60 fd ff ff       	callq  417610 <invert_pointer_at>
  4178b0:	4d 8b 24 24          	mov    (%r12),%r12
  4178b4:	4d 85 e4             	test   %r12,%r12
  4178b7:	75 a1                	jne    41785a <do_compaction+0x16a>
  4178b9:	48 8b 05 40 9b 22 00 	mov    0x229b40(%rip),%rax        # 641400 <caml_heap_start>
  4178c0:	48 85 c0             	test   %rax,%rax
  4178c3:	0f 84 10 04 00 00    	je     417cd9 <do_compaction+0x5e9>
  4178c9:	48 c7 40 e8 00 00 00 	movq   $0x0,-0x18(%rax)
  4178d0:	00 
  4178d1:	48 8b 40 f8          	mov    -0x8(%rax),%rax
  4178d5:	48 85 c0             	test   %rax,%rax
  4178d8:	75 ef                	jne    4178c9 <do_compaction+0x1d9>
  4178da:	48 8b 05 1f 9b 22 00 	mov    0x229b1f(%rip),%rax        # 641400 <caml_heap_start>
  4178e1:	48 85 c0             	test   %rax,%rax
  4178e4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4178e9:	48 89 05 e8 58 22 00 	mov    %rax,0x2258e8(%rip)        # 63d1d8 <compact_fl>
  4178f0:	0f 84 e3 03 00 00    	je     417cd9 <do_compaction+0x5e9>
  4178f6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4178fb:	49 89 c1             	mov    %rax,%r9
  4178fe:	4c 03 48 f0          	add    -0x10(%rax),%r9
  417902:	49 89 c7             	mov    %rax,%r15
  417905:	49 39 c1             	cmp    %rax,%r9
  417908:	4c 89 0c 24          	mov    %r9,(%rsp)
  41790c:	77 46                	ja     417954 <do_compaction+0x264>
  41790e:	e9 3b 01 00 00       	jmpq   417a4e <do_compaction+0x35e>
  417913:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  417918:	49 89 c4             	mov    %rax,%r12
  41791b:	49 c1 ec 02          	shr    $0x2,%r12
  41791f:	41 0f b6 d4          	movzbl %r12b,%edx
  417923:	48 81 fa f9 00 00 00 	cmp    $0xf9,%rdx
  41792a:	74 42                	je     41796e <do_compaction+0x27e>
  41792c:	48 89 c1             	mov    %rax,%rcx
  41792f:	48 c1 e8 0a          	shr    $0xa,%rax
  417933:	48 81 e1 00 fc ff ff 	and    $0xfffffffffffffc00,%rcx
  41793a:	48 8d 94 0a 00 02 00 	lea    0x200(%rdx,%rcx,1),%rdx
  417941:	00 
  417942:	49 89 17             	mov    %rdx,(%r15)
  417945:	4d 8d 7c c7 08       	lea    0x8(%r15,%rax,8),%r15
  41794a:	4c 3b 3c 24          	cmp    (%rsp),%r15
  41794e:	0f 83 fa 00 00 00    	jae    417a4e <do_compaction+0x35e>
  417954:	49 8b 07             	mov    (%r15),%rax
  417957:	a8 03                	test   $0x3,%al
  417959:	75 bd                	jne    417918 <do_compaction+0x228>
  41795b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  417960:	48 8b 00             	mov    (%rax),%rax
  417963:	a8 03                	test   $0x3,%al
  417965:	74 f9                	je     417960 <do_compaction+0x270>
  417967:	49 89 c4             	mov    %rax,%r12
  41796a:	49 c1 ec 02          	shr    $0x2,%r12
  41796e:	45 0f b6 e4          	movzbl %r12b,%r12d
  417972:	48 c1 e8 0a          	shr    $0xa,%rax
  417976:	41 81 fc f9 00 00 00 	cmp    $0xf9,%r12d
  41797d:	48 89 c5             	mov    %rax,%rbp
  417980:	4c 8d 68 01          	lea    0x1(%rax),%r13
  417984:	0f 84 c0 02 00 00    	je     417c4a <do_compaction+0x55a>
  41798a:	4a 8d 1c ed 00 00 00 	lea    0x0(,%r13,8),%rbx
  417991:	00 
  417992:	45 31 f6             	xor    %r14d,%r14d
  417995:	48 89 df             	mov    %rbx,%rdi
  417998:	e8 d3 fb ff ff       	callq  417570 <compact_allocate>
  41799d:	49 8b 0f             	mov    (%r15),%rcx
  4179a0:	f6 c1 03             	test   $0x3,%cl
  4179a3:	0f 85 0b 03 00 00    	jne    417cb4 <do_compaction+0x5c4>
  4179a9:	48 8d 78 08          	lea    0x8(%rax),%rdi
  4179ad:	0f 1f 00             	nopl   (%rax)
  4179b0:	48 89 ce             	mov    %rcx,%rsi
  4179b3:	48 8b 09             	mov    (%rcx),%rcx
  4179b6:	48 89 3e             	mov    %rdi,(%rsi)
  4179b9:	f6 c1 03             	test   $0x3,%cl
  4179bc:	74 f2                	je     4179b0 <do_compaction+0x2c0>
  4179be:	49 83 ed 01          	sub    $0x1,%r13
  4179c2:	49 c1 e5 0a          	shl    $0xa,%r13
  4179c6:	4d 85 f6             	test   %r14,%r14
  4179c9:	4b 8d 4c 25 00       	lea    0x0(%r13,%r12,1),%rcx
  4179ce:	49 89 0f             	mov    %rcx,(%r15)
  4179d1:	74 6e                	je     417a41 <do_compaction+0x351>
  4179d3:	4c 89 f1             	mov    %r14,%rcx
  4179d6:	4c 89 f2             	mov    %r14,%rdx
  4179d9:	83 e1 03             	and    $0x3,%ecx
  4179dc:	48 83 f9 03          	cmp    $0x3,%rcx
  4179e0:	74 5f                	je     417a41 <do_compaction+0x351>
  4179e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4179e8:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
  4179ec:	49 89 d0             	mov    %rdx,%r8
  4179ef:	48 8b 12             	mov    (%rdx),%rdx
  4179f2:	4c 89 c7             	mov    %r8,%rdi
  4179f5:	4c 29 ff             	sub    %r15,%rdi
  4179f8:	48 89 d1             	mov    %rdx,%rcx
  4179fb:	48 8d 74 38 08       	lea    0x8(%rax,%rdi,1),%rsi
  417a00:	83 e1 03             	and    $0x3,%ecx
  417a03:	48 83 f9 02          	cmp    $0x2,%rcx
  417a07:	75 20                	jne    417a29 <do_compaction+0x339>
  417a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  417a10:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
  417a14:	48 89 d1             	mov    %rdx,%rcx
  417a17:	48 8b 12             	mov    (%rdx),%rdx
  417a1a:	48 89 31             	mov    %rsi,(%rcx)
  417a1d:	48 89 d1             	mov    %rdx,%rcx
  417a20:	83 e1 03             	and    $0x3,%ecx
  417a23:	48 83 f9 02          	cmp    $0x2,%rcx
  417a27:	74 e7                	je     417a10 <do_compaction+0x320>
  417a29:	48 c1 ff 03          	sar    $0x3,%rdi
  417a2d:	48 c1 e7 0a          	shl    $0xa,%rdi
  417a31:	48 81 c7 f9 00 00 00 	add    $0xf9,%rdi
  417a38:	48 83 f9 03          	cmp    $0x3,%rcx
  417a3c:	49 89 38             	mov    %rdi,(%r8)
  417a3f:	75 a7                	jne    4179e8 <do_compaction+0x2f8>
  417a41:	49 01 df             	add    %rbx,%r15
  417a44:	4c 3b 3c 24          	cmp    (%rsp),%r15
  417a48:	0f 82 06 ff ff ff    	jb     417954 <do_compaction+0x264>
  417a4e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  417a53:	48 8b 40 f8          	mov    -0x8(%rax),%rax
  417a57:	48 85 c0             	test   %rax,%rax
  417a5a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  417a5f:	0f 85 91 fe ff ff    	jne    4178f6 <do_compaction+0x206>
  417a65:	48 8b 05 94 99 22 00 	mov    0x229994(%rip),%rax        # 641400 <caml_heap_start>
  417a6c:	48 85 c0             	test   %rax,%rax
  417a6f:	0f 84 64 02 00 00    	je     417cd9 <do_compaction+0x5e9>
  417a75:	48 c7 40 e8 00 00 00 	movq   $0x0,-0x18(%rax)
  417a7c:	00 
  417a7d:	48 8b 40 f8          	mov    -0x8(%rax),%rax
  417a81:	48 85 c0             	test   %rax,%rax
  417a84:	75 ef                	jne    417a75 <do_compaction+0x385>
  417a86:	4c 8b 2d 73 99 22 00 	mov    0x229973(%rip),%r13        # 641400 <caml_heap_start>
  417a8d:	4d 85 ed             	test   %r13,%r13
  417a90:	4c 89 2d 41 57 22 00 	mov    %r13,0x225741(%rip)        # 63d1d8 <compact_fl>
  417a97:	0f 84 47 02 00 00    	je     417ce4 <do_compaction+0x5f4>
  417a9d:	4c 89 ed             	mov    %r13,%rbp
  417aa0:	49 03 6d f0          	add    -0x10(%r13),%rbp
  417aa4:	4c 89 eb             	mov    %r13,%rbx
  417aa7:	4c 39 ed             	cmp    %r13,%rbp
  417aaa:	77 12                	ja     417abe <do_compaction+0x3ce>
  417aac:	eb 42                	jmp    417af0 <do_compaction+0x400>
  417aae:	66 90                	xchg   %ax,%ax
  417ab0:	48 c1 e8 0a          	shr    $0xa,%rax
  417ab4:	48 8d 5c c3 08       	lea    0x8(%rbx,%rax,8),%rbx
  417ab9:	48 39 eb             	cmp    %rbp,%rbx
  417abc:	73 32                	jae    417af0 <do_compaction+0x400>
  417abe:	48 8b 03             	mov    (%rbx),%rax
  417ac1:	f6 c4 03             	test   $0x3,%ah
  417ac4:	75 ea                	jne    417ab0 <do_compaction+0x3c0>
  417ac6:	48 c1 e8 0a          	shr    $0xa,%rax
  417aca:	4c 8d 24 c5 08 00 00 	lea    0x8(,%rax,8),%r12
  417ad1:	00 
  417ad2:	4c 89 e7             	mov    %r12,%rdi
  417ad5:	e8 96 fa ff ff       	callq  417570 <compact_allocate>
  417ada:	48 89 de             	mov    %rbx,%rsi
  417add:	4c 89 e2             	mov    %r12,%rdx
  417ae0:	48 89 c7             	mov    %rax,%rdi
  417ae3:	4c 01 e3             	add    %r12,%rbx
  417ae6:	e8 45 a2 fe ff       	callq  401d30 <memmove@plt>
  417aeb:	48 39 eb             	cmp    %rbp,%rbx
  417aee:	72 ce                	jb     417abe <do_compaction+0x3ce>
  417af0:	4d 8b 6d f8          	mov    -0x8(%r13),%r13
  417af4:	4d 85 ed             	test   %r13,%r13
  417af7:	75 a4                	jne    417a9d <do_compaction+0x3ad>
  417af9:	48 8b 3d 00 99 22 00 	mov    0x229900(%rip),%rdi        # 641400 <caml_heap_start>
  417b00:	48 85 ff             	test   %rdi,%rdi
  417b03:	0f 84 db 01 00 00    	je     417ce4 <do_compaction+0x5f4>
  417b09:	48 89 fa             	mov    %rdi,%rdx
  417b0c:	31 ed                	xor    %ebp,%ebp
  417b0e:	31 c0                	xor    %eax,%eax
  417b10:	48 8b 4a e8          	mov    -0x18(%rdx),%rcx
  417b14:	48 85 c9             	test   %rcx,%rcx
  417b17:	74 1b                	je     417b34 <do_compaction+0x444>
  417b19:	48 8b 5a f0          	mov    -0x10(%rdx),%rbx
  417b1d:	48 89 ce             	mov    %rcx,%rsi
  417b20:	48 c1 ee 03          	shr    $0x3,%rsi
  417b24:	48 01 f0             	add    %rsi,%rax
  417b27:	48 29 cb             	sub    %rcx,%rbx
  417b2a:	48 89 d9             	mov    %rbx,%rcx
  417b2d:	48 c1 e9 03          	shr    $0x3,%rcx
  417b31:	48 01 cd             	add    %rcx,%rbp
  417b34:	48 8b 52 f8          	mov    -0x8(%rdx),%rdx
  417b38:	48 85 d2             	test   %rdx,%rdx
  417b3b:	75 d3                	jne    417b10 <do_compaction+0x420>
  417b3d:	48 c1 e8 02          	shr    $0x2,%rax
  417b41:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
  417b48:	c2 f5 28 
  417b4b:	48 f7 e2             	mul    %rdx
  417b4e:	48 89 d3             	mov    %rdx,%rbx
  417b51:	48 c1 eb 02          	shr    $0x2,%rbx
  417b55:	48 83 c3 01          	add    $0x1,%rbx
  417b59:	48 0f af 1d bf 98 22 	imul   0x2298bf(%rip),%rbx        # 641420 <caml_percent_free>
  417b60:	00 
  417b61:	eb 13                	jmp    417b76 <do_compaction+0x486>
  417b63:	48 8b 47 f0          	mov    -0x10(%rdi),%rax
  417b67:	48 c1 e8 03          	shr    $0x3,%rax
  417b6b:	48 01 c5             	add    %rax,%rbp
  417b6e:	4d 85 e4             	test   %r12,%r12
  417b71:	4c 89 e7             	mov    %r12,%rdi
  417b74:	74 1d                	je     417b93 <do_compaction+0x4a3>
  417b76:	48 83 7f e8 00       	cmpq   $0x0,-0x18(%rdi)
  417b7b:	4c 8b 67 f8          	mov    -0x8(%rdi),%r12
  417b7f:	75 ed                	jne    417b6e <do_compaction+0x47e>
  417b81:	48 39 eb             	cmp    %rbp,%rbx
  417b84:	77 dd                	ja     417b63 <do_compaction+0x473>
  417b86:	e8 c5 16 ff ff       	callq  409250 <caml_shrink_heap>
  417b8b:	4d 85 e4             	test   %r12,%r12
  417b8e:	4c 89 e7             	mov    %r12,%rdi
  417b91:	75 e3                	jne    417b76 <do_compaction+0x486>
  417b93:	48 8b 1d 66 98 22 00 	mov    0x229866(%rip),%rbx        # 641400 <caml_heap_start>
  417b9a:	e8 61 3c 00 00       	callq  41b800 <caml_fl_reset>
  417b9f:	48 85 db             	test   %rbx,%rbx
  417ba2:	75 15                	jne    417bb9 <do_compaction+0x4c9>
  417ba4:	eb 43                	jmp    417be9 <do_compaction+0x4f9>
  417ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  417bad:	00 00 00 
  417bb0:	48 8b 5b f8          	mov    -0x8(%rbx),%rbx
  417bb4:	48 85 db             	test   %rbx,%rbx
  417bb7:	74 30                	je     417be9 <do_compaction+0x4f9>
  417bb9:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
  417bbd:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
  417bc1:	48 39 d0             	cmp    %rdx,%rax
  417bc4:	76 ea                	jbe    417bb0 <do_compaction+0x4c0>
  417bc6:	48 29 d0             	sub    %rdx,%rax
  417bc9:	48 8d 3c 13          	lea    (%rbx,%rdx,1),%rdi
  417bcd:	31 c9                	xor    %ecx,%ecx
  417bcf:	48 c1 e8 03          	shr    $0x3,%rax
  417bd3:	ba 01 00 00 00       	mov    $0x1,%edx
  417bd8:	48 89 c6             	mov    %rax,%rsi
  417bdb:	e8 10 40 00 00       	callq  41bbf0 <caml_make_free_blocks>
  417be0:	48 8b 5b f8          	mov    -0x8(%rbx),%rbx
  417be4:	48 85 db             	test   %rbx,%rbx
  417be7:	75 d0                	jne    417bb9 <do_compaction+0x4c9>
  417be9:	48 83 05 ff d4 21 00 	addq   $0x1,0x21d4ff(%rip)        # 6350f0 <caml_stat_compactions>
  417bf0:	01 
  417bf1:	48 83 c4 18          	add    $0x18,%rsp
  417bf5:	31 d2                	xor    %edx,%edx
  417bf7:	5b                   	pop    %rbx
  417bf8:	5d                   	pop    %rbp
  417bf9:	41 5c                	pop    %r12
  417bfb:	41 5d                	pop    %r13
  417bfd:	41 5e                	pop    %r14
  417bff:	41 5f                	pop    %r15
  417c01:	be 86 ec 41 00       	mov    $0x41ec86,%esi
  417c06:	bf 10 00 00 00       	mov    $0x10,%edi
  417c0b:	e9 a0 40 00 00       	jmpq   41bcb0 <caml_gc_message>
  417c10:	4a 8b 04 eb          	mov    (%rbx,%r13,8),%rax
  417c14:	48 89 c2             	mov    %rax,%rdx
  417c17:	83 e2 03             	and    $0x3,%edx
  417c1a:	48 83 fa 03          	cmp    $0x3,%rdx
  417c1e:	74 13                	je     417c33 <do_compaction+0x543>
  417c20:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
  417c24:	48 8b 00             	mov    (%rax),%rax
  417c27:	48 89 c2             	mov    %rax,%rdx
  417c2a:	83 e2 03             	and    $0x3,%edx
  417c2d:	48 83 fa 03          	cmp    $0x3,%rdx
  417c31:	75 ed                	jne    417c20 <do_compaction+0x530>
  417c33:	49 89 c5             	mov    %rax,%r13
  417c36:	48 c1 e8 02          	shr    $0x2,%rax
  417c3a:	49 c1 ed 0a          	shr    $0xa,%r13
  417c3e:	0f b6 c0             	movzbl %al,%eax
  417c41:	49 83 c5 01          	add    $0x1,%r13
  417c45:	e9 ba fb ff ff       	jmpq   417804 <do_compaction+0x114>
  417c4a:	4f 8d 34 ef          	lea    (%r15,%r13,8),%r14
  417c4e:	49 8b 06             	mov    (%r14),%rax
  417c51:	48 89 c1             	mov    %rax,%rcx
  417c54:	83 e1 03             	and    $0x3,%ecx
  417c57:	48 83 f9 03          	cmp    $0x3,%rcx
  417c5b:	74 16                	je     417c73 <do_compaction+0x583>
  417c5d:	0f 1f 00             	nopl   (%rax)
  417c60:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
  417c64:	48 8b 00             	mov    (%rax),%rax
  417c67:	48 89 c1             	mov    %rax,%rcx
  417c6a:	83 e1 03             	and    $0x3,%ecx
  417c6d:	48 83 f9 03          	cmp    $0x3,%rcx
  417c71:	75 ed                	jne    417c60 <do_compaction+0x570>
  417c73:	48 89 c5             	mov    %rax,%rbp
  417c76:	48 c1 e8 02          	shr    $0x2,%rax
  417c7a:	48 c1 ed 0a          	shr    $0xa,%rbp
  417c7e:	44 0f b6 e0          	movzbl %al,%r12d
  417c82:	4c 8d 6d 01          	lea    0x1(%rbp),%r13
  417c86:	4a 8d 1c ed 00 00 00 	lea    0x0(,%r13,8),%rbx
  417c8d:	00 
  417c8e:	48 89 df             	mov    %rbx,%rdi
  417c91:	e8 da f8 ff ff       	callq  417570 <compact_allocate>
  417c96:	49 8b 0f             	mov    (%r15),%rcx
  417c99:	f6 c1 03             	test   $0x3,%cl
  417c9c:	0f 84 07 fd ff ff    	je     4179a9 <do_compaction+0x2b9>
  417ca2:	48 89 e9             	mov    %rbp,%rcx
  417ca5:	48 c1 e1 0a          	shl    $0xa,%rcx
  417ca9:	4c 01 e1             	add    %r12,%rcx
  417cac:	49 89 0f             	mov    %rcx,(%r15)
  417caf:	e9 1f fd ff ff       	jmpq   4179d3 <do_compaction+0x2e3>
  417cb4:	48 89 e8             	mov    %rbp,%rax
  417cb7:	48 c1 e0 0a          	shl    $0xa,%rax
  417cbb:	4c 01 e0             	add    %r12,%rax
  417cbe:	49 89 07             	mov    %rax,(%r15)
  417cc1:	49 01 df             	add    %rbx,%r15
  417cc4:	e9 7b fd ff ff       	jmpq   417a44 <do_compaction+0x354>
  417cc9:	4c 8b 25 f8 54 22 00 	mov    0x2254f8(%rip),%r12        # 63d1c8 <caml_ephe_list_head>
  417cd0:	4d 85 e4             	test   %r12,%r12
  417cd3:	0f 85 7b fb ff ff    	jne    417854 <do_compaction+0x164>
  417cd9:	48 c7 05 f4 54 22 00 	movq   $0x0,0x2254f4(%rip)        # 63d1d8 <compact_fl>
  417ce0:	00 00 00 00 
  417ce4:	e8 17 3b 00 00       	callq  41b800 <caml_fl_reset>
  417ce9:	e9 fb fe ff ff       	jmpq   417be9 <do_compaction+0x4f9>
  417cee:	66 90                	xchg   %ax,%ax

0000000000417cf0 <caml_compact_heap>:
  417cf0:	53                   	push   %rbx
  417cf1:	48 83 ec 10          	sub    $0x10,%rsp
  417cf5:	e8 f6 f9 ff ff       	callq  4176f0 <do_compaction>
  417cfa:	48 8b 0d ff d3 21 00 	mov    0x21d3ff(%rip),%rcx        # 635100 <caml_stat_heap_wsz>
  417d01:	48 2b 0d 00 77 22 00 	sub    0x227700(%rip),%rcx        # 63f408 <caml_fl_cur_wsz>
  417d08:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
  417d0f:	c2 f5 28 
  417d12:	48 89 c8             	mov    %rcx,%rax
  417d15:	48 c1 e8 02          	shr    $0x2,%rax
  417d19:	48 f7 e2             	mul    %rdx
  417d1c:	48 c1 ea 02          	shr    $0x2,%rdx
  417d20:	48 83 c2 01          	add    $0x1,%rdx
  417d24:	48 0f af 15 f4 96 22 	imul   0x2296f4(%rip),%rdx        # 641420 <caml_percent_free>
  417d2b:	00 
  417d2c:	48 8d bc 11 00 02 00 	lea    0x200(%rcx,%rdx,1),%rdi
  417d33:	00 
  417d34:	e8 57 fe fe ff       	callq  407b90 <caml_clip_heap_chunk_wsz>
  417d39:	48 83 3d bf 51 21 00 	cmpq   $0x0,0x2151bf(%rip)        # 62cf00 <caml_use_huge_pages>
  417d40:	00 
  417d41:	48 8b 15 b8 d3 21 00 	mov    0x21d3b8(%rip),%rdx        # 635100 <caml_stat_heap_wsz>
  417d48:	74 11                	je     417d5b <caml_compact_heap+0x6b>
  417d4a:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
  417d51:	00 
  417d52:	48 81 f9 00 00 40 00 	cmp    $0x400000,%rcx
  417d59:	76 12                	jbe    417d6d <caml_compact_heap+0x7d>
  417d5b:	48 89 d1             	mov    %rdx,%rcx
  417d5e:	48 c1 e9 3f          	shr    $0x3f,%rcx
  417d62:	48 01 ca             	add    %rcx,%rdx
  417d65:	48 d1 fa             	sar    %rdx
  417d68:	48 39 d0             	cmp    %rdx,%rax
  417d6b:	72 0b                	jb     417d78 <caml_compact_heap+0x88>
  417d6d:	48 83 c4 10          	add    $0x10,%rsp
  417d71:	5b                   	pop    %rbx
  417d72:	c3                   	retq   
  417d73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  417d78:	48 89 c2             	mov    %rax,%rdx
  417d7b:	be e0 ec 41 00       	mov    $0x41ece0,%esi
  417d80:	bf 10 00 00 00       	mov    $0x10,%edi
  417d85:	48 c1 ea 0a          	shr    $0xa,%rdx
  417d89:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  417d8e:	e8 1d 3f 00 00       	callq  41bcb0 <caml_gc_message>
  417d93:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  417d98:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
  417d9f:	00 
  417da0:	e8 7b 11 ff ff       	callq  408f20 <caml_alloc_for_heap>
  417da5:	48 85 c0             	test   %rax,%rax
  417da8:	48 89 c3             	mov    %rax,%rbx
  417dab:	74 c0                	je     417d6d <caml_compact_heap+0x7d>
  417dad:	48 8b 70 f0          	mov    -0x10(%rax),%rsi
  417db1:	31 d2                	xor    %edx,%edx
  417db3:	48 89 c7             	mov    %rax,%rdi
  417db6:	b9 00 02 00 00       	mov    $0x200,%ecx
  417dbb:	48 c1 ee 03          	shr    $0x3,%rsi
  417dbf:	e8 2c 3e 00 00       	callq  41bbf0 <caml_make_free_blocks>
  417dc4:	48 89 da             	mov    %rbx,%rdx
  417dc7:	48 03 53 f0          	add    -0x10(%rbx),%rdx
  417dcb:	48 89 de             	mov    %rbx,%rsi
  417dce:	bf 01 00 00 00       	mov    $0x1,%edi
  417dd3:	e8 78 10 ff ff       	callq  408e50 <caml_page_table_add>
  417dd8:	85 c0                	test   %eax,%eax
  417dda:	75 54                	jne    417e30 <caml_compact_heap+0x140>
  417ddc:	48 8b 05 1d 96 22 00 	mov    0x22961d(%rip),%rax        # 641400 <caml_heap_start>
  417de3:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
  417de7:	48 83 05 f9 d2 21 00 	addq   $0x1,0x21d2f9(%rip)        # 6350e8 <caml_stat_heap_chunks>
  417dee:	01 
  417def:	48 89 1d 0a 96 22 00 	mov    %rbx,0x22960a(%rip)        # 641400 <caml_heap_start>
  417df6:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
  417dfa:	48 c1 e8 03          	shr    $0x3,%rax
  417dfe:	48 03 05 fb d2 21 00 	add    0x21d2fb(%rip),%rax        # 635100 <caml_stat_heap_wsz>
  417e05:	48 3b 05 ec d2 21 00 	cmp    0x21d2ec(%rip),%rax        # 6350f8 <caml_stat_top_heap_wsz>
  417e0c:	48 89 05 ed d2 21 00 	mov    %rax,0x21d2ed(%rip)        # 635100 <caml_stat_heap_wsz>
  417e13:	7e 07                	jle    417e1c <caml_compact_heap+0x12c>
  417e15:	48 89 05 dc d2 21 00 	mov    %rax,0x21d2dc(%rip)        # 6350f8 <caml_stat_top_heap_wsz>
  417e1c:	48 83 c4 10          	add    $0x10,%rsp
  417e20:	5b                   	pop    %rbx
  417e21:	e9 ca f8 ff ff       	jmpq   4176f0 <do_compaction>
  417e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  417e2d:	00 00 00 
  417e30:	48 83 c4 10          	add    $0x10,%rsp
  417e34:	48 89 df             	mov    %rbx,%rdi
  417e37:	5b                   	pop    %rbx
  417e38:	e9 b3 11 ff ff       	jmpq   408ff0 <caml_free_for_heap>
  417e3d:	0f 1f 00             	nopl   (%rax)

0000000000417e40 <caml_compact_heap_maybe>:
  417e40:	48 81 3d 15 96 22 00 	cmpq   $0xf423f,0x229615(%rip)        # 641460 <caml_percent_max>
  417e47:	3f 42 0f 00 
  417e4b:	77 0a                	ja     417e57 <caml_compact_heap_maybe+0x17>
  417e4d:	48 83 3d b3 d2 21 00 	cmpq   $0x2,0x21d2b3(%rip)        # 635108 <caml_stat_major_collections>
  417e54:	02 
  417e55:	7f 09                	jg     417e60 <caml_compact_heap_maybe+0x20>
  417e57:	c3                   	retq   
  417e58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  417e5f:	00 
  417e60:	53                   	push   %rbx
  417e61:	31 ff                	xor    %edi,%edi
  417e63:	48 83 ec 10          	sub    $0x10,%rsp
  417e67:	e8 24 fd fe ff       	callq  407b90 <caml_clip_heap_chunk_wsz>
  417e6c:	48 8b 0d 8d d2 21 00 	mov    0x21d28d(%rip),%rcx        # 635100 <caml_stat_heap_wsz>
  417e73:	48 01 c0             	add    %rax,%rax
  417e76:	48 39 c8             	cmp    %rcx,%rax
  417e79:	0f 83 1a 01 00 00    	jae    417f99 <caml_compact_heap_maybe+0x159>
  417e7f:	48 83 3d 79 50 21 00 	cmpq   $0x0,0x215079(%rip)        # 62cf00 <caml_use_huge_pages>
  417e86:	00 
  417e87:	74 14                	je     417e9d <caml_compact_heap_maybe+0x5d>
  417e89:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
  417e90:	00 
  417e91:	48 3d 00 00 40 00    	cmp    $0x400000,%rax
  417e97:	0f 86 fc 00 00 00    	jbe    417f99 <caml_compact_heap_maybe+0x159>
  417e9d:	48 8b 35 64 75 22 00 	mov    0x227564(%rip),%rsi        # 63f408 <caml_fl_cur_wsz>
  417ea4:	48 8b 15 e5 4c 21 00 	mov    0x214ce5(%rip),%rdx        # 62cb90 <caml_fl_wsz_at_phase_change>
  417eab:	48 85 f6             	test   %rsi,%rsi
  417eae:	0f 88 4c 02 00 00    	js     418100 <caml_compact_heap_maybe+0x2c0>
  417eb4:	66 0f ef c0          	pxor   %xmm0,%xmm0
  417eb8:	f2 48 0f 2a c6       	cvtsi2sd %rsi,%xmm0
  417ebd:	48 85 d2             	test   %rdx,%rdx
  417ec0:	f2 0f 59 05 20 5d 00 	mulsd  0x5d20(%rip),%xmm0        # 41dbe8 <caml_absf_mask+0x228>
  417ec7:	00 
  417ec8:	0f 88 e2 01 00 00    	js     4180b0 <caml_compact_heap_maybe+0x270>
  417ece:	66 0f ef c9          	pxor   %xmm1,%xmm1
  417ed2:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  417ed7:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  417edb:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
  417edf:	66 0f ef c9          	pxor   %xmm1,%xmm1
  417ee3:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
  417ee7:	0f 2e c8             	ucomiss %xmm0,%xmm1
  417eea:	0f 87 a0 01 00 00    	ja     418090 <caml_compact_heap_maybe+0x250>
  417ef0:	66 0f ef c9          	pxor   %xmm1,%xmm1
  417ef4:	f3 48 0f 2a c9       	cvtsi2ss %rcx,%xmm1
  417ef9:	0f 2e c1             	ucomiss %xmm1,%xmm0
  417efc:	73 2d                	jae    417f2b <caml_compact_heap_maybe+0xeb>
  417efe:	66 0f ef d2          	pxor   %xmm2,%xmm2
  417f02:	f3 0f 5c c8          	subss  %xmm0,%xmm1
  417f06:	f3 0f 5a d0          	cvtss2sd %xmm0,%xmm2
  417f0a:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
  417f0e:	f2 0f 59 15 02 6d 00 	mulsd  0x6d02(%rip),%xmm2        # 41ec18 <caml_absf_mask+0x1258>
  417f15:	00 
  417f16:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
  417f1a:	f2 0f 5a ca          	cvtsd2ss %xmm2,%xmm1
  417f1e:	0f 2e 0d 2b 6e 00 00 	ucomiss 0x6e2b(%rip),%xmm1        # 41ed50 <caml_absf_mask+0x1390>
  417f25:	0f 86 45 01 00 00    	jbe    418070 <caml_compact_heap_maybe+0x230>
  417f2b:	bb 40 42 0f 00       	mov    $0xf4240,%ebx
  417f30:	f3 0f 10 0d 18 6e 00 	movss  0x6e18(%rip),%xmm1        # 41ed50 <caml_absf_mask+0x1390>
  417f37:	00 
  417f38:	be 08 ed 41 00       	mov    $0x41ed08,%esi
  417f3d:	bf 00 02 00 00       	mov    $0x200,%edi
  417f42:	f3 0f 11 4c 24 0c    	movss  %xmm1,0xc(%rsp)
  417f48:	e8 63 3d 00 00       	callq  41bcb0 <caml_gc_message>
  417f4d:	48 8b 15 b4 74 22 00 	mov    0x2274b4(%rip),%rdx        # 63f408 <caml_fl_cur_wsz>
  417f54:	be 8d ec 41 00       	mov    $0x41ec8d,%esi
  417f59:	bf 00 02 00 00       	mov    $0x200,%edi
  417f5e:	e8 4d 3d 00 00       	callq  41bcb0 <caml_gc_message>
  417f63:	48 89 da             	mov    %rbx,%rdx
  417f66:	be aa ec 41 00       	mov    $0x41ecaa,%esi
  417f6b:	bf 00 02 00 00       	mov    $0x200,%edi
  417f70:	e8 3b 3d 00 00       	callq  41bcb0 <caml_gc_message>
  417f75:	48 8b 05 e4 94 22 00 	mov    0x2294e4(%rip),%rax        # 641460 <caml_percent_max>
  417f7c:	f3 0f 10 4c 24 0c    	movss  0xc(%rsp),%xmm1
  417f82:	48 85 c0             	test   %rax,%rax
  417f85:	0f 88 4d 01 00 00    	js     4180d8 <caml_compact_heap_maybe+0x298>
  417f8b:	66 0f ef c0          	pxor   %xmm0,%xmm0
  417f8f:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
  417f94:	0f 2e c8             	ucomiss %xmm0,%xmm1
  417f97:	73 07                	jae    417fa0 <caml_compact_heap_maybe+0x160>
  417f99:	48 83 c4 10          	add    $0x10,%rsp
  417f9d:	5b                   	pop    %rbx
  417f9e:	c3                   	retq   
  417f9f:	90                   	nop
  417fa0:	31 d2                	xor    %edx,%edx
  417fa2:	be e8 e8 41 00       	mov    $0x41e8e8,%esi
  417fa7:	bf 00 02 00 00       	mov    $0x200,%edi
  417fac:	e8 ff 3c 00 00       	callq  41bcb0 <caml_gc_message>
  417fb1:	e8 3a 04 ff ff       	callq  4083f0 <caml_empty_minor_heap>
  417fb6:	e8 f5 fa fe ff       	callq  407ab0 <caml_finish_major_cycle>
  417fbb:	48 8b 05 46 74 22 00 	mov    0x227446(%rip),%rax        # 63f408 <caml_fl_cur_wsz>
  417fc2:	48 85 c0             	test   %rax,%rax
  417fc5:	0f 88 b7 01 00 00    	js     418182 <caml_compact_heap_maybe+0x342>
  417fcb:	66 0f ef c9          	pxor   %xmm1,%xmm1
  417fcf:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
  417fd4:	66 0f ef d2          	pxor   %xmm2,%xmm2
  417fd8:	66 0f ef c0          	pxor   %xmm0,%xmm0
  417fdc:	f3 48 0f 2a 15 1b d1 	cvtsi2ssq 0x21d11b(%rip),%xmm2        # 635100 <caml_stat_heap_wsz>
  417fe3:	21 00 
  417fe5:	f3 0f 5a c1          	cvtss2sd %xmm1,%xmm0
  417fe9:	f2 0f 59 05 27 6c 00 	mulsd  0x6c27(%rip),%xmm0        # 41ec18 <caml_absf_mask+0x1258>
  417ff0:	00 
  417ff1:	f3 0f 5c d1          	subss  %xmm1,%xmm2
  417ff5:	f3 0f 5a ca          	cvtss2sd %xmm2,%xmm1
  417ff9:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
  417ffd:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
  418001:	0f 2e 05 08 6c 00 00 	ucomiss 0x6c08(%rip),%xmm0        # 41ec10 <caml_absf_mask+0x1250>
  418008:	0f 83 1a 01 00 00    	jae    418128 <caml_compact_heap_maybe+0x2e8>
  41800e:	f3 48 0f 2c d0       	cvttss2si %xmm0,%rdx
  418013:	be c6 ec 41 00       	mov    $0x41ecc6,%esi
  418018:	bf 00 02 00 00       	mov    $0x200,%edi
  41801d:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
  418023:	e8 88 3c 00 00       	callq  41bcb0 <caml_gc_message>
  418028:	48 8b 05 31 94 22 00 	mov    0x229431(%rip),%rax        # 641460 <caml_percent_max>
  41802f:	f3 0f 10 44 24 0c    	movss  0xc(%rsp),%xmm0
  418035:	48 85 c0             	test   %rax,%rax
  418038:	0f 88 62 01 00 00    	js     4181a0 <caml_compact_heap_maybe+0x360>
  41803e:	66 0f ef c9          	pxor   %xmm1,%xmm1
  418042:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
  418047:	0f 2e c1             	ucomiss %xmm1,%xmm0
  41804a:	0f 83 00 01 00 00    	jae    418150 <caml_compact_heap_maybe+0x310>
  418050:	48 83 c4 10          	add    $0x10,%rsp
  418054:	31 d2                	xor    %edx,%edx
  418056:	be 30 ed 41 00       	mov    $0x41ed30,%esi
  41805b:	5b                   	pop    %rbx
  41805c:	bf 00 02 00 00       	mov    $0x200,%edi
  418061:	e9 4a 3c 00 00       	jmpq   41bcb0 <caml_gc_message>
  418066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41806d:	00 00 00 
  418070:	0f 2e 0d 99 6b 00 00 	ucomiss 0x6b99(%rip),%xmm1        # 41ec10 <caml_absf_mask+0x1250>
  418077:	0f 83 e3 00 00 00    	jae    418160 <caml_compact_heap_maybe+0x320>
  41807d:	f3 48 0f 2c d9       	cvttss2si %xmm1,%rbx
  418082:	e9 b1 fe ff ff       	jmpq   417f38 <caml_compact_heap_maybe+0xf8>
  418087:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41808e:	00 00 
  418090:	48 85 f6             	test   %rsi,%rsi
  418093:	0f 88 25 01 00 00    	js     4181be <caml_compact_heap_maybe+0x37e>
  418099:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41809d:	f3 48 0f 2a c6       	cvtsi2ss %rsi,%xmm0
  4180a2:	e9 49 fe ff ff       	jmpq   417ef0 <caml_compact_heap_maybe+0xb0>
  4180a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4180ae:	00 00 
  4180b0:	48 89 d0             	mov    %rdx,%rax
  4180b3:	48 89 d7             	mov    %rdx,%rdi
  4180b6:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4180ba:	48 d1 e8             	shr    %rax
  4180bd:	83 e7 01             	and    $0x1,%edi
  4180c0:	48 09 f8             	or     %rdi,%rax
  4180c3:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
  4180c8:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  4180cc:	e9 06 fe ff ff       	jmpq   417ed7 <caml_compact_heap_maybe+0x97>
  4180d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4180d8:	48 89 c2             	mov    %rax,%rdx
  4180db:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4180df:	48 d1 ea             	shr    %rdx
  4180e2:	83 e0 01             	and    $0x1,%eax
  4180e5:	48 09 c2             	or     %rax,%rdx
  4180e8:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
  4180ed:	f3 0f 58 c0          	addss  %xmm0,%xmm0
  4180f1:	e9 9e fe ff ff       	jmpq   417f94 <caml_compact_heap_maybe+0x154>
  4180f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4180fd:	00 00 00 
  418100:	48 89 f0             	mov    %rsi,%rax
  418103:	48 89 f7             	mov    %rsi,%rdi
  418106:	66 0f ef c0          	pxor   %xmm0,%xmm0
  41810a:	48 d1 e8             	shr    %rax
  41810d:	83 e7 01             	and    $0x1,%edi
  418110:	48 09 f8             	or     %rdi,%rax
  418113:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  418118:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
  41811c:	e9 9c fd ff ff       	jmpq   417ebd <caml_compact_heap_maybe+0x7d>
  418121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  418128:	0f 28 c8             	movaps %xmm0,%xmm1
  41812b:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  418132:	00 00 80 
  418135:	f3 0f 5c 0d d3 6a 00 	subss  0x6ad3(%rip),%xmm1        # 41ec10 <caml_absf_mask+0x1250>
  41813c:	00 
  41813d:	f3 48 0f 2c d1       	cvttss2si %xmm1,%rdx
  418142:	48 31 c2             	xor    %rax,%rdx
  418145:	e9 c9 fe ff ff       	jmpq   418013 <caml_compact_heap_maybe+0x1d3>
  41814a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  418150:	48 83 c4 10          	add    $0x10,%rsp
  418154:	5b                   	pop    %rbx
  418155:	e9 96 fb ff ff       	jmpq   417cf0 <caml_compact_heap>
  41815a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  418160:	0f 28 c1             	movaps %xmm1,%xmm0
  418163:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  41816a:	00 00 80 
  41816d:	f3 0f 5c 05 9b 6a 00 	subss  0x6a9b(%rip),%xmm0        # 41ec10 <caml_absf_mask+0x1250>
  418174:	00 
  418175:	f3 48 0f 2c d8       	cvttss2si %xmm0,%rbx
  41817a:	48 31 c3             	xor    %rax,%rbx
  41817d:	e9 b6 fd ff ff       	jmpq   417f38 <caml_compact_heap_maybe+0xf8>
  418182:	48 89 c2             	mov    %rax,%rdx
  418185:	66 0f ef c9          	pxor   %xmm1,%xmm1
  418189:	48 d1 ea             	shr    %rdx
  41818c:	83 e0 01             	and    $0x1,%eax
  41818f:	48 09 c2             	or     %rax,%rdx
  418192:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
  418197:	f3 0f 58 c9          	addss  %xmm1,%xmm1
  41819b:	e9 34 fe ff ff       	jmpq   417fd4 <caml_compact_heap_maybe+0x194>
  4181a0:	48 89 c2             	mov    %rax,%rdx
  4181a3:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4181a7:	48 d1 ea             	shr    %rdx
  4181aa:	83 e0 01             	and    $0x1,%eax
  4181ad:	48 09 c2             	or     %rax,%rdx
  4181b0:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
  4181b5:	f3 0f 58 c9          	addss  %xmm1,%xmm1
  4181b9:	e9 89 fe ff ff       	jmpq   418047 <caml_compact_heap_maybe+0x207>
  4181be:	48 89 f0             	mov    %rsi,%rax
  4181c1:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4181c5:	48 d1 e8             	shr    %rax
  4181c8:	83 e6 01             	and    $0x1,%esi
  4181cb:	48 09 f0             	or     %rsi,%rax
  4181ce:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
  4181d3:	f3 0f 58 c0          	addss  %xmm0,%xmm0
  4181d7:	e9 14 fd ff ff       	jmpq   417ef0 <caml_compact_heap_maybe+0xb0>
  4181dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004181e0 <alloc_to_do>:
  4181e0:	48 63 c7             	movslq %edi,%rax
  4181e3:	53                   	push   %rbx
  4181e4:	48 89 c3             	mov    %rax,%rbx
  4181e7:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4181eb:	48 8d 3c c5 28 00 00 	lea    0x28(,%rax,8),%rdi
  4181f2:	00 
  4181f3:	e8 98 9a fe ff       	callq  401c90 <malloc@plt>
  4181f8:	48 85 c0             	test   %rax,%rax
  4181fb:	74 33                	je     418230 <alloc_to_do+0x50>
  4181fd:	48 8b 15 e4 4f 22 00 	mov    0x224fe4(%rip),%rdx        # 63d1e8 <to_do_tl>
  418204:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  41820b:	89 58 08             	mov    %ebx,0x8(%rax)
  41820e:	48 85 d2             	test   %rdx,%rdx
  418211:	74 0d                	je     418220 <alloc_to_do+0x40>
  418213:	48 89 02             	mov    %rax,(%rdx)
  418216:	48 89 05 cb 4f 22 00 	mov    %rax,0x224fcb(%rip)        # 63d1e8 <to_do_tl>
  41821d:	5b                   	pop    %rbx
  41821e:	c3                   	retq   
  41821f:	90                   	nop
  418220:	48 89 05 c9 4f 22 00 	mov    %rax,0x224fc9(%rip)        # 63d1f0 <to_do_hd>
  418227:	48 89 05 ba 4f 22 00 	mov    %rax,0x224fba(%rip)        # 63d1e8 <to_do_tl>
  41822e:	5b                   	pop    %rbx
  41822f:	c3                   	retq   
  418230:	bf 54 ed 41 00       	mov    $0x41ed54,%edi
  418235:	e8 b6 3a 00 00       	callq  41bcf0 <caml_fatal_error>
  41823a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000418240 <generic_final_register>:
  418240:	41 55                	push   %r13
  418242:	41 54                	push   %r12
  418244:	55                   	push   %rbp
  418245:	53                   	push   %rbx
  418246:	48 83 ec 08          	sub    $0x8,%rsp
  41824a:	f6 c2 01             	test   $0x1,%dl
  41824d:	0f 85 2b 01 00 00    	jne    41837e <generic_final_register+0x13e>
  418253:	48 89 fb             	mov    %rdi,%rbx
  418256:	48 89 d7             	mov    %rdx,%rdi
  418259:	49 89 f4             	mov    %rsi,%r12
  41825c:	48 89 d5             	mov    %rdx,%rbp
  41825f:	e8 dc 0a ff ff       	callq  408d40 <caml_page_table_lookup>
  418264:	a8 03                	test   $0x3,%al
  418266:	0f 84 12 01 00 00    	je     41837e <generic_final_register+0x13e>
  41826c:	0f b6 45 f8          	movzbl -0x8(%rbp),%eax
  418270:	8d 50 0a             	lea    0xa(%rax),%edx
  418273:	81 e2 fb 00 00 00    	and    $0xfb,%edx
  418279:	0f 84 ff 00 00 00    	je     41837e <generic_final_register+0x13e>
  41827f:	3c fd                	cmp    $0xfd,%al
  418281:	0f 84 f7 00 00 00    	je     41837e <generic_final_register+0x13e>
  418287:	48 8b 53 10          	mov    0x10(%rbx),%rdx
  41828b:	48 8b 43 18          	mov    0x18(%rbx),%rax
  41828f:	48 39 c2             	cmp    %rax,%rdx
  418292:	73 4c                	jae    4182e0 <generic_final_register+0xa0>
  418294:	48 8b 03             	mov    (%rbx),%rax
  418297:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
  41829b:	4c 89 24 d0          	mov    %r12,(%rax,%rdx,8)
  41829f:	80 7d f8 f9          	cmpb   $0xf9,-0x8(%rbp)
  4182a3:	48 8b 43 10          	mov    0x10(%rbx),%rax
  4182a7:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4182ab:	74 63                	je     418310 <generic_final_register+0xd0>
  4182ad:	48 8b 13             	mov    (%rbx),%rdx
  4182b0:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
  4182b4:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
  4182bb:	48 8b 43 10          	mov    0x10(%rbx),%rax
  4182bf:	48 8b 0b             	mov    (%rbx),%rcx
  4182c2:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4182c6:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
  4182ca:	48 89 68 08          	mov    %rbp,0x8(%rax)
  4182ce:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
  4182d3:	48 83 c4 08          	add    $0x8,%rsp
  4182d7:	5b                   	pop    %rbx
  4182d8:	5d                   	pop    %rbp
  4182d9:	41 5c                	pop    %r12
  4182db:	41 5d                	pop    %r13
  4182dd:	c3                   	retq   
  4182de:	66 90                	xchg   %ax,%ax
  4182e0:	48 8b 3b             	mov    (%rbx),%rdi
  4182e3:	48 85 ff             	test   %rdi,%rdi
  4182e6:	74 78                	je     418360 <generic_final_register+0x120>
  4182e8:	4c 8d 2c 00          	lea    (%rax,%rax,1),%r13
  4182ec:	49 8d 74 85 00       	lea    0x0(%r13,%rax,4),%rsi
  4182f1:	48 c1 e6 03          	shl    $0x3,%rsi
  4182f5:	e8 06 15 ff ff       	callq  409800 <caml_stat_resize>
  4182fa:	4c 89 6b 18          	mov    %r13,0x18(%rbx)
  4182fe:	48 89 03             	mov    %rax,(%rbx)
  418301:	48 8b 53 10          	mov    0x10(%rbx),%rdx
  418305:	eb 90                	jmp    418297 <generic_final_register+0x57>
  418307:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41830e:	00 00 
  418310:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  418314:	48 8b 33             	mov    (%rbx),%rsi
  418317:	48 c1 ea 0a          	shr    $0xa,%rdx
  41831b:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
  41831f:	c1 e2 03             	shl    $0x3,%edx
  418322:	89 50 10             	mov    %edx,0x10(%rax)
  418325:	48 8b 43 10          	mov    0x10(%rbx),%rax
  418329:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41832d:	48 8b 3b             	mov    (%rbx),%rdi
  418330:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  418334:	48 c1 ea 0a          	shr    $0xa,%rdx
  418338:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
  41833c:	48 c1 e2 03          	shl    $0x3,%rdx
  418340:	48 29 d5             	sub    %rdx,%rbp
  418343:	48 89 68 08          	mov    %rbp,0x8(%rax)
  418347:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
  41834c:	48 83 c4 08          	add    $0x8,%rsp
  418350:	5b                   	pop    %rbx
  418351:	5d                   	pop    %rbp
  418352:	41 5c                	pop    %r12
  418354:	41 5d                	pop    %r13
  418356:	c3                   	retq   
  418357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41835e:	00 00 
  418360:	bf d0 02 00 00       	mov    $0x2d0,%edi
  418365:	e8 66 14 ff ff       	callq  4097d0 <caml_stat_alloc>
  41836a:	48 c7 43 18 1e 00 00 	movq   $0x1e,0x18(%rbx)
  418371:	00 
  418372:	48 89 03             	mov    %rax,(%rbx)
  418375:	48 8b 53 10          	mov    0x10(%rbx),%rdx
  418379:	e9 19 ff ff ff       	jmpq   418297 <generic_final_register+0x57>
  41837e:	bf 62 ed 41 00       	mov    $0x41ed62,%edi
  418383:	e8 58 23 00 00       	callq  41a6e0 <caml_invalid_argument>
  418388:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41838f:	00 

0000000000418390 <generic_final_update>:
  418390:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  418394:	48 85 d2             	test   %rdx,%rdx
  418397:	74 3b                	je     4183d4 <generic_final_update+0x44>
  418399:	48 8b 07             	mov    (%rdi),%rax
  41839c:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
  4183a0:	31 c9                	xor    %ecx,%ecx
  4183a2:	4c 8d 04 d0          	lea    (%rax,%rdx,8),%r8
  4183a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4183ad:	00 00 00 
  4183b0:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4183b4:	48 8b 52 f8          	mov    -0x8(%rdx),%rdx
  4183b8:	81 e2 00 03 00 00    	and    $0x300,%edx
  4183be:	48 83 fa 01          	cmp    $0x1,%rdx
  4183c2:	48 83 d1 00          	adc    $0x0,%rcx
  4183c6:	48 83 c0 18          	add    $0x18,%rax
  4183ca:	49 39 c0             	cmp    %rax,%r8
  4183cd:	75 e1                	jne    4183b0 <generic_final_update+0x20>
  4183cf:	48 85 c9             	test   %rcx,%rcx
  4183d2:	75 0c                	jne    4183e0 <generic_final_update+0x50>
  4183d4:	f3 c3                	repz retq 
  4183d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4183dd:	00 00 00 
  4183e0:	41 54                	push   %r12
  4183e2:	55                   	push   %rbp
  4183e3:	41 89 f4             	mov    %esi,%r12d
  4183e6:	53                   	push   %rbx
  4183e7:	48 89 fb             	mov    %rdi,%rbx
  4183ea:	89 cf                	mov    %ecx,%edi
  4183ec:	e8 ef fd ff ff       	callq  4181e0 <alloc_to_do>
  4183f1:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
  4183f6:	4c 8b 0d eb 4d 22 00 	mov    0x224deb(%rip),%r9        # 63d1e8 <to_do_tl>
  4183fd:	0f 84 32 01 00 00    	je     418535 <generic_final_update+0x1a5>
  418403:	31 c9                	xor    %ecx,%ecx
  418405:	45 31 c0             	xor    %r8d,%r8d
  418408:	31 ed                	xor    %ebp,%ebp
  41840a:	31 d2                	xor    %edx,%edx
  41840c:	eb 48                	jmp    418456 <generic_final_update+0xc6>
  41840e:	66 90                	xchg   %ax,%ax
  418410:	48 8d 74 6d 00       	lea    0x0(%rbp,%rbp,2),%rsi
  418415:	4c 8b 10             	mov    (%rax),%r10
  418418:	45 85 e4             	test   %r12d,%r12d
  41841b:	49 8d 34 f1          	lea    (%r9,%rsi,8),%rsi
  41841f:	4c 89 56 10          	mov    %r10,0x10(%rsi)
  418423:	4c 8b 50 08          	mov    0x8(%rax),%r10
  418427:	4c 89 56 18          	mov    %r10,0x18(%rsi)
  41842b:	48 8b 40 10          	mov    0x10(%rax),%rax
  41842f:	48 89 46 20          	mov    %rax,0x20(%rsi)
  418433:	75 0f                	jne    418444 <generic_final_update+0xb4>
  418435:	48 c7 46 18 01 00 00 	movq   $0x1,0x18(%rsi)
  41843c:	00 
  41843d:	c7 46 20 00 00 00 00 	movl   $0x0,0x20(%rsi)
  418444:	48 83 c5 01          	add    $0x1,%rbp
  418448:	48 83 c2 01          	add    $0x1,%rdx
  41844c:	48 83 c1 18          	add    $0x18,%rcx
  418450:	48 3b 53 08          	cmp    0x8(%rbx),%rdx
  418454:	73 45                	jae    41849b <generic_final_update+0x10b>
  418456:	48 8b 33             	mov    (%rbx),%rsi
  418459:	48 8d 04 0e          	lea    (%rsi,%rcx,1),%rax
  41845d:	48 8b 78 08          	mov    0x8(%rax),%rdi
  418461:	48 f7 47 f8 00 03 00 	testq  $0x300,-0x8(%rdi)
  418468:	00 
  418469:	74 a5                	je     418410 <generic_final_update+0x80>
  41846b:	4b 8d 3c 40          	lea    (%r8,%r8,2),%rdi
  41846f:	48 83 c2 01          	add    $0x1,%rdx
  418473:	49 83 c0 01          	add    $0x1,%r8
  418477:	48 83 c1 18          	add    $0x18,%rcx
  41847b:	48 8d 34 fe          	lea    (%rsi,%rdi,8),%rsi
  41847f:	48 8b 38             	mov    (%rax),%rdi
  418482:	48 89 3e             	mov    %rdi,(%rsi)
  418485:	48 8b 78 08          	mov    0x8(%rax),%rdi
  418489:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
  41848d:	48 8b 40 10          	mov    0x10(%rax),%rax
  418491:	48 89 46 10          	mov    %rax,0x10(%rsi)
  418495:	48 3b 53 08          	cmp    0x8(%rbx),%rdx
  418499:	72 bb                	jb     418456 <generic_final_update+0xc6>
  41849b:	41 89 ea             	mov    %ebp,%r10d
  41849e:	48 39 53 10          	cmp    %rdx,0x10(%rbx)
  4184a2:	4c 89 43 08          	mov    %r8,0x8(%rbx)
  4184a6:	76 4d                	jbe    4184f5 <generic_final_update+0x165>
  4184a8:	4b 8d 3c 40          	lea    (%r8,%r8,2),%rdi
  4184ac:	48 8d 0c 52          	lea    (%rdx,%rdx,2),%rcx
  4184b0:	48 c1 e7 03          	shl    $0x3,%rdi
  4184b4:	48 c1 e1 03          	shl    $0x3,%rcx
  4184b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4184bf:	00 
  4184c0:	48 8b 03             	mov    (%rbx),%rax
  4184c3:	49 83 c0 01          	add    $0x1,%r8
  4184c7:	48 83 c2 01          	add    $0x1,%rdx
  4184cb:	48 8b 34 08          	mov    (%rax,%rcx,1),%rsi
  4184cf:	48 89 34 38          	mov    %rsi,(%rax,%rdi,1)
  4184d3:	48 8b 74 08 08       	mov    0x8(%rax,%rcx,1),%rsi
  4184d8:	48 89 74 38 08       	mov    %rsi,0x8(%rax,%rdi,1)
  4184dd:	48 8b 74 08 10       	mov    0x10(%rax,%rcx,1),%rsi
  4184e2:	48 83 c1 18          	add    $0x18,%rcx
  4184e6:	48 89 74 38 10       	mov    %rsi,0x10(%rax,%rdi,1)
  4184eb:	48 83 c7 18          	add    $0x18,%rdi
  4184ef:	48 3b 53 10          	cmp    0x10(%rbx),%rdx
  4184f3:	72 cb                	jb     4184c0 <generic_final_update+0x130>
  4184f5:	45 85 e4             	test   %r12d,%r12d
  4184f8:	4c 89 43 10          	mov    %r8,0x10(%rbx)
  4184fc:	45 89 51 08          	mov    %r10d,0x8(%r9)
  418500:	74 2e                	je     418530 <generic_final_update+0x1a0>
  418502:	48 85 ed             	test   %rbp,%rbp
  418505:	74 29                	je     418530 <generic_final_update+0x1a0>
  418507:	31 db                	xor    %ebx,%ebx
  418509:	eb 0c                	jmp    418517 <generic_final_update+0x187>
  41850b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  418510:	4c 8b 0d d1 4c 22 00 	mov    0x224cd1(%rip),%r9        # 63d1e8 <to_do_tl>
  418517:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
  41851b:	31 f6                	xor    %esi,%esi
  41851d:	48 83 c3 01          	add    $0x1,%rbx
  418521:	49 8b 7c c1 18       	mov    0x18(%r9,%rax,8),%rdi
  418526:	e8 85 ed fe ff       	callq  4072b0 <caml_darken>
  41852b:	48 39 eb             	cmp    %rbp,%rbx
  41852e:	75 e0                	jne    418510 <generic_final_update+0x180>
  418530:	5b                   	pop    %rbx
  418531:	5d                   	pop    %rbp
  418532:	41 5c                	pop    %r12
  418534:	c3                   	retq   
  418535:	45 31 d2             	xor    %r10d,%r10d
  418538:	45 31 c0             	xor    %r8d,%r8d
  41853b:	31 ed                	xor    %ebp,%ebp
  41853d:	31 d2                	xor    %edx,%edx
  41853f:	e9 5a ff ff ff       	jmpq   41849e <generic_final_update+0x10e>
  418544:	66 90                	xchg   %ax,%ax
  418546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41854d:	00 00 00 

0000000000418550 <caml_final_update_mark_phase>:
  418550:	be 01 00 00 00       	mov    $0x1,%esi
  418555:	bf 20 d2 63 00       	mov    $0x63d220,%edi
  41855a:	e9 31 fe ff ff       	jmpq   418390 <generic_final_update>
  41855f:	90                   	nop

0000000000418560 <caml_final_update_clean_phase>:
  418560:	31 f6                	xor    %esi,%esi
  418562:	bf 00 d2 63 00       	mov    $0x63d200,%edi
  418567:	e9 24 fe ff ff       	jmpq   418390 <generic_final_update>
  41856c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000418570 <caml_final_do_calls>:
  418570:	8b 05 6a 4c 22 00    	mov    0x224c6a(%rip),%eax        # 63d1e0 <running_finalisation_function>
  418576:	85 c0                	test   %eax,%eax
  418578:	74 06                	je     418580 <caml_final_do_calls+0x10>
  41857a:	f3 c3                	repz retq 
  41857c:	0f 1f 40 00          	nopl   0x0(%rax)
  418580:	48 83 3d 68 4c 22 00 	cmpq   $0x0,0x224c68(%rip)        # 63d1f0 <to_do_hd>
  418587:	00 
  418588:	74 f0                	je     41857a <caml_final_do_calls+0xa>
  41858a:	48 8b 05 0f 8e 22 00 	mov    0x228e0f(%rip),%rax        # 6413a0 <caml_finalise_begin_hook>
  418591:	53                   	push   %rbx
  418592:	48 85 c0             	test   %rax,%rax
  418595:	74 02                	je     418599 <caml_final_do_calls+0x29>
  418597:	ff d0                	callq  *%rax
  418599:	bf 80 00 00 00       	mov    $0x80,%edi
  41859e:	31 d2                	xor    %edx,%edx
  4185a0:	be 70 ed 41 00       	mov    $0x41ed70,%esi
  4185a5:	e8 06 37 00 00       	callq  41bcb0 <caml_gc_message>
  4185aa:	48 8b 3d 3f 4c 22 00 	mov    0x224c3f(%rip),%rdi        # 63d1f0 <to_do_hd>
  4185b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4185b8:	48 85 ff             	test   %rdi,%rdi
  4185bb:	74 57                	je     418614 <caml_final_do_calls+0xa4>
  4185bd:	8b 47 08             	mov    0x8(%rdi),%eax
  4185c0:	85 c0                	test   %eax,%eax
  4185c2:	74 74                	je     418638 <caml_final_do_calls+0xc8>
  4185c4:	83 e8 01             	sub    $0x1,%eax
  4185c7:	c7 05 0f 4c 22 00 01 	movl   $0x1,0x224c0f(%rip)        # 63d1e0 <running_finalisation_function>
  4185ce:	00 00 00 
  4185d1:	89 47 08             	mov    %eax,0x8(%rdi)
  4185d4:	48 98                	cltq   
  4185d6:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4185da:	48 8d 54 c7 10       	lea    0x10(%rdi,%rax,8),%rdx
  4185df:	48 63 72 10          	movslq 0x10(%rdx),%rsi
  4185e3:	48 8b 42 08          	mov    0x8(%rdx),%rax
  4185e7:	48 8b 3a             	mov    (%rdx),%rdi
  4185ea:	48 01 c6             	add    %rax,%rsi
  4185ed:	e8 aa 18 00 00       	callq  419e9c <caml_callback_exn>
  4185f2:	48 89 c2             	mov    %rax,%rdx
  4185f5:	c7 05 e1 4b 22 00 00 	movl   $0x0,0x224be1(%rip)        # 63d1e0 <running_finalisation_function>
  4185fc:	00 00 00 
  4185ff:	83 e2 03             	and    $0x3,%edx
  418602:	48 83 fa 02          	cmp    $0x2,%rdx
  418606:	74 5a                	je     418662 <caml_final_do_calls+0xf2>
  418608:	48 8b 3d e1 4b 22 00 	mov    0x224be1(%rip),%rdi        # 63d1f0 <to_do_hd>
  41860f:	48 85 ff             	test   %rdi,%rdi
  418612:	75 a9                	jne    4185bd <caml_final_do_calls+0x4d>
  418614:	31 d2                	xor    %edx,%edx
  418616:	be 98 ed 41 00       	mov    $0x41ed98,%esi
  41861b:	bf 80 00 00 00       	mov    $0x80,%edi
  418620:	e8 8b 36 00 00       	callq  41bcb0 <caml_gc_message>
  418625:	48 8b 05 6c 8d 22 00 	mov    0x228d6c(%rip),%rax        # 641398 <caml_finalise_end_hook>
  41862c:	48 85 c0             	test   %rax,%rax
  41862f:	74 2f                	je     418660 <caml_final_do_calls+0xf0>
  418631:	5b                   	pop    %rbx
  418632:	ff e0                	jmpq   *%rax
  418634:	0f 1f 40 00          	nopl   0x0(%rax)
  418638:	48 8b 1f             	mov    (%rdi),%rbx
  41863b:	e8 20 93 fe ff       	callq  401960 <free@plt>
  418640:	48 85 db             	test   %rbx,%rbx
  418643:	48 89 1d a6 4b 22 00 	mov    %rbx,0x224ba6(%rip)        # 63d1f0 <to_do_hd>
  41864a:	48 89 df             	mov    %rbx,%rdi
  41864d:	0f 85 65 ff ff ff    	jne    4185b8 <caml_final_do_calls+0x48>
  418653:	48 c7 05 8a 4b 22 00 	movq   $0x0,0x224b8a(%rip)        # 63d1e8 <to_do_tl>
  41865a:	00 00 00 00 
  41865e:	eb b4                	jmp    418614 <caml_final_do_calls+0xa4>
  418660:	5b                   	pop    %rbx
  418661:	c3                   	retq   
  418662:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
  418666:	48 89 c7             	mov    %rax,%rdi
  418669:	e8 f2 1d 00 00       	callq  41a460 <caml_raise>
  41866e:	66 90                	xchg   %ax,%ax

0000000000418670 <caml_final_do_roots>:
  418670:	41 55                	push   %r13
  418672:	41 54                	push   %r12
  418674:	49 89 fc             	mov    %rdi,%r12
  418677:	55                   	push   %rbp
  418678:	53                   	push   %rbx
  418679:	31 ed                	xor    %ebp,%ebp
  41867b:	31 db                	xor    %ebx,%ebx
  41867d:	48 83 ec 08          	sub    $0x8,%rsp
  418681:	48 83 3d a7 4b 22 00 	cmpq   $0x0,0x224ba7(%rip)        # 63d230 <finalisable_first+0x10>
  418688:	00 
  418689:	74 29                	je     4186b4 <caml_final_do_roots+0x44>
  41868b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  418690:	48 89 e8             	mov    %rbp,%rax
  418693:	48 03 05 86 4b 22 00 	add    0x224b86(%rip),%rax        # 63d220 <finalisable_first>
  41869a:	48 83 c3 01          	add    $0x1,%rbx
  41869e:	48 83 c5 18          	add    $0x18,%rbp
  4186a2:	48 89 c6             	mov    %rax,%rsi
  4186a5:	48 8b 38             	mov    (%rax),%rdi
  4186a8:	41 ff d4             	callq  *%r12
  4186ab:	48 39 1d 7e 4b 22 00 	cmp    %rbx,0x224b7e(%rip)        # 63d230 <finalisable_first+0x10>
  4186b2:	77 dc                	ja     418690 <caml_final_do_roots+0x20>
  4186b4:	31 ed                	xor    %ebp,%ebp
  4186b6:	31 db                	xor    %ebx,%ebx
  4186b8:	48 83 3d 50 4b 22 00 	cmpq   $0x0,0x224b50(%rip)        # 63d210 <finalisable_last+0x10>
  4186bf:	00 
  4186c0:	74 2a                	je     4186ec <caml_final_do_roots+0x7c>
  4186c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4186c8:	48 89 e8             	mov    %rbp,%rax
  4186cb:	48 03 05 2e 4b 22 00 	add    0x224b2e(%rip),%rax        # 63d200 <finalisable_last>
  4186d2:	48 83 c3 01          	add    $0x1,%rbx
  4186d6:	48 83 c5 18          	add    $0x18,%rbp
  4186da:	48 89 c6             	mov    %rax,%rsi
  4186dd:	48 8b 38             	mov    (%rax),%rdi
  4186e0:	41 ff d4             	callq  *%r12
  4186e3:	48 39 1d 26 4b 22 00 	cmp    %rbx,0x224b26(%rip)        # 63d210 <finalisable_last+0x10>
  4186ea:	77 dc                	ja     4186c8 <caml_final_do_roots+0x58>
  4186ec:	4c 8b 2d fd 4a 22 00 	mov    0x224afd(%rip),%r13        # 63d1f0 <to_do_hd>
  4186f3:	4d 85 ed             	test   %r13,%r13
  4186f6:	74 46                	je     41873e <caml_final_do_roots+0xce>
  4186f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4186ff:	00 
  418700:	41 8b 45 08          	mov    0x8(%r13),%eax
  418704:	85 c0                	test   %eax,%eax
  418706:	74 2d                	je     418735 <caml_final_do_roots+0xc5>
  418708:	49 8d 5d 10          	lea    0x10(%r13),%rbx
  41870c:	31 ed                	xor    %ebp,%ebp
  41870e:	66 90                	xchg   %ax,%ax
  418710:	48 8b 3b             	mov    (%rbx),%rdi
  418713:	48 89 de             	mov    %rbx,%rsi
  418716:	48 83 c5 01          	add    $0x1,%rbp
  41871a:	41 ff d4             	callq  *%r12
  41871d:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  418721:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  418725:	48 83 c3 18          	add    $0x18,%rbx
  418729:	41 ff d4             	callq  *%r12
  41872c:	49 63 45 08          	movslq 0x8(%r13),%rax
  418730:	48 39 e8             	cmp    %rbp,%rax
  418733:	77 db                	ja     418710 <caml_final_do_roots+0xa0>
  418735:	4d 8b 6d 00          	mov    0x0(%r13),%r13
  418739:	4d 85 ed             	test   %r13,%r13
  41873c:	75 c2                	jne    418700 <caml_final_do_roots+0x90>
  41873e:	48 83 c4 08          	add    $0x8,%rsp
  418742:	5b                   	pop    %rbx
  418743:	5d                   	pop    %rbp
  418744:	41 5c                	pop    %r12
  418746:	41 5d                	pop    %r13
  418748:	c3                   	retq   
  418749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000418750 <caml_final_invert_finalisable_values>:
  418750:	55                   	push   %rbp
  418751:	53                   	push   %rbx
  418752:	31 ed                	xor    %ebp,%ebp
  418754:	31 db                	xor    %ebx,%ebx
  418756:	48 83 ec 08          	sub    $0x8,%rsp
  41875a:	48 83 3d ce 4a 22 00 	cmpq   $0x0,0x224ace(%rip)        # 63d230 <finalisable_first+0x10>
  418761:	00 
  418762:	74 2c                	je     418790 <caml_final_invert_finalisable_values+0x40>
  418764:	0f 1f 40 00          	nopl   0x0(%rax)
  418768:	48 89 e8             	mov    %rbp,%rax
  41876b:	48 03 05 ae 4a 22 00 	add    0x224aae(%rip),%rax        # 63d220 <finalisable_first>
  418772:	48 83 c3 01          	add    $0x1,%rbx
  418776:	48 83 c5 18          	add    $0x18,%rbp
  41877a:	48 8b 78 08          	mov    0x8(%rax),%rdi
  41877e:	48 8d 70 08          	lea    0x8(%rax),%rsi
  418782:	e8 59 ef ff ff       	callq  4176e0 <invert_root>
  418787:	48 39 1d a2 4a 22 00 	cmp    %rbx,0x224aa2(%rip)        # 63d230 <finalisable_first+0x10>
  41878e:	77 d8                	ja     418768 <caml_final_invert_finalisable_values+0x18>
  418790:	31 ed                	xor    %ebp,%ebp
  418792:	31 db                	xor    %ebx,%ebx
  418794:	48 83 3d 74 4a 22 00 	cmpq   $0x0,0x224a74(%rip)        # 63d210 <finalisable_last+0x10>
  41879b:	00 
  41879c:	74 2a                	je     4187c8 <caml_final_invert_finalisable_values+0x78>
  41879e:	66 90                	xchg   %ax,%ax
  4187a0:	48 89 e8             	mov    %rbp,%rax
  4187a3:	48 03 05 56 4a 22 00 	add    0x224a56(%rip),%rax        # 63d200 <finalisable_last>
  4187aa:	48 83 c3 01          	add    $0x1,%rbx
  4187ae:	48 83 c5 18          	add    $0x18,%rbp
  4187b2:	48 8b 78 08          	mov    0x8(%rax),%rdi
  4187b6:	48 8d 70 08          	lea    0x8(%rax),%rsi
  4187ba:	e8 21 ef ff ff       	callq  4176e0 <invert_root>
  4187bf:	48 39 1d 4a 4a 22 00 	cmp    %rbx,0x224a4a(%rip)        # 63d210 <finalisable_last+0x10>
  4187c6:	77 d8                	ja     4187a0 <caml_final_invert_finalisable_values+0x50>
  4187c8:	48 83 c4 08          	add    $0x8,%rsp
  4187cc:	5b                   	pop    %rbx
  4187cd:	5d                   	pop    %rbp
  4187ce:	c3                   	retq   
  4187cf:	90                   	nop

00000000004187d0 <caml_final_oldify_young_roots>:
  4187d0:	55                   	push   %rbp
  4187d1:	53                   	push   %rbx
  4187d2:	48 83 ec 08          	sub    $0x8,%rsp
  4187d6:	48 8b 2d 4b 4a 22 00 	mov    0x224a4b(%rip),%rbp        # 63d228 <finalisable_first+0x8>
  4187dd:	48 8d 5c 6d 00       	lea    0x0(%rbp,%rbp,2),%rbx
  4187e2:	48 c1 e3 03          	shl    $0x3,%rbx
  4187e6:	48 3b 2d 43 4a 22 00 	cmp    0x224a43(%rip),%rbp        # 63d230 <finalisable_first+0x10>
  4187ed:	73 3e                	jae    41882d <caml_final_oldify_young_roots+0x5d>
  4187ef:	90                   	nop
  4187f0:	48 89 d8             	mov    %rbx,%rax
  4187f3:	48 03 05 26 4a 22 00 	add    0x224a26(%rip),%rax        # 63d220 <finalisable_first>
  4187fa:	48 83 c5 01          	add    $0x1,%rbp
  4187fe:	48 8b 38             	mov    (%rax),%rdi
  418801:	48 89 c6             	mov    %rax,%rsi
  418804:	e8 37 f8 fe ff       	callq  408040 <caml_oldify_one>
  418809:	48 89 d8             	mov    %rbx,%rax
  41880c:	48 03 05 0d 4a 22 00 	add    0x224a0d(%rip),%rax        # 63d220 <finalisable_first>
  418813:	48 83 c3 18          	add    $0x18,%rbx
  418817:	48 8b 78 08          	mov    0x8(%rax),%rdi
  41881b:	48 8d 70 08          	lea    0x8(%rax),%rsi
  41881f:	e8 1c f8 fe ff       	callq  408040 <caml_oldify_one>
  418824:	48 39 2d 05 4a 22 00 	cmp    %rbp,0x224a05(%rip)        # 63d230 <finalisable_first+0x10>
  41882b:	77 c3                	ja     4187f0 <caml_final_oldify_young_roots+0x20>
  41882d:	48 8b 1d d4 49 22 00 	mov    0x2249d4(%rip),%rbx        # 63d208 <finalisable_last+0x8>
  418834:	48 8d 2c 5b          	lea    (%rbx,%rbx,2),%rbp
  418838:	48 c1 e5 03          	shl    $0x3,%rbp
  41883c:	48 3b 1d cd 49 22 00 	cmp    0x2249cd(%rip),%rbx        # 63d210 <finalisable_last+0x10>
  418843:	73 29                	jae    41886e <caml_final_oldify_young_roots+0x9e>
  418845:	0f 1f 00             	nopl   (%rax)
  418848:	48 89 e8             	mov    %rbp,%rax
  41884b:	48 03 05 ae 49 22 00 	add    0x2249ae(%rip),%rax        # 63d200 <finalisable_last>
  418852:	48 83 c3 01          	add    $0x1,%rbx
  418856:	48 83 c5 18          	add    $0x18,%rbp
  41885a:	48 8b 38             	mov    (%rax),%rdi
  41885d:	48 89 c6             	mov    %rax,%rsi
  418860:	e8 db f7 fe ff       	callq  408040 <caml_oldify_one>
  418865:	48 39 1d a4 49 22 00 	cmp    %rbx,0x2249a4(%rip)        # 63d210 <finalisable_last+0x10>
  41886c:	77 da                	ja     418848 <caml_final_oldify_young_roots+0x78>
  41886e:	48 83 c4 08          	add    $0x8,%rsp
  418872:	5b                   	pop    %rbx
  418873:	5d                   	pop    %rbp
  418874:	c3                   	retq   
  418875:	90                   	nop
  418876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41887d:	00 00 00 

0000000000418880 <caml_final_update_minor_roots>:
  418880:	48 8b 15 81 49 22 00 	mov    0x224981(%rip),%rdx        # 63d208 <finalisable_last+0x8>
  418887:	48 8b 0d 82 49 22 00 	mov    0x224982(%rip),%rcx        # 63d210 <finalisable_last+0x10>
  41888e:	48 39 ca             	cmp    %rcx,%rdx
  418891:	0f 83 80 00 00 00    	jae    418917 <caml_final_update_minor_roots+0x97>
  418897:	4c 8b 15 62 49 22 00 	mov    0x224962(%rip),%r10        # 63d200 <finalisable_last>
  41889e:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
  4188a2:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
  4188a6:	48 8b 35 1b 46 21 00 	mov    0x21461b(%rip),%rsi        # 62cec8 <caml_young_end>
  4188ad:	4c 8b 05 1c 46 21 00 	mov    0x21461c(%rip),%r8        # 62ced0 <caml_young_start>
  4188b4:	31 ff                	xor    %edi,%edi
  4188b6:	49 8d 04 c2          	lea    (%r10,%rax,8),%rax
  4188ba:	4d 8d 0c ca          	lea    (%r10,%rcx,8),%r9
  4188be:	66 90                	xchg   %ax,%ax
  4188c0:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4188c4:	48 39 f1             	cmp    %rsi,%rcx
  4188c7:	73 0e                	jae    4188d7 <caml_final_update_minor_roots+0x57>
  4188c9:	4c 39 c1             	cmp    %r8,%rcx
  4188cc:	76 09                	jbe    4188d7 <caml_final_update_minor_roots+0x57>
  4188ce:	48 83 79 f8 01       	cmpq   $0x1,-0x8(%rcx)
  4188d3:	48 83 df ff          	sbb    $0xffffffffffffffff,%rdi
  4188d7:	48 83 c0 18          	add    $0x18,%rax
  4188db:	49 39 c1             	cmp    %rax,%r9
  4188de:	75 e0                	jne    4188c0 <caml_final_update_minor_roots+0x40>
  4188e0:	48 85 ff             	test   %rdi,%rdi
  4188e3:	53                   	push   %rbx
  4188e4:	75 3a                	jne    418920 <caml_final_update_minor_roots+0xa0>
  4188e6:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
  4188ea:	49 8d 04 c2          	lea    (%r10,%rax,8),%rax
  4188ee:	66 90                	xchg   %ax,%ax
  4188f0:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4188f4:	48 39 f1             	cmp    %rsi,%rcx
  4188f7:	73 0c                	jae    418905 <caml_final_update_minor_roots+0x85>
  4188f9:	4c 39 c1             	cmp    %r8,%rcx
  4188fc:	76 07                	jbe    418905 <caml_final_update_minor_roots+0x85>
  4188fe:	48 8b 09             	mov    (%rcx),%rcx
  418901:	48 89 48 08          	mov    %rcx,0x8(%rax)
  418905:	48 83 c2 01          	add    $0x1,%rdx
  418909:	48 83 c0 18          	add    $0x18,%rax
  41890d:	48 3b 15 fc 48 22 00 	cmp    0x2248fc(%rip),%rdx        # 63d210 <finalisable_last+0x10>
  418914:	72 da                	jb     4188f0 <caml_final_update_minor_roots+0x70>
  418916:	5b                   	pop    %rbx
  418917:	f3 c3                	repz retq 
  418919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  418920:	89 fb                	mov    %edi,%ebx
  418922:	e8 b9 f8 ff ff       	callq  4181e0 <alloc_to_do>
  418927:	48 8b 0d da 48 22 00 	mov    0x2248da(%rip),%rcx        # 63d208 <finalisable_last+0x8>
  41892e:	48 3b 0d db 48 22 00 	cmp    0x2248db(%rip),%rcx        # 63d210 <finalisable_last+0x10>
  418935:	4c 8b 15 ac 48 22 00 	mov    0x2248ac(%rip),%r10        # 63d1e8 <to_do_tl>
  41893c:	0f 83 ae 00 00 00    	jae    4189f0 <caml_final_update_minor_roots+0x170>
  418942:	48 8d 34 49          	lea    (%rcx,%rcx,2),%rsi
  418946:	48 89 cf             	mov    %rcx,%rdi
  418949:	45 31 c9             	xor    %r9d,%r9d
  41894c:	48 c1 e6 03          	shl    $0x3,%rsi
  418950:	eb 5d                	jmp    4189af <caml_final_update_minor_roots+0x12f>
  418952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  418958:	4c 3b 05 71 45 21 00 	cmp    0x214571(%rip),%r8        # 62ced0 <caml_young_start>
  41895f:	76 6d                	jbe    4189ce <caml_final_update_minor_roots+0x14e>
  418961:	4c 8b 40 08          	mov    0x8(%rax),%r8
  418965:	49 83 78 f8 00       	cmpq   $0x0,-0x8(%r8)
  41896a:	74 62                	je     4189ce <caml_final_update_minor_roots+0x14e>
  41896c:	4b 8d 14 49          	lea    (%r9,%r9,2),%rdx
  418970:	4c 8b 18             	mov    (%rax),%r11
  418973:	49 83 c1 01          	add    $0x1,%r9
  418977:	49 8d 14 d2          	lea    (%r10,%rdx,8),%rdx
  41897b:	4c 89 5a 10          	mov    %r11,0x10(%rdx)
  41897f:	4c 8b 58 08          	mov    0x8(%rax),%r11
  418983:	4c 89 5a 18          	mov    %r11,0x18(%rdx)
  418987:	48 8b 40 10          	mov    0x10(%rax),%rax
  41898b:	48 c7 42 18 01 00 00 	movq   $0x1,0x18(%rdx)
  418992:	00 
  418993:	48 89 42 20          	mov    %rax,0x20(%rdx)
  418997:	c7 42 20 00 00 00 00 	movl   $0x0,0x20(%rdx)
  41899e:	48 83 c7 01          	add    $0x1,%rdi
  4189a2:	48 83 c6 18          	add    $0x18,%rsi
  4189a6:	48 3b 3d 63 48 22 00 	cmp    0x224863(%rip),%rdi        # 63d210 <finalisable_last+0x10>
  4189ad:	73 41                	jae    4189f0 <caml_final_update_minor_roots+0x170>
  4189af:	48 8b 05 4a 48 22 00 	mov    0x22484a(%rip),%rax        # 63d200 <finalisable_last>
  4189b6:	48 8d 14 49          	lea    (%rcx,%rcx,2),%rdx
  4189ba:	48 8d 14 d0          	lea    (%rax,%rdx,8),%rdx
  4189be:	48 01 f0             	add    %rsi,%rax
  4189c1:	4c 8b 42 08          	mov    0x8(%rdx),%r8
  4189c5:	4c 3b 05 fc 44 21 00 	cmp    0x2144fc(%rip),%r8        # 62cec8 <caml_young_end>
  4189cc:	72 8a                	jb     418958 <caml_final_update_minor_roots+0xd8>
  4189ce:	4c 8b 00             	mov    (%rax),%r8
  4189d1:	48 83 c1 01          	add    $0x1,%rcx
  4189d5:	4c 89 02             	mov    %r8,(%rdx)
  4189d8:	4c 8b 40 08          	mov    0x8(%rax),%r8
  4189dc:	4c 89 42 08          	mov    %r8,0x8(%rdx)
  4189e0:	48 8b 40 10          	mov    0x10(%rax),%rax
  4189e4:	48 89 42 10          	mov    %rax,0x10(%rdx)
  4189e8:	eb b4                	jmp    41899e <caml_final_update_minor_roots+0x11e>
  4189ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4189f0:	48 89 0d 19 48 22 00 	mov    %rcx,0x224819(%rip)        # 63d210 <finalisable_last+0x10>
  4189f7:	41 89 5a 08          	mov    %ebx,0x8(%r10)
  4189fb:	48 8b 15 06 48 22 00 	mov    0x224806(%rip),%rdx        # 63d208 <finalisable_last+0x8>
  418a02:	48 3b 15 07 48 22 00 	cmp    0x224807(%rip),%rdx        # 63d210 <finalisable_last+0x10>
  418a09:	0f 83 07 ff ff ff    	jae    418916 <caml_final_update_minor_roots+0x96>
  418a0f:	4c 8b 15 ea 47 22 00 	mov    0x2247ea(%rip),%r10        # 63d200 <finalisable_last>
  418a16:	48 8b 35 ab 44 21 00 	mov    0x2144ab(%rip),%rsi        # 62cec8 <caml_young_end>
  418a1d:	4c 8b 05 ac 44 21 00 	mov    0x2144ac(%rip),%r8        # 62ced0 <caml_young_start>
  418a24:	e9 bd fe ff ff       	jmpq   4188e6 <caml_final_update_minor_roots+0x66>
  418a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000418a30 <caml_final_empty_young>:
  418a30:	48 8b 05 f9 47 22 00 	mov    0x2247f9(%rip),%rax        # 63d230 <finalisable_first+0x10>
  418a37:	48 89 05 ea 47 22 00 	mov    %rax,0x2247ea(%rip)        # 63d228 <finalisable_first+0x8>
  418a3e:	48 8b 05 cb 47 22 00 	mov    0x2247cb(%rip),%rax        # 63d210 <finalisable_last+0x10>
  418a45:	48 89 05 bc 47 22 00 	mov    %rax,0x2247bc(%rip)        # 63d208 <finalisable_last+0x8>
  418a4c:	c3                   	retq   
  418a4d:	0f 1f 00             	nopl   (%rax)

0000000000418a50 <caml_final_register>:
  418a50:	48 83 ec 08          	sub    $0x8,%rsp
  418a54:	48 89 f2             	mov    %rsi,%rdx
  418a57:	48 89 fe             	mov    %rdi,%rsi
  418a5a:	bf 20 d2 63 00       	mov    $0x63d220,%edi
  418a5f:	e8 dc f7 ff ff       	callq  418240 <generic_final_register>
  418a64:	b8 01 00 00 00       	mov    $0x1,%eax
  418a69:	48 83 c4 08          	add    $0x8,%rsp
  418a6d:	c3                   	retq   
  418a6e:	66 90                	xchg   %ax,%ax

0000000000418a70 <caml_final_register_called_without_value>:
  418a70:	48 83 ec 08          	sub    $0x8,%rsp
  418a74:	48 89 f2             	mov    %rsi,%rdx
  418a77:	48 89 fe             	mov    %rdi,%rsi
  418a7a:	bf 00 d2 63 00       	mov    $0x63d200,%edi
  418a7f:	e8 bc f7 ff ff       	callq  418240 <generic_final_register>
  418a84:	b8 01 00 00 00       	mov    $0x1,%eax
  418a89:	48 83 c4 08          	add    $0x8,%rsp
  418a8d:	c3                   	retq   
  418a8e:	66 90                	xchg   %ax,%ax

0000000000418a90 <caml_final_release>:
  418a90:	c7 05 46 47 22 00 00 	movl   $0x0,0x224746(%rip)        # 63d1e0 <running_finalisation_function>
  418a97:	00 00 00 
  418a9a:	b8 01 00 00 00       	mov    $0x1,%eax
  418a9f:	c3                   	retq   

0000000000418aa0 <caml_final_invariant_check>:
  418aa0:	f3 c3                	repz retq 
  418aa2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  418aa9:	00 00 00 
  418aac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000418ab0 <caml_alloc_custom>:
  418ab0:	41 55                	push   %r13
  418ab2:	41 54                	push   %r12
  418ab4:	49 89 fc             	mov    %rdi,%r12
  418ab7:	48 8d 7e 07          	lea    0x7(%rsi),%rdi
  418abb:	55                   	push   %rbp
  418abc:	53                   	push   %rbx
  418abd:	48 89 cd             	mov    %rcx,%rbp
  418ac0:	48 89 d3             	mov    %rdx,%rbx
  418ac3:	be ff 00 00 00       	mov    $0xff,%esi
  418ac8:	48 c1 ef 03          	shr    $0x3,%rdi
  418acc:	48 83 ec 18          	sub    $0x18,%rsp
  418ad0:	48 83 c7 01          	add    $0x1,%rdi
  418ad4:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
  418adb:	77 23                	ja     418b00 <caml_alloc_custom+0x50>
  418add:	e8 9e 37 00 00       	callq  41c280 <caml_alloc_small>
  418ae2:	4c 89 20             	mov    %r12,(%rax)
  418ae5:	49 83 7c 24 08 00    	cmpq   $0x0,0x8(%r12)
  418aeb:	75 43                	jne    418b30 <caml_alloc_custom+0x80>
  418aed:	48 85 db             	test   %rbx,%rbx
  418af0:	75 3e                	jne    418b30 <caml_alloc_custom+0x80>
  418af2:	48 83 c4 18          	add    $0x18,%rsp
  418af6:	5b                   	pop    %rbx
  418af7:	5d                   	pop    %rbp
  418af8:	41 5c                	pop    %r12
  418afa:	41 5d                	pop    %r13
  418afc:	c3                   	retq   
  418afd:	0f 1f 00             	nopl   (%rax)
  418b00:	e8 0b 09 ff ff       	callq  409410 <caml_alloc_shr>
  418b05:	48 89 df             	mov    %rbx,%rdi
  418b08:	4c 89 20             	mov    %r12,(%rax)
  418b0b:	48 89 ee             	mov    %rbp,%rsi
  418b0e:	49 89 c5             	mov    %rax,%r13
  418b11:	e8 4a 0a ff ff       	callq  409560 <caml_adjust_gc_speed>
  418b16:	48 83 c4 18          	add    $0x18,%rsp
  418b1a:	4c 89 ef             	mov    %r13,%rdi
  418b1d:	5b                   	pop    %rbx
  418b1e:	5d                   	pop    %rbp
  418b1f:	41 5c                	pop    %r12
  418b21:	41 5d                	pop    %r13
  418b23:	e9 28 ff fe ff       	jmpq   408a50 <caml_check_urgent_gc>
  418b28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  418b2f:	00 
  418b30:	48 8b 35 c1 42 21 00 	mov    0x2142c1(%rip),%rsi        # 62cdf8 <caml_custom_table+0x18>
  418b37:	48 3b 35 c2 42 21 00 	cmp    0x2142c2(%rip),%rsi        # 62ce00 <caml_custom_table+0x20>
  418b3e:	72 1b                	jb     418b5b <caml_alloc_custom+0xab>
  418b40:	bf e0 cd 62 00       	mov    $0x62cde0,%edi
  418b45:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  418b4a:	e8 d1 ff fe ff       	callq  408b20 <caml_realloc_custom_table>
  418b4f:	48 8b 35 a2 42 21 00 	mov    0x2142a2(%rip),%rsi        # 62cdf8 <caml_custom_table+0x18>
  418b56:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  418b5b:	48 8d 56 18          	lea    0x18(%rsi),%rdx
  418b5f:	48 89 15 92 42 21 00 	mov    %rdx,0x214292(%rip)        # 62cdf8 <caml_custom_table+0x18>
  418b66:	48 89 06             	mov    %rax,(%rsi)
  418b69:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
  418b6d:	48 89 6e 10          	mov    %rbp,0x10(%rsi)
  418b71:	48 83 c4 18          	add    $0x18,%rsp
  418b75:	5b                   	pop    %rbx
  418b76:	5d                   	pop    %rbp
  418b77:	41 5c                	pop    %r12
  418b79:	41 5d                	pop    %r13
  418b7b:	c3                   	retq   
  418b7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000418b80 <caml_register_custom_operations>:
  418b80:	53                   	push   %rbx
  418b81:	48 89 fb             	mov    %rdi,%rbx
  418b84:	bf 10 00 00 00       	mov    $0x10,%edi
  418b89:	e8 42 0c ff ff       	callq  4097d0 <caml_stat_alloc>
  418b8e:	48 8b 15 b3 46 22 00 	mov    0x2246b3(%rip),%rdx        # 63d248 <custom_ops_table>
  418b95:	48 89 18             	mov    %rbx,(%rax)
  418b98:	48 89 05 a9 46 22 00 	mov    %rax,0x2246a9(%rip)        # 63d248 <custom_ops_table>
  418b9f:	48 89 50 08          	mov    %rdx,0x8(%rax)
  418ba3:	5b                   	pop    %rbx
  418ba4:	c3                   	retq   
  418ba5:	90                   	nop
  418ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  418bad:	00 00 00 

0000000000418bb0 <caml_find_custom_operations>:
  418bb0:	41 54                	push   %r12
  418bb2:	55                   	push   %rbp
  418bb3:	53                   	push   %rbx
  418bb4:	48 8b 1d 8d 46 22 00 	mov    0x22468d(%rip),%rbx        # 63d248 <custom_ops_table>
  418bbb:	48 85 db             	test   %rbx,%rbx
  418bbe:	74 30                	je     418bf0 <caml_find_custom_operations+0x40>
  418bc0:	49 89 fc             	mov    %rdi,%r12
  418bc3:	eb 0c                	jmp    418bd1 <caml_find_custom_operations+0x21>
  418bc5:	0f 1f 00             	nopl   (%rax)
  418bc8:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  418bcc:	48 85 db             	test   %rbx,%rbx
  418bcf:	74 1f                	je     418bf0 <caml_find_custom_operations+0x40>
  418bd1:	48 8b 2b             	mov    (%rbx),%rbp
  418bd4:	4c 89 e6             	mov    %r12,%rsi
  418bd7:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  418bdb:	e8 e0 8f fe ff       	callq  401bc0 <strcmp@plt>
  418be0:	85 c0                	test   %eax,%eax
  418be2:	75 e4                	jne    418bc8 <caml_find_custom_operations+0x18>
  418be4:	48 89 e8             	mov    %rbp,%rax
  418be7:	5b                   	pop    %rbx
  418be8:	5d                   	pop    %rbp
  418be9:	41 5c                	pop    %r12
  418beb:	c3                   	retq   
  418bec:	0f 1f 40 00          	nopl   0x0(%rax)
  418bf0:	31 ed                	xor    %ebp,%ebp
  418bf2:	48 89 e8             	mov    %rbp,%rax
  418bf5:	5b                   	pop    %rbx
  418bf6:	5d                   	pop    %rbp
  418bf7:	41 5c                	pop    %r12
  418bf9:	c3                   	retq   
  418bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000418c00 <caml_final_custom_operations>:
  418c00:	55                   	push   %rbp
  418c01:	53                   	push   %rbx
  418c02:	48 83 ec 08          	sub    $0x8,%rsp
  418c06:	48 8b 15 33 46 22 00 	mov    0x224633(%rip),%rdx        # 63d240 <custom_ops_final_table>
  418c0d:	48 85 d2             	test   %rdx,%rdx
  418c10:	74 20                	je     418c32 <caml_final_custom_operations+0x32>
  418c12:	48 8b 02             	mov    (%rdx),%rax
  418c15:	48 3b 78 08          	cmp    0x8(%rax),%rdi
  418c19:	75 0e                	jne    418c29 <caml_final_custom_operations+0x29>
  418c1b:	eb 7a                	jmp    418c97 <caml_final_custom_operations+0x97>
  418c1d:	0f 1f 00             	nopl   (%rax)
  418c20:	48 8b 02             	mov    (%rdx),%rax
  418c23:	48 39 78 08          	cmp    %rdi,0x8(%rax)
  418c27:	74 6e                	je     418c97 <caml_final_custom_operations+0x97>
  418c29:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  418c2d:	48 85 d2             	test   %rdx,%rdx
  418c30:	75 ee                	jne    418c20 <caml_final_custom_operations+0x20>
  418c32:	48 89 fd             	mov    %rdi,%rbp
  418c35:	bf 38 00 00 00       	mov    $0x38,%edi
  418c3a:	e8 91 0b ff ff       	callq  4097d0 <caml_stat_alloc>
  418c3f:	bf 10 00 00 00       	mov    $0x10,%edi
  418c44:	48 c7 00 be ed 41 00 	movq   $0x41edbe,(%rax)
  418c4b:	48 89 68 08          	mov    %rbp,0x8(%rax)
  418c4f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  418c56:	00 
  418c57:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  418c5e:	00 
  418c5f:	48 89 c3             	mov    %rax,%rbx
  418c62:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  418c69:	00 
  418c6a:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  418c71:	00 
  418c72:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  418c79:	00 
  418c7a:	e8 51 0b ff ff       	callq  4097d0 <caml_stat_alloc>
  418c7f:	48 8b 15 ba 45 22 00 	mov    0x2245ba(%rip),%rdx        # 63d240 <custom_ops_final_table>
  418c86:	48 89 18             	mov    %rbx,(%rax)
  418c89:	48 89 05 b0 45 22 00 	mov    %rax,0x2245b0(%rip)        # 63d240 <custom_ops_final_table>
  418c90:	48 89 50 08          	mov    %rdx,0x8(%rax)
  418c94:	48 89 d8             	mov    %rbx,%rax
  418c97:	48 83 c4 08          	add    $0x8,%rsp
  418c9b:	5b                   	pop    %rbx
  418c9c:	5d                   	pop    %rbp
  418c9d:	c3                   	retq   
  418c9e:	66 90                	xchg   %ax,%ax

0000000000418ca0 <caml_init_custom_operations>:
  418ca0:	48 83 ec 08          	sub    $0x8,%rsp
  418ca4:	bf 10 00 00 00       	mov    $0x10,%edi
  418ca9:	e8 22 0b ff ff       	callq  4097d0 <caml_stat_alloc>
  418cae:	48 8b 15 93 45 22 00 	mov    0x224593(%rip),%rdx        # 63d248 <custom_ops_table>
  418cb5:	bf 10 00 00 00       	mov    $0x10,%edi
  418cba:	48 c7 00 20 c7 62 00 	movq   $0x62c720,(%rax)
  418cc1:	48 89 05 80 45 22 00 	mov    %rax,0x224580(%rip)        # 63d248 <custom_ops_table>
  418cc8:	48 89 50 08          	mov    %rdx,0x8(%rax)
  418ccc:	e8 ff 0a ff ff       	callq  4097d0 <caml_stat_alloc>
  418cd1:	48 8b 15 70 45 22 00 	mov    0x224570(%rip),%rdx        # 63d248 <custom_ops_table>
  418cd8:	48 c7 00 a0 c6 62 00 	movq   $0x62c6a0,(%rax)
  418cdf:	bf 10 00 00 00       	mov    $0x10,%edi
  418ce4:	48 89 05 5d 45 22 00 	mov    %rax,0x22455d(%rip)        # 63d248 <custom_ops_table>
  418ceb:	48 89 50 08          	mov    %rdx,0x8(%rax)
  418cef:	e8 dc 0a ff ff       	callq  4097d0 <caml_stat_alloc>
  418cf4:	48 8b 15 4d 45 22 00 	mov    0x22454d(%rip),%rdx        # 63d248 <custom_ops_table>
  418cfb:	48 c7 00 e0 c6 62 00 	movq   $0x62c6e0,(%rax)
  418d02:	48 89 05 3f 45 22 00 	mov    %rax,0x22453f(%rip)        # 63d248 <custom_ops_table>
  418d09:	48 89 50 08          	mov    %rdx,0x8(%rax)
  418d0d:	48 83 c4 08          	add    $0x8,%rsp
  418d11:	c3                   	retq   
  418d12:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  418d19:	00 00 00 
  418d1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000418d20 <caml_read_fd>:
  418d20:	41 56                	push   %r14
  418d22:	41 55                	push   %r13
  418d24:	41 89 fd             	mov    %edi,%r13d
  418d27:	41 54                	push   %r12
  418d29:	49 89 d4             	mov    %rdx,%r12
  418d2c:	55                   	push   %rbp
  418d2d:	48 63 e9             	movslq %ecx,%rbp
  418d30:	53                   	push   %rbx
  418d31:	eb 0f                	jmp    418d42 <caml_read_fd+0x22>
  418d33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  418d38:	e8 33 8c fe ff       	callq  401970 <__errno_location@plt>
  418d3d:	83 38 04             	cmpl   $0x4,(%rax)
  418d40:	75 36                	jne    418d78 <caml_read_fd+0x58>
  418d42:	e8 b9 1c 00 00       	callq  41aa00 <caml_enter_blocking_section>
  418d47:	48 89 ea             	mov    %rbp,%rdx
  418d4a:	4c 89 e6             	mov    %r12,%rsi
  418d4d:	44 89 ef             	mov    %r13d,%edi
  418d50:	e8 1b 8e fe ff       	callq  401b70 <read@plt>
  418d55:	48 89 c3             	mov    %rax,%rbx
  418d58:	41 89 c6             	mov    %eax,%r14d
  418d5b:	e8 f0 1c 00 00       	callq  41aa50 <caml_leave_blocking_section>
  418d60:	83 fb ff             	cmp    $0xffffffff,%ebx
  418d63:	74 d3                	je     418d38 <caml_read_fd+0x18>
  418d65:	5b                   	pop    %rbx
  418d66:	44 89 f0             	mov    %r14d,%eax
  418d69:	5d                   	pop    %rbp
  418d6a:	41 5c                	pop    %r12
  418d6c:	41 5d                	pop    %r13
  418d6e:	41 5e                	pop    %r14
  418d70:	c3                   	retq   
  418d71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  418d78:	bf 01 00 00 00       	mov    $0x1,%edi
  418d7d:	e8 4e 8e ff ff       	callq  411bd0 <caml_sys_io_error>
  418d82:	5b                   	pop    %rbx
  418d83:	44 89 f0             	mov    %r14d,%eax
  418d86:	5d                   	pop    %rbp
  418d87:	41 5c                	pop    %r12
  418d89:	41 5d                	pop    %r13
  418d8b:	41 5e                	pop    %r14
  418d8d:	c3                   	retq   
  418d8e:	66 90                	xchg   %ax,%ax

0000000000418d90 <caml_write_fd>:
  418d90:	41 57                	push   %r15
  418d92:	41 56                	push   %r14
  418d94:	41 89 ff             	mov    %edi,%r15d
  418d97:	41 55                	push   %r13
  418d99:	41 54                	push   %r12
  418d9b:	49 89 d6             	mov    %rdx,%r14
  418d9e:	55                   	push   %rbp
  418d9f:	53                   	push   %rbx
  418da0:	48 63 e9             	movslq %ecx,%rbp
  418da3:	49 89 ec             	mov    %rbp,%r12
  418da6:	48 83 ec 08          	sub    $0x8,%rsp
  418daa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  418db0:	e8 4b 1c 00 00       	callq  41aa00 <caml_enter_blocking_section>
  418db5:	48 89 ea             	mov    %rbp,%rdx
  418db8:	4c 89 f6             	mov    %r14,%rsi
  418dbb:	44 89 ff             	mov    %r15d,%edi
  418dbe:	e8 3d 8c fe ff       	callq  401a00 <write@plt>
  418dc3:	48 89 c3             	mov    %rax,%rbx
  418dc6:	41 89 c5             	mov    %eax,%r13d
  418dc9:	e8 82 1c 00 00       	callq  41aa50 <caml_leave_blocking_section>
  418dce:	83 fb ff             	cmp    $0xffffffff,%ebx
  418dd1:	75 37                	jne    418e0a <caml_write_fd+0x7a>
  418dd3:	e8 98 8b fe ff       	callq  401970 <__errno_location@plt>
  418dd8:	8b 00                	mov    (%rax),%eax
  418dda:	83 f8 04             	cmp    $0x4,%eax
  418ddd:	74 d1                	je     418db0 <caml_write_fd+0x20>
  418ddf:	83 f8 0b             	cmp    $0xb,%eax
  418de2:	75 1c                	jne    418e00 <caml_write_fd+0x70>
  418de4:	41 83 fc 01          	cmp    $0x1,%r12d
  418de8:	7e 16                	jle    418e00 <caml_write_fd+0x70>
  418dea:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  418df0:	bd 01 00 00 00       	mov    $0x1,%ebp
  418df5:	eb b9                	jmp    418db0 <caml_write_fd+0x20>
  418df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  418dfe:	00 00 
  418e00:	bf 01 00 00 00       	mov    $0x1,%edi
  418e05:	e8 c6 8d ff ff       	callq  411bd0 <caml_sys_io_error>
  418e0a:	48 83 c4 08          	add    $0x8,%rsp
  418e0e:	44 89 e8             	mov    %r13d,%eax
  418e11:	5b                   	pop    %rbx
  418e12:	5d                   	pop    %rbp
  418e13:	41 5c                	pop    %r12
  418e15:	41 5d                	pop    %r13
  418e17:	41 5e                	pop    %r14
  418e19:	41 5f                	pop    %r15
  418e1b:	c3                   	retq   
  418e1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000418e20 <caml_decompose_path>:
  418e20:	48 85 f6             	test   %rsi,%rsi
  418e23:	74 79                	je     418e9e <caml_decompose_path+0x7e>
  418e25:	41 54                	push   %r12
  418e27:	55                   	push   %rbp
  418e28:	48 89 fd             	mov    %rdi,%rbp
  418e2b:	53                   	push   %rbx
  418e2c:	48 89 f7             	mov    %rsi,%rdi
  418e2f:	e8 1c 31 00 00       	callq  41bf50 <caml_strdup>
  418e34:	48 89 c6             	mov    %rax,%rsi
  418e37:	49 89 c4             	mov    %rax,%r12
  418e3a:	0f b6 06             	movzbl (%rsi),%eax
  418e3d:	84 c0                	test   %al,%al
  418e3f:	74 45                	je     418e86 <caml_decompose_path+0x66>
  418e41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  418e48:	3c 3a                	cmp    $0x3a,%al
  418e4a:	74 3a                	je     418e86 <caml_decompose_path+0x66>
  418e4c:	48 8d 56 01          	lea    0x1(%rsi),%rdx
  418e50:	eb 0b                	jmp    418e5d <caml_decompose_path+0x3d>
  418e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  418e58:	80 f9 3a             	cmp    $0x3a,%cl
  418e5b:	74 0e                	je     418e6b <caml_decompose_path+0x4b>
  418e5d:	0f b6 0a             	movzbl (%rdx),%ecx
  418e60:	48 89 d3             	mov    %rdx,%rbx
  418e63:	48 83 c2 01          	add    $0x1,%rdx
  418e67:	84 c9                	test   %cl,%cl
  418e69:	75 ed                	jne    418e58 <caml_decompose_path+0x38>
  418e6b:	48 89 ef             	mov    %rbp,%rdi
  418e6e:	e8 9d 2f 00 00       	callq  41be10 <caml_ext_table_add>
  418e73:	80 3b 00             	cmpb   $0x0,(%rbx)
  418e76:	74 1e                	je     418e96 <caml_decompose_path+0x76>
  418e78:	48 8d 73 01          	lea    0x1(%rbx),%rsi
  418e7c:	c6 03 00             	movb   $0x0,(%rbx)
  418e7f:	0f b6 06             	movzbl (%rsi),%eax
  418e82:	84 c0                	test   %al,%al
  418e84:	75 c2                	jne    418e48 <caml_decompose_path+0x28>
  418e86:	48 89 f3             	mov    %rsi,%rbx
  418e89:	48 89 ef             	mov    %rbp,%rdi
  418e8c:	e8 7f 2f 00 00       	callq  41be10 <caml_ext_table_add>
  418e91:	80 3b 00             	cmpb   $0x0,(%rbx)
  418e94:	75 e2                	jne    418e78 <caml_decompose_path+0x58>
  418e96:	4c 89 e0             	mov    %r12,%rax
  418e99:	5b                   	pop    %rbx
  418e9a:	5d                   	pop    %rbp
  418e9b:	41 5c                	pop    %r12
  418e9d:	c3                   	retq   
  418e9e:	31 c0                	xor    %eax,%eax
  418ea0:	c3                   	retq   
  418ea1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  418ea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  418ead:	00 00 00 

0000000000418eb0 <caml_search_in_path>:
  418eb0:	41 56                	push   %r14
  418eb2:	41 55                	push   %r13
  418eb4:	41 54                	push   %r12
  418eb6:	55                   	push   %rbp
  418eb7:	48 89 f5             	mov    %rsi,%rbp
  418eba:	53                   	push   %rbx
  418ebb:	48 89 fb             	mov    %rdi,%rbx
  418ebe:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  418ec5:	0f b6 16             	movzbl (%rsi),%edx
  418ec8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  418ecf:	00 00 
  418ed1:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
  418ed8:	00 
  418ed9:	31 c0                	xor    %eax,%eax
  418edb:	84 d2                	test   %dl,%dl
  418edd:	74 51                	je     418f30 <caml_search_in_path+0x80>
  418edf:	48 89 f0             	mov    %rsi,%rax
  418ee2:	eb 0f                	jmp    418ef3 <caml_search_in_path+0x43>
  418ee4:	0f 1f 40 00          	nopl   0x0(%rax)
  418ee8:	48 83 c0 01          	add    $0x1,%rax
  418eec:	0f b6 10             	movzbl (%rax),%edx
  418eef:	84 d2                	test   %dl,%dl
  418ef1:	74 3d                	je     418f30 <caml_search_in_path+0x80>
  418ef3:	80 fa 2f             	cmp    $0x2f,%dl
  418ef6:	75 f0                	jne    418ee8 <caml_search_in_path+0x38>
  418ef8:	48 89 ef             	mov    %rbp,%rdi
  418efb:	e8 50 30 00 00       	callq  41bf50 <caml_strdup>
  418f00:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
  418f07:	00 
  418f08:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  418f0f:	00 00 
  418f11:	0f 85 99 00 00 00    	jne    418fb0 <caml_search_in_path+0x100>
  418f17:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
  418f1e:	5b                   	pop    %rbx
  418f1f:	5d                   	pop    %rbp
  418f20:	41 5c                	pop    %r12
  418f22:	41 5d                	pop    %r13
  418f24:	41 5e                	pop    %r14
  418f26:	c3                   	retq   
  418f27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  418f2e:	00 00 
  418f30:	8b 03                	mov    (%rbx),%eax
  418f32:	85 c0                	test   %eax,%eax
  418f34:	7e c2                	jle    418ef8 <caml_search_in_path+0x48>
  418f36:	45 31 e4             	xor    %r12d,%r12d
  418f39:	41 bd c5 ed 41 00    	mov    $0x41edc5,%r13d
  418f3f:	90                   	nop
  418f40:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  418f44:	49 63 c4             	movslq %r12d,%rax
  418f47:	48 89 e9             	mov    %rbp,%rcx
  418f4a:	bf 03 00 00 00       	mov    $0x3,%edi
  418f4f:	48 8b 34 c2          	mov    (%rdx,%rax,8),%rsi
  418f53:	ba c7 ed 41 00       	mov    $0x41edc7,%edx
  418f58:	80 3e 00             	cmpb   $0x0,(%rsi)
  418f5b:	49 0f 44 f5          	cmove  %r13,%rsi
  418f5f:	31 c0                	xor    %eax,%eax
  418f61:	e8 1a 30 00 00       	callq  41bf80 <caml_strconcat>
  418f66:	48 89 e2             	mov    %rsp,%rdx
  418f69:	48 89 c6             	mov    %rax,%rsi
  418f6c:	bf 01 00 00 00       	mov    $0x1,%edi
  418f71:	49 89 c6             	mov    %rax,%r14
  418f74:	e8 b7 8a fe ff       	callq  401a30 <__xstat64@plt>
  418f79:	85 c0                	test   %eax,%eax
  418f7b:	75 10                	jne    418f8d <caml_search_in_path+0xdd>
  418f7d:	8b 44 24 18          	mov    0x18(%rsp),%eax
  418f81:	25 00 f0 00 00       	and    $0xf000,%eax
  418f86:	3d 00 80 00 00       	cmp    $0x8000,%eax
  418f8b:	74 1b                	je     418fa8 <caml_search_in_path+0xf8>
  418f8d:	4c 89 f7             	mov    %r14,%rdi
  418f90:	41 83 c4 01          	add    $0x1,%r12d
  418f94:	e8 57 08 ff ff       	callq  4097f0 <caml_stat_free>
  418f99:	44 39 23             	cmp    %r12d,(%rbx)
  418f9c:	7f a2                	jg     418f40 <caml_search_in_path+0x90>
  418f9e:	e9 55 ff ff ff       	jmpq   418ef8 <caml_search_in_path+0x48>
  418fa3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  418fa8:	4c 89 f0             	mov    %r14,%rax
  418fab:	e9 50 ff ff ff       	jmpq   418f00 <caml_search_in_path+0x50>
  418fb0:	e8 bb 8a fe ff       	callq  401a70 <__stack_chk_fail@plt>
  418fb5:	90                   	nop
  418fb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  418fbd:	00 00 00 

0000000000418fc0 <caml_search_exe_in_path>:
  418fc0:	55                   	push   %rbp
  418fc1:	53                   	push   %rbx
  418fc2:	be 08 00 00 00       	mov    $0x8,%esi
  418fc7:	48 89 fb             	mov    %rdi,%rbx
  418fca:	48 83 ec 28          	sub    $0x28,%rsp
  418fce:	48 89 e7             	mov    %rsp,%rdi
  418fd1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  418fd8:	00 00 
  418fda:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  418fdf:	31 c0                	xor    %eax,%eax
  418fe1:	e8 fa 2d 00 00       	callq  41bde0 <caml_ext_table_init>
  418fe6:	bf c9 ed 41 00       	mov    $0x41edc9,%edi
  418feb:	e8 40 89 fe ff       	callq  401930 <getenv@plt>
  418ff0:	48 89 e7             	mov    %rsp,%rdi
  418ff3:	48 89 c6             	mov    %rax,%rsi
  418ff6:	e8 25 fe ff ff       	callq  418e20 <caml_decompose_path>
  418ffb:	48 89 de             	mov    %rbx,%rsi
  418ffe:	48 89 c5             	mov    %rax,%rbp
  419001:	48 89 e7             	mov    %rsp,%rdi
  419004:	e8 a7 fe ff ff       	callq  418eb0 <caml_search_in_path>
  419009:	48 89 ef             	mov    %rbp,%rdi
  41900c:	48 89 c3             	mov    %rax,%rbx
  41900f:	e8 dc 07 ff ff       	callq  4097f0 <caml_stat_free>
  419014:	31 f6                	xor    %esi,%esi
  419016:	48 89 e7             	mov    %rsp,%rdi
  419019:	e8 12 2f 00 00       	callq  41bf30 <caml_ext_table_free>
  41901e:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  419023:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  41902a:	00 00 
  41902c:	75 0a                	jne    419038 <caml_search_exe_in_path+0x78>
  41902e:	48 83 c4 28          	add    $0x28,%rsp
  419032:	48 89 d8             	mov    %rbx,%rax
  419035:	5b                   	pop    %rbx
  419036:	5d                   	pop    %rbp
  419037:	c3                   	retq   
  419038:	e8 33 8a fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41903d:	0f 1f 00             	nopl   (%rax)

0000000000419040 <caml_search_dll_in_path>:
  419040:	55                   	push   %rbp
  419041:	53                   	push   %rbx
  419042:	48 89 fd             	mov    %rdi,%rbp
  419045:	ba ce ed 41 00       	mov    $0x41edce,%edx
  41904a:	bf 02 00 00 00       	mov    $0x2,%edi
  41904f:	31 c0                	xor    %eax,%eax
  419051:	48 83 ec 08          	sub    $0x8,%rsp
  419055:	e8 26 2f 00 00       	callq  41bf80 <caml_strconcat>
  41905a:	48 89 ef             	mov    %rbp,%rdi
  41905d:	48 89 c3             	mov    %rax,%rbx
  419060:	48 89 c6             	mov    %rax,%rsi
  419063:	e8 48 fe ff ff       	callq  418eb0 <caml_search_in_path>
  419068:	48 89 df             	mov    %rbx,%rdi
  41906b:	48 89 c5             	mov    %rax,%rbp
  41906e:	e8 7d 07 ff ff       	callq  4097f0 <caml_stat_free>
  419073:	48 83 c4 08          	add    $0x8,%rsp
  419077:	48 89 e8             	mov    %rbp,%rax
  41907a:	5b                   	pop    %rbx
  41907b:	5d                   	pop    %rbp
  41907c:	c3                   	retq   
  41907d:	0f 1f 00             	nopl   (%rax)

0000000000419080 <caml_dlopen>:
  419080:	83 fa 01             	cmp    $0x1,%edx
  419083:	19 f6                	sbb    %esi,%esi
  419085:	40 80 e6 00          	and    $0x0,%sil
  419089:	81 c6 02 11 00 00    	add    $0x1102,%esi
  41908f:	e9 cc 8b fe ff       	jmpq   401c60 <dlopen@plt>
  419094:	66 90                	xchg   %ax,%ax
  419096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41909d:	00 00 00 

00000000004190a0 <caml_dlclose>:
  4190a0:	e9 4b 8c fe ff       	jmpq   401cf0 <dlclose@plt>
  4190a5:	90                   	nop
  4190a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4190ad:	00 00 00 

00000000004190b0 <caml_dlsym>:
  4190b0:	e9 9b 8d fe ff       	jmpq   401e50 <dlsym@plt>
  4190b5:	90                   	nop
  4190b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4190bd:	00 00 00 

00000000004190c0 <caml_globalsym>:
  4190c0:	48 89 fe             	mov    %rdi,%rsi
  4190c3:	31 ff                	xor    %edi,%edi
  4190c5:	e9 86 8d fe ff       	jmpq   401e50 <dlsym@plt>
  4190ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004190d0 <caml_dlerror>:
  4190d0:	e9 bb 8d fe ff       	jmpq   401e90 <dlerror@plt>
  4190d5:	90                   	nop
  4190d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4190dd:	00 00 00 

00000000004190e0 <caml_read_directory>:
  4190e0:	55                   	push   %rbp
  4190e1:	53                   	push   %rbx
  4190e2:	48 89 f5             	mov    %rsi,%rbp
  4190e5:	48 83 ec 08          	sub    $0x8,%rsp
  4190e9:	e8 52 89 fe ff       	callq  401a40 <opendir@plt>
  4190ee:	48 85 c0             	test   %rax,%rax
  4190f1:	48 89 c3             	mov    %rax,%rbx
  4190f4:	74 72                	je     419168 <caml_read_directory+0x88>
  4190f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4190fd:	00 00 00 
  419100:	48 89 df             	mov    %rbx,%rdi
  419103:	e8 38 8c fe ff       	callq  401d40 <readdir64@plt>
  419108:	48 85 c0             	test   %rax,%rax
  41910b:	74 2b                	je     419138 <caml_read_directory+0x58>
  41910d:	80 78 13 2e          	cmpb   $0x2e,0x13(%rax)
  419111:	74 3d                	je     419150 <caml_read_directory+0x70>
  419113:	48 8d 78 13          	lea    0x13(%rax),%rdi
  419117:	e8 34 2e 00 00       	callq  41bf50 <caml_strdup>
  41911c:	48 89 ef             	mov    %rbp,%rdi
  41911f:	48 89 c6             	mov    %rax,%rsi
  419122:	e8 e9 2c 00 00       	callq  41be10 <caml_ext_table_add>
  419127:	48 89 df             	mov    %rbx,%rdi
  41912a:	e8 11 8c fe ff       	callq  401d40 <readdir64@plt>
  41912f:	48 85 c0             	test   %rax,%rax
  419132:	75 d9                	jne    41910d <caml_read_directory+0x2d>
  419134:	0f 1f 40 00          	nopl   0x0(%rax)
  419138:	48 89 df             	mov    %rbx,%rdi
  41913b:	e8 f0 89 fe ff       	callq  401b30 <closedir@plt>
  419140:	31 c0                	xor    %eax,%eax
  419142:	48 83 c4 08          	add    $0x8,%rsp
  419146:	5b                   	pop    %rbx
  419147:	5d                   	pop    %rbp
  419148:	c3                   	retq   
  419149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  419150:	0f b6 50 14          	movzbl 0x14(%rax),%edx
  419154:	84 d2                	test   %dl,%dl
  419156:	74 a8                	je     419100 <caml_read_directory+0x20>
  419158:	80 fa 2e             	cmp    $0x2e,%dl
  41915b:	75 b6                	jne    419113 <caml_read_directory+0x33>
  41915d:	80 78 15 00          	cmpb   $0x0,0x15(%rax)
  419161:	74 9d                	je     419100 <caml_read_directory+0x20>
  419163:	eb ae                	jmp    419113 <caml_read_directory+0x33>
  419165:	0f 1f 00             	nopl   (%rax)
  419168:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41916d:	eb d3                	jmp    419142 <caml_read_directory+0x62>
  41916f:	90                   	nop

0000000000419170 <caml_executable_name>:
  419170:	55                   	push   %rbp
  419171:	53                   	push   %rbx
  419172:	48 63 d6             	movslq %esi,%rdx
  419175:	48 89 fb             	mov    %rdi,%rbx
  419178:	48 89 fe             	mov    %rdi,%rsi
  41917b:	bf d2 ed 41 00       	mov    $0x41edd2,%edi
  419180:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  419187:	48 89 d5             	mov    %rdx,%rbp
  41918a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  419191:	00 00 
  419193:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
  41919a:	00 
  41919b:	31 c0                	xor    %eax,%eax
  41919d:	e8 3e 88 fe ff       	callq  4019e0 <readlink@plt>
  4191a2:	83 f8 ff             	cmp    $0xffffffff,%eax
  4191a5:	74 59                	je     419200 <caml_executable_name+0x90>
  4191a7:	39 c5                	cmp    %eax,%ebp
  4191a9:	7e 55                	jle    419200 <caml_executable_name+0x90>
  4191ab:	48 98                	cltq   
  4191ad:	48 89 e2             	mov    %rsp,%rdx
  4191b0:	48 89 de             	mov    %rbx,%rsi
  4191b3:	c6 04 03 00          	movb   $0x0,(%rbx,%rax,1)
  4191b7:	bf 01 00 00 00       	mov    $0x1,%edi
  4191bc:	e8 6f 88 fe ff       	callq  401a30 <__xstat64@plt>
  4191c1:	85 c0                	test   %eax,%eax
  4191c3:	75 3b                	jne    419200 <caml_executable_name+0x90>
  4191c5:	8b 44 24 18          	mov    0x18(%rsp),%eax
  4191c9:	25 00 f0 00 00       	and    $0xf000,%eax
  4191ce:	3d 00 80 00 00       	cmp    $0x8000,%eax
  4191d3:	0f 95 c0             	setne  %al
  4191d6:	0f b6 c0             	movzbl %al,%eax
  4191d9:	f7 d8                	neg    %eax
  4191db:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
  4191e2:	00 
  4191e3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4191ea:	00 00 
  4191ec:	75 19                	jne    419207 <caml_executable_name+0x97>
  4191ee:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  4191f5:	5b                   	pop    %rbx
  4191f6:	5d                   	pop    %rbp
  4191f7:	c3                   	retq   
  4191f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4191ff:	00 
  419200:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  419205:	eb d4                	jmp    4191db <caml_executable_name+0x6b>
  419207:	e8 64 88 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41920c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000419210 <caml_convert_debuginfo>:
  419210:	53                   	push   %rbx
  419211:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  419215:	48 8b 1d 2c 37 21 00 	mov    0x21372c(%rip),%rbx        # 62c948 <caml_local_roots>
  41921c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  419223:	00 00 
  419225:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  41922a:	31 c0                	xor    %eax,%eax
  41922c:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  419231:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  419236:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
  41923d:	00 
  41923e:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
  419245:	00 00 
  419247:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
  41924c:	48 89 05 f5 36 21 00 	mov    %rax,0x2136f5(%rip)        # 62c948 <caml_local_roots>
  419253:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  419258:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  41925f:	00 00 
  419261:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
  419268:	00 00 
  41926a:	48 89 64 24 48       	mov    %rsp,0x48(%rsp)
  41926f:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
  419274:	e8 67 44 00 00       	callq  41d6e0 <caml_debuginfo_location>
  419279:	8b 44 24 10          	mov    0x10(%rsp),%eax
  41927d:	85 c0                	test   %eax,%eax
  41927f:	0f 84 b3 00 00 00    	je     419338 <caml_convert_debuginfo+0x128>
  419285:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41928a:	e8 01 32 00 00       	callq  41c490 <caml_copy_string>
  41928f:	31 f6                	xor    %esi,%esi
  419291:	bf 06 00 00 00       	mov    $0x6,%edi
  419296:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41929b:	e8 e0 2f 00 00       	callq  41c280 <caml_alloc_small>
  4192a0:	83 7c 24 14 01       	cmpl   $0x1,0x14(%rsp)
  4192a5:	48 89 04 24          	mov    %rax,(%rsp)
  4192a9:	48 19 d2             	sbb    %rdx,%rdx
  4192ac:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
  4192b0:	48 83 c2 03          	add    $0x3,%rdx
  4192b4:	48 89 10             	mov    %rdx,(%rax)
  4192b7:	48 8b 04 24          	mov    (%rsp),%rax
  4192bb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  4192c0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4192c4:	48 63 44 24 20       	movslq 0x20(%rsp),%rax
  4192c9:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
  4192ce:	48 8b 04 24          	mov    (%rsp),%rax
  4192d2:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4192d6:	48 63 44 24 24       	movslq 0x24(%rsp),%rax
  4192db:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
  4192e0:	48 8b 04 24          	mov    (%rsp),%rax
  4192e4:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4192e8:	48 63 44 24 28       	movslq 0x28(%rsp),%rax
  4192ed:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
  4192f2:	48 8b 04 24          	mov    (%rsp),%rax
  4192f6:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4192fa:	83 7c 24 2c 01       	cmpl   $0x1,0x2c(%rsp)
  4192ff:	48 8b 14 24          	mov    (%rsp),%rdx
  419303:	48 19 c0             	sbb    %rax,%rax
  419306:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  41930a:	48 83 c0 03          	add    $0x3,%rax
  41930e:	48 89 42 28          	mov    %rax,0x28(%rdx)
  419312:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
  419317:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41931e:	00 00 
  419320:	48 89 1d 21 36 21 00 	mov    %rbx,0x213621(%rip)        # 62c948 <caml_local_roots>
  419327:	48 8b 04 24          	mov    (%rsp),%rax
  41932b:	75 33                	jne    419360 <caml_convert_debuginfo+0x150>
  41932d:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
  419331:	5b                   	pop    %rbx
  419332:	c3                   	retq   
  419333:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  419338:	be 01 00 00 00       	mov    $0x1,%esi
  41933d:	bf 01 00 00 00       	mov    $0x1,%edi
  419342:	e8 39 2f 00 00       	callq  41c280 <caml_alloc_small>
  419347:	83 7c 24 14 01       	cmpl   $0x1,0x14(%rsp)
  41934c:	48 89 04 24          	mov    %rax,(%rsp)
  419350:	48 19 d2             	sbb    %rdx,%rdx
  419353:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
  419357:	48 83 c2 03          	add    $0x3,%rdx
  41935b:	48 89 10             	mov    %rdx,(%rax)
  41935e:	eb b2                	jmp    419312 <caml_convert_debuginfo+0x102>
  419360:	e8 0b 87 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  419365:	90                   	nop
  419366:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41936d:	00 00 00 

0000000000419370 <caml_init_backtrace>:
  419370:	bf 18 c8 62 00       	mov    $0x62c818,%edi
  419375:	e9 36 cf fe ff       	jmpq   4062b0 <caml_register_global_root>
  41937a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000419380 <caml_record_backtrace>:
  419380:	48 d1 ff             	sar    %rdi
  419383:	3b 3d d3 3e 22 00    	cmp    0x223ed3(%rip),%edi        # 63d25c <caml_backtrace_active>
  419389:	74 1b                	je     4193a6 <caml_record_backtrace+0x26>
  41938b:	89 3d cb 3e 22 00    	mov    %edi,0x223ecb(%rip)        # 63d25c <caml_backtrace_active>
  419391:	c7 05 bd 3e 22 00 00 	movl   $0x0,0x223ebd(%rip)        # 63d258 <caml_backtrace_pos>
  419398:	00 00 00 
  41939b:	48 c7 05 72 34 21 00 	movq   $0x1,0x213472(%rip)        # 62c818 <caml_backtrace_last_exn>
  4193a2:	01 00 00 00 
  4193a6:	b8 01 00 00 00       	mov    $0x1,%eax
  4193ab:	c3                   	retq   
  4193ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004193b0 <caml_backtrace_status>:
  4193b0:	83 3d a5 3e 22 00 01 	cmpl   $0x1,0x223ea5(%rip)        # 63d25c <caml_backtrace_active>
  4193b7:	48 19 c0             	sbb    %rax,%rax
  4193ba:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  4193be:	48 83 c0 03          	add    $0x3,%rax
  4193c2:	c3                   	retq   
  4193c3:	0f 1f 00             	nopl   (%rax)
  4193c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4193cd:	00 00 00 

00000000004193d0 <caml_print_exception_backtrace>:
  4193d0:	41 54                	push   %r12
  4193d2:	55                   	push   %rbp
  4193d3:	53                   	push   %rbx
  4193d4:	48 83 ec 30          	sub    $0x30,%rsp
  4193d8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4193df:	00 00 
  4193e1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4193e6:	31 c0                	xor    %eax,%eax
  4193e8:	e8 93 43 00 00       	callq  41d780 <caml_debug_info_available>
  4193ed:	85 c0                	test   %eax,%eax
  4193ef:	0f 84 3d 01 00 00    	je     419532 <caml_print_exception_backtrace+0x162>
  4193f5:	8b 3d 5d 3e 22 00    	mov    0x223e5d(%rip),%edi        # 63d258 <caml_backtrace_pos>
  4193fb:	31 ed                	xor    %ebp,%ebp
  4193fd:	85 ff                	test   %edi,%edi
  4193ff:	0f 8e 14 01 00 00    	jle    419519 <caml_print_exception_backtrace+0x149>
  419405:	0f 1f 00             	nopl   (%rax)
  419408:	48 8b 15 41 3e 22 00 	mov    0x223e41(%rip),%rdx        # 63d250 <caml_backtrace_buffer>
  41940f:	48 63 c5             	movslq %ebp,%rax
  419412:	41 bc ec ee 41 00    	mov    $0x41eeec,%r12d
  419418:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
  41941c:	e8 6f 42 00 00       	callq  41d690 <caml_debuginfo_extract>
  419421:	48 85 c0             	test   %rax,%rax
  419424:	48 89 c3             	mov    %rax,%rbx
  419427:	75 63                	jne    41948c <caml_print_exception_backtrace+0xbc>
  419429:	e9 dc 00 00 00       	jmpq   41950a <caml_print_exception_backtrace+0x13a>
  41942e:	66 90                	xchg   %ax,%ax
  419430:	8b 74 24 04          	mov    0x4(%rsp),%esi
  419434:	85 f6                	test   %esi,%esi
  419436:	75 44                	jne    41947c <caml_print_exception_backtrace+0xac>
  419438:	85 ed                	test   %ebp,%ebp
  41943a:	b8 d5 ee 41 00       	mov    $0x41eed5,%eax
  41943f:	b9 e8 ed 41 00       	mov    $0x41ede8,%ecx
  419444:	48 0f 45 c8          	cmovne %rax,%rcx
  419448:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
  41944c:	41 b9 5a eb 41 00    	mov    $0x41eb5a,%r9d
  419452:	85 c0                	test   %eax,%eax
  419454:	b8 e1 ee 41 00       	mov    $0x41eee1,%eax
  419459:	4c 0f 45 c8          	cmovne %rax,%r9
  41945d:	85 d2                	test   %edx,%edx
  41945f:	75 65                	jne    4194c6 <caml_print_exception_backtrace+0xf6>
  419461:	48 8b 3d 98 34 21 00 	mov    0x213498(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  419468:	4d 89 c8             	mov    %r9,%r8
  41946b:	ba 03 ef 41 00       	mov    $0x41ef03,%edx
  419470:	be 01 00 00 00       	mov    $0x1,%esi
  419475:	31 c0                	xor    %eax,%eax
  419477:	e8 84 89 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41947c:	48 89 df             	mov    %rbx,%rdi
  41947f:	e8 3c 42 00 00       	callq  41d6c0 <caml_debuginfo_next>
  419484:	48 85 c0             	test   %rax,%rax
  419487:	48 89 c3             	mov    %rax,%rbx
  41948a:	74 7e                	je     41950a <caml_print_exception_backtrace+0x13a>
  41948c:	48 89 e6             	mov    %rsp,%rsi
  41948f:	48 89 df             	mov    %rbx,%rdi
  419492:	e8 49 42 00 00       	callq  41d6e0 <caml_debuginfo_location>
  419497:	8b 14 24             	mov    (%rsp),%edx
  41949a:	85 d2                	test   %edx,%edx
  41949c:	74 92                	je     419430 <caml_print_exception_backtrace+0x60>
  41949e:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
  4194a2:	85 c9                	test   %ecx,%ecx
  4194a4:	74 92                	je     419438 <caml_print_exception_backtrace+0x68>
  4194a6:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
  4194aa:	85 ed                	test   %ebp,%ebp
  4194ac:	b9 f9 ee 41 00       	mov    $0x41eef9,%ecx
  4194b1:	49 0f 45 cc          	cmovne %r12,%rcx
  4194b5:	41 b9 e1 ee 41 00    	mov    $0x41eee1,%r9d
  4194bb:	b8 5a eb 41 00       	mov    $0x41eb5a,%eax
  4194c0:	85 d2                	test   %edx,%edx
  4194c2:	4c 0f 44 c8          	cmove  %rax,%r9
  4194c6:	48 83 ec 08          	sub    $0x8,%rsp
  4194ca:	48 8b 3d 2f 34 21 00 	mov    0x21342f(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  4194d1:	ba 50 ee 41 00       	mov    $0x41ee50,%edx
  4194d6:	8b 44 24 20          	mov    0x20(%rsp),%eax
  4194da:	be 01 00 00 00       	mov    $0x1,%esi
  4194df:	50                   	push   %rax
  4194e0:	8b 44 24 24          	mov    0x24(%rsp),%eax
  4194e4:	50                   	push   %rax
  4194e5:	8b 44 24 28          	mov    0x28(%rsp),%eax
  4194e9:	50                   	push   %rax
  4194ea:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  4194ef:	31 c0                	xor    %eax,%eax
  4194f1:	e8 0a 89 fe ff       	callq  401e00 <__fprintf_chk@plt>
  4194f6:	48 83 c4 20          	add    $0x20,%rsp
  4194fa:	48 89 df             	mov    %rbx,%rdi
  4194fd:	e8 be 41 00 00       	callq  41d6c0 <caml_debuginfo_next>
  419502:	48 85 c0             	test   %rax,%rax
  419505:	48 89 c3             	mov    %rax,%rbx
  419508:	75 82                	jne    41948c <caml_print_exception_backtrace+0xbc>
  41950a:	83 c5 01             	add    $0x1,%ebp
  41950d:	39 2d 45 3d 22 00    	cmp    %ebp,0x223d45(%rip)        # 63d258 <caml_backtrace_pos>
  419513:	0f 8f ef fe ff ff    	jg     419408 <caml_print_exception_backtrace+0x38>
  419519:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  41951e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  419525:	00 00 
  419527:	75 26                	jne    41954f <caml_print_exception_backtrace+0x17f>
  419529:	48 83 c4 30          	add    $0x30,%rsp
  41952d:	5b                   	pop    %rbx
  41952e:	5d                   	pop    %rbp
  41952f:	41 5c                	pop    %r12
  419531:	c3                   	retq   
  419532:	48 8b 0d c7 33 21 00 	mov    0x2133c7(%rip),%rcx        # 62c900 <stderr@@GLIBC_2.2.5>
  419539:	ba 3f 00 00 00       	mov    $0x3f,%edx
  41953e:	be 01 00 00 00       	mov    $0x1,%esi
  419543:	bf 10 ee 41 00       	mov    $0x41ee10,%edi
  419548:	e8 93 88 fe ff       	callq  401de0 <fwrite@plt>
  41954d:	eb ca                	jmp    419519 <caml_print_exception_backtrace+0x149>
  41954f:	e8 1c 85 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  419554:	66 90                	xchg   %ax,%ax
  419556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41955d:	00 00 00 

0000000000419560 <caml_get_exception_raw_backtrace>:
  419560:	41 55                	push   %r13
  419562:	41 54                	push   %r12
  419564:	55                   	push   %rbp
  419565:	53                   	push   %rbx
  419566:	48 81 ec 78 20 00 00 	sub    $0x2078,%rsp
  41956d:	4c 8b 25 d4 33 21 00 	mov    0x2133d4(%rip),%r12        # 62c948 <caml_local_roots>
  419574:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41957b:	00 00 
  41957d:	48 89 84 24 68 20 00 	mov    %rax,0x2068(%rsp)
  419584:	00 
  419585:	31 c0                	xor    %eax,%eax
  419587:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41958c:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  419593:	00 00 
  419595:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  41959c:	00 00 
  41959e:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
  4195a3:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  4195aa:	00 00 
  4195ac:	48 89 05 95 33 21 00 	mov    %rax,0x213395(%rip)        # 62c948 <caml_local_roots>
  4195b3:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  4195b8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  4195bd:	8b 05 99 3c 22 00    	mov    0x223c99(%rip),%eax        # 63d25c <caml_backtrace_active>
  4195c3:	85 c0                	test   %eax,%eax
  4195c5:	0f 84 7d 00 00 00    	je     419648 <caml_get_exception_raw_backtrace+0xe8>
  4195cb:	48 8b 35 7e 3c 22 00 	mov    0x223c7e(%rip),%rsi        # 63d250 <caml_backtrace_buffer>
  4195d2:	48 85 f6             	test   %rsi,%rsi
  4195d5:	74 71                	je     419648 <caml_get_exception_raw_backtrace+0xe8>
  4195d7:	8b 05 7b 3c 22 00    	mov    0x223c7b(%rip),%eax        # 63d258 <caml_backtrace_pos>
  4195dd:	85 c0                	test   %eax,%eax
  4195df:	74 67                	je     419648 <caml_get_exception_raw_backtrace+0xe8>
  4195e1:	3d 00 04 00 00       	cmp    $0x400,%eax
  4195e6:	bd 00 04 00 00       	mov    $0x400,%ebp
  4195eb:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
  4195f0:	0f 4e e8             	cmovle %eax,%ebp
  4195f3:	b9 00 20 00 00       	mov    $0x2000,%ecx
  4195f8:	4c 63 ed             	movslq %ebp,%r13
  4195fb:	4a 8d 1c ed 00 00 00 	lea    0x0(,%r13,8),%rbx
  419602:	00 
  419603:	48 89 da             	mov    %rbx,%rdx
  419606:	e8 d5 85 fe ff       	callq  401be0 <__memcpy_chk@plt>
  41960b:	31 f6                	xor    %esi,%esi
  41960d:	4c 89 ef             	mov    %r13,%rdi
  419610:	e8 5b 2b 00 00       	callq  41c170 <caml_alloc>
  419615:	85 ed                	test   %ebp,%ebp
  419617:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41961c:	7e 33                	jle    419651 <caml_get_exception_raw_backtrace+0xf1>
  41961e:	31 d2                	xor    %edx,%edx
  419620:	48 8b 7c 14 60       	mov    0x60(%rsp,%rdx,1),%rdi
  419625:	48 89 f9             	mov    %rdi,%rcx
  419628:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41962d:	48 83 c9 01          	or     $0x1,%rcx
  419631:	48 89 0c 10          	mov    %rcx,(%rax,%rdx,1)
  419635:	48 83 c2 08          	add    $0x8,%rdx
  419639:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41963e:	48 39 d3             	cmp    %rdx,%rbx
  419641:	75 dd                	jne    419620 <caml_get_exception_raw_backtrace+0xc0>
  419643:	eb 0c                	jmp    419651 <caml_get_exception_raw_backtrace+0xf1>
  419645:	0f 1f 00             	nopl   (%rax)
  419648:	31 f6                	xor    %esi,%esi
  41964a:	31 ff                	xor    %edi,%edi
  41964c:	e8 1f 2b 00 00       	callq  41c170 <caml_alloc>
  419651:	48 8b b4 24 68 20 00 	mov    0x2068(%rsp),%rsi
  419658:	00 
  419659:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  419660:	00 00 
  419662:	4c 89 25 df 32 21 00 	mov    %r12,0x2132df(%rip)        # 62c948 <caml_local_roots>
  419669:	75 0e                	jne    419679 <caml_get_exception_raw_backtrace+0x119>
  41966b:	48 81 c4 78 20 00 00 	add    $0x2078,%rsp
  419672:	5b                   	pop    %rbx
  419673:	5d                   	pop    %rbp
  419674:	41 5c                	pop    %r12
  419676:	41 5d                	pop    %r13
  419678:	c3                   	retq   
  419679:	e8 f2 83 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41967e:	66 90                	xchg   %ax,%ax

0000000000419680 <caml_convert_raw_backtrace_slot>:
  419680:	53                   	push   %rbx
  419681:	48 89 fb             	mov    %rdi,%rbx
  419684:	e8 f7 40 00 00       	callq  41d780 <caml_debug_info_available>
  419689:	85 c0                	test   %eax,%eax
  41968b:	74 0d                	je     41969a <caml_convert_raw_backtrace_slot+0x1a>
  41968d:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
  419691:	48 89 df             	mov    %rbx,%rdi
  419694:	5b                   	pop    %rbx
  419695:	e9 76 fb ff ff       	jmpq   419210 <caml_convert_debuginfo>
  41969a:	bf 80 ee 41 00       	mov    $0x41ee80,%edi
  41969f:	e8 1c 10 00 00       	callq  41a6c0 <caml_failwith>
  4196a4:	66 90                	xchg   %ax,%ax
  4196a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4196ad:	00 00 00 

00000000004196b0 <caml_convert_raw_backtrace>:
  4196b0:	41 56                	push   %r14
  4196b2:	41 55                	push   %r13
  4196b4:	41 54                	push   %r12
  4196b6:	55                   	push   %rbp
  4196b7:	53                   	push   %rbx
  4196b8:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  4196bf:	4c 8b 2d 82 32 21 00 	mov    0x213282(%rip),%r13        # 62c948 <caml_local_roots>
  4196c6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4196cd:	00 00 
  4196cf:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  4196d6:	00 
  4196d7:	31 c0                	xor    %eax,%eax
  4196d9:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  4196de:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4196e3:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  4196ea:	00 00 
  4196ec:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
  4196f1:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  4196f8:	00 00 
  4196fa:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  4196ff:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  419704:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41970b:	00 00 
  41970d:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  419714:	00 00 
  419716:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  41971d:	00 00 
  41971f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  419724:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  419729:	48 89 05 18 32 21 00 	mov    %rax,0x213218(%rip)        # 62c948 <caml_local_roots>
  419730:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  419735:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  41973a:	e8 41 40 00 00       	callq  41d780 <caml_debug_info_available>
  41973f:	85 c0                	test   %eax,%eax
  419741:	0f 84 1e 01 00 00    	je     419865 <caml_convert_raw_backtrace+0x1b5>
  419747:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41974c:	31 db                	xor    %ebx,%ebx
  41974e:	31 ed                	xor    %ebp,%ebp
  419750:	48 8b 7a f8          	mov    -0x8(%rdx),%rdi
  419754:	48 c1 ef 0a          	shr    $0xa,%rdi
  419758:	48 85 ff             	test   %rdi,%rdi
  41975b:	74 45                	je     4197a2 <caml_convert_raw_backtrace+0xf2>
  41975d:	0f 1f 00             	nopl   (%rax)
  419760:	48 8b 3c ea          	mov    (%rdx,%rbp,8),%rdi
  419764:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
  419768:	e8 23 3f 00 00       	callq  41d690 <caml_debuginfo_extract>
  41976d:	48 85 c0             	test   %rax,%rax
  419770:	74 17                	je     419789 <caml_convert_raw_backtrace+0xd9>
  419772:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  419778:	48 89 c7             	mov    %rax,%rdi
  41977b:	48 83 c3 01          	add    $0x1,%rbx
  41977f:	e8 3c 3f 00 00       	callq  41d6c0 <caml_debuginfo_next>
  419784:	48 85 c0             	test   %rax,%rax
  419787:	75 ef                	jne    419778 <caml_convert_raw_backtrace+0xc8>
  419789:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41978e:	48 83 c5 01          	add    $0x1,%rbp
  419792:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  419796:	48 c1 e8 0a          	shr    $0xa,%rax
  41979a:	48 39 e8             	cmp    %rbp,%rax
  41979d:	77 c1                	ja     419760 <caml_convert_raw_backtrace+0xb0>
  41979f:	48 89 df             	mov    %rbx,%rdi
  4197a2:	31 f6                	xor    %esi,%esi
  4197a4:	e8 c7 29 00 00       	callq  41c170 <caml_alloc>
  4197a9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  4197ae:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4197b3:	48 8b 4a f8          	mov    -0x8(%rdx),%rcx
  4197b7:	48 c1 e9 0a          	shr    $0xa,%rcx
  4197bb:	48 85 c9             	test   %rcx,%rcx
  4197be:	74 7b                	je     41983b <caml_convert_raw_backtrace+0x18b>
  4197c0:	45 31 e4             	xor    %r12d,%r12d
  4197c3:	45 31 f6             	xor    %r14d,%r14d
  4197c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4197cd:	00 00 00 
  4197d0:	4a 8b 3c f2          	mov    (%rdx,%r14,8),%rdi
  4197d4:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
  4197d8:	e8 b3 3e 00 00       	callq  41d690 <caml_debuginfo_extract>
  4197dd:	48 85 c0             	test   %rax,%rax
  4197e0:	48 89 c3             	mov    %rax,%rbx
  4197e3:	74 3b                	je     419820 <caml_convert_raw_backtrace+0x170>
  4197e5:	4a 8d 2c e5 00 00 00 	lea    0x0(,%r12,8),%rbp
  4197ec:	00 
  4197ed:	0f 1f 00             	nopl   (%rax)
  4197f0:	48 89 df             	mov    %rbx,%rdi
  4197f3:	49 83 c4 01          	add    $0x1,%r12
  4197f7:	e8 14 fa ff ff       	callq  419210 <caml_convert_debuginfo>
  4197fc:	48 89 ef             	mov    %rbp,%rdi
  4197ff:	48 03 7c 24 18       	add    0x18(%rsp),%rdi
  419804:	48 89 c6             	mov    %rax,%rsi
  419807:	48 83 c5 08          	add    $0x8,%rbp
  41980b:	e8 00 ff fe ff       	callq  409710 <caml_modify>
  419810:	48 89 df             	mov    %rbx,%rdi
  419813:	e8 a8 3e 00 00       	callq  41d6c0 <caml_debuginfo_next>
  419818:	48 85 c0             	test   %rax,%rax
  41981b:	48 89 c3             	mov    %rax,%rbx
  41981e:	75 d0                	jne    4197f0 <caml_convert_raw_backtrace+0x140>
  419820:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  419825:	49 83 c6 01          	add    $0x1,%r14
  419829:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  41982d:	48 c1 e8 0a          	shr    $0xa,%rax
  419831:	4c 39 f0             	cmp    %r14,%rax
  419834:	77 9a                	ja     4197d0 <caml_convert_raw_backtrace+0x120>
  419836:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41983b:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
  419842:	00 
  419843:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41984a:	00 00 
  41984c:	4c 89 2d f5 30 21 00 	mov    %r13,0x2130f5(%rip)        # 62c948 <caml_local_roots>
  419853:	75 1a                	jne    41986f <caml_convert_raw_backtrace+0x1bf>
  419855:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
  41985c:	5b                   	pop    %rbx
  41985d:	5d                   	pop    %rbp
  41985e:	41 5c                	pop    %r12
  419860:	41 5d                	pop    %r13
  419862:	41 5e                	pop    %r14
  419864:	c3                   	retq   
  419865:	bf 80 ee 41 00       	mov    $0x41ee80,%edi
  41986a:	e8 51 0e 00 00       	callq  41a6c0 <caml_failwith>
  41986f:	e8 fc 81 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  419874:	66 90                	xchg   %ax,%ax
  419876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41987d:	00 00 00 

0000000000419880 <caml_raw_backtrace_length>:
  419880:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  419884:	48 c1 e8 0a          	shr    $0xa,%rax
  419888:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  41988d:	c3                   	retq   
  41988e:	66 90                	xchg   %ax,%ax

0000000000419890 <caml_raw_backtrace_slot>:
  419890:	48 83 ec 08          	sub    $0x8,%rsp
  419894:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  419898:	48 d1 fe             	sar    %rsi
  41989b:	48 c1 e8 0a          	shr    $0xa,%rax
  41989f:	48 39 c6             	cmp    %rax,%rsi
  4198a2:	73 16                	jae    4198ba <caml_raw_backtrace_slot+0x2a>
  4198a4:	48 8b 3c f7          	mov    (%rdi,%rsi,8),%rdi
  4198a8:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
  4198ac:	e8 df 3d 00 00       	callq  41d690 <caml_debuginfo_extract>
  4198b1:	48 83 c4 08          	add    $0x8,%rsp
  4198b5:	48 83 c8 01          	or     $0x1,%rax
  4198b9:	c3                   	retq   
  4198ba:	bf a0 ee 41 00       	mov    $0x41eea0,%edi
  4198bf:	e8 1c 0e 00 00       	callq  41a6e0 <caml_invalid_argument>
  4198c4:	66 90                	xchg   %ax,%ax
  4198c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4198cd:	00 00 00 

00000000004198d0 <caml_raw_backtrace_next_slot>:
  4198d0:	55                   	push   %rbp
  4198d1:	53                   	push   %rbx
  4198d2:	48 89 f8             	mov    %rdi,%rax
  4198d5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  4198d9:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  4198e0:	48 8b 2d 61 30 21 00 	mov    0x213061(%rip),%rbp        # 62c948 <caml_local_roots>
  4198e7:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  4198ec:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4198f1:	48 89 c7             	mov    %rax,%rdi
  4198f4:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  4198fb:	00 00 
  4198fd:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
  419904:	00 
  419905:	31 c9                	xor    %ecx,%ecx
  419907:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  41990c:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  419911:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
  419916:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  41991d:	00 00 
  41991f:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
  419926:	00 00 
  419928:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
  41992d:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
  419932:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  419939:	00 00 
  41993b:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  419942:	00 00 
  419944:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  41994b:	00 00 
  41994d:	48 89 15 f4 2f 21 00 	mov    %rdx,0x212ff4(%rip)        # 62c948 <caml_local_roots>
  419954:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  419959:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
  41995e:	e8 5d 3d 00 00       	callq  41d6c0 <caml_debuginfo_next>
  419963:	48 89 c3             	mov    %rax,%rbx
  419966:	b8 01 00 00 00       	mov    $0x1,%eax
  41996b:	48 85 db             	test   %rbx,%rbx
  41996e:	74 1d                	je     41998d <caml_raw_backtrace_next_slot+0xbd>
  419970:	31 f6                	xor    %esi,%esi
  419972:	bf 01 00 00 00       	mov    $0x1,%edi
  419977:	48 83 cb 01          	or     $0x1,%rbx
  41997b:	e8 f0 27 00 00       	callq  41c170 <caml_alloc>
  419980:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  419985:	48 89 18             	mov    %rbx,(%rax)
  419988:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41998d:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
  419994:	00 
  419995:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  41999c:	00 00 
  41999e:	48 89 2d a3 2f 21 00 	mov    %rbp,0x212fa3(%rip)        # 62c948 <caml_local_roots>
  4199a5:	75 0a                	jne    4199b1 <caml_raw_backtrace_next_slot+0xe1>
  4199a7:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
  4199ae:	5b                   	pop    %rbx
  4199af:	5d                   	pop    %rbp
  4199b0:	c3                   	retq   
  4199b1:	e8 ba 80 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  4199b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4199bd:	00 00 00 

00000000004199c0 <caml_get_exception_backtrace>:
  4199c0:	41 54                	push   %r12
  4199c2:	55                   	push   %rbp
  4199c3:	53                   	push   %rbx
  4199c4:	48 83 ec 70          	sub    $0x70,%rsp
  4199c8:	4c 8b 25 79 2f 21 00 	mov    0x212f79(%rip),%r12        # 62c948 <caml_local_roots>
  4199cf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4199d6:	00 00 
  4199d8:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  4199dd:	31 c0                	xor    %eax,%eax
  4199df:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4199e4:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
  4199eb:	00 00 
  4199ed:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
  4199f4:	00 00 
  4199f6:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  4199fd:	00 00 
  4199ff:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
  419a04:	48 89 05 3d 2f 21 00 	mov    %rax,0x212f3d(%rip)        # 62c948 <caml_local_roots>
  419a0b:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  419a10:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  419a17:	00 00 
  419a19:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
  419a20:	00 00 
  419a22:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  419a27:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  419a2c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  419a31:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  419a36:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  419a3b:	e8 40 3d 00 00       	callq  41d780 <caml_debug_info_available>
  419a40:	85 c0                	test   %eax,%eax
  419a42:	ba 01 00 00 00       	mov    $0x1,%edx
  419a47:	75 27                	jne    419a70 <caml_get_exception_backtrace+0xb0>
  419a49:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
  419a4e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  419a55:	00 00 
  419a57:	4c 89 25 ea 2e 21 00 	mov    %r12,0x212eea(%rip)        # 62c948 <caml_local_roots>
  419a5e:	48 89 d0             	mov    %rdx,%rax
  419a61:	0f 85 af 00 00 00    	jne    419b16 <caml_get_exception_backtrace+0x156>
  419a67:	48 83 c4 70          	add    $0x70,%rsp
  419a6b:	5b                   	pop    %rbx
  419a6c:	5d                   	pop    %rbp
  419a6d:	41 5c                	pop    %r12
  419a6f:	c3                   	retq   
  419a70:	bf 01 00 00 00       	mov    $0x1,%edi
  419a75:	31 db                	xor    %ebx,%ebx
  419a77:	e8 e4 fa ff ff       	callq  419560 <caml_get_exception_raw_backtrace>
  419a7c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  419a81:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
  419a85:	31 f6                	xor    %esi,%esi
  419a87:	48 c1 ef 0a          	shr    $0xa,%rdi
  419a8b:	e8 e0 26 00 00       	callq  41c170 <caml_alloc>
  419a90:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  419a95:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  419a9a:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  419a9e:	48 c1 e8 0a          	shr    $0xa,%rax
  419aa2:	48 85 c0             	test   %rax,%rax
  419aa5:	74 4c                	je     419af3 <caml_get_exception_backtrace+0x133>
  419aa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  419aae:	00 00 
  419ab0:	48 8b 3c da          	mov    (%rdx,%rbx,8),%rdi
  419ab4:	48 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%rbp
  419abb:	00 
  419abc:	48 83 c3 01          	add    $0x1,%rbx
  419ac0:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
  419ac4:	e8 c7 3b 00 00       	callq  41d690 <caml_debuginfo_extract>
  419ac9:	48 89 c7             	mov    %rax,%rdi
  419acc:	e8 3f f7 ff ff       	callq  419210 <caml_convert_debuginfo>
  419ad1:	48 89 ef             	mov    %rbp,%rdi
  419ad4:	48 03 7c 24 08       	add    0x8(%rsp),%rdi
  419ad9:	48 89 c6             	mov    %rax,%rsi
  419adc:	e8 2f fc fe ff       	callq  409710 <caml_modify>
  419ae1:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  419ae6:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  419aea:	48 c1 e8 0a          	shr    $0xa,%rax
  419aee:	48 39 d8             	cmp    %rbx,%rax
  419af1:	77 bd                	ja     419ab0 <caml_get_exception_backtrace+0xf0>
  419af3:	31 f6                	xor    %esi,%esi
  419af5:	bf 01 00 00 00       	mov    $0x1,%edi
  419afa:	e8 81 27 00 00       	callq  41c280 <caml_alloc_small>
  419aff:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  419b04:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  419b09:	48 89 10             	mov    %rdx,(%rax)
  419b0c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  419b11:	e9 33 ff ff ff       	jmpq   419a49 <caml_get_exception_backtrace+0x89>
  419b16:	e8 55 7f fe ff       	callq  401a70 <__stack_chk_fail@plt>
  419b1b:	90                   	nop

0000000000419b1c <caml_system__code_begin>:
  419b1c:	c3                   	retq   
  419b1d:	0f 1f 00             	nopl   (%rax)

0000000000419b20 <caml_call_gc>:
  419b20:	48 8b 04 24          	mov    (%rsp),%rax
  419b24:	48 89 05 3d 2b 21 00 	mov    %rax,0x212b3d(%rip)        # 62c668 <caml_last_return_address>
  419b2b:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  419b30:	48 89 05 f1 2d 21 00 	mov    %rax,0x212df1(%rip)        # 62c928 <caml_bottom_of_stack>
  419b37:	48 81 ec 00 80 00 00 	sub    $0x8000,%rsp
  419b3e:	48 89 04 24          	mov    %rax,(%rsp)
  419b42:	48 81 c4 00 80 00 00 	add    $0x8000,%rsp
  419b49:	55                   	push   %rbp
  419b4a:	41 53                	push   %r11
  419b4c:	41 52                	push   %r10
  419b4e:	41 55                	push   %r13
  419b50:	41 54                	push   %r12
  419b52:	41 51                	push   %r9
  419b54:	41 50                	push   %r8
  419b56:	51                   	push   %rcx
  419b57:	52                   	push   %rdx
  419b58:	56                   	push   %rsi
  419b59:	57                   	push   %rdi
  419b5a:	53                   	push   %rbx
  419b5b:	50                   	push   %rax
  419b5c:	48 89 25 75 78 22 00 	mov    %rsp,0x227875(%rip)        # 6413d8 <caml_gc_regs>
  419b63:	4c 89 3d 3e 33 21 00 	mov    %r15,0x21333e(%rip)        # 62cea8 <caml_young_ptr>
  419b6a:	4c 89 35 2f 38 22 00 	mov    %r14,0x22382f(%rip)        # 63d3a0 <caml_exception_pointer>
  419b71:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
  419b78:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
  419b7d:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
  419b83:	f2 0f 11 54 24 10    	movsd  %xmm2,0x10(%rsp)
  419b89:	f2 0f 11 5c 24 18    	movsd  %xmm3,0x18(%rsp)
  419b8f:	f2 0f 11 64 24 20    	movsd  %xmm4,0x20(%rsp)
  419b95:	f2 0f 11 6c 24 28    	movsd  %xmm5,0x28(%rsp)
  419b9b:	f2 0f 11 74 24 30    	movsd  %xmm6,0x30(%rsp)
  419ba1:	f2 0f 11 7c 24 38    	movsd  %xmm7,0x38(%rsp)
  419ba7:	f2 44 0f 11 44 24 40 	movsd  %xmm8,0x40(%rsp)
  419bae:	f2 44 0f 11 4c 24 48 	movsd  %xmm9,0x48(%rsp)
  419bb5:	f2 44 0f 11 54 24 50 	movsd  %xmm10,0x50(%rsp)
  419bbc:	f2 44 0f 11 5c 24 58 	movsd  %xmm11,0x58(%rsp)
  419bc3:	f2 44 0f 11 64 24 60 	movsd  %xmm12,0x60(%rsp)
  419bca:	f2 44 0f 11 6c 24 68 	movsd  %xmm13,0x68(%rsp)
  419bd1:	f2 44 0f 11 74 24 70 	movsd  %xmm14,0x70(%rsp)
  419bd8:	f2 44 0f 11 7c 24 78 	movsd  %xmm15,0x78(%rsp)
  419bdf:	e8 ac 12 00 00       	callq  41ae90 <caml_garbage_collection>
  419be4:	4c 8b 3d bd 32 21 00 	mov    0x2132bd(%rip),%r15        # 62cea8 <caml_young_ptr>
  419beb:	4c 8b 35 ae 37 22 00 	mov    0x2237ae(%rip),%r14        # 63d3a0 <caml_exception_pointer>
  419bf2:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
  419bf7:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
  419bfd:	f2 0f 10 54 24 10    	movsd  0x10(%rsp),%xmm2
  419c03:	f2 0f 10 5c 24 18    	movsd  0x18(%rsp),%xmm3
  419c09:	f2 0f 10 64 24 20    	movsd  0x20(%rsp),%xmm4
  419c0f:	f2 0f 10 6c 24 28    	movsd  0x28(%rsp),%xmm5
  419c15:	f2 0f 10 74 24 30    	movsd  0x30(%rsp),%xmm6
  419c1b:	f2 0f 10 7c 24 38    	movsd  0x38(%rsp),%xmm7
  419c21:	f2 44 0f 10 44 24 40 	movsd  0x40(%rsp),%xmm8
  419c28:	f2 44 0f 10 4c 24 48 	movsd  0x48(%rsp),%xmm9
  419c2f:	f2 44 0f 10 54 24 50 	movsd  0x50(%rsp),%xmm10
  419c36:	f2 44 0f 10 5c 24 58 	movsd  0x58(%rsp),%xmm11
  419c3d:	f2 44 0f 10 64 24 60 	movsd  0x60(%rsp),%xmm12
  419c44:	f2 44 0f 10 6c 24 68 	movsd  0x68(%rsp),%xmm13
  419c4b:	f2 44 0f 10 74 24 70 	movsd  0x70(%rsp),%xmm14
  419c52:	f2 44 0f 10 7c 24 78 	movsd  0x78(%rsp),%xmm15
  419c59:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
  419c60:	58                   	pop    %rax
  419c61:	5b                   	pop    %rbx
  419c62:	5f                   	pop    %rdi
  419c63:	5e                   	pop    %rsi
  419c64:	5a                   	pop    %rdx
  419c65:	59                   	pop    %rcx
  419c66:	41 58                	pop    %r8
  419c68:	41 59                	pop    %r9
  419c6a:	41 5c                	pop    %r12
  419c6c:	41 5d                	pop    %r13
  419c6e:	41 5a                	pop    %r10
  419c70:	41 5b                	pop    %r11
  419c72:	5d                   	pop    %rbp
  419c73:	c3                   	retq   

0000000000419c74 <caml_alloc1>:
  419c74:	49 83 ef 10          	sub    $0x10,%r15
  419c78:	4c 3b 3d 21 32 21 00 	cmp    0x213221(%rip),%r15        # 62cea0 <caml_young_limit>
  419c7f:	72 01                	jb     419c82 <caml_alloc1+0xe>
  419c81:	c3                   	retq   
  419c82:	48 8b 04 24          	mov    (%rsp),%rax
  419c86:	48 89 05 db 29 21 00 	mov    %rax,0x2129db(%rip)        # 62c668 <caml_last_return_address>
  419c8d:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  419c92:	48 89 05 8f 2c 21 00 	mov    %rax,0x212c8f(%rip)        # 62c928 <caml_bottom_of_stack>
  419c99:	48 83 ec 08          	sub    $0x8,%rsp
  419c9d:	e8 95 fe ff ff       	callq  419b37 <caml_call_gc+0x17>
  419ca2:	48 83 c4 08          	add    $0x8,%rsp
  419ca6:	eb cc                	jmp    419c74 <caml_alloc1>

0000000000419ca8 <caml_alloc2>:
  419ca8:	49 83 ef 18          	sub    $0x18,%r15
  419cac:	4c 3b 3d ed 31 21 00 	cmp    0x2131ed(%rip),%r15        # 62cea0 <caml_young_limit>
  419cb3:	72 01                	jb     419cb6 <caml_alloc2+0xe>
  419cb5:	c3                   	retq   
  419cb6:	48 8b 04 24          	mov    (%rsp),%rax
  419cba:	48 89 05 a7 29 21 00 	mov    %rax,0x2129a7(%rip)        # 62c668 <caml_last_return_address>
  419cc1:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  419cc6:	48 89 05 5b 2c 21 00 	mov    %rax,0x212c5b(%rip)        # 62c928 <caml_bottom_of_stack>
  419ccd:	48 83 ec 08          	sub    $0x8,%rsp
  419cd1:	e8 61 fe ff ff       	callq  419b37 <caml_call_gc+0x17>
  419cd6:	48 83 c4 08          	add    $0x8,%rsp
  419cda:	eb cc                	jmp    419ca8 <caml_alloc2>

0000000000419cdc <caml_alloc3>:
  419cdc:	49 83 ef 20          	sub    $0x20,%r15
  419ce0:	4c 3b 3d b9 31 21 00 	cmp    0x2131b9(%rip),%r15        # 62cea0 <caml_young_limit>
  419ce7:	72 01                	jb     419cea <caml_alloc3+0xe>
  419ce9:	c3                   	retq   
  419cea:	48 8b 04 24          	mov    (%rsp),%rax
  419cee:	48 89 05 73 29 21 00 	mov    %rax,0x212973(%rip)        # 62c668 <caml_last_return_address>
  419cf5:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  419cfa:	48 89 05 27 2c 21 00 	mov    %rax,0x212c27(%rip)        # 62c928 <caml_bottom_of_stack>
  419d01:	48 83 ec 08          	sub    $0x8,%rsp
  419d05:	e8 2d fe ff ff       	callq  419b37 <caml_call_gc+0x17>
  419d0a:	48 83 c4 08          	add    $0x8,%rsp
  419d0e:	eb cc                	jmp    419cdc <caml_alloc3>

0000000000419d10 <caml_allocN>:
  419d10:	50                   	push   %rax
  419d11:	49 29 c7             	sub    %rax,%r15
  419d14:	4c 3b 3d 85 31 21 00 	cmp    0x213185(%rip),%r15        # 62cea0 <caml_young_limit>
  419d1b:	72 05                	jb     419d22 <caml_allocN+0x12>
  419d1d:	48 83 c4 08          	add    $0x8,%rsp
  419d21:	c3                   	retq   
  419d22:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419d27:	48 89 05 3a 29 21 00 	mov    %rax,0x21293a(%rip)        # 62c668 <caml_last_return_address>
  419d2e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  419d33:	48 89 05 ee 2b 21 00 	mov    %rax,0x212bee(%rip)        # 62c928 <caml_bottom_of_stack>
  419d3a:	e8 f8 fd ff ff       	callq  419b37 <caml_call_gc+0x17>
  419d3f:	58                   	pop    %rax
  419d40:	eb ce                	jmp    419d10 <caml_allocN>
  419d42:	66 90                	xchg   %ax,%ax

0000000000419d44 <caml_c_call>:
  419d44:	41 5c                	pop    %r12
  419d46:	4c 89 25 1b 29 21 00 	mov    %r12,0x21291b(%rip)        # 62c668 <caml_last_return_address>
  419d4d:	48 89 25 d4 2b 21 00 	mov    %rsp,0x212bd4(%rip)        # 62c928 <caml_bottom_of_stack>
  419d54:	48 83 ec 08          	sub    $0x8,%rsp
  419d58:	48 81 ec 00 80 00 00 	sub    $0x8000,%rsp
  419d5f:	48 89 04 24          	mov    %rax,(%rsp)
  419d63:	48 81 c4 00 80 00 00 	add    $0x8000,%rsp
  419d6a:	4c 89 3d 37 31 21 00 	mov    %r15,0x213137(%rip)        # 62cea8 <caml_young_ptr>
  419d71:	4c 89 35 28 36 22 00 	mov    %r14,0x223628(%rip)        # 63d3a0 <caml_exception_pointer>
  419d78:	ff e0                	jmpq   *%rax
  419d7a:	66 90                	xchg   %ax,%ax

0000000000419d7c <caml_start_program>:
  419d7c:	53                   	push   %rbx
  419d7d:	55                   	push   %rbp
  419d7e:	41 54                	push   %r12
  419d80:	41 55                	push   %r13
  419d82:	41 56                	push   %r14
  419d84:	41 57                	push   %r15
  419d86:	48 83 ec 08          	sub    $0x8,%rsp
  419d8a:	4c 8d 25 af 83 fe ff 	lea    -0x17c51(%rip),%r12        # 402140 <caml_program>
  419d91:	48 83 ec 08          	sub    $0x8,%rsp
  419d95:	ff 35 3d 76 22 00    	pushq  0x22763d(%rip)        # 6413d8 <caml_gc_regs>
  419d9b:	ff 35 c7 28 21 00    	pushq  0x2128c7(%rip)        # 62c668 <caml_last_return_address>
  419da1:	ff 35 81 2b 21 00    	pushq  0x212b81(%rip)        # 62c928 <caml_bottom_of_stack>
  419da7:	4c 8b 3d fa 30 21 00 	mov    0x2130fa(%rip),%r15        # 62cea8 <caml_young_ptr>
  419dae:	4c 8b 35 eb 35 22 00 	mov    0x2235eb(%rip),%r14        # 63d3a0 <caml_exception_pointer>
  419db5:	4c 8d 2d 41 00 00 00 	lea    0x41(%rip),%r13        # 419dfd <caml_start_program+0x81>
  419dbc:	41 55                	push   %r13
  419dbe:	41 56                	push   %r14
  419dc0:	49 89 e6             	mov    %rsp,%r14
  419dc3:	41 ff d4             	callq  *%r12
  419dc6:	41 5e                	pop    %r14
  419dc8:	41 5c                	pop    %r12
  419dca:	4c 89 3d d7 30 21 00 	mov    %r15,0x2130d7(%rip)        # 62cea8 <caml_young_ptr>
  419dd1:	4c 89 35 c8 35 22 00 	mov    %r14,0x2235c8(%rip)        # 63d3a0 <caml_exception_pointer>
  419dd8:	8f 05 4a 2b 21 00    	popq   0x212b4a(%rip)        # 62c928 <caml_bottom_of_stack>
  419dde:	8f 05 84 28 21 00    	popq   0x212884(%rip)        # 62c668 <caml_last_return_address>
  419de4:	8f 05 ee 75 22 00    	popq   0x2275ee(%rip)        # 6413d8 <caml_gc_regs>
  419dea:	48 83 c4 08          	add    $0x8,%rsp
  419dee:	48 83 c4 08          	add    $0x8,%rsp
  419df2:	41 5f                	pop    %r15
  419df4:	41 5e                	pop    %r14
  419df6:	41 5d                	pop    %r13
  419df8:	41 5c                	pop    %r12
  419dfa:	5d                   	pop    %rbp
  419dfb:	5b                   	pop    %rbx
  419dfc:	c3                   	retq   
  419dfd:	48 83 c8 02          	or     $0x2,%rax
  419e01:	eb c7                	jmp    419dca <caml_start_program+0x4e>
  419e03:	90                   	nop

0000000000419e04 <caml_raise_exn>:
  419e04:	f7 05 4e 34 22 00 01 	testl  $0x1,0x22344e(%rip)        # 63d25c <caml_backtrace_active>
  419e0b:	00 00 00 
  419e0e:	75 06                	jne    419e16 <caml_raise_exn+0x12>
  419e10:	4c 89 f4             	mov    %r14,%rsp
  419e13:	41 5e                	pop    %r14
  419e15:	c3                   	retq   
  419e16:	49 89 c4             	mov    %rax,%r12
  419e19:	48 89 c7             	mov    %rax,%rdi
  419e1c:	5e                   	pop    %rsi
  419e1d:	48 89 e2             	mov    %rsp,%rdx
  419e20:	4c 89 f1             	mov    %r14,%rcx
  419e23:	e8 28 36 00 00       	callq  41d450 <caml_stash_backtrace>
  419e28:	4c 89 e0             	mov    %r12,%rax
  419e2b:	4c 89 f4             	mov    %r14,%rsp
  419e2e:	41 5e                	pop    %r14
  419e30:	c3                   	retq   
  419e31:	0f 1f 00             	nopl   (%rax)

0000000000419e34 <caml_raise_exception>:
  419e34:	f7 05 1e 34 22 00 01 	testl  $0x1,0x22341e(%rip)        # 63d25c <caml_backtrace_active>
  419e3b:	00 00 00 
  419e3e:	75 14                	jne    419e54 <caml_raise_exception+0x20>
  419e40:	48 89 f8             	mov    %rdi,%rax
  419e43:	48 8b 25 56 35 22 00 	mov    0x223556(%rip),%rsp        # 63d3a0 <caml_exception_pointer>
  419e4a:	41 5e                	pop    %r14
  419e4c:	4c 8b 3d 55 30 21 00 	mov    0x213055(%rip),%r15        # 62cea8 <caml_young_ptr>
  419e53:	c3                   	retq   
  419e54:	49 89 fc             	mov    %rdi,%r12
  419e57:	48 8b 35 0a 28 21 00 	mov    0x21280a(%rip),%rsi        # 62c668 <caml_last_return_address>
  419e5e:	48 8b 15 c3 2a 21 00 	mov    0x212ac3(%rip),%rdx        # 62c928 <caml_bottom_of_stack>
  419e65:	48 8b 0d 34 35 22 00 	mov    0x223534(%rip),%rcx        # 63d3a0 <caml_exception_pointer>
  419e6c:	48 83 ec 08          	sub    $0x8,%rsp
  419e70:	e8 db 35 00 00       	callq  41d450 <caml_stash_backtrace>
  419e75:	4c 89 e0             	mov    %r12,%rax
  419e78:	48 8b 25 21 35 22 00 	mov    0x223521(%rip),%rsp        # 63d3a0 <caml_exception_pointer>
  419e7f:	41 5e                	pop    %r14
  419e81:	4c 8b 3d 20 30 21 00 	mov    0x213020(%rip),%r15        # 62cea8 <caml_young_ptr>
  419e88:	c3                   	retq   
  419e89:	0f 1f 00             	nopl   (%rax)

0000000000419e8c <caml_stack_overflow>:
  419e8c:	48 8d 05 ed f5 20 00 	lea    0x20f5ed(%rip),%rax        # 629480 <caml_exn_Stack_overflow>
  419e93:	4c 89 f4             	mov    %r14,%rsp
  419e96:	41 5e                	pop    %r14
  419e98:	c3                   	retq   
  419e99:	0f 1f 00             	nopl   (%rax)

0000000000419e9c <caml_callback_exn>:
  419e9c:	53                   	push   %rbx
  419e9d:	55                   	push   %rbp
  419e9e:	41 54                	push   %r12
  419ea0:	41 55                	push   %r13
  419ea2:	41 56                	push   %r14
  419ea4:	41 57                	push   %r15
  419ea6:	48 83 ec 08          	sub    $0x8,%rsp
  419eaa:	48 89 fb             	mov    %rdi,%rbx
  419ead:	48 89 f0             	mov    %rsi,%rax
  419eb0:	4c 8b 23             	mov    (%rbx),%r12
  419eb3:	e9 d9 fe ff ff       	jmpq   419d91 <caml_start_program+0x15>

0000000000419eb8 <caml_callback2_exn>:
  419eb8:	53                   	push   %rbx
  419eb9:	55                   	push   %rbp
  419eba:	41 54                	push   %r12
  419ebc:	41 55                	push   %r13
  419ebe:	41 56                	push   %r14
  419ec0:	41 57                	push   %r15
  419ec2:	48 83 ec 08          	sub    $0x8,%rsp
  419ec6:	48 89 ff             	mov    %rdi,%rdi
  419ec9:	48 89 f0             	mov    %rsi,%rax
  419ecc:	48 89 d3             	mov    %rdx,%rbx
  419ecf:	4c 8d 25 fa 85 fe ff 	lea    -0x17a06(%rip),%r12        # 4024d0 <caml_apply2>
  419ed6:	e9 b6 fe ff ff       	jmpq   419d91 <caml_start_program+0x15>
  419edb:	90                   	nop

0000000000419edc <caml_callback3_exn>:
  419edc:	53                   	push   %rbx
  419edd:	55                   	push   %rbp
  419ede:	41 54                	push   %r12
  419ee0:	41 55                	push   %r13
  419ee2:	41 56                	push   %r14
  419ee4:	41 57                	push   %r15
  419ee6:	48 83 ec 08          	sub    $0x8,%rsp
  419eea:	48 89 f0             	mov    %rsi,%rax
  419eed:	48 89 d3             	mov    %rdx,%rbx
  419ef0:	48 89 fe             	mov    %rdi,%rsi
  419ef3:	48 89 cf             	mov    %rcx,%rdi
  419ef6:	4c 8d 25 83 85 fe ff 	lea    -0x17a7d(%rip),%r12        # 402480 <caml_apply3>
  419efd:	e9 8f fe ff ff       	jmpq   419d91 <caml_start_program+0x15>
  419f02:	66 90                	xchg   %ax,%ax

0000000000419f04 <caml_ml_array_bound_error>:
  419f04:	48 8d 05 75 08 00 00 	lea    0x875(%rip),%rax        # 41a780 <caml_array_bound_error>
  419f0b:	e9 34 fe ff ff       	jmpq   419d44 <caml_c_call>

0000000000419f10 <scanmult>:
  419f10:	55                   	push   %rbp
  419f11:	53                   	push   %rbx
  419f12:	48 89 f5             	mov    %rsi,%rbp
  419f15:	be 40 ef 41 00       	mov    $0x41ef40,%esi
  419f1a:	48 89 fb             	mov    %rdi,%rbx
  419f1d:	48 83 ec 18          	sub    $0x18,%rsp
  419f21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  419f28:	00 00 
  419f2a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  419f2f:	31 c0                	xor    %eax,%eax
  419f31:	48 8d 4c 24 03       	lea    0x3(%rsp),%rcx
  419f36:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
  419f3b:	c6 44 24 03 20       	movb   $0x20,0x3(%rsp)
  419f40:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%rsp)
  419f47:	00 
  419f48:	e8 73 7d fe ff       	callq  401cc0 <__isoc99_sscanf@plt>
  419f4d:	48 8d 4c 24 03       	lea    0x3(%rsp),%rcx
  419f52:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
  419f57:	31 c0                	xor    %eax,%eax
  419f59:	be 46 ef 41 00       	mov    $0x41ef46,%esi
  419f5e:	48 89 df             	mov    %rbx,%rdi
  419f61:	e8 5a 7d fe ff       	callq  401cc0 <__isoc99_sscanf@plt>
  419f66:	0f b6 44 24 03       	movzbl 0x3(%rsp),%eax
  419f6b:	3c 4d                	cmp    $0x4d,%al
  419f6d:	74 51                	je     419fc0 <scanmult+0xb0>
  419f6f:	3c 6b                	cmp    $0x6b,%al
  419f71:	74 3d                	je     419fb0 <scanmult+0xa0>
  419f73:	3c 47                	cmp    $0x47,%al
  419f75:	74 29                	je     419fa0 <scanmult+0x90>
  419f77:	8b 44 24 04          	mov    0x4(%rsp),%eax
  419f7b:	48 89 45 00          	mov    %rax,0x0(%rbp)
  419f7f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419f84:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  419f8b:	00 00 
  419f8d:	75 3f                	jne    419fce <scanmult+0xbe>
  419f8f:	48 83 c4 18          	add    $0x18,%rsp
  419f93:	5b                   	pop    %rbx
  419f94:	5d                   	pop    %rbp
  419f95:	c3                   	retq   
  419f96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  419f9d:	00 00 00 
  419fa0:	8b 44 24 04          	mov    0x4(%rsp),%eax
  419fa4:	48 c1 e0 1e          	shl    $0x1e,%rax
  419fa8:	48 89 45 00          	mov    %rax,0x0(%rbp)
  419fac:	eb d1                	jmp    419f7f <scanmult+0x6f>
  419fae:	66 90                	xchg   %ax,%ax
  419fb0:	8b 44 24 04          	mov    0x4(%rsp),%eax
  419fb4:	48 c1 e0 0a          	shl    $0xa,%rax
  419fb8:	48 89 45 00          	mov    %rax,0x0(%rbp)
  419fbc:	eb c1                	jmp    419f7f <scanmult+0x6f>
  419fbe:	66 90                	xchg   %ax,%ax
  419fc0:	8b 44 24 04          	mov    0x4(%rsp),%eax
  419fc4:	48 c1 e0 14          	shl    $0x14,%rax
  419fc8:	48 89 45 00          	mov    %rax,0x0(%rbp)
  419fcc:	eb b1                	jmp    419f7f <scanmult+0x6f>
  419fce:	e8 9d 7a fe ff       	callq  401a70 <__stack_chk_fail@plt>
  419fd3:	0f 1f 00             	nopl   (%rax)
  419fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  419fdd:	00 00 00 

0000000000419fe0 <caml_init_atom_table>:
  419fe0:	31 c0                	xor    %eax,%eax
  419fe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  419fe8:	48 89 04 c5 80 14 64 	mov    %rax,0x641480(,%rax,8)
  419fef:	00 
  419ff0:	48 83 c0 01          	add    $0x1,%rax
  419ff4:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  419ffa:	75 ec                	jne    419fe8 <caml_init_atom_table+0x8>
  419ffc:	48 83 ec 08          	sub    $0x8,%rsp
  41a000:	ba 80 1c 64 00       	mov    $0x641c80,%edx
  41a005:	be 80 14 64 00       	mov    $0x641480,%esi
  41a00a:	bf 04 00 00 00       	mov    $0x4,%edi
  41a00f:	e8 3c ee fe ff       	callq  408e50 <caml_page_table_add>
  41a014:	85 c0                	test   %eax,%eax
  41a016:	75 05                	jne    41a01d <caml_init_atom_table+0x3d>
  41a018:	48 83 c4 08          	add    $0x8,%rsp
  41a01c:	c3                   	retq   
  41a01d:	bf 60 ef 41 00       	mov    $0x41ef60,%edi
  41a022:	e8 c9 1c 00 00       	callq  41bcf0 <caml_fatal_error>
  41a027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41a02e:	00 00 

000000000041a030 <caml_parse_ocamlrunparam>:
  41a030:	53                   	push   %rbx
  41a031:	bf 4e ef 41 00       	mov    $0x41ef4e,%edi
  41a036:	48 83 ec 10          	sub    $0x10,%rsp
  41a03a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41a041:	00 00 
  41a043:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41a048:	31 c0                	xor    %eax,%eax
  41a04a:	e8 e1 78 fe ff       	callq  401930 <getenv@plt>
  41a04f:	48 85 c0             	test   %rax,%rax
  41a052:	48 89 c3             	mov    %rax,%rbx
  41a055:	0f 84 71 01 00 00    	je     41a1cc <caml_parse_ocamlrunparam+0x19c>
  41a05b:	0f b6 03             	movzbl (%rbx),%eax
  41a05e:	66 90                	xchg   %ax,%ax
  41a060:	84 c0                	test   %al,%al
  41a062:	74 32                	je     41a096 <caml_parse_ocamlrunparam+0x66>
  41a064:	83 e8 48             	sub    $0x48,%eax
  41a067:	48 83 c3 01          	add    $0x1,%rbx
  41a06b:	3c 2f                	cmp    $0x2f,%al
  41a06d:	77 20                	ja     41a08f <caml_parse_ocamlrunparam+0x5f>
  41a06f:	0f b6 c0             	movzbl %al,%eax
  41a072:	ff 24 c5 98 ef 41 00 	jmpq   *0x41ef98(,%rax,8)
  41a079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41a080:	3c 2c                	cmp    $0x2c,%al
  41a082:	48 8d 53 01          	lea    0x1(%rbx),%rdx
  41a086:	0f 84 34 01 00 00    	je     41a1c0 <caml_parse_ocamlrunparam+0x190>
  41a08c:	48 89 d3             	mov    %rdx,%rbx
  41a08f:	0f b6 03             	movzbl (%rbx),%eax
  41a092:	84 c0                	test   %al,%al
  41a094:	75 ea                	jne    41a080 <caml_parse_ocamlrunparam+0x50>
  41a096:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41a09b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41a0a2:	00 00 
  41a0a4:	0f 85 3d 01 00 00    	jne    41a1e7 <caml_parse_ocamlrunparam+0x1b7>
  41a0aa:	48 83 c4 10          	add    $0x10,%rsp
  41a0ae:	5b                   	pop    %rbx
  41a0af:	c3                   	retq   
  41a0b0:	be 90 13 64 00       	mov    $0x641390,%esi
  41a0b5:	48 89 df             	mov    %rbx,%rdi
  41a0b8:	e8 53 fe ff ff       	callq  419f10 <scanmult>
  41a0bd:	eb d0                	jmp    41a08f <caml_parse_ocamlrunparam+0x5f>
  41a0bf:	be 60 d2 63 00       	mov    $0x63d260,%esi
  41a0c4:	48 89 df             	mov    %rbx,%rdi
  41a0c7:	e8 44 fe ff ff       	callq  419f10 <scanmult>
  41a0cc:	eb c1                	jmp    41a08f <caml_parse_ocamlrunparam+0x5f>
  41a0ce:	be 70 c8 62 00       	mov    $0x62c870,%esi
  41a0d3:	48 89 df             	mov    %rbx,%rdi
  41a0d6:	e8 35 fe ff ff       	callq  419f10 <scanmult>
  41a0db:	eb b2                	jmp    41a08f <caml_parse_ocamlrunparam+0x5f>
  41a0dd:	48 89 e6             	mov    %rsp,%rsi
  41a0e0:	48 89 df             	mov    %rbx,%rdi
  41a0e3:	e8 28 fe ff ff       	callq  419f10 <scanmult>
  41a0e8:	48 8b 04 24          	mov    (%rsp),%rax
  41a0ec:	89 05 d6 72 22 00    	mov    %eax,0x2272d6(%rip)        # 6413c8 <caml_parser_trace>
  41a0f2:	eb 9b                	jmp    41a08f <caml_parse_ocamlrunparam+0x5f>
  41a0f4:	be 80 c8 62 00       	mov    $0x62c880,%esi
  41a0f9:	48 89 df             	mov    %rbx,%rdi
  41a0fc:	e8 0f fe ff ff       	callq  419f10 <scanmult>
  41a101:	eb 8c                	jmp    41a08f <caml_parse_ocamlrunparam+0x5f>
  41a103:	be 58 c8 62 00       	mov    $0x62c858,%esi
  41a108:	48 89 df             	mov    %rbx,%rdi
  41a10b:	e8 00 fe ff ff       	callq  419f10 <scanmult>
  41a110:	e9 7a ff ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a115:	be 68 c8 62 00       	mov    $0x62c868,%esi
  41a11a:	48 89 df             	mov    %rbx,%rdi
  41a11d:	e8 ee fd ff ff       	callq  419f10 <scanmult>
  41a122:	e9 68 ff ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a127:	be 60 c8 62 00       	mov    $0x62c860,%esi
  41a12c:	48 89 df             	mov    %rbx,%rdi
  41a12f:	e8 dc fd ff ff       	callq  419f10 <scanmult>
  41a134:	e9 56 ff ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a139:	48 89 df             	mov    %rbx,%rdi
  41a13c:	48 89 e6             	mov    %rsp,%rsi
  41a13f:	e8 cc fd ff ff       	callq  419f10 <scanmult>
  41a144:	48 83 3c 24 01       	cmpq   $0x1,(%rsp)
  41a149:	48 19 ff             	sbb    %rdi,%rdi
  41a14c:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
  41a150:	48 83 c7 03          	add    $0x3,%rdi
  41a154:	e8 27 f2 ff ff       	callq  419380 <caml_record_backtrace>
  41a159:	e9 31 ff ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a15e:	48 89 df             	mov    %rbx,%rdi
  41a161:	48 89 e6             	mov    %rsp,%rsi
  41a164:	e8 a7 fd ff ff       	callq  419f10 <scanmult>
  41a169:	48 8b 3c 24          	mov    (%rsp),%rdi
  41a16d:	e8 ee 1a 00 00       	callq  41bc60 <caml_set_allocation_policy>
  41a172:	e9 18 ff ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a177:	be 88 13 64 00       	mov    $0x641388,%esi
  41a17c:	48 89 df             	mov    %rbx,%rdi
  41a17f:	e8 8c fd ff ff       	callq  419f10 <scanmult>
  41a184:	e9 06 ff ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a189:	be 50 c8 62 00       	mov    $0x62c850,%esi
  41a18e:	48 89 df             	mov    %rbx,%rdi
  41a191:	e8 7a fd ff ff       	callq  419f10 <scanmult>
  41a196:	e9 f4 fe ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a19b:	be 78 c8 62 00       	mov    $0x62c878,%esi
  41a1a0:	48 89 df             	mov    %rbx,%rdi
  41a1a3:	e8 68 fd ff ff       	callq  419f10 <scanmult>
  41a1a8:	e9 e2 fe ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a1ad:	be 00 cf 62 00       	mov    $0x62cf00,%esi
  41a1b2:	48 89 df             	mov    %rbx,%rdi
  41a1b5:	e8 56 fd ff ff       	callq  419f10 <scanmult>
  41a1ba:	e9 d0 fe ff ff       	jmpq   41a08f <caml_parse_ocamlrunparam+0x5f>
  41a1bf:	90                   	nop
  41a1c0:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
  41a1c4:	48 89 d3             	mov    %rdx,%rbx
  41a1c7:	e9 94 fe ff ff       	jmpq   41a060 <caml_parse_ocamlrunparam+0x30>
  41a1cc:	bf 4f ef 41 00       	mov    $0x41ef4f,%edi
  41a1d1:	e8 5a 77 fe ff       	callq  401930 <getenv@plt>
  41a1d6:	48 85 c0             	test   %rax,%rax
  41a1d9:	48 89 c3             	mov    %rax,%rbx
  41a1dc:	0f 84 b4 fe ff ff    	je     41a096 <caml_parse_ocamlrunparam+0x66>
  41a1e2:	e9 74 fe ff ff       	jmpq   41a05b <caml_parse_ocamlrunparam+0x2b>
  41a1e7:	e8 84 78 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41a1ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041a1f0 <caml_main>:
  41a1f0:	55                   	push   %rbp
  41a1f1:	53                   	push   %rbx
  41a1f2:	48 89 fd             	mov    %rdi,%rbp
  41a1f5:	31 db                	xor    %ebx,%ebx
  41a1f7:	48 83 ec 18          	sub    $0x18,%rsp
  41a1fb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41a202:	00 00 
  41a204:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41a209:	31 c0                	xor    %eax,%eax
  41a20b:	e8 40 b4 fe ff       	callq  405650 <caml_init_frame_descriptors>
  41a210:	e8 0b 23 ff ff       	callq  40c520 <caml_init_ieee_floats>
  41a215:	e8 86 ea ff ff       	callq  418ca0 <caml_init_custom_operations>
  41a21a:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
  41a21f:	48 89 05 aa 71 22 00 	mov    %rax,0x2271aa(%rip)        # 6413d0 <caml_top_of_stack>
  41a226:	e8 05 fe ff ff       	callq  41a030 <caml_parse_ocamlrunparam>
  41a22b:	48 8b 35 2e 26 21 00 	mov    0x21262e(%rip),%rsi        # 62c860 <caml_init_heap_wsz>
  41a232:	4c 8b 0d 17 26 21 00 	mov    0x212617(%rip),%r9        # 62c850 <caml_init_major_window>
  41a239:	4c 8b 05 38 26 21 00 	mov    0x212638(%rip),%r8        # 62c878 <caml_init_max_percent_free>
  41a240:	48 8b 0d 39 26 21 00 	mov    0x212639(%rip),%rcx        # 62c880 <caml_init_percent_free>
  41a247:	48 8b 15 1a 26 21 00 	mov    0x21261a(%rip),%rdx        # 62c868 <caml_init_heap_chunk_sz>
  41a24e:	48 8b 3d 1b 26 21 00 	mov    0x21261b(%rip),%rdi        # 62c870 <caml_init_minor_heap_wsz>
  41a255:	e8 06 9a ff ff       	callq  413c60 <caml_init_gc>
  41a25a:	e8 81 fd ff ff       	callq  419fe0 <caml_init_atom_table>
  41a25f:	48 8b 35 fa f3 20 00 	mov    0x20f3fa(%rip),%rsi        # 629660 <caml_data_segments>
  41a266:	48 85 f6             	test   %rsi,%rsi
  41a269:	74 3f                	je     41a2aa <caml_main+0xba>
  41a26b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41a270:	48 63 c3             	movslq %ebx,%rax
  41a273:	bf 04 00 00 00       	mov    $0x4,%edi
  41a278:	48 c1 e0 04          	shl    $0x4,%rax
  41a27c:	48 8b 90 68 96 62 00 	mov    0x629668(%rax),%rdx
  41a283:	48 83 c2 08          	add    $0x8,%rdx
  41a287:	e8 c4 eb fe ff       	callq  408e50 <caml_page_table_add>
  41a28c:	85 c0                	test   %eax,%eax
  41a28e:	0f 85 94 01 00 00    	jne    41a428 <caml_main+0x238>
  41a294:	83 c3 01             	add    $0x1,%ebx
  41a297:	48 63 c3             	movslq %ebx,%rax
  41a29a:	48 c1 e0 04          	shl    $0x4,%rax
  41a29e:	48 8b b0 60 96 62 00 	mov    0x629660(%rax),%rsi
  41a2a5:	48 85 f6             	test   %rsi,%rsi
  41a2a8:	75 c6                	jne    41a270 <caml_main+0x80>
  41a2aa:	48 8b 15 17 f4 20 00 	mov    0x20f417(%rip),%rdx        # 6296c8 <caml_code_segments+0x10>
  41a2b1:	48 8b 3d 00 f4 20 00 	mov    0x20f400(%rip),%rdi        # 6296b8 <caml_code_segments>
  41a2b8:	45 31 c9             	xor    %r9d,%r9d
  41a2bb:	48 8b 35 fe f3 20 00 	mov    0x20f3fe(%rip),%rsi        # 6296c0 <caml_code_segments+0x8>
  41a2c2:	45 31 c0             	xor    %r8d,%r8d
  41a2c5:	b8 01 00 00 00       	mov    $0x1,%eax
  41a2ca:	48 85 d2             	test   %rdx,%rdx
  41a2cd:	48 89 3d 94 7a 22 00 	mov    %rdi,0x227a94(%rip)        # 641d68 <caml_code_area_start>
  41a2d4:	48 89 35 a5 79 22 00 	mov    %rsi,0x2279a5(%rip)        # 641c80 <caml_code_area_end>
  41a2db:	75 1f                	jne    41a2fc <caml_main+0x10c>
  41a2dd:	eb 5b                	jmp    41a33a <caml_main+0x14a>
  41a2df:	90                   	nop
  41a2e0:	48 89 f1             	mov    %rsi,%rcx
  41a2e3:	83 c0 01             	add    $0x1,%eax
  41a2e6:	48 89 ce             	mov    %rcx,%rsi
  41a2e9:	48 63 d0             	movslq %eax,%rdx
  41a2ec:	48 c1 e2 04          	shl    $0x4,%rdx
  41a2f0:	48 8b 92 b8 96 62 00 	mov    0x6296b8(%rdx),%rdx
  41a2f7:	48 85 d2             	test   %rdx,%rdx
  41a2fa:	74 2c                	je     41a328 <caml_main+0x138>
  41a2fc:	48 39 d7             	cmp    %rdx,%rdi
  41a2ff:	76 09                	jbe    41a30a <caml_main+0x11a>
  41a301:	48 89 d7             	mov    %rdx,%rdi
  41a304:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  41a30a:	48 63 d0             	movslq %eax,%rdx
  41a30d:	48 c1 e2 04          	shl    $0x4,%rdx
  41a311:	48 8b 8a c0 96 62 00 	mov    0x6296c0(%rdx),%rcx
  41a318:	48 39 f1             	cmp    %rsi,%rcx
  41a31b:	76 c3                	jbe    41a2e0 <caml_main+0xf0>
  41a31d:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41a323:	eb be                	jmp    41a2e3 <caml_main+0xf3>
  41a325:	0f 1f 00             	nopl   (%rax)
  41a328:	45 84 c0             	test   %r8b,%r8b
  41a32b:	0f 85 0d 01 00 00    	jne    41a43e <caml_main+0x24e>
  41a331:	45 84 c9             	test   %r9b,%r9b
  41a334:	0f 85 f8 00 00 00    	jne    41a432 <caml_main+0x242>
  41a33a:	bf 28 00 00 00       	mov    $0x28,%edi
  41a33f:	e8 8c f4 fe ff       	callq  4097d0 <caml_stat_alloc>
  41a344:	48 89 c3             	mov    %rax,%rbx
  41a347:	48 8b 05 1a 7a 22 00 	mov    0x227a1a(%rip),%rax        # 641d68 <caml_code_area_start>
  41a34e:	be 08 00 00 00       	mov    $0x8,%esi
  41a353:	c6 43 20 00          	movb   $0x0,0x20(%rbx)
  41a357:	bf 40 14 64 00       	mov    $0x641440,%edi
  41a35c:	48 89 03             	mov    %rax,(%rbx)
  41a35f:	48 8b 05 1a 79 22 00 	mov    0x22791a(%rip),%rax        # 641c80 <caml_code_area_end>
  41a366:	48 89 43 08          	mov    %rax,0x8(%rbx)
  41a36a:	e8 71 1a 00 00       	callq  41bde0 <caml_ext_table_init>
  41a36f:	48 89 de             	mov    %rbx,%rsi
  41a372:	bf 40 14 64 00       	mov    $0x641440,%edi
  41a377:	e8 94 1a 00 00       	callq  41be10 <caml_ext_table_add>
  41a37c:	e8 4f 0c 00 00       	callq  41afd0 <caml_init_signals>
  41a381:	e8 ea ef ff ff       	callq  419370 <caml_init_backtrace>
  41a386:	e8 05 34 00 00       	callq  41d790 <caml_debugger_init>
  41a38b:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
  41a38f:	b8 5a eb 41 00       	mov    $0x41eb5a,%eax
  41a394:	bf a0 d2 63 00       	mov    $0x63d2a0,%edi
  41a399:	be 00 01 00 00       	mov    $0x100,%esi
  41a39e:	48 85 db             	test   %rbx,%rbx
  41a3a1:	48 0f 44 d8          	cmove  %rax,%rbx
  41a3a5:	e8 c6 ed ff ff       	callq  419170 <caml_executable_name>
  41a3aa:	85 c0                	test   %eax,%eax
  41a3ac:	bf a0 d2 63 00       	mov    $0x63d2a0,%edi
  41a3b1:	75 45                	jne    41a3f8 <caml_main+0x208>
  41a3b3:	48 89 ee             	mov    %rbp,%rsi
  41a3b6:	e8 25 89 ff ff       	callq  412ce0 <caml_sys_init>
  41a3bb:	31 f6                	xor    %esi,%esi
  41a3bd:	bf a0 1c 64 00       	mov    $0x641ca0,%edi
  41a3c2:	e8 a9 7a fe ff       	callq  401e70 <__sigsetjmp@plt>
  41a3c7:	85 c0                	test   %eax,%eax
  41a3c9:	74 3d                	je     41a408 <caml_main+0x218>
  41a3cb:	48 8b 05 ae 2e 22 00 	mov    0x222eae(%rip),%rax        # 63d280 <caml_termination_hook>
  41a3d2:	48 85 c0             	test   %rax,%rax
  41a3d5:	74 04                	je     41a3db <caml_main+0x1eb>
  41a3d7:	31 ff                	xor    %edi,%edi
  41a3d9:	ff d0                	callq  *%rax
  41a3db:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41a3e0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41a3e7:	00 00 
  41a3e9:	75 5f                	jne    41a44a <caml_main+0x25a>
  41a3eb:	48 83 c4 18          	add    $0x18,%rsp
  41a3ef:	5b                   	pop    %rbx
  41a3f0:	5d                   	pop    %rbp
  41a3f1:	c3                   	retq   
  41a3f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41a3f8:	48 89 df             	mov    %rbx,%rdi
  41a3fb:	e8 c0 eb ff ff       	callq  418fc0 <caml_search_exe_in_path>
  41a400:	48 89 c7             	mov    %rax,%rdi
  41a403:	eb ae                	jmp    41a3b3 <caml_main+0x1c3>
  41a405:	0f 1f 00             	nopl   (%rax)
  41a408:	e8 6f f9 ff ff       	callq  419d7c <caml_start_program>
  41a40d:	48 89 c2             	mov    %rax,%rdx
  41a410:	83 e2 03             	and    $0x3,%edx
  41a413:	48 83 fa 02          	cmp    $0x2,%rdx
  41a417:	75 c2                	jne    41a3db <caml_main+0x1eb>
  41a419:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
  41a41d:	48 89 c7             	mov    %rax,%rdi
  41a420:	e8 db 2e 00 00       	callq  41d300 <caml_fatal_uncaught_exception>
  41a425:	0f 1f 00             	nopl   (%rax)
  41a428:	bf 60 ef 41 00       	mov    $0x41ef60,%edi
  41a42d:	e8 be 18 00 00       	callq  41bcf0 <caml_fatal_error>
  41a432:	48 89 0d 47 78 22 00 	mov    %rcx,0x227847(%rip)        # 641c80 <caml_code_area_end>
  41a439:	e9 fc fe ff ff       	jmpq   41a33a <caml_main+0x14a>
  41a43e:	48 89 3d 23 79 22 00 	mov    %rdi,0x227923(%rip)        # 641d68 <caml_code_area_start>
  41a445:	e9 e7 fe ff ff       	jmpq   41a331 <caml_main+0x141>
  41a44a:	e8 21 76 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41a44f:	90                   	nop

000000000041a450 <caml_startup>:
  41a450:	e9 9b fd ff ff       	jmpq   41a1f0 <caml_main>
  41a455:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a45c:	00 00 00 
  41a45f:	90                   	nop

000000000041a460 <caml_raise>:
  41a460:	48 83 ec 18          	sub    $0x18,%rsp
  41a464:	48 8b 05 fd 42 21 00 	mov    0x2142fd(%rip),%rax        # 62e768 <caml_channel_mutex_unlock_exn>
  41a46b:	48 85 c0             	test   %rax,%rax
  41a46e:	74 0c                	je     41a47c <caml_raise+0x1c>
  41a470:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41a475:	ff d0                	callq  *%rax
  41a477:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a47c:	48 8b 15 1d 2f 22 00 	mov    0x222f1d(%rip),%rdx        # 63d3a0 <caml_exception_pointer>
  41a483:	48 85 d2             	test   %rdx,%rdx
  41a486:	74 31                	je     41a4b9 <caml_raise+0x59>
  41a488:	48 8b 05 b9 24 21 00 	mov    0x2124b9(%rip),%rax        # 62c948 <caml_local_roots>
  41a48f:	48 39 c2             	cmp    %rax,%rdx
  41a492:	76 20                	jbe    41a4b4 <caml_raise+0x54>
  41a494:	48 85 c0             	test   %rax,%rax
  41a497:	75 0c                	jne    41a4a5 <caml_raise+0x45>
  41a499:	eb 19                	jmp    41a4b4 <caml_raise+0x54>
  41a49b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41a4a0:	48 39 c2             	cmp    %rax,%rdx
  41a4a3:	76 0f                	jbe    41a4b4 <caml_raise+0x54>
  41a4a5:	48 8b 00             	mov    (%rax),%rax
  41a4a8:	48 85 c0             	test   %rax,%rax
  41a4ab:	48 89 05 96 24 21 00 	mov    %rax,0x212496(%rip)        # 62c948 <caml_local_roots>
  41a4b2:	75 ec                	jne    41a4a0 <caml_raise+0x40>
  41a4b4:	e8 7b f9 ff ff       	callq  419e34 <caml_raise_exception>
  41a4b9:	e8 42 2e 00 00       	callq  41d300 <caml_fatal_uncaught_exception>
  41a4be:	66 90                	xchg   %ax,%ax

000000000041a4c0 <caml_raise_constant>:
  41a4c0:	48 83 ec 08          	sub    $0x8,%rsp
  41a4c4:	e8 97 ff ff ff       	callq  41a460 <caml_raise>
  41a4c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041a4d0 <caml_raise_with_arg>:
  41a4d0:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  41a4d7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41a4de:	00 00 
  41a4e0:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  41a4e7:	00 
  41a4e8:	31 c0                	xor    %eax,%eax
  41a4ea:	48 8b 05 57 24 21 00 	mov    0x212457(%rip),%rax        # 62c948 <caml_local_roots>
  41a4f1:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41a4f6:	bf 02 00 00 00       	mov    $0x2,%edi
  41a4fb:	48 89 34 24          	mov    %rsi,(%rsp)
  41a4ff:	31 f6                	xor    %esi,%esi
  41a501:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  41a508:	00 00 
  41a50a:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
  41a511:	00 00 
  41a513:	48 89 64 24 40       	mov    %rsp,0x40(%rsp)
  41a518:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  41a51d:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  41a522:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41a529:	00 00 
  41a52b:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  41a532:	00 00 
  41a534:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  41a53b:	00 00 
  41a53d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  41a542:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41a547:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  41a54c:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  41a551:	48 89 05 f0 23 21 00 	mov    %rax,0x2123f0(%rip)        # 62c948 <caml_local_roots>
  41a558:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  41a55d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
  41a562:	e8 19 1d 00 00       	callq  41c280 <caml_alloc_small>
  41a567:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41a56c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41a571:	48 89 10             	mov    %rdx,(%rax)
  41a574:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41a579:	48 8b 14 24          	mov    (%rsp),%rdx
  41a57d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  41a581:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41a586:	e8 d5 fe ff ff       	callq  41a460 <caml_raise>
  41a58b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041a590 <caml_raise_with_args>:
  41a590:	55                   	push   %rbp
  41a591:	53                   	push   %rbx
  41a592:	89 f5                	mov    %esi,%ebp
  41a594:	48 89 d3             	mov    %rdx,%rbx
  41a597:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  41a59e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41a5a5:	00 00 
  41a5a7:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
  41a5ae:	00 
  41a5af:	31 c0                	xor    %eax,%eax
  41a5b1:	48 8b 05 90 23 21 00 	mov    0x212390(%rip),%rax        # 62c948 <caml_local_roots>
  41a5b8:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41a5bd:	8d 7e 01             	lea    0x1(%rsi),%edi
  41a5c0:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
  41a5c5:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  41a5cc:	00 00 
  41a5ce:	48 63 ff             	movslq %edi,%rdi
  41a5d1:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41a5d8:	00 00 
  41a5da:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
  41a5e1:	00 00 
  41a5e3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41a5e8:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  41a5ed:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  41a5f2:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  41a5f7:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
  41a5fc:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
  41a601:	48 89 05 40 23 21 00 	mov    %rax,0x212340(%rip)        # 62c948 <caml_local_roots>
  41a608:	48 63 c6             	movslq %esi,%rax
  41a60b:	31 f6                	xor    %esi,%esi
  41a60d:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  41a612:	e8 69 1c 00 00       	callq  41c280 <caml_alloc_small>
  41a617:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41a61c:	31 c9                	xor    %ecx,%ecx
  41a61e:	85 ed                	test   %ebp,%ebp
  41a620:	48 89 10             	mov    %rdx,(%rax)
  41a623:	48 89 da             	mov    %rbx,%rdx
  41a626:	7e 1d                	jle    41a645 <caml_raise_with_args+0xb5>
  41a628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41a62f:	00 
  41a630:	4c 8b 02             	mov    (%rdx),%r8
  41a633:	83 c1 01             	add    $0x1,%ecx
  41a636:	48 83 c2 08          	add    $0x8,%rdx
  41a63a:	48 63 f1             	movslq %ecx,%rsi
  41a63d:	39 cd                	cmp    %ecx,%ebp
  41a63f:	4c 89 04 f0          	mov    %r8,(%rax,%rsi,8)
  41a643:	75 eb                	jne    41a630 <caml_raise_with_args+0xa0>
  41a645:	48 89 c7             	mov    %rax,%rdi
  41a648:	e8 13 fe ff ff       	callq  41a460 <caml_raise>
  41a64d:	0f 1f 00             	nopl   (%rax)

000000000041a650 <caml_raise_with_string>:
  41a650:	48 83 ec 68          	sub    $0x68,%rsp
  41a654:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41a65b:	00 00 
  41a65d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  41a662:	31 c0                	xor    %eax,%eax
  41a664:	48 8b 05 dd 22 21 00 	mov    0x2122dd(%rip),%rax        # 62c948 <caml_local_roots>
  41a66b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41a670:	48 89 f7             	mov    %rsi,%rdi
  41a673:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  41a67a:	00 00 
  41a67c:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41a683:	00 00 
  41a685:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41a68a:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  41a68f:	48 89 05 b2 22 21 00 	mov    %rax,0x2122b2(%rip)        # 62c948 <caml_local_roots>
  41a696:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  41a69b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  41a6a0:	e8 eb 1d 00 00       	callq  41c490 <caml_copy_string>
  41a6a5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41a6aa:	48 89 c6             	mov    %rax,%rsi
  41a6ad:	e8 1e fe ff ff       	callq  41a4d0 <caml_raise_with_arg>
  41a6b2:	0f 1f 40 00          	nopl   0x0(%rax)
  41a6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a6bd:	00 00 00 

000000000041a6c0 <caml_failwith>:
  41a6c0:	48 89 fe             	mov    %rdi,%rsi
  41a6c3:	48 83 ec 08          	sub    $0x8,%rsp
  41a6c7:	bf 58 93 62 00       	mov    $0x629358,%edi
  41a6cc:	e8 7f ff ff ff       	callq  41a650 <caml_raise_with_string>
  41a6d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41a6d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a6dd:	00 00 00 

000000000041a6e0 <caml_invalid_argument>:
  41a6e0:	48 89 fe             	mov    %rdi,%rsi
  41a6e3:	48 83 ec 08          	sub    $0x8,%rsp
  41a6e7:	bf 80 93 62 00       	mov    $0x629380,%edi
  41a6ec:	e8 5f ff ff ff       	callq  41a650 <caml_raise_with_string>
  41a6f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41a6f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a6fd:	00 00 00 

000000000041a700 <caml_raise_out_of_memory>:
  41a700:	48 83 ec 08          	sub    $0x8,%rsp
  41a704:	bf f8 92 62 00       	mov    $0x6292f8,%edi
  41a709:	e8 52 fd ff ff       	callq  41a460 <caml_raise>
  41a70e:	66 90                	xchg   %ax,%ax

000000000041a710 <caml_raise_stack_overflow>:
  41a710:	48 83 ec 08          	sub    $0x8,%rsp
  41a714:	bf 80 94 62 00       	mov    $0x629480,%edi
  41a719:	e8 42 fd ff ff       	callq  41a460 <caml_raise>
  41a71e:	66 90                	xchg   %ax,%ax

000000000041a720 <caml_raise_sys_error>:
  41a720:	48 89 fe             	mov    %rdi,%rsi
  41a723:	48 83 ec 08          	sub    $0x8,%rsp
  41a727:	bf 28 93 62 00       	mov    $0x629328,%edi
  41a72c:	e8 9f fd ff ff       	callq  41a4d0 <caml_raise_with_arg>
  41a731:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41a736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a73d:	00 00 00 

000000000041a740 <caml_raise_end_of_file>:
  41a740:	48 83 ec 08          	sub    $0x8,%rsp
  41a744:	bf b8 93 62 00       	mov    $0x6293b8,%edi
  41a749:	e8 12 fd ff ff       	callq  41a460 <caml_raise>
  41a74e:	66 90                	xchg   %ax,%ax

000000000041a750 <caml_raise_zero_divide>:
  41a750:	48 83 ec 08          	sub    $0x8,%rsp
  41a754:	bf e8 93 62 00       	mov    $0x6293e8,%edi
  41a759:	e8 02 fd ff ff       	callq  41a460 <caml_raise>
  41a75e:	66 90                	xchg   %ax,%ax

000000000041a760 <caml_raise_not_found>:
  41a760:	48 83 ec 08          	sub    $0x8,%rsp
  41a764:	bf 20 94 62 00       	mov    $0x629420,%edi
  41a769:	e8 f2 fc ff ff       	callq  41a460 <caml_raise>
  41a76e:	66 90                	xchg   %ax,%ax

000000000041a770 <caml_raise_sys_blocked_io>:
  41a770:	48 83 ec 08          	sub    $0x8,%rsp
  41a774:	bf b0 94 62 00       	mov    $0x6294b0,%edi
  41a779:	e8 e2 fc ff ff       	callq  41a460 <caml_raise>
  41a77e:	66 90                	xchg   %ax,%ax

000000000041a780 <caml_array_bound_error>:
  41a780:	48 83 ec 08          	sub    $0x8,%rsp
  41a784:	48 8b 05 1d 2c 22 00 	mov    0x222c1d(%rip),%rax        # 63d3a8 <caml_array_bound_error_exn>
  41a78b:	48 85 c0             	test   %rax,%rax
  41a78e:	74 08                	je     41a798 <caml_array_bound_error+0x18>
  41a790:	48 8b 38             	mov    (%rax),%rdi
  41a793:	e8 c8 fc ff ff       	callq  41a460 <caml_raise>
  41a798:	bf 18 f1 41 00       	mov    $0x41f118,%edi
  41a79d:	e8 0e b1 ff ff       	callq  4158b0 <caml_named_value>
  41a7a2:	48 85 c0             	test   %rax,%rax
  41a7a5:	48 89 05 fc 2b 22 00 	mov    %rax,0x222bfc(%rip)        # 63d3a8 <caml_array_bound_error_exn>
  41a7ac:	75 e2                	jne    41a790 <caml_array_bound_error+0x10>
  41a7ae:	48 8b 0d 4b 21 21 00 	mov    0x21214b(%rip),%rcx        # 62c900 <stderr@@GLIBC_2.2.5>
  41a7b5:	bf 38 f1 41 00       	mov    $0x41f138,%edi
  41a7ba:	ba 3f 00 00 00       	mov    $0x3f,%edx
  41a7bf:	be 01 00 00 00       	mov    $0x1,%esi
  41a7c4:	e8 17 76 fe ff       	callq  401de0 <fwrite@plt>
  41a7c9:	bf 02 00 00 00       	mov    $0x2,%edi
  41a7ce:	e8 fd 75 fe ff       	callq  401dd0 <exit@plt>
  41a7d3:	0f 1f 00             	nopl   (%rax)
  41a7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a7dd:	00 00 00 

000000000041a7e0 <caml_is_special_exception>:
  41a7e0:	48 81 ff 50 94 62 00 	cmp    $0x629450,%rdi
  41a7e7:	74 17                	je     41a800 <caml_is_special_exception+0x20>
  41a7e9:	48 81 ff e0 94 62 00 	cmp    $0x6294e0,%rdi
  41a7f0:	74 0e                	je     41a800 <caml_is_special_exception+0x20>
  41a7f2:	31 c0                	xor    %eax,%eax
  41a7f4:	48 81 ff 10 95 62 00 	cmp    $0x629510,%rdi
  41a7fb:	0f 94 c0             	sete   %al
  41a7fe:	c3                   	retq   
  41a7ff:	90                   	nop
  41a800:	b8 01 00 00 00       	mov    $0x1,%eax
  41a805:	c3                   	retq   
  41a806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a80d:	00 00 00 

000000000041a810 <caml_enter_blocking_section_default>:
  41a810:	48 c7 05 ad 2b 22 00 	movq   $0x1,0x222bad(%rip)        # 63d3c8 <caml_async_signal_mode>
  41a817:	01 00 00 00 
  41a81b:	c3                   	retq   
  41a81c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041a820 <caml_leave_blocking_section_default>:
  41a820:	48 c7 05 9d 2b 22 00 	movq   $0x0,0x222b9d(%rip)        # 63d3c8 <caml_async_signal_mode>
  41a827:	00 00 00 00 
  41a82b:	c3                   	retq   
  41a82c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041a830 <caml_try_leave_blocking_section_default>:
  41a830:	31 c0                	xor    %eax,%eax
  41a832:	48 87 05 8f 2b 22 00 	xchg   %rax,0x222b8f(%rip)        # 63d3c8 <caml_async_signal_mode>
  41a839:	c3                   	retq   
  41a83a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041a840 <caml_record_signal>:
  41a840:	48 8b 05 69 26 21 00 	mov    0x212669(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  41a847:	48 63 ff             	movslq %edi,%rdi
  41a84a:	48 c7 04 fd 80 1d 64 	movq   $0x1,0x641d80(,%rdi,8)
  41a851:	00 01 00 00 00 
  41a856:	48 c7 05 57 2b 22 00 	movq   $0x1,0x222b57(%rip)        # 63d3b8 <caml_signals_are_pending>
  41a85d:	01 00 00 00 
  41a861:	48 89 05 38 26 21 00 	mov    %rax,0x212638(%rip)        # 62cea0 <caml_young_limit>
  41a868:	c3                   	retq   
  41a869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041a870 <caml_execute_signal>:
  41a870:	41 54                	push   %r12
  41a872:	55                   	push   %rbp
  41a873:	89 fd                	mov    %edi,%ebp
  41a875:	53                   	push   %rbx
  41a876:	89 f3                	mov    %esi,%ebx
  41a878:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  41a87f:	48 89 e7             	mov    %rsp,%rdi
  41a882:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41a889:	00 00 
  41a88b:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  41a892:	00 
  41a893:	31 c0                	xor    %eax,%eax
  41a895:	e8 56 73 fe ff       	callq  401bf0 <sigemptyset@plt>
  41a89a:	89 ee                	mov    %ebp,%esi
  41a89c:	48 89 e7             	mov    %rsp,%rdi
  41a89f:	e8 dc 75 fe ff       	callq  401e80 <sigaddset@plt>
  41a8a4:	31 ff                	xor    %edi,%edi
  41a8a6:	48 89 e6             	mov    %rsp,%rsi
  41a8a9:	48 89 e2             	mov    %rsp,%rdx
  41a8ac:	e8 8f 70 fe ff       	callq  401940 <sigprocmask@plt>
  41a8b1:	48 8b 05 08 2b 22 00 	mov    0x222b08(%rip),%rax        # 63d3c0 <caml_signal_handlers>
  41a8b8:	4c 63 c5             	movslq %ebp,%r8
  41a8bb:	83 fd 06             	cmp    $0x6,%ebp
  41a8be:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
  41a8c5:	4a 8b 3c c0          	mov    (%rax,%r8,8),%rdi
  41a8c9:	74 30                	je     41a8fb <caml_execute_signal+0x8b>
  41a8cb:	ba a8 f1 41 00       	mov    $0x41f1a8,%edx
  41a8d0:	b9 0e 00 00 00       	mov    $0xe,%ecx
  41a8d5:	b8 01 00 00 00       	mov    $0x1,%eax
  41a8da:	eb 12                	jmp    41a8ee <caml_execute_signal+0x7e>
  41a8dc:	0f 1f 40 00          	nopl   0x0(%rax)
  41a8e0:	83 c0 01             	add    $0x1,%eax
  41a8e3:	83 f8 1c             	cmp    $0x1c,%eax
  41a8e6:	74 48                	je     41a930 <caml_execute_signal+0xc0>
  41a8e8:	8b 0a                	mov    (%rdx),%ecx
  41a8ea:	48 83 c2 04          	add    $0x4,%rdx
  41a8ee:	39 cd                	cmp    %ecx,%ebp
  41a8f0:	75 ee                	jne    41a8e0 <caml_execute_signal+0x70>
  41a8f2:	f7 d0                	not    %eax
  41a8f4:	48 98                	cltq   
  41a8f6:	48 8d 74 00 01       	lea    0x1(%rax,%rax,1),%rsi
  41a8fb:	e8 9c f5 ff ff       	callq  419e9c <caml_callback_exn>
  41a900:	85 db                	test   %ebx,%ebx
  41a902:	49 89 c4             	mov    %rax,%r12
  41a905:	74 3a                	je     41a941 <caml_execute_signal+0xd1>
  41a907:	83 e0 03             	and    $0x3,%eax
  41a90a:	48 83 f8 02          	cmp    $0x2,%rax
  41a90e:	74 50                	je     41a960 <caml_execute_signal+0xf0>
  41a910:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
  41a917:	00 
  41a918:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41a91f:	00 00 
  41a921:	75 62                	jne    41a985 <caml_execute_signal+0x115>
  41a923:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  41a92a:	5b                   	pop    %rbx
  41a92b:	5d                   	pop    %rbp
  41a92c:	41 5c                	pop    %r12
  41a92e:	c3                   	retq   
  41a92f:	90                   	nop
  41a930:	4b 8d 74 00 01       	lea    0x1(%r8,%r8,1),%rsi
  41a935:	e8 62 f5 ff ff       	callq  419e9c <caml_callback_exn>
  41a93a:	85 db                	test   %ebx,%ebx
  41a93c:	49 89 c4             	mov    %rax,%r12
  41a93f:	75 c6                	jne    41a907 <caml_execute_signal+0x97>
  41a941:	31 d2                	xor    %edx,%edx
  41a943:	48 89 e6             	mov    %rsp,%rsi
  41a946:	bf 02 00 00 00       	mov    $0x2,%edi
  41a94b:	e8 f0 6f fe ff       	callq  401940 <sigprocmask@plt>
  41a950:	4c 89 e0             	mov    %r12,%rax
  41a953:	83 e0 03             	and    $0x3,%eax
  41a956:	48 83 f8 02          	cmp    $0x2,%rax
  41a95a:	75 b4                	jne    41a910 <caml_execute_signal+0xa0>
  41a95c:	eb 1b                	jmp    41a979 <caml_execute_signal+0x109>
  41a95e:	66 90                	xchg   %ax,%ax
  41a960:	89 ee                	mov    %ebp,%esi
  41a962:	48 89 e7             	mov    %rsp,%rdi
  41a965:	e8 e6 73 fe ff       	callq  401d50 <sigdelset@plt>
  41a96a:	31 d2                	xor    %edx,%edx
  41a96c:	48 89 e6             	mov    %rsp,%rsi
  41a96f:	bf 02 00 00 00       	mov    $0x2,%edi
  41a974:	e8 c7 6f fe ff       	callq  401940 <sigprocmask@plt>
  41a979:	4c 89 e7             	mov    %r12,%rdi
  41a97c:	48 83 e7 fc          	and    $0xfffffffffffffffc,%rdi
  41a980:	e8 db fa ff ff       	callq  41a460 <caml_raise>
  41a985:	e8 e6 70 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41a98a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041a990 <caml_process_pending_signals.part.0>:
  41a990:	53                   	push   %rbx
  41a991:	48 c7 05 1c 2a 22 00 	movq   $0x0,0x222a1c(%rip)        # 63d3b8 <caml_signals_are_pending>
  41a998:	00 00 00 00 
  41a99c:	31 db                	xor    %ebx,%ebx
  41a99e:	eb 08                	jmp    41a9a8 <caml_process_pending_signals.part.0+0x18>
  41a9a0:	83 c3 01             	add    $0x1,%ebx
  41a9a3:	83 fb 41             	cmp    $0x41,%ebx
  41a9a6:	74 2d                	je     41a9d5 <caml_process_pending_signals.part.0+0x45>
  41a9a8:	48 63 c3             	movslq %ebx,%rax
  41a9ab:	48 8b 14 c5 80 1d 64 	mov    0x641d80(,%rax,8),%rdx
  41a9b2:	00 
  41a9b3:	48 85 d2             	test   %rdx,%rdx
  41a9b6:	74 e8                	je     41a9a0 <caml_process_pending_signals.part.0+0x10>
  41a9b8:	31 f6                	xor    %esi,%esi
  41a9ba:	89 df                	mov    %ebx,%edi
  41a9bc:	83 c3 01             	add    $0x1,%ebx
  41a9bf:	48 c7 04 c5 80 1d 64 	movq   $0x0,0x641d80(,%rax,8)
  41a9c6:	00 00 00 00 00 
  41a9cb:	e8 a0 fe ff ff       	callq  41a870 <caml_execute_signal>
  41a9d0:	83 fb 41             	cmp    $0x41,%ebx
  41a9d3:	75 d3                	jne    41a9a8 <caml_process_pending_signals.part.0+0x18>
  41a9d5:	5b                   	pop    %rbx
  41a9d6:	c3                   	retq   
  41a9d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41a9de:	00 00 

000000000041a9e0 <caml_process_pending_signals>:
  41a9e0:	48 8b 05 d1 29 22 00 	mov    0x2229d1(%rip),%rax        # 63d3b8 <caml_signals_are_pending>
  41a9e7:	48 85 c0             	test   %rax,%rax
  41a9ea:	74 04                	je     41a9f0 <caml_process_pending_signals+0x10>
  41a9ec:	eb a2                	jmp    41a990 <caml_process_pending_signals.part.0>
  41a9ee:	66 90                	xchg   %ax,%ax
  41a9f0:	f3 c3                	repz retq 
  41a9f2:	0f 1f 40 00          	nopl   0x0(%rax)
  41a9f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41a9fd:	00 00 00 

000000000041aa00 <caml_enter_blocking_section>:
  41aa00:	48 83 ec 08          	sub    $0x8,%rsp
  41aa04:	eb 22                	jmp    41aa28 <caml_enter_blocking_section+0x28>
  41aa06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41aa0d:	00 00 00 
  41aa10:	ff 15 82 1e 21 00    	callq  *0x211e82(%rip)        # 62c898 <caml_enter_blocking_section_hook>
  41aa16:	48 8b 05 9b 29 22 00 	mov    0x22299b(%rip),%rax        # 63d3b8 <caml_signals_are_pending>
  41aa1d:	48 85 c0             	test   %rax,%rax
  41aa20:	74 1e                	je     41aa40 <caml_enter_blocking_section+0x40>
  41aa22:	ff 15 68 1e 21 00    	callq  *0x211e68(%rip)        # 62c890 <caml_leave_blocking_section_hook>
  41aa28:	48 8b 05 89 29 22 00 	mov    0x222989(%rip),%rax        # 63d3b8 <caml_signals_are_pending>
  41aa2f:	48 85 c0             	test   %rax,%rax
  41aa32:	74 dc                	je     41aa10 <caml_enter_blocking_section+0x10>
  41aa34:	e8 57 ff ff ff       	callq  41a990 <caml_process_pending_signals.part.0>
  41aa39:	eb d5                	jmp    41aa10 <caml_enter_blocking_section+0x10>
  41aa3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41aa40:	48 83 c4 08          	add    $0x8,%rsp
  41aa44:	c3                   	retq   
  41aa45:	90                   	nop
  41aa46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41aa4d:	00 00 00 

000000000041aa50 <caml_leave_blocking_section>:
  41aa50:	55                   	push   %rbp
  41aa51:	53                   	push   %rbx
  41aa52:	48 83 ec 08          	sub    $0x8,%rsp
  41aa56:	e8 15 6f fe ff       	callq  401970 <__errno_location@plt>
  41aa5b:	48 89 c3             	mov    %rax,%rbx
  41aa5e:	8b 28                	mov    (%rax),%ebp
  41aa60:	ff 15 2a 1e 21 00    	callq  *0x211e2a(%rip)        # 62c890 <caml_leave_blocking_section_hook>
  41aa66:	48 8b 05 4b 29 22 00 	mov    0x22294b(%rip),%rax        # 63d3b8 <caml_signals_are_pending>
  41aa6d:	48 85 c0             	test   %rax,%rax
  41aa70:	74 05                	je     41aa77 <caml_leave_blocking_section+0x27>
  41aa72:	e8 19 ff ff ff       	callq  41a990 <caml_process_pending_signals.part.0>
  41aa77:	89 2b                	mov    %ebp,(%rbx)
  41aa79:	48 83 c4 08          	add    $0x8,%rsp
  41aa7d:	5b                   	pop    %rbx
  41aa7e:	5d                   	pop    %rbp
  41aa7f:	c3                   	retq   

000000000041aa80 <caml_request_major_slice>:
  41aa80:	48 8b 05 29 24 21 00 	mov    0x212429(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  41aa87:	c7 05 23 29 22 00 01 	movl   $0x1,0x222923(%rip)        # 63d3b4 <caml_requested_major_slice>
  41aa8e:	00 00 00 
  41aa91:	48 89 05 08 24 21 00 	mov    %rax,0x212408(%rip)        # 62cea0 <caml_young_limit>
  41aa98:	c3                   	retq   
  41aa99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041aaa0 <caml_request_minor_gc>:
  41aaa0:	48 8b 05 09 24 21 00 	mov    0x212409(%rip),%rax        # 62ceb0 <caml_young_alloc_end>
  41aaa7:	c7 05 ff 28 22 00 01 	movl   $0x1,0x2228ff(%rip)        # 63d3b0 <caml_requested_minor_gc>
  41aaae:	00 00 00 
  41aab1:	48 89 05 e8 23 21 00 	mov    %rax,0x2123e8(%rip)        # 62cea0 <caml_young_limit>
  41aab8:	c3                   	retq   
  41aab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041aac0 <caml_convert_signal_number>:
  41aac0:	89 f8                	mov    %edi,%eax
  41aac2:	c1 e8 1f             	shr    $0x1f,%eax
  41aac5:	84 c0                	test   %al,%al
  41aac7:	74 17                	je     41aae0 <caml_convert_signal_number+0x20>
  41aac9:	83 ff e3             	cmp    $0xffffffe3,%edi
  41aacc:	76 12                	jbe    41aae0 <caml_convert_signal_number+0x20>
  41aace:	f7 d7                	not    %edi
  41aad0:	48 63 ff             	movslq %edi,%rdi
  41aad3:	8b 04 bd a0 f1 41 00 	mov    0x41f1a0(,%rdi,4),%eax
  41aada:	c3                   	retq   
  41aadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41aae0:	89 f8                	mov    %edi,%eax
  41aae2:	c3                   	retq   
  41aae3:	0f 1f 00             	nopl   (%rax)
  41aae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41aaed:	00 00 00 

000000000041aaf0 <caml_rev_convert_signal_number>:
  41aaf0:	83 ff 06             	cmp    $0x6,%edi
  41aaf3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41aaf8:	74 30                	je     41ab2a <caml_rev_convert_signal_number+0x3a>
  41aafa:	ba a8 f1 41 00       	mov    $0x41f1a8,%edx
  41aaff:	b9 0e 00 00 00       	mov    $0xe,%ecx
  41ab04:	b8 01 00 00 00       	mov    $0x1,%eax
  41ab09:	eb 13                	jmp    41ab1e <caml_rev_convert_signal_number+0x2e>
  41ab0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41ab10:	83 c0 01             	add    $0x1,%eax
  41ab13:	83 f8 1c             	cmp    $0x1c,%eax
  41ab16:	74 10                	je     41ab28 <caml_rev_convert_signal_number+0x38>
  41ab18:	8b 0a                	mov    (%rdx),%ecx
  41ab1a:	48 83 c2 04          	add    $0x4,%rdx
  41ab1e:	39 cf                	cmp    %ecx,%edi
  41ab20:	75 ee                	jne    41ab10 <caml_rev_convert_signal_number+0x20>
  41ab22:	f7 d0                	not    %eax
  41ab24:	c3                   	retq   
  41ab25:	0f 1f 00             	nopl   (%rax)
  41ab28:	89 f8                	mov    %edi,%eax
  41ab2a:	f3 c3                	repz retq 
  41ab2c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041ab30 <caml_install_signal_handler>:
  41ab30:	55                   	push   %rbp
  41ab31:	53                   	push   %rbx
  41ab32:	48 89 f8             	mov    %rdi,%rax
  41ab35:	48 d1 f8             	sar    %rax
  41ab38:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  41ab3f:	48 8b 2d 02 1e 21 00 	mov    0x211e02(%rip),%rbp        # 62c948 <caml_local_roots>
  41ab46:	48 63 d8             	movslq %eax,%rbx
  41ab49:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  41ab4e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41ab53:	48 89 c7             	mov    %rax,%rdi
  41ab56:	c1 e8 1f             	shr    $0x1f,%eax
  41ab59:	48 89 34 24          	mov    %rsi,(%rsp)
  41ab5d:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
  41ab64:	00 00 
  41ab66:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
  41ab6b:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  41ab70:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
  41ab75:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  41ab7c:	00 00 
  41ab7e:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
  41ab85:	00 
  41ab86:	31 c9                	xor    %ecx,%ecx
  41ab88:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
  41ab8d:	48 8d 54 24 60       	lea    0x60(%rsp),%rdx
  41ab92:	84 c0                	test   %al,%al
  41ab94:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
  41ab9b:	00 00 
  41ab9d:	48 89 64 24 40       	mov    %rsp,0x40(%rsp)
  41aba2:	48 89 15 9f 1d 21 00 	mov    %rdx,0x211d9f(%rip)        # 62c948 <caml_local_roots>
  41aba9:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  41abae:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41abb5:	00 00 
  41abb7:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
  41abbe:	00 00 
  41abc0:	48 c7 44 24 68 01 00 	movq   $0x1,0x68(%rsp)
  41abc7:	00 00 
  41abc9:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
  41abce:	74 12                	je     41abe2 <caml_install_signal_handler+0xb2>
  41abd0:	83 ff e3             	cmp    $0xffffffe3,%edi
  41abd3:	76 0d                	jbe    41abe2 <caml_install_signal_handler+0xb2>
  41abd5:	f7 d7                	not    %edi
  41abd7:	48 63 ff             	movslq %edi,%rdi
  41abda:	48 63 1c bd a0 f1 41 	movslq 0x41f1a0(,%rdi,4),%rbx
  41abe1:	00 
  41abe2:	83 fb 40             	cmp    $0x40,%ebx
  41abe5:	0f 87 22 01 00 00    	ja     41ad0d <caml_install_signal_handler+0x1dd>
  41abeb:	48 8b 04 24          	mov    (%rsp),%rax
  41abef:	31 f6                	xor    %esi,%esi
  41abf1:	48 83 f8 01          	cmp    $0x1,%rax
  41abf5:	74 0d                	je     41ac04 <caml_install_signal_handler+0xd4>
  41abf7:	31 f6                	xor    %esi,%esi
  41abf9:	48 83 f8 03          	cmp    $0x3,%rax
  41abfd:	40 0f 95 c6          	setne  %sil
  41ac01:	83 c6 01             	add    $0x1,%esi
  41ac04:	89 df                	mov    %ebx,%edi
  41ac06:	e8 e5 02 00 00       	callq  41aef0 <caml_set_signal_action>
  41ac0b:	83 f8 01             	cmp    $0x1,%eax
  41ac0e:	0f 84 bc 00 00 00    	je     41acd0 <caml_install_signal_handler+0x1a0>
  41ac14:	83 f8 02             	cmp    $0x2,%eax
  41ac17:	74 77                	je     41ac90 <caml_install_signal_handler+0x160>
  41ac19:	85 c0                	test   %eax,%eax
  41ac1b:	0f 84 9f 00 00 00    	je     41acc0 <caml_install_signal_handler+0x190>
  41ac21:	bf 01 00 00 00       	mov    $0x1,%edi
  41ac26:	e8 55 6e ff ff       	callq  411a80 <caml_sys_error>
  41ac2b:	48 8b 04 24          	mov    (%rsp),%rax
  41ac2f:	a8 01                	test   $0x1,%al
  41ac31:	75 1c                	jne    41ac4f <caml_install_signal_handler+0x11f>
  41ac33:	48 8b 15 86 27 22 00 	mov    0x222786(%rip),%rdx        # 63d3c0 <caml_signal_handlers>
  41ac3a:	48 85 d2             	test   %rdx,%rdx
  41ac3d:	0f 84 9d 00 00 00    	je     41ace0 <caml_install_signal_handler+0x1b0>
  41ac43:	48 8b 30             	mov    (%rax),%rsi
  41ac46:	48 8d 3c da          	lea    (%rdx,%rbx,8),%rdi
  41ac4a:	e8 c1 ea fe ff       	callq  409710 <caml_modify>
  41ac4f:	48 8b 05 62 27 22 00 	mov    0x222762(%rip),%rax        # 63d3b8 <caml_signals_are_pending>
  41ac56:	48 85 c0             	test   %rax,%rax
  41ac59:	74 05                	je     41ac60 <caml_install_signal_handler+0x130>
  41ac5b:	e8 30 fd ff ff       	callq  41a990 <caml_process_pending_signals.part.0>
  41ac60:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
  41ac67:	00 
  41ac68:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41ac6f:	00 00 
  41ac71:	48 89 2d d0 1c 21 00 	mov    %rbp,0x211cd0(%rip)        # 62c948 <caml_local_roots>
  41ac78:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41ac7d:	0f 85 94 00 00 00    	jne    41ad17 <caml_install_signal_handler+0x1e7>
  41ac83:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
  41ac8a:	5b                   	pop    %rbx
  41ac8b:	5d                   	pop    %rbp
  41ac8c:	c3                   	retq   
  41ac8d:	0f 1f 00             	nopl   (%rax)
  41ac90:	31 f6                	xor    %esi,%esi
  41ac92:	bf 01 00 00 00       	mov    $0x1,%edi
  41ac97:	e8 e4 15 00 00       	callq  41c280 <caml_alloc_small>
  41ac9c:	48 8b 0d 1d 27 22 00 	mov    0x22271d(%rip),%rcx        # 63d3c0 <caml_signal_handlers>
  41aca3:	48 63 d3             	movslq %ebx,%rdx
  41aca6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41acab:	48 8b 14 d1          	mov    (%rcx,%rdx,8),%rdx
  41acaf:	48 89 10             	mov    %rdx,(%rax)
  41acb2:	e9 74 ff ff ff       	jmpq   41ac2b <caml_install_signal_handler+0xfb>
  41acb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41acbe:	00 00 
  41acc0:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41acc7:	00 00 
  41acc9:	e9 5d ff ff ff       	jmpq   41ac2b <caml_install_signal_handler+0xfb>
  41acce:	66 90                	xchg   %ax,%ax
  41acd0:	48 c7 44 24 18 03 00 	movq   $0x3,0x18(%rsp)
  41acd7:	00 00 
  41acd9:	e9 4d ff ff ff       	jmpq   41ac2b <caml_install_signal_handler+0xfb>
  41acde:	66 90                	xchg   %ax,%ax
  41ace0:	31 f6                	xor    %esi,%esi
  41ace2:	bf 41 00 00 00       	mov    $0x41,%edi
  41ace7:	e8 84 14 00 00       	callq  41c170 <caml_alloc>
  41acec:	bf c0 d3 63 00       	mov    $0x63d3c0,%edi
  41acf1:	48 89 05 c8 26 22 00 	mov    %rax,0x2226c8(%rip)        # 63d3c0 <caml_signal_handlers>
  41acf8:	e8 b3 b5 fe ff       	callq  4062b0 <caml_register_global_root>
  41acfd:	48 8b 04 24          	mov    (%rsp),%rax
  41ad01:	48 8b 15 b8 26 22 00 	mov    0x2226b8(%rip),%rdx        # 63d3c0 <caml_signal_handlers>
  41ad08:	e9 36 ff ff ff       	jmpq   41ac43 <caml_install_signal_handler+0x113>
  41ad0d:	bf 78 f1 41 00       	mov    $0x41f178,%edi
  41ad12:	e8 c9 f9 ff ff       	callq  41a6e0 <caml_invalid_argument>
  41ad17:	e8 54 6d fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41ad1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041ad20 <handle_signal>:
  41ad20:	41 54                	push   %r12
  41ad22:	55                   	push   %rbp
  41ad23:	53                   	push   %rbx
  41ad24:	89 fb                	mov    %edi,%ebx
  41ad26:	e8 45 6c fe ff       	callq  401970 <__errno_location@plt>
  41ad2b:	83 fb 40             	cmp    $0x40,%ebx
  41ad2e:	76 08                	jbe    41ad38 <handle_signal+0x18>
  41ad30:	5b                   	pop    %rbx
  41ad31:	5d                   	pop    %rbp
  41ad32:	41 5c                	pop    %r12
  41ad34:	c3                   	retq   
  41ad35:	0f 1f 00             	nopl   (%rax)
  41ad38:	48 89 c5             	mov    %rax,%rbp
  41ad3b:	44 8b 20             	mov    (%rax),%r12d
  41ad3e:	ff 15 44 1b 21 00    	callq  *0x211b44(%rip)        # 62c888 <caml_try_leave_blocking_section_hook>
  41ad44:	85 c0                	test   %eax,%eax
  41ad46:	75 18                	jne    41ad60 <handle_signal+0x40>
  41ad48:	89 df                	mov    %ebx,%edi
  41ad4a:	e8 f1 fa ff ff       	callq  41a840 <caml_record_signal>
  41ad4f:	44 89 65 00          	mov    %r12d,0x0(%rbp)
  41ad53:	5b                   	pop    %rbx
  41ad54:	5d                   	pop    %rbp
  41ad55:	41 5c                	pop    %r12
  41ad57:	c3                   	retq   
  41ad58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41ad5f:	00 
  41ad60:	be 01 00 00 00       	mov    $0x1,%esi
  41ad65:	89 df                	mov    %ebx,%edi
  41ad67:	e8 04 fb ff ff       	callq  41a870 <caml_execute_signal>
  41ad6c:	ff 15 26 1b 21 00    	callq  *0x211b26(%rip)        # 62c898 <caml_enter_blocking_section_hook>
  41ad72:	eb db                	jmp    41ad4f <handle_signal+0x2f>
  41ad74:	66 90                	xchg   %ax,%ax
  41ad76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41ad7d:	00 00 00 

000000000041ad80 <segv_handler>:
  41ad80:	55                   	push   %rbp
  41ad81:	53                   	push   %rbx
  41ad82:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  41ad89:	48 8b 9a d8 00 00 00 	mov    0xd8(%rdx),%rbx
  41ad90:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41ad97:	00 00 
  41ad99:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
  41ada0:	00 
  41ada1:	31 c0                	xor    %eax,%eax
  41ada3:	f6 c3 07             	test   $0x7,%bl
  41ada6:	0f 85 8c 00 00 00    	jne    41ae38 <segv_handler+0xb8>
  41adac:	48 89 e6             	mov    %rsp,%rsi
  41adaf:	bf 03 00 00 00       	mov    $0x3,%edi
  41adb4:	48 89 d5             	mov    %rdx,%rbp
  41adb7:	e8 94 6e fe ff       	callq  401c50 <getrlimit64@plt>
  41adbc:	85 c0                	test   %eax,%eax
  41adbe:	75 78                	jne    41ae38 <segv_handler+0xb8>
  41adc0:	48 8b 05 19 46 22 00 	mov    0x224619(%rip),%rax        # 63f3e0 <system_stack_top>
  41adc7:	48 39 c3             	cmp    %rax,%rbx
  41adca:	73 6c                	jae    41ae38 <segv_handler+0xb8>
  41adcc:	48 2b 04 24          	sub    (%rsp),%rax
  41add0:	48 2d 00 20 20 00    	sub    $0x202000,%rax
  41add6:	48 39 c3             	cmp    %rax,%rbx
  41add9:	72 5d                	jb     41ae38 <segv_handler+0xb8>
  41addb:	48 8b bd a8 00 00 00 	mov    0xa8(%rbp),%rdi
  41ade2:	48 3b 3d 7f 6f 22 00 	cmp    0x226f7f(%rip),%rdi        # 641d68 <caml_code_area_start>
  41ade9:	72 09                	jb     41adf4 <segv_handler+0x74>
  41adeb:	48 3b 3d 8e 6e 22 00 	cmp    0x226e8e(%rip),%rdi        # 641c80 <caml_code_area_end>
  41adf2:	76 12                	jbe    41ae06 <segv_handler+0x86>
  41adf4:	48 81 ff 10 9f 41 00 	cmp    $0x419f10,%rdi
  41adfb:	77 2b                	ja     41ae28 <segv_handler+0xa8>
  41adfd:	48 81 ff 1c 9b 41 00 	cmp    $0x419b1c,%rdi
  41ae04:	72 22                	jb     41ae28 <segv_handler+0xa8>
  41ae06:	48 8b 45 58          	mov    0x58(%rbp),%rax
  41ae0a:	48 89 05 8f 25 22 00 	mov    %rax,0x22258f(%rip)        # 63d3a0 <caml_exception_pointer>
  41ae11:	48 8b 45 60          	mov    0x60(%rbp),%rax
  41ae15:	48 89 05 8c 20 21 00 	mov    %rax,0x21208c(%rip)        # 62cea8 <caml_young_ptr>
  41ae1c:	e8 ef f8 ff ff       	callq  41a710 <caml_raise_stack_overflow>
  41ae21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41ae28:	e8 13 df fe ff       	callq  408d40 <caml_page_table_lookup>
  41ae2d:	a8 08                	test   $0x8,%al
  41ae2f:	75 d5                	jne    41ae06 <segv_handler+0x86>
  41ae31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41ae38:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
  41ae3d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  41ae44:	00 00 
  41ae46:	c7 84 24 98 00 00 00 	movl   $0x0,0x98(%rsp)
  41ae4d:	00 00 00 00 
  41ae51:	e8 9a 6d fe ff       	callq  401bf0 <sigemptyset@plt>
  41ae56:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  41ae5b:	31 d2                	xor    %edx,%edx
  41ae5d:	bf 0b 00 00 00       	mov    $0xb,%edi
  41ae62:	e8 49 6b fe ff       	callq  4019b0 <sigaction@plt>
  41ae67:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
  41ae6e:	00 
  41ae6f:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41ae76:	00 00 
  41ae78:	75 0a                	jne    41ae84 <segv_handler+0x104>
  41ae7a:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
  41ae81:	5b                   	pop    %rbx
  41ae82:	5d                   	pop    %rbp
  41ae83:	c3                   	retq   
  41ae84:	e8 e7 6b fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41ae89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041ae90 <caml_garbage_collection>:
  41ae90:	48 83 ec 08          	sub    $0x8,%rsp
  41ae94:	8b 15 1a 25 22 00    	mov    0x22251a(%rip),%edx        # 63d3b4 <caml_requested_major_slice>
  41ae9a:	48 8b 05 f7 1f 21 00 	mov    0x211ff7(%rip),%rax        # 62ce98 <caml_young_trigger>
  41aea1:	85 d2                	test   %edx,%edx
  41aea3:	48 89 05 f6 1f 21 00 	mov    %rax,0x211ff6(%rip)        # 62cea0 <caml_young_limit>
  41aeaa:	75 0a                	jne    41aeb6 <caml_garbage_collection+0x26>
  41aeac:	8b 15 fe 24 22 00    	mov    0x2224fe(%rip),%edx        # 63d3b0 <caml_requested_minor_gc>
  41aeb2:	85 d2                	test   %edx,%edx
  41aeb4:	74 12                	je     41aec8 <caml_garbage_collection+0x38>
  41aeb6:	e8 75 da fe ff       	callq  408930 <caml_gc_dispatch>
  41aebb:	48 83 c4 08          	add    $0x8,%rsp
  41aebf:	e9 1c fb ff ff       	jmpq   41a9e0 <caml_process_pending_signals>
  41aec4:	0f 1f 40 00          	nopl   0x0(%rax)
  41aec8:	48 8b 0d d9 1f 21 00 	mov    0x211fd9(%rip),%rcx        # 62cea8 <caml_young_ptr>
  41aecf:	48 29 c1             	sub    %rax,%rcx
  41aed2:	48 81 f9 07 08 00 00 	cmp    $0x807,%rcx
  41aed9:	7e db                	jle    41aeb6 <caml_garbage_collection+0x26>
  41aedb:	48 83 c4 08          	add    $0x8,%rsp
  41aedf:	e9 fc fa ff ff       	jmpq   41a9e0 <caml_process_pending_signals>
  41aee4:	66 90                	xchg   %ax,%ax
  41aee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41aeed:	00 00 00 

000000000041aef0 <caml_set_signal_action>:
  41aef0:	53                   	push   %rbx
  41aef1:	89 fb                	mov    %edi,%ebx
  41aef3:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
  41aefa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41af01:	00 00 
  41af03:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
  41af0a:	00 
  41af0b:	31 c0                	xor    %eax,%eax
  41af0d:	85 f6                	test   %esi,%esi
  41af0f:	0f 84 93 00 00 00    	je     41afa8 <caml_set_signal_action+0xb8>
  41af15:	83 fe 01             	cmp    $0x1,%esi
  41af18:	74 76                	je     41af90 <caml_set_signal_action+0xa0>
  41af1a:	48 c7 04 24 20 ad 41 	movq   $0x41ad20,(%rsp)
  41af21:	00 
  41af22:	c7 84 24 88 00 00 00 	movl   $0x4,0x88(%rsp)
  41af29:	04 00 00 00 
  41af2d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  41af32:	e8 b9 6c fe ff       	callq  401bf0 <sigemptyset@plt>
  41af37:	48 8d 94 24 a0 00 00 	lea    0xa0(%rsp),%rdx
  41af3e:	00 
  41af3f:	48 89 e6             	mov    %rsp,%rsi
  41af42:	89 df                	mov    %ebx,%edi
  41af44:	e8 67 6a fe ff       	callq  4019b0 <sigaction@plt>
  41af49:	83 f8 ff             	cmp    $0xffffffff,%eax
  41af4c:	74 1f                	je     41af6d <caml_set_signal_action+0x7d>
  41af4e:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
  41af55:	00 
  41af56:	b8 02 00 00 00       	mov    $0x2,%eax
  41af5b:	48 81 fa 20 ad 41 00 	cmp    $0x41ad20,%rdx
  41af62:	74 09                	je     41af6d <caml_set_signal_action+0x7d>
  41af64:	31 c0                	xor    %eax,%eax
  41af66:	48 83 fa 01          	cmp    $0x1,%rdx
  41af6a:	0f 94 c0             	sete   %al
  41af6d:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
  41af74:	00 
  41af75:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41af7c:	00 00 
  41af7e:	75 40                	jne    41afc0 <caml_set_signal_action+0xd0>
  41af80:	48 81 c4 40 01 00 00 	add    $0x140,%rsp
  41af87:	5b                   	pop    %rbx
  41af88:	c3                   	retq   
  41af89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41af90:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
  41af97:	00 
  41af98:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
  41af9f:	00 00 00 00 
  41afa3:	eb 88                	jmp    41af2d <caml_set_signal_action+0x3d>
  41afa5:	0f 1f 00             	nopl   (%rax)
  41afa8:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  41afaf:	00 
  41afb0:	c7 84 24 88 00 00 00 	movl   $0x0,0x88(%rsp)
  41afb7:	00 00 00 00 
  41afbb:	e9 6d ff ff ff       	jmpq   41af2d <caml_set_signal_action+0x3d>
  41afc0:	e8 ab 6a fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41afc5:	90                   	nop
  41afc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41afcd:	00 00 00 

000000000041afd0 <caml_init_signals>:
  41afd0:	53                   	push   %rbx
  41afd1:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  41afd8:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  41afdd:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
  41afe2:	48 c7 04 24 e0 d3 63 	movq   $0x63d3e0,(%rsp)
  41afe9:	00 
  41afea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41aff1:	00 00 
  41aff3:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  41affa:	00 
  41affb:	31 c0                	xor    %eax,%eax
  41affd:	48 c7 44 24 10 00 20 	movq   $0x2000,0x10(%rsp)
  41b004:	00 00 
  41b006:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
  41b00d:	00 
  41b00e:	48 c7 44 24 20 80 ad 	movq   $0x41ad80,0x20(%rsp)
  41b015:	41 00 
  41b017:	c7 84 24 a8 00 00 00 	movl   $0x48000004,0xa8(%rsp)
  41b01e:	04 00 00 48 
  41b022:	e8 c9 6b fe ff       	callq  401bf0 <sigemptyset@plt>
  41b027:	31 f6                	xor    %esi,%esi
  41b029:	48 89 e7             	mov    %rsp,%rdi
  41b02c:	48 89 1d ad 43 22 00 	mov    %rbx,0x2243ad(%rip)        # 63f3e0 <system_stack_top>
  41b033:	e8 f8 6d fe ff       	callq  401e30 <sigaltstack@plt>
  41b038:	85 c0                	test   %eax,%eax
  41b03a:	75 0f                	jne    41b04b <caml_init_signals+0x7b>
  41b03c:	31 d2                	xor    %edx,%edx
  41b03e:	48 89 de             	mov    %rbx,%rsi
  41b041:	bf 0b 00 00 00       	mov    $0xb,%edi
  41b046:	e8 65 69 fe ff       	callq  4019b0 <sigaction@plt>
  41b04b:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
  41b052:	00 
  41b053:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41b05a:	00 00 
  41b05c:	75 09                	jne    41b067 <caml_init_signals+0x97>
  41b05e:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
  41b065:	5b                   	pop    %rbx
  41b066:	c3                   	retq   
  41b067:	e8 04 6a fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41b06c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041b070 <allocate_block>:
  41b070:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
  41b074:	4c 8d 47 01          	lea    0x1(%rdi),%r8
  41b078:	48 c1 e8 0a          	shr    $0xa,%rax
  41b07c:	4c 39 c0             	cmp    %r8,%rax
  41b07f:	73 3f                	jae    41b0c0 <allocate_block+0x50>
  41b081:	49 89 c0             	mov    %rax,%r8
  41b084:	49 f7 d0             	not    %r8
  41b087:	4c 01 05 7a 43 22 00 	add    %r8,0x22437a(%rip)        # 63f408 <caml_fl_cur_wsz>
  41b08e:	4c 8b 01             	mov    (%rcx),%r8
  41b091:	4c 89 02             	mov    %r8,(%rdx)
  41b094:	48 3b 0d 05 18 21 00 	cmp    0x211805(%rip),%rcx        # 62c8a0 <caml_fl_merge>
  41b09b:	0f 84 8f 00 00 00    	je     41b130 <allocate_block+0xc0>
  41b0a1:	48 c7 41 f8 00 00 00 	movq   $0x0,-0x8(%rcx)
  41b0a8:	00 
  41b0a9:	4c 8b 05 50 43 22 00 	mov    0x224350(%rip),%r8        # 63f400 <caml_allocation_policy>
  41b0b0:	49 83 f8 01          	cmp    $0x1,%r8
  41b0b4:	74 42                	je     41b0f8 <allocate_block+0x88>
  41b0b6:	48 29 f8             	sub    %rdi,%rax
  41b0b9:	eb 28                	jmp    41b0e3 <allocate_block+0x73>
  41b0bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41b0c0:	48 29 f8             	sub    %rdi,%rax
  41b0c3:	48 29 3d 3e 43 22 00 	sub    %rdi,0x22433e(%rip)        # 63f408 <caml_fl_cur_wsz>
  41b0ca:	48 89 c6             	mov    %rax,%rsi
  41b0cd:	48 c1 e6 0a          	shl    $0xa,%rsi
  41b0d1:	48 81 c6 00 02 00 00 	add    $0x200,%rsi
  41b0d8:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
  41b0dc:	4c 8b 05 1d 43 22 00 	mov    0x22431d(%rip),%r8        # 63f400 <caml_allocation_policy>
  41b0e3:	4d 85 c0             	test   %r8,%r8
  41b0e6:	75 07                	jne    41b0ef <allocate_block+0x7f>
  41b0e8:	48 89 15 b9 17 21 00 	mov    %rdx,0x2117b9(%rip)        # 62c8a8 <fl_prev>
  41b0ef:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
  41b0f3:	c3                   	retq   
  41b0f4:	0f 1f 40 00          	nopl   0x0(%rax)
  41b0f8:	44 8b 05 21 43 22 00 	mov    0x224321(%rip),%r8d        # 63f420 <flp_size>
  41b0ff:	44 8d 4e 01          	lea    0x1(%rsi),%r9d
  41b103:	45 39 c1             	cmp    %r8d,%r9d
  41b106:	7d 0d                	jge    41b115 <allocate_block+0xa5>
  41b108:	4d 63 c9             	movslq %r9d,%r9
  41b10b:	4a 3b 0c cd 40 f4 63 	cmp    0x63f440(,%r9,8),%rcx
  41b112:	00 
  41b113:	74 4b                	je     41b160 <allocate_block+0xf0>
  41b115:	41 83 e8 01          	sub    $0x1,%r8d
  41b119:	44 39 c6             	cmp    %r8d,%esi
  41b11c:	74 22                	je     41b140 <allocate_block+0xd0>
  41b11e:	48 29 f8             	sub    %rdi,%rax
  41b121:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
  41b125:	c3                   	retq   
  41b126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41b12d:	00 00 00 
  41b130:	48 89 15 69 17 21 00 	mov    %rdx,0x211769(%rip)        # 62c8a0 <caml_fl_merge>
  41b137:	e9 65 ff ff ff       	jmpq   41b0a1 <allocate_block+0x31>
  41b13c:	0f 1f 40 00          	nopl   0x0(%rax)
  41b140:	48 81 fa d0 c8 62 00 	cmp    $0x62c8d0,%rdx
  41b147:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  41b14d:	89 35 cd 42 22 00    	mov    %esi,0x2242cd(%rip)        # 63f420 <flp_size>
  41b153:	49 0f 44 d0          	cmove  %r8,%rdx
  41b157:	48 89 15 ba 42 22 00 	mov    %rdx,0x2242ba(%rip)        # 63f418 <beyond>
  41b15e:	eb be                	jmp    41b11e <allocate_block+0xae>
  41b160:	4a 89 14 cd 40 f4 63 	mov    %rdx,0x63f440(,%r9,8)
  41b167:	00 
  41b168:	eb b4                	jmp    41b11e <allocate_block+0xae>
  41b16a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041b170 <truncate_flp.part.0>:
  41b170:	8b 05 aa 42 22 00    	mov    0x2242aa(%rip),%eax        # 63f420 <flp_size>
  41b176:	85 c0                	test   %eax,%eax
  41b178:	7e 39                	jle    41b1b3 <truncate_flp.part.0+0x43>
  41b17a:	83 e8 01             	sub    $0x1,%eax
  41b17d:	48 63 d0             	movslq %eax,%rdx
  41b180:	48 8b 14 d5 40 f4 63 	mov    0x63f440(,%rdx,8),%rdx
  41b187:	00 
  41b188:	48 3b 3a             	cmp    (%rdx),%rdi
  41b18b:	7e 18                	jle    41b1a5 <truncate_flp.part.0+0x35>
  41b18d:	eb 24                	jmp    41b1b3 <truncate_flp.part.0+0x43>
  41b18f:	90                   	nop
  41b190:	8d 50 ff             	lea    -0x1(%rax),%edx
  41b193:	48 63 ca             	movslq %edx,%rcx
  41b196:	48 8b 0c cd 40 f4 63 	mov    0x63f440(,%rcx,8),%rcx
  41b19d:	00 
  41b19e:	48 39 39             	cmp    %rdi,(%rcx)
  41b1a1:	7c 2d                	jl     41b1d0 <truncate_flp.part.0+0x60>
  41b1a3:	89 d0                	mov    %edx,%eax
  41b1a5:	85 c0                	test   %eax,%eax
  41b1a7:	75 e7                	jne    41b190 <truncate_flp.part.0+0x20>
  41b1a9:	c7 05 6d 42 22 00 00 	movl   $0x0,0x22426d(%rip)        # 63f420 <flp_size>
  41b1b0:	00 00 00 
  41b1b3:	48 3b 3d 5e 42 22 00 	cmp    0x22425e(%rip),%rdi        # 63f418 <beyond>
  41b1ba:	7f 23                	jg     41b1df <truncate_flp.part.0+0x6f>
  41b1bc:	48 c7 05 51 42 22 00 	movq   $0x0,0x224251(%rip)        # 63f418 <beyond>
  41b1c3:	00 00 00 00 
  41b1c7:	c3                   	retq   
  41b1c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41b1cf:	00 
  41b1d0:	48 3b 3d 41 42 22 00 	cmp    0x224241(%rip),%rdi        # 63f418 <beyond>
  41b1d7:	89 05 43 42 22 00    	mov    %eax,0x224243(%rip)        # 63f420 <flp_size>
  41b1dd:	7e dd                	jle    41b1bc <truncate_flp.part.0+0x4c>
  41b1df:	f3 c3                	repz retq 
  41b1e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41b1e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41b1ed:	00 00 00 

000000000041b1f0 <caml_fl_allocate>:
  41b1f0:	41 56                	push   %r14
  41b1f2:	41 55                	push   %r13
  41b1f4:	41 54                	push   %r12
  41b1f6:	55                   	push   %rbp
  41b1f7:	53                   	push   %rbx
  41b1f8:	48 81 ec 50 1f 00 00 	sub    $0x1f50,%rsp
  41b1ff:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41b206:	00 00 
  41b208:	48 89 84 24 48 1f 00 	mov    %rax,0x1f48(%rsp)
  41b20f:	00 
  41b210:	31 c0                	xor    %eax,%eax
  41b212:	48 8b 05 e7 41 22 00 	mov    0x2241e7(%rip),%rax        # 63f400 <caml_allocation_policy>
  41b219:	48 85 c0             	test   %rax,%rax
  41b21c:	0f 84 7e 01 00 00    	je     41b3a0 <caml_fl_allocate+0x1b0>
  41b222:	48 83 f8 01          	cmp    $0x1,%rax
  41b226:	0f 85 44 01 00 00    	jne    41b370 <caml_fl_allocate+0x180>
  41b22c:	8b 35 ee 41 22 00    	mov    0x2241ee(%rip),%esi        # 63f420 <flp_size>
  41b232:	83 fe 00             	cmp    $0x0,%esi
  41b235:	0f 8e 09 05 00 00    	jle    41b744 <caml_fl_allocate+0x554>
  41b23b:	48 8b 15 fe 41 22 00 	mov    0x2241fe(%rip),%rdx        # 63f440 <flp>
  41b242:	45 31 f6             	xor    %r14d,%r14d
  41b245:	b8 48 f4 63 00       	mov    $0x63f448,%eax
  41b24a:	48 8b 0a             	mov    (%rdx),%rcx
  41b24d:	4c 8b 51 f8          	mov    -0x8(%rcx),%r10
  41b251:	49 c1 ea 0a          	shr    $0xa,%r10
  41b255:	49 39 fa             	cmp    %rdi,%r10
  41b258:	4d 89 d5             	mov    %r10,%r13
  41b25b:	72 29                	jb     41b286 <caml_fl_allocate+0x96>
  41b25d:	e9 bf 01 00 00       	jmpq   41b421 <caml_fl_allocate+0x231>
  41b262:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41b268:	48 8b 10             	mov    (%rax),%rdx
  41b26b:	48 83 c0 08          	add    $0x8,%rax
  41b26f:	48 8b 0a             	mov    (%rdx),%rcx
  41b272:	4c 8b 51 f8          	mov    -0x8(%rcx),%r10
  41b276:	49 c1 ea 0a          	shr    $0xa,%r10
  41b27a:	4c 39 d7             	cmp    %r10,%rdi
  41b27d:	4d 89 d5             	mov    %r10,%r13
  41b280:	0f 86 a2 01 00 00    	jbe    41b428 <caml_fl_allocate+0x238>
  41b286:	41 83 c6 01          	add    $0x1,%r14d
  41b28a:	41 39 f6             	cmp    %esi,%r14d
  41b28d:	75 d9                	jne    41b268 <caml_fl_allocate+0x78>
  41b28f:	8d 46 ff             	lea    -0x1(%rsi),%eax
  41b292:	48 8b 15 7f 41 22 00 	mov    0x22417f(%rip),%rdx        # 63f418 <beyond>
  41b299:	48 98                	cltq   
  41b29b:	48 8b 04 c5 40 f4 63 	mov    0x63f440(,%rax,8),%rax
  41b2a2:	00 
  41b2a3:	48 8b 00             	mov    (%rax),%rax
  41b2a6:	4c 8b 40 f8          	mov    -0x8(%rax),%r8
  41b2aa:	49 c1 e8 0a          	shr    $0xa,%r8
  41b2ae:	48 85 d2             	test   %rdx,%rdx
  41b2b1:	48 0f 44 d0          	cmove  %rax,%rdx
  41b2b5:	41 89 f6             	mov    %esi,%r14d
  41b2b8:	45 31 c9             	xor    %r9d,%r9d
  41b2bb:	31 c0                	xor    %eax,%eax
  41b2bd:	eb 2a                	jmp    41b2e9 <caml_fl_allocate+0xf9>
  41b2bf:	90                   	nop
  41b2c0:	49 63 ce             	movslq %r14d,%rcx
  41b2c3:	4c 39 d7             	cmp    %r10,%rdi
  41b2c6:	48 89 14 cd 40 f4 63 	mov    %rdx,0x63f440(,%rcx,8)
  41b2cd:	00 
  41b2ce:	41 8d 4e 01          	lea    0x1(%r14),%ecx
  41b2d2:	0f 86 94 03 00 00    	jbe    41b66c <caml_fl_allocate+0x47c>
  41b2d8:	89 ce                	mov    %ecx,%esi
  41b2da:	4d 89 d0             	mov    %r10,%r8
  41b2dd:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41b2e3:	41 89 ce             	mov    %ecx,%r14d
  41b2e6:	48 89 c2             	mov    %rax,%rdx
  41b2e9:	41 81 fe e7 03 00 00 	cmp    $0x3e7,%r14d
  41b2f0:	0f 8f 3a 02 00 00    	jg     41b530 <caml_fl_allocate+0x340>
  41b2f6:	48 8b 02             	mov    (%rdx),%rax
  41b2f9:	48 85 c0             	test   %rax,%rax
  41b2fc:	0f 84 a6 02 00 00    	je     41b5a8 <caml_fl_allocate+0x3b8>
  41b302:	4c 8b 50 f8          	mov    -0x8(%rax),%r10
  41b306:	49 c1 ea 0a          	shr    $0xa,%r10
  41b30a:	4d 39 d0             	cmp    %r10,%r8
  41b30d:	4d 89 d5             	mov    %r10,%r13
  41b310:	72 ae                	jb     41b2c0 <caml_fl_allocate+0xd0>
  41b312:	44 89 f1             	mov    %r14d,%ecx
  41b315:	eb cc                	jmp    41b2e3 <caml_fl_allocate+0xf3>
  41b317:	48 89 f2             	mov    %rsi,%rdx
  41b31a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41b320:	48 81 fe d0 c8 62 00 	cmp    $0x62c8d0,%rsi
  41b327:	48 89 15 52 60 22 00 	mov    %rdx,0x226052(%rip)        # 641380 <fl_last>
  41b32e:	48 8b 15 9b 15 21 00 	mov    0x21159b(%rip),%rdx        # 62c8d0 <sentinel+0x10>
  41b335:	74 39                	je     41b370 <caml_fl_allocate+0x180>
  41b337:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  41b33b:	48 c1 e8 0a          	shr    $0xa,%rax
  41b33f:	48 39 c7             	cmp    %rax,%rdi
  41b342:	77 20                	ja     41b364 <caml_fl_allocate+0x174>
  41b344:	e9 9c 00 00 00       	jmpq   41b3e5 <caml_fl_allocate+0x1f5>
  41b349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41b350:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
  41b354:	48 c1 e8 0a          	shr    $0xa,%rax
  41b358:	48 39 c7             	cmp    %rax,%rdi
  41b35b:	0f 86 8f 00 00 00    	jbe    41b3f0 <caml_fl_allocate+0x200>
  41b361:	48 89 ca             	mov    %rcx,%rdx
  41b364:	48 39 d6             	cmp    %rdx,%rsi
  41b367:	48 8b 0a             	mov    (%rdx),%rcx
  41b36a:	75 e4                	jne    41b350 <caml_fl_allocate+0x160>
  41b36c:	0f 1f 40 00          	nopl   0x0(%rax)
  41b370:	31 c0                	xor    %eax,%eax
  41b372:	48 8b 9c 24 48 1f 00 	mov    0x1f48(%rsp),%rbx
  41b379:	00 
  41b37a:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  41b381:	00 00 
  41b383:	0f 85 16 04 00 00    	jne    41b79f <caml_fl_allocate+0x5af>
  41b389:	48 81 c4 50 1f 00 00 	add    $0x1f50,%rsp
  41b390:	5b                   	pop    %rbx
  41b391:	5d                   	pop    %rbp
  41b392:	41 5c                	pop    %r12
  41b394:	41 5d                	pop    %r13
  41b396:	41 5e                	pop    %r14
  41b398:	c3                   	retq   
  41b399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41b3a0:	48 8b 35 01 15 21 00 	mov    0x211501(%rip),%rsi        # 62c8a8 <fl_prev>
  41b3a7:	48 8b 16             	mov    (%rsi),%rdx
  41b3aa:	48 85 d2             	test   %rdx,%rdx
  41b3ad:	0f 84 64 ff ff ff    	je     41b317 <caml_fl_allocate+0x127>
  41b3b3:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  41b3b7:	48 c1 e8 0a          	shr    $0xa,%rax
  41b3bb:	48 39 c7             	cmp    %rax,%rdi
  41b3be:	77 18                	ja     41b3d8 <caml_fl_allocate+0x1e8>
  41b3c0:	e9 92 03 00 00       	jmpq   41b757 <caml_fl_allocate+0x567>
  41b3c5:	0f 1f 00             	nopl   (%rax)
  41b3c8:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
  41b3cc:	48 c1 e8 0a          	shr    $0xa,%rax
  41b3d0:	48 39 f8             	cmp    %rdi,%rax
  41b3d3:	73 1b                	jae    41b3f0 <caml_fl_allocate+0x200>
  41b3d5:	48 89 ca             	mov    %rcx,%rdx
  41b3d8:	48 8b 0a             	mov    (%rdx),%rcx
  41b3db:	48 85 c9             	test   %rcx,%rcx
  41b3de:	75 e8                	jne    41b3c8 <caml_fl_allocate+0x1d8>
  41b3e0:	e9 3b ff ff ff       	jmpq   41b320 <caml_fl_allocate+0x130>
  41b3e5:	48 89 d1             	mov    %rdx,%rcx
  41b3e8:	ba d0 c8 62 00       	mov    $0x62c8d0,%edx
  41b3ed:	0f 1f 00             	nopl   (%rax)
  41b3f0:	48 8b 84 24 48 1f 00 	mov    0x1f48(%rsp),%rax
  41b3f7:	00 
  41b3f8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41b3ff:	00 00 
  41b401:	0f 85 98 03 00 00    	jne    41b79f <caml_fl_allocate+0x5af>
  41b407:	48 83 c7 01          	add    $0x1,%rdi
  41b40b:	31 f6                	xor    %esi,%esi
  41b40d:	48 81 c4 50 1f 00 00 	add    $0x1f50,%rsp
  41b414:	5b                   	pop    %rbx
  41b415:	5d                   	pop    %rbp
  41b416:	41 5c                	pop    %r12
  41b418:	41 5d                	pop    %r13
  41b41a:	41 5e                	pop    %r14
  41b41c:	e9 4f fc ff ff       	jmpq   41b070 <allocate_block>
  41b421:	45 31 f6             	xor    %r14d,%r14d
  41b424:	0f 1f 40 00          	nopl   0x0(%rax)
  41b428:	48 83 c7 01          	add    $0x1,%rdi
  41b42c:	44 89 f6             	mov    %r14d,%esi
  41b42f:	e8 3c fc ff ff       	callq  41b070 <allocate_block>
  41b434:	48 89 c5             	mov    %rax,%rbp
  41b437:	8b 15 e3 3f 22 00    	mov    0x223fe3(%rip),%edx        # 63f420 <flp_size>
  41b43d:	48 89 e8             	mov    %rbp,%rax
  41b440:	41 39 d6             	cmp    %edx,%r14d
  41b443:	0f 8d 29 ff ff ff    	jge    41b372 <caml_fl_allocate+0x182>
  41b449:	31 f6                	xor    %esi,%esi
  41b44b:	45 85 f6             	test   %r14d,%r14d
  41b44e:	7e 19                	jle    41b469 <caml_fl_allocate+0x279>
  41b450:	41 8d 46 ff          	lea    -0x1(%r14),%eax
  41b454:	48 98                	cltq   
  41b456:	48 8b 04 c5 40 f4 63 	mov    0x63f440(,%rax,8),%rax
  41b45d:	00 
  41b45e:	48 8b 00             	mov    (%rax),%rax
  41b461:	48 8b 70 f8          	mov    -0x8(%rax),%rsi
  41b465:	48 c1 ee 0a          	shr    $0xa,%rsi
  41b469:	44 8d 4a ff          	lea    -0x1(%rdx),%r9d
  41b46d:	45 39 ce             	cmp    %r9d,%r14d
  41b470:	0f 84 c1 01 00 00    	je     41b637 <caml_fl_allocate+0x447>
  41b476:	45 8d 46 01          	lea    0x1(%r14),%r8d
  41b47a:	4d 63 e6             	movslq %r14d,%r12
  41b47d:	31 db                	xor    %ebx,%ebx
  41b47f:	4a 8b 14 e5 40 f4 63 	mov    0x63f440(,%r12,8),%rdx
  41b486:	00 
  41b487:	4d 63 c0             	movslq %r8d,%r8
  41b48a:	4a 8b 3c c5 40 f4 63 	mov    0x63f440(,%r8,8),%rdi
  41b491:	00 
  41b492:	eb 2d                	jmp    41b4c1 <caml_fl_allocate+0x2d1>
  41b494:	0f 1f 40 00          	nopl   0x0(%rax)
  41b498:	48 8b 0a             	mov    (%rdx),%rcx
  41b49b:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
  41b49f:	48 c1 e8 0a          	shr    $0xa,%rax
  41b4a3:	48 39 c6             	cmp    %rax,%rsi
  41b4a6:	73 16                	jae    41b4be <caml_fl_allocate+0x2ce>
  41b4a8:	49 39 c5             	cmp    %rax,%r13
  41b4ab:	8d 73 01             	lea    0x1(%rbx),%esi
  41b4ae:	48 89 14 dc          	mov    %rdx,(%rsp,%rbx,8)
  41b4b2:	0f 86 d8 01 00 00    	jbe    41b690 <caml_fl_allocate+0x4a0>
  41b4b8:	48 63 de             	movslq %esi,%rbx
  41b4bb:	48 89 c6             	mov    %rax,%rsi
  41b4be:	48 89 ca             	mov    %rcx,%rdx
  41b4c1:	48 39 fa             	cmp    %rdi,%rdx
  41b4c4:	75 d2                	jne    41b498 <caml_fl_allocate+0x2a8>
  41b4c6:	46 8d 2c 0b          	lea    (%rbx,%r9,1),%r13d
  41b4ca:	41 81 fd e8 03 00 00 	cmp    $0x3e8,%r13d
  41b4d1:	0f 8e 01 01 00 00    	jle    41b5d8 <caml_fl_allocate+0x3e8>
  41b4d7:	41 8d 04 1e          	lea    (%r14,%rbx,1),%eax
  41b4db:	3d e7 03 00 00       	cmp    $0x3e7,%eax
  41b4e0:	0f 8f 1a 02 00 00    	jg     41b700 <caml_fl_allocate+0x510>
  41b4e6:	83 fb 01             	cmp    $0x1,%ebx
  41b4e9:	0f 85 73 02 00 00    	jne    41b762 <caml_fl_allocate+0x572>
  41b4ef:	48 63 d3             	movslq %ebx,%rdx
  41b4f2:	4a 8d 3c e5 40 f4 63 	lea    0x63f440(,%r12,8),%rdi
  41b4f9:	00 
  41b4fa:	48 89 e6             	mov    %rsp,%rsi
  41b4fd:	48 c1 e2 03          	shl    $0x3,%rdx
  41b501:	e8 0a 67 fe ff       	callq  401c10 <memcpy@plt>
  41b506:	48 8b 05 6b 5e 22 00 	mov    0x225e6b(%rip),%rax        # 641378 <flp+0x1f38>
  41b50d:	c7 05 09 3f 22 00 e7 	movl   $0x3e7,0x223f09(%rip)        # 63f420 <flp_size>
  41b514:	03 00 00 
  41b517:	48 8b 00             	mov    (%rax),%rax
  41b51a:	48 89 05 f7 3e 22 00 	mov    %rax,0x223ef7(%rip)        # 63f418 <beyond>
  41b521:	48 89 e8             	mov    %rbp,%rax
  41b524:	e9 49 fe ff ff       	jmpq   41b372 <caml_fl_allocate+0x182>
  41b529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41b530:	45 84 c9             	test   %r9b,%r9b
  41b533:	0f 85 82 02 00 00    	jne    41b7bb <caml_fl_allocate+0x5cb>
  41b539:	48 85 c0             	test   %rax,%rax
  41b53c:	48 89 05 d5 3e 22 00 	mov    %rax,0x223ed5(%rip)        # 63f418 <beyond>
  41b543:	48 89 c2             	mov    %rax,%rdx
  41b546:	0f 84 bc 00 00 00    	je     41b608 <caml_fl_allocate+0x418>
  41b54c:	48 8b 0d 25 5e 22 00 	mov    0x225e25(%rip),%rcx        # 641378 <flp+0x1f38>
  41b553:	48 8b 09             	mov    (%rcx),%rcx
  41b556:	4c 8b 41 f8          	mov    -0x8(%rcx),%r8
  41b55a:	48 8b 0a             	mov    (%rdx),%rcx
  41b55d:	49 c1 e8 0a          	shr    $0xa,%r8
  41b561:	48 85 c9             	test   %rcx,%rcx
  41b564:	0f 84 2d 02 00 00    	je     41b797 <caml_fl_allocate+0x5a7>
  41b56a:	45 31 c9             	xor    %r9d,%r9d
  41b56d:	eb 1c                	jmp    41b58b <caml_fl_allocate+0x39b>
  41b56f:	90                   	nop
  41b570:	48 39 f7             	cmp    %rsi,%rdi
  41b573:	0f 86 1e 01 00 00    	jbe    41b697 <caml_fl_allocate+0x4a7>
  41b579:	48 8b 31             	mov    (%rcx),%rsi
  41b57c:	48 89 ca             	mov    %rcx,%rdx
  41b57f:	48 85 f6             	test   %rsi,%rsi
  41b582:	0f 84 98 00 00 00    	je     41b620 <caml_fl_allocate+0x430>
  41b588:	48 89 f1             	mov    %rsi,%rcx
  41b58b:	48 8b 71 f8          	mov    -0x8(%rcx),%rsi
  41b58f:	48 c1 ee 0a          	shr    $0xa,%rsi
  41b593:	49 39 f0             	cmp    %rsi,%r8
  41b596:	76 d8                	jbe    41b570 <caml_fl_allocate+0x380>
  41b598:	48 89 c8             	mov    %rcx,%rax
  41b59b:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41b5a1:	eb d6                	jmp    41b579 <caml_fl_allocate+0x389>
  41b5a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41b5a8:	45 84 c9             	test   %r9b,%r9b
  41b5ab:	0f 85 f3 01 00 00    	jne    41b7a4 <caml_fl_allocate+0x5b4>
  41b5b1:	48 81 fa d0 c8 62 00 	cmp    $0x62c8d0,%rdx
  41b5b8:	b8 00 00 00 00       	mov    $0x0,%eax
  41b5bd:	48 89 15 bc 5d 22 00 	mov    %rdx,0x225dbc(%rip)        # 641380 <fl_last>
  41b5c4:	48 0f 44 d0          	cmove  %rax,%rdx
  41b5c8:	48 89 15 49 3e 22 00 	mov    %rdx,0x223e49(%rip)        # 63f418 <beyond>
  41b5cf:	e9 9e fd ff ff       	jmpq   41b372 <caml_fl_allocate+0x182>
  41b5d4:	0f 1f 40 00          	nopl   0x0(%rax)
  41b5d8:	83 fb 01             	cmp    $0x1,%ebx
  41b5db:	0f 85 e2 00 00 00    	jne    41b6c3 <caml_fl_allocate+0x4d3>
  41b5e1:	48 63 d3             	movslq %ebx,%rdx
  41b5e4:	4a 8d 3c e5 40 f4 63 	lea    0x63f440(,%r12,8),%rdi
  41b5eb:	00 
  41b5ec:	48 89 e6             	mov    %rsp,%rsi
  41b5ef:	48 c1 e2 03          	shl    $0x3,%rdx
  41b5f3:	e8 18 66 fe ff       	callq  401c10 <memcpy@plt>
  41b5f8:	44 89 2d 21 3e 22 00 	mov    %r13d,0x223e21(%rip)        # 63f420 <flp_size>
  41b5ff:	e9 1d ff ff ff       	jmpq   41b521 <caml_fl_allocate+0x331>
  41b604:	0f 1f 40 00          	nopl   0x0(%rax)
  41b608:	41 8d 56 ff          	lea    -0x1(%r14),%edx
  41b60c:	48 63 d2             	movslq %edx,%rdx
  41b60f:	48 8b 14 d5 40 f4 63 	mov    0x63f440(,%rdx,8),%rdx
  41b616:	00 
  41b617:	e9 30 ff ff ff       	jmpq   41b54c <caml_fl_allocate+0x35c>
  41b61c:	0f 1f 40 00          	nopl   0x0(%rax)
  41b620:	45 84 c9             	test   %r9b,%r9b
  41b623:	0f 85 86 01 00 00    	jne    41b7af <caml_fl_allocate+0x5bf>
  41b629:	48 89 0d 50 5d 22 00 	mov    %rcx,0x225d50(%rip)        # 641380 <fl_last>
  41b630:	31 c0                	xor    %eax,%eax
  41b632:	e9 3b fd ff ff       	jmpq   41b372 <caml_fl_allocate+0x182>
  41b637:	49 63 c6             	movslq %r14d,%rax
  41b63a:	48 8b 04 c5 40 f4 63 	mov    0x63f440(,%rax,8),%rax
  41b641:	00 
  41b642:	48 8b 10             	mov    (%rax),%rdx
  41b645:	48 8b 42 f8          	mov    -0x8(%rdx),%rax
  41b649:	48 c1 e8 0a          	shr    $0xa,%rax
  41b64d:	48 39 c6             	cmp    %rax,%rsi
  41b650:	0f 82 db 00 00 00    	jb     41b731 <caml_fl_allocate+0x541>
  41b656:	48 89 15 bb 3d 22 00 	mov    %rdx,0x223dbb(%rip)        # 63f418 <beyond>
  41b65d:	44 89 35 bc 3d 22 00 	mov    %r14d,0x223dbc(%rip)        # 63f420 <flp_size>
  41b664:	48 89 e8             	mov    %rbp,%rax
  41b667:	e9 06 fd ff ff       	jmpq   41b372 <caml_fl_allocate+0x182>
  41b66c:	89 0d ae 3d 22 00    	mov    %ecx,0x223dae(%rip)        # 63f420 <flp_size>
  41b672:	48 83 c7 01          	add    $0x1,%rdi
  41b676:	48 89 c1             	mov    %rax,%rcx
  41b679:	44 89 f6             	mov    %r14d,%esi
  41b67c:	48 89 05 95 3d 22 00 	mov    %rax,0x223d95(%rip)        # 63f418 <beyond>
  41b683:	e8 e8 f9 ff ff       	callq  41b070 <allocate_block>
  41b688:	48 89 c5             	mov    %rax,%rbp
  41b68b:	e9 a7 fd ff ff       	jmpq   41b437 <caml_fl_allocate+0x247>
  41b690:	89 f3                	mov    %esi,%ebx
  41b692:	e9 2f fe ff ff       	jmpq   41b4c6 <caml_fl_allocate+0x2d6>
  41b697:	45 84 c9             	test   %r9b,%r9b
  41b69a:	0f 85 26 01 00 00    	jne    41b7c6 <caml_fl_allocate+0x5d6>
  41b6a0:	48 8b 84 24 48 1f 00 	mov    0x1f48(%rsp),%rax
  41b6a7:	00 
  41b6a8:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  41b6af:	00 00 
  41b6b1:	0f 85 e8 00 00 00    	jne    41b79f <caml_fl_allocate+0x5af>
  41b6b7:	48 83 c7 01          	add    $0x1,%rdi
  41b6bb:	44 89 f6             	mov    %r14d,%esi
  41b6be:	e9 4a fd ff ff       	jmpq   41b40d <caml_fl_allocate+0x21d>
  41b6c3:	41 8d 04 1e          	lea    (%r14,%rbx,1),%eax
  41b6c7:	44 89 ca             	mov    %r9d,%edx
  41b6ca:	4a 8d 34 c5 40 f4 63 	lea    0x63f440(,%r8,8),%rsi
  41b6d1:	00 
  41b6d2:	44 29 f2             	sub    %r14d,%edx
  41b6d5:	48 98                	cltq   
  41b6d7:	48 63 d2             	movslq %edx,%rdx
  41b6da:	48 8d 3c c5 40 f4 63 	lea    0x63f440(,%rax,8),%rdi
  41b6e1:	00 
  41b6e2:	48 c1 e2 03          	shl    $0x3,%rdx
  41b6e6:	e8 45 66 fe ff       	callq  401d30 <memmove@plt>
  41b6eb:	85 db                	test   %ebx,%ebx
  41b6ed:	0f 8e 05 ff ff ff    	jle    41b5f8 <caml_fl_allocate+0x408>
  41b6f3:	e9 e9 fe ff ff       	jmpq   41b5e1 <caml_fl_allocate+0x3f1>
  41b6f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41b6ff:	00 
  41b700:	41 81 fe e8 03 00 00 	cmp    $0x3e8,%r14d
  41b707:	0f 84 f9 fd ff ff    	je     41b506 <caml_fl_allocate+0x316>
  41b70d:	ba e8 03 00 00       	mov    $0x3e8,%edx
  41b712:	4a 8d 3c e5 40 f4 63 	lea    0x63f440(,%r12,8),%rdi
  41b719:	00 
  41b71a:	48 89 e6             	mov    %rsp,%rsi
  41b71d:	44 29 f2             	sub    %r14d,%edx
  41b720:	48 63 d2             	movslq %edx,%rdx
  41b723:	48 c1 e2 03          	shl    $0x3,%rdx
  41b727:	e8 e4 64 fe ff       	callq  401c10 <memcpy@plt>
  41b72c:	e9 d5 fd ff ff       	jmpq   41b506 <caml_fl_allocate+0x316>
  41b731:	48 c7 05 dc 3c 22 00 	movq   $0x0,0x223cdc(%rip)        # 63f418 <beyond>
  41b738:	00 00 00 00 
  41b73c:	48 89 e8             	mov    %rbp,%rax
  41b73f:	e9 2e fc ff ff       	jmpq   41b372 <caml_fl_allocate+0x182>
  41b744:	0f 85 45 fb ff ff    	jne    41b28f <caml_fl_allocate+0x9f>
  41b74a:	ba d0 c8 62 00       	mov    $0x62c8d0,%edx
  41b74f:	45 31 c0             	xor    %r8d,%r8d
  41b752:	e9 5e fb ff ff       	jmpq   41b2b5 <caml_fl_allocate+0xc5>
  41b757:	48 89 d1             	mov    %rdx,%rcx
  41b75a:	48 89 f2             	mov    %rsi,%rdx
  41b75d:	e9 8e fc ff ff       	jmpq   41b3f0 <caml_fl_allocate+0x200>
  41b762:	ba e8 03 00 00       	mov    $0x3e8,%edx
  41b767:	48 98                	cltq   
  41b769:	4a 8d 34 c5 40 f4 63 	lea    0x63f440(,%r8,8),%rsi
  41b770:	00 
  41b771:	44 29 f2             	sub    %r14d,%edx
  41b774:	48 8d 3c c5 40 f4 63 	lea    0x63f440(,%rax,8),%rdi
  41b77b:	00 
  41b77c:	29 da                	sub    %ebx,%edx
  41b77e:	48 63 d2             	movslq %edx,%rdx
  41b781:	48 c1 e2 03          	shl    $0x3,%rdx
  41b785:	e8 a6 65 fe ff       	callq  401d30 <memmove@plt>
  41b78a:	85 db                	test   %ebx,%ebx
  41b78c:	0f 8e 74 fd ff ff    	jle    41b506 <caml_fl_allocate+0x316>
  41b792:	e9 58 fd ff ff       	jmpq   41b4ef <caml_fl_allocate+0x2ff>
  41b797:	48 89 d1             	mov    %rdx,%rcx
  41b79a:	e9 8a fe ff ff       	jmpq   41b629 <caml_fl_allocate+0x439>
  41b79f:	e8 cc 62 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41b7a4:	89 35 76 3c 22 00    	mov    %esi,0x223c76(%rip)        # 63f420 <flp_size>
  41b7aa:	e9 02 fe ff ff       	jmpq   41b5b1 <caml_fl_allocate+0x3c1>
  41b7af:	48 89 05 62 3c 22 00 	mov    %rax,0x223c62(%rip)        # 63f418 <beyond>
  41b7b6:	e9 6e fe ff ff       	jmpq   41b629 <caml_fl_allocate+0x439>
  41b7bb:	89 35 5f 3c 22 00    	mov    %esi,0x223c5f(%rip)        # 63f420 <flp_size>
  41b7c1:	e9 73 fd ff ff       	jmpq   41b539 <caml_fl_allocate+0x349>
  41b7c6:	48 89 05 4b 3c 22 00 	mov    %rax,0x223c4b(%rip)        # 63f418 <beyond>
  41b7cd:	e9 ce fe ff ff       	jmpq   41b6a0 <caml_fl_allocate+0x4b0>
  41b7d2:	0f 1f 40 00          	nopl   0x0(%rax)
  41b7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41b7dd:	00 00 00 

000000000041b7e0 <caml_fl_init_merge>:
  41b7e0:	48 c7 05 25 3c 22 00 	movq   $0x0,0x223c25(%rip)        # 63f410 <last_fragment>
  41b7e7:	00 00 00 00 
  41b7eb:	48 c7 05 aa 10 21 00 	movq   $0x62c8d0,0x2110aa(%rip)        # 62c8a0 <caml_fl_merge>
  41b7f2:	d0 c8 62 00 
  41b7f6:	c3                   	retq   
  41b7f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41b7fe:	00 00 

000000000041b800 <caml_fl_reset>:
  41b800:	48 8b 05 f9 3b 22 00 	mov    0x223bf9(%rip),%rax        # 63f400 <caml_allocation_policy>
  41b807:	48 c7 05 be 10 21 00 	movq   $0x0,0x2110be(%rip)        # 62c8d0 <sentinel+0x10>
  41b80e:	00 00 00 00 
  41b812:	48 85 c0             	test   %rax,%rax
  41b815:	74 49                	je     41b860 <caml_fl_reset+0x60>
  41b817:	48 83 f8 01          	cmp    $0x1,%rax
  41b81b:	74 23                	je     41b840 <caml_fl_reset+0x40>
  41b81d:	b8 d0 c8 62 00       	mov    $0x62c8d0,%eax
  41b822:	48 c7 05 db 3b 22 00 	movq   $0x0,0x223bdb(%rip)        # 63f408 <caml_fl_cur_wsz>
  41b829:	00 00 00 00 
  41b82d:	48 c7 05 d8 3b 22 00 	movq   $0x0,0x223bd8(%rip)        # 63f410 <last_fragment>
  41b834:	00 00 00 00 
  41b838:	48 89 05 61 10 21 00 	mov    %rax,0x211061(%rip)        # 62c8a0 <caml_fl_merge>
  41b83f:	c3                   	retq   
  41b840:	c7 05 d6 3b 22 00 00 	movl   $0x0,0x223bd6(%rip)        # 63f420 <flp_size>
  41b847:	00 00 00 
  41b84a:	48 c7 05 c3 3b 22 00 	movq   $0x0,0x223bc3(%rip)        # 63f418 <beyond>
  41b851:	00 00 00 00 
  41b855:	eb c6                	jmp    41b81d <caml_fl_reset+0x1d>
  41b857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41b85e:	00 00 
  41b860:	b8 d0 c8 62 00       	mov    $0x62c8d0,%eax
  41b865:	48 89 05 3c 10 21 00 	mov    %rax,0x21103c(%rip)        # 62c8a8 <fl_prev>
  41b86c:	eb b4                	jmp    41b822 <caml_fl_reset+0x22>
  41b86e:	66 90                	xchg   %ax,%ax

000000000041b870 <caml_fl_merge_block>:
  41b870:	41 57                	push   %r15
  41b872:	41 56                	push   %r14
  41b874:	48 8d 47 f8          	lea    -0x8(%rdi),%rax
  41b878:	41 55                	push   %r13
  41b87a:	41 54                	push   %r12
  41b87c:	49 89 fe             	mov    %rdi,%r14
  41b87f:	55                   	push   %rbp
  41b880:	53                   	push   %rbx
  41b881:	48 89 c5             	mov    %rax,%rbp
  41b884:	49 89 fc             	mov    %rdi,%r12
  41b887:	48 83 ec 10          	sub    $0x10,%rsp
  41b88b:	4c 8b 3d 0e 10 21 00 	mov    0x21100e(%rip),%r15        # 62c8a0 <caml_fl_merge>
  41b892:	48 89 04 24          	mov    %rax,(%rsp)
  41b896:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  41b89a:	49 89 c1             	mov    %rax,%r9
  41b89d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41b8a2:	48 8b 05 5f 3b 22 00 	mov    0x223b5f(%rip),%rax        # 63f408 <caml_fl_cur_wsz>
  41b8a9:	49 c1 e9 0a          	shr    $0xa,%r9
  41b8ad:	48 83 3d 4b 3b 22 00 	cmpq   $0x1,0x223b4b(%rip)        # 63f400 <caml_allocation_policy>
  41b8b4:	01 
  41b8b5:	4d 89 cd             	mov    %r9,%r13
  41b8b8:	49 8d 44 01 01       	lea    0x1(%r9,%rax,1),%rax
  41b8bd:	48 89 05 44 3b 22 00 	mov    %rax,0x223b44(%rip)        # 63f408 <caml_fl_cur_wsz>
  41b8c4:	49 8b 1f             	mov    (%r15),%rbx
  41b8c7:	0f 84 9b 00 00 00    	je     41b968 <caml_fl_merge_block+0xf8>
  41b8cd:	48 8b 04 24          	mov    (%rsp),%rax
  41b8d1:	48 3b 05 38 3b 22 00 	cmp    0x223b38(%rip),%rax        # 63f410 <last_fragment>
  41b8d8:	0f 84 b2 00 00 00    	je     41b990 <caml_fl_merge_block+0x120>
  41b8de:	4b 8d 04 ec          	lea    (%r12,%r13,8),%rax
  41b8e2:	48 8d 53 f8          	lea    -0x8(%rbx),%rdx
  41b8e6:	48 39 d0             	cmp    %rdx,%rax
  41b8e9:	0f 84 19 01 00 00    	je     41ba08 <caml_fl_merge_block+0x198>
  41b8ef:	49 8b 57 f8          	mov    -0x8(%r15),%rdx
  41b8f3:	48 c1 ea 0a          	shr    $0xa,%rdx
  41b8f7:	49 8d 0c d7          	lea    (%r15,%rdx,8),%rcx
  41b8fb:	48 39 cd             	cmp    %rcx,%rbp
  41b8fe:	0f 84 7c 01 00 00    	je     41ba80 <caml_fl_merge_block+0x210>
  41b904:	4d 85 ed             	test   %r13,%r13
  41b907:	75 27                	jne    41b930 <caml_fl_merge_block+0xc0>
  41b909:	48 83 2d f7 3a 22 00 	subq   $0x1,0x223af7(%rip)        # 63f408 <caml_fl_cur_wsz>
  41b910:	01 
  41b911:	4c 89 35 f8 3a 22 00 	mov    %r14,0x223af8(%rip)        # 63f410 <last_fragment>
  41b918:	48 83 c4 10          	add    $0x10,%rsp
  41b91c:	5b                   	pop    %rbx
  41b91d:	5d                   	pop    %rbp
  41b91e:	41 5c                	pop    %r12
  41b920:	41 5d                	pop    %r13
  41b922:	41 5e                	pop    %r14
  41b924:	41 5f                	pop    %r15
  41b926:	c3                   	retq   
  41b927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41b92e:	00 00 
  41b930:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
  41b935:	49 81 e2 ff fc ff ff 	and    $0xfffffffffffffcff,%r10
  41b93c:	49 81 ca 00 02 00 00 	or     $0x200,%r10
  41b943:	4c 89 55 00          	mov    %r10,0x0(%rbp)
  41b947:	49 89 1e             	mov    %rbx,(%r14)
  41b94a:	4d 89 37             	mov    %r14,(%r15)
  41b94d:	4c 89 35 4c 0f 21 00 	mov    %r14,0x210f4c(%rip)        # 62c8a0 <caml_fl_merge>
  41b954:	48 83 c4 10          	add    $0x10,%rsp
  41b958:	5b                   	pop    %rbx
  41b959:	5d                   	pop    %rbp
  41b95a:	41 5c                	pop    %r12
  41b95c:	41 5d                	pop    %r13
  41b95e:	41 5e                	pop    %r14
  41b960:	41 5f                	pop    %r15
  41b962:	c3                   	retq   
  41b963:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41b968:	49 81 ff d0 c8 62 00 	cmp    $0x62c8d0,%r15
  41b96f:	74 77                	je     41b9e8 <caml_fl_merge_block+0x178>
  41b971:	4c 89 ff             	mov    %r15,%rdi
  41b974:	e8 f7 f7 ff ff       	callq  41b170 <truncate_flp.part.0>
  41b979:	48 8b 04 24          	mov    (%rsp),%rax
  41b97d:	48 3b 05 8c 3a 22 00 	cmp    0x223a8c(%rip),%rax        # 63f410 <last_fragment>
  41b984:	0f 85 54 ff ff ff    	jne    41b8de <caml_fl_merge_block+0x6e>
  41b98a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41b990:	48 89 c6             	mov    %rax,%rsi
  41b993:	48 8b 00             	mov    (%rax),%rax
  41b996:	48 ba 00 00 00 00 00 	movabs $0x40000000000000,%rdx
  41b99d:	00 40 00 
  41b9a0:	48 c1 e8 0a          	shr    $0xa,%rax
  41b9a4:	48 83 c0 01          	add    $0x1,%rax
  41b9a8:	48 39 d0             	cmp    %rdx,%rax
  41b9ab:	0f 84 2d ff ff ff    	je     41b8de <caml_fl_merge_block+0x6e>
  41b9b1:	48 c1 e0 0a          	shl    $0xa,%rax
  41b9b5:	49 8d 6c 24 f0       	lea    -0x10(%r12),%rbp
  41b9ba:	49 89 f6             	mov    %rsi,%r14
  41b9bd:	49 89 c1             	mov    %rax,%r9
  41b9c0:	49 89 44 24 f0       	mov    %rax,-0x10(%r12)
  41b9c5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41b9ca:	49 c1 e9 0a          	shr    $0xa,%r9
  41b9ce:	48 83 05 32 3a 22 00 	addq   $0x1,0x223a32(%rip)        # 63f408 <caml_fl_cur_wsz>
  41b9d5:	01 
  41b9d6:	49 89 f4             	mov    %rsi,%r12
  41b9d9:	4d 89 cd             	mov    %r9,%r13
  41b9dc:	e9 fd fe ff ff       	jmpq   41b8de <caml_fl_merge_block+0x6e>
  41b9e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41b9e8:	c7 05 2e 3a 22 00 00 	movl   $0x0,0x223a2e(%rip)        # 63f420 <flp_size>
  41b9ef:	00 00 00 
  41b9f2:	48 c7 05 1b 3a 22 00 	movq   $0x0,0x223a1b(%rip)        # 63f418 <beyond>
  41b9f9:	00 00 00 00 
  41b9fd:	e9 cb fe ff ff       	jmpq   41b8cd <caml_fl_merge_block+0x5d>
  41ba02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41ba08:	48 8b 10             	mov    (%rax),%rdx
  41ba0b:	48 b9 ff ff ff ff ff 	movabs $0x3fffffffffffff,%rcx
  41ba12:	ff 3f 00 
  41ba15:	48 c1 ea 0a          	shr    $0xa,%rdx
  41ba19:	49 8d 54 15 01       	lea    0x1(%r13,%rdx,1),%rdx
  41ba1e:	48 39 ca             	cmp    %rcx,%rdx
  41ba21:	0f 87 c8 fe ff ff    	ja     41b8ef <caml_fl_merge_block+0x7f>
  41ba27:	48 8b 0b             	mov    (%rbx),%rcx
  41ba2a:	49 89 0f             	mov    %rcx,(%r15)
  41ba2d:	48 83 3d cb 39 22 00 	cmpq   $0x0,0x2239cb(%rip)        # 63f400 <caml_allocation_policy>
  41ba34:	00 
  41ba35:	75 19                	jne    41ba50 <caml_fl_merge_block+0x1e0>
  41ba37:	48 3b 1d 6a 0e 21 00 	cmp    0x210e6a(%rip),%rbx        # 62c8a8 <fl_prev>
  41ba3e:	75 10                	jne    41ba50 <caml_fl_merge_block+0x1e0>
  41ba40:	4c 89 3d 61 0e 21 00 	mov    %r15,0x210e61(%rip)        # 62c8a8 <fl_prev>
  41ba47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41ba4e:	00 00 
  41ba50:	48 c1 e2 0a          	shl    $0xa,%rdx
  41ba54:	48 89 cb             	mov    %rcx,%rbx
  41ba57:	48 8d 82 00 02 00 00 	lea    0x200(%rdx),%rax
  41ba5e:	49 89 c1             	mov    %rax,%r9
  41ba61:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41ba66:	48 89 45 00          	mov    %rax,0x0(%rbp)
  41ba6a:	49 c1 e9 0a          	shr    $0xa,%r9
  41ba6e:	4d 89 cd             	mov    %r9,%r13
  41ba71:	4b 8d 04 cc          	lea    (%r12,%r9,8),%rax
  41ba75:	e9 75 fe ff ff       	jmpq   41b8ef <caml_fl_merge_block+0x7f>
  41ba7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41ba80:	49 8d 54 15 01       	lea    0x1(%r13,%rdx,1),%rdx
  41ba85:	48 b9 fe ff ff ff ff 	movabs $0x3ffffffffffffe,%rcx
  41ba8c:	ff 3f 00 
  41ba8f:	48 39 ca             	cmp    %rcx,%rdx
  41ba92:	0f 87 6c fe ff ff    	ja     41b904 <caml_fl_merge_block+0x94>
  41ba98:	48 c1 e2 0a          	shl    $0xa,%rdx
  41ba9c:	48 81 c2 00 02 00 00 	add    $0x200,%rdx
  41baa3:	49 89 57 f8          	mov    %rdx,-0x8(%r15)
  41baa7:	e9 6c fe ff ff       	jmpq   41b918 <caml_fl_merge_block+0xa8>
  41baac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041bab0 <caml_fl_add_blocks>:
  41bab0:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  41bab4:	48 8b 15 4d 39 22 00 	mov    0x22394d(%rip),%rdx        # 63f408 <caml_fl_cur_wsz>
  41babb:	48 c1 e8 0a          	shr    $0xa,%rax
  41babf:	48 8d 44 10 01       	lea    0x1(%rax,%rdx,1),%rax
  41bac4:	48 89 05 3d 39 22 00 	mov    %rax,0x22393d(%rip)        # 63f408 <caml_fl_cur_wsz>
  41bacb:	48 8b 05 ae 58 22 00 	mov    0x2258ae(%rip),%rax        # 641380 <fl_last>
  41bad2:	48 39 c7             	cmp    %rax,%rdi
  41bad5:	7e 21                	jle    41baf8 <caml_fl_add_blocks+0x48>
  41bad7:	48 89 38             	mov    %rdi,(%rax)
  41bada:	48 3b 05 bf 0d 21 00 	cmp    0x210dbf(%rip),%rax        # 62c8a0 <caml_fl_merge>
  41bae1:	0f 84 b1 00 00 00    	je     41bb98 <caml_fl_add_blocks+0xe8>
  41bae7:	48 83 3d 11 39 22 00 	cmpq   $0x1,0x223911(%rip)        # 63f400 <caml_allocation_policy>
  41baee:	01 
  41baef:	74 7f                	je     41bb70 <caml_fl_add_blocks+0xc0>
  41baf1:	f3 c3                	repz retq 
  41baf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41baf8:	48 8b 15 d1 0d 21 00 	mov    0x210dd1(%rip),%rdx        # 62c8d0 <sentinel+0x10>
  41baff:	48 85 d2             	test   %rdx,%rdx
  41bb02:	0f 84 d5 00 00 00    	je     41bbdd <caml_fl_add_blocks+0x12d>
  41bb08:	48 39 d7             	cmp    %rdx,%rdi
  41bb0b:	7f 0e                	jg     41bb1b <caml_fl_add_blocks+0x6b>
  41bb0d:	e9 cb 00 00 00       	jmpq   41bbdd <caml_fl_add_blocks+0x12d>
  41bb12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41bb18:	48 89 c2             	mov    %rax,%rdx
  41bb1b:	48 8b 02             	mov    (%rdx),%rax
  41bb1e:	49 89 d0             	mov    %rdx,%r8
  41bb21:	48 85 c0             	test   %rax,%rax
  41bb24:	40 0f 95 c6          	setne  %sil
  41bb28:	48 39 c7             	cmp    %rax,%rdi
  41bb2b:	0f 9f c1             	setg   %cl
  41bb2e:	40 84 ce             	test   %cl,%sil
  41bb31:	75 e5                	jne    41bb18 <caml_fl_add_blocks+0x68>
  41bb33:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
  41bb37:	48 89 01             	mov    %rax,(%rcx)
  41bb3a:	49 89 38             	mov    %rdi,(%r8)
  41bb3d:	48 39 15 5c 0d 21 00 	cmp    %rdx,0x210d5c(%rip)        # 62c8a0 <caml_fl_merge>
  41bb44:	74 72                	je     41bbb8 <caml_fl_add_blocks+0x108>
  41bb46:	48 83 3d b2 38 22 00 	cmpq   $0x1,0x2238b2(%rip)        # 63f400 <caml_allocation_policy>
  41bb4d:	01 
  41bb4e:	75 a1                	jne    41baf1 <caml_fl_add_blocks+0x41>
  41bb50:	48 81 ff d0 c8 62 00 	cmp    $0x62c8d0,%rdi
  41bb57:	75 7f                	jne    41bbd8 <caml_fl_add_blocks+0x128>
  41bb59:	c7 05 bd 38 22 00 00 	movl   $0x0,0x2238bd(%rip)        # 63f420 <flp_size>
  41bb60:	00 00 00 
  41bb63:	48 c7 05 aa 38 22 00 	movq   $0x0,0x2238aa(%rip)        # 63f418 <beyond>
  41bb6a:	00 00 00 00 
  41bb6e:	c3                   	retq   
  41bb6f:	90                   	nop
  41bb70:	48 63 15 a9 38 22 00 	movslq 0x2238a9(%rip),%rdx        # 63f420 <flp_size>
  41bb77:	81 fa e7 03 00 00    	cmp    $0x3e7,%edx
  41bb7d:	0f 8f 6e ff ff ff    	jg     41baf1 <caml_fl_add_blocks+0x41>
  41bb83:	8d 4a 01             	lea    0x1(%rdx),%ecx
  41bb86:	48 89 04 d5 40 f4 63 	mov    %rax,0x63f440(,%rdx,8)
  41bb8d:	00 
  41bb8e:	89 0d 8c 38 22 00    	mov    %ecx,0x22388c(%rip)        # 63f420 <flp_size>
  41bb94:	c3                   	retq   
  41bb95:	0f 1f 00             	nopl   (%rax)
  41bb98:	48 39 3d 71 58 22 00 	cmp    %rdi,0x225871(%rip)        # 641410 <caml_gc_sweep_hp>
  41bb9f:	0f 86 42 ff ff ff    	jbe    41bae7 <caml_fl_add_blocks+0x37>
  41bba5:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  41bba9:	48 89 15 f0 0c 21 00 	mov    %rdx,0x210cf0(%rip)        # 62c8a0 <caml_fl_merge>
  41bbb0:	e9 32 ff ff ff       	jmpq   41bae7 <caml_fl_add_blocks+0x37>
  41bbb5:	0f 1f 00             	nopl   (%rax)
  41bbb8:	48 39 3d 51 58 22 00 	cmp    %rdi,0x225851(%rip)        # 641410 <caml_gc_sweep_hp>
  41bbbf:	76 85                	jbe    41bb46 <caml_fl_add_blocks+0x96>
  41bbc1:	48 8b 47 08          	mov    0x8(%rdi),%rax
  41bbc5:	48 89 05 d4 0c 21 00 	mov    %rax,0x210cd4(%rip)        # 62c8a0 <caml_fl_merge>
  41bbcc:	e9 75 ff ff ff       	jmpq   41bb46 <caml_fl_add_blocks+0x96>
  41bbd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41bbd8:	e9 93 f5 ff ff       	jmpq   41b170 <truncate_flp.part.0>
  41bbdd:	41 b8 d0 c8 62 00    	mov    $0x62c8d0,%r8d
  41bbe3:	48 89 d0             	mov    %rdx,%rax
  41bbe6:	4c 89 c2             	mov    %r8,%rdx
  41bbe9:	e9 45 ff ff ff       	jmpq   41bb33 <caml_fl_add_blocks+0x83>
  41bbee:	66 90                	xchg   %ax,%ax

000000000041bbf0 <caml_make_free_blocks>:
  41bbf0:	48 85 f6             	test   %rsi,%rsi
  41bbf3:	74 61                	je     41bc56 <caml_make_free_blocks+0x66>
  41bbf5:	41 55                	push   %r13
  41bbf7:	49 89 f0             	mov    %rsi,%r8
  41bbfa:	41 54                	push   %r12
  41bbfc:	41 89 d5             	mov    %edx,%r13d
  41bbff:	55                   	push   %rbp
  41bc00:	4c 63 e1             	movslq %ecx,%r12
  41bc03:	53                   	push   %rbx
  41bc04:	48 bd 00 00 00 00 00 	movabs $0x40000000000000,%rbp
  41bc0b:	00 40 00 
  41bc0e:	48 89 fb             	mov    %rdi,%rbx
  41bc11:	eb 0e                	jmp    41bc21 <caml_make_free_blocks+0x31>
  41bc13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41bc18:	4d 29 d8             	sub    %r11,%r8
  41bc1b:	4a 8d 1c db          	lea    (%rbx,%r11,8),%rbx
  41bc1f:	74 2f                	je     41bc50 <caml_make_free_blocks+0x60>
  41bc21:	49 39 e8             	cmp    %rbp,%r8
  41bc24:	49 89 eb             	mov    %rbp,%r11
  41bc27:	4d 0f 46 d8          	cmovbe %r8,%r11
  41bc2b:	49 8d 43 ff          	lea    -0x1(%r11),%rax
  41bc2f:	48 c1 e0 0a          	shl    $0xa,%rax
  41bc33:	4c 01 e0             	add    %r12,%rax
  41bc36:	45 85 ed             	test   %r13d,%r13d
  41bc39:	48 89 03             	mov    %rax,(%rbx)
  41bc3c:	74 da                	je     41bc18 <caml_make_free_blocks+0x28>
  41bc3e:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
  41bc42:	e8 29 fc ff ff       	callq  41b870 <caml_fl_merge_block>
  41bc47:	4d 29 d8             	sub    %r11,%r8
  41bc4a:	4a 8d 1c db          	lea    (%rbx,%r11,8),%rbx
  41bc4e:	75 d1                	jne    41bc21 <caml_make_free_blocks+0x31>
  41bc50:	5b                   	pop    %rbx
  41bc51:	5d                   	pop    %rbp
  41bc52:	41 5c                	pop    %r12
  41bc54:	41 5d                	pop    %r13
  41bc56:	f3 c3                	repz retq 
  41bc58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41bc5f:	00 

000000000041bc60 <caml_set_allocation_policy>:
  41bc60:	48 85 ff             	test   %rdi,%rdi
  41bc63:	74 33                	je     41bc98 <caml_set_allocation_policy+0x38>
  41bc65:	48 83 ff 01          	cmp    $0x1,%rdi
  41bc69:	75 25                	jne    41bc90 <caml_set_allocation_policy+0x30>
  41bc6b:	c7 05 ab 37 22 00 00 	movl   $0x0,0x2237ab(%rip)        # 63f420 <flp_size>
  41bc72:	00 00 00 
  41bc75:	48 c7 05 98 37 22 00 	movq   $0x0,0x223798(%rip)        # 63f418 <beyond>
  41bc7c:	00 00 00 00 
  41bc80:	48 c7 05 75 37 22 00 	movq   $0x1,0x223775(%rip)        # 63f400 <caml_allocation_policy>
  41bc87:	01 00 00 00 
  41bc8b:	c3                   	retq   
  41bc8c:	0f 1f 40 00          	nopl   0x0(%rax)
  41bc90:	f3 c3                	repz retq 
  41bc92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41bc98:	48 c7 05 05 0c 21 00 	movq   $0x62c8d0,0x210c05(%rip)        # 62c8a8 <fl_prev>
  41bc9f:	d0 c8 62 00 
  41bca3:	48 c7 05 52 37 22 00 	movq   $0x0,0x223752(%rip)        # 63f400 <caml_allocation_policy>
  41bcaa:	00 00 00 00 
  41bcae:	c3                   	retq   
  41bcaf:	90                   	nop

000000000041bcb0 <caml_gc_message>:
  41bcb0:	48 63 ff             	movslq %edi,%rdi
  41bcb3:	48 85 3d d6 56 22 00 	test   %rdi,0x2256d6(%rip)        # 641390 <caml_verb_gc>
  41bcba:	75 04                	jne    41bcc0 <caml_gc_message+0x10>
  41bcbc:	f3 c3                	repz retq 
  41bcbe:	66 90                	xchg   %ax,%ax
  41bcc0:	48 83 ec 08          	sub    $0x8,%rsp
  41bcc4:	48 8b 3d 35 0c 21 00 	mov    0x210c35(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41bccb:	48 89 d1             	mov    %rdx,%rcx
  41bcce:	31 c0                	xor    %eax,%eax
  41bcd0:	48 89 f2             	mov    %rsi,%rdx
  41bcd3:	be 01 00 00 00       	mov    $0x1,%esi
  41bcd8:	e8 23 61 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41bcdd:	48 8b 3d 1c 0c 21 00 	mov    0x210c1c(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41bce4:	48 83 c4 08          	add    $0x8,%rsp
  41bce8:	e9 b3 5f fe ff       	jmpq   401ca0 <fflush@plt>
  41bced:	0f 1f 00             	nopl   (%rax)

000000000041bcf0 <caml_fatal_error>:
  41bcf0:	48 83 ec 08          	sub    $0x8,%rsp
  41bcf4:	48 8b 35 05 0c 21 00 	mov    0x210c05(%rip),%rsi        # 62c900 <stderr@@GLIBC_2.2.5>
  41bcfb:	e8 b0 5d fe ff       	callq  401ab0 <fputs@plt>
  41bd00:	bf 02 00 00 00       	mov    $0x2,%edi
  41bd05:	e8 c6 60 fe ff       	callq  401dd0 <exit@plt>
  41bd0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041bd10 <caml_fatal_error_arg>:
  41bd10:	48 83 ec 08          	sub    $0x8,%rsp
  41bd14:	48 89 fa             	mov    %rdi,%rdx
  41bd17:	48 8b 3d e2 0b 21 00 	mov    0x210be2(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41bd1e:	48 89 f1             	mov    %rsi,%rcx
  41bd21:	31 c0                	xor    %eax,%eax
  41bd23:	be 01 00 00 00       	mov    $0x1,%esi
  41bd28:	e8 d3 60 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41bd2d:	bf 02 00 00 00       	mov    $0x2,%edi
  41bd32:	e8 99 60 fe ff       	callq  401dd0 <exit@plt>
  41bd37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41bd3e:	00 00 

000000000041bd40 <caml_fatal_error_arg2>:
  41bd40:	55                   	push   %rbp
  41bd41:	53                   	push   %rbx
  41bd42:	48 89 d3             	mov    %rdx,%rbx
  41bd45:	48 89 fa             	mov    %rdi,%rdx
  41bd48:	48 89 cd             	mov    %rcx,%rbp
  41bd4b:	31 c0                	xor    %eax,%eax
  41bd4d:	48 83 ec 08          	sub    $0x8,%rsp
  41bd51:	48 8b 3d a8 0b 21 00 	mov    0x210ba8(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41bd58:	48 89 f1             	mov    %rsi,%rcx
  41bd5b:	be 01 00 00 00       	mov    $0x1,%esi
  41bd60:	e8 9b 60 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41bd65:	48 8b 3d 94 0b 21 00 	mov    0x210b94(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41bd6c:	48 89 e9             	mov    %rbp,%rcx
  41bd6f:	48 89 da             	mov    %rbx,%rdx
  41bd72:	be 01 00 00 00       	mov    $0x1,%esi
  41bd77:	31 c0                	xor    %eax,%eax
  41bd79:	e8 82 60 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41bd7e:	bf 02 00 00 00       	mov    $0x2,%edi
  41bd83:	e8 48 60 fe ff       	callq  401dd0 <exit@plt>
  41bd88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41bd8f:	00 

000000000041bd90 <caml_aligned_malloc>:
  41bd90:	55                   	push   %rbp
  41bd91:	53                   	push   %rbx
  41bd92:	48 81 c7 00 10 00 00 	add    $0x1000,%rdi
  41bd99:	89 f3                	mov    %esi,%ebx
  41bd9b:	48 89 d5             	mov    %rdx,%rbp
  41bd9e:	48 83 ec 08          	sub    $0x8,%rsp
  41bda2:	e8 e9 5e fe ff       	callq  401c90 <malloc@plt>
  41bda7:	48 85 c0             	test   %rax,%rax
  41bdaa:	74 24                	je     41bdd0 <caml_aligned_malloc+0x40>
  41bdac:	48 63 f3             	movslq %ebx,%rsi
  41bdaf:	48 89 45 00          	mov    %rax,0x0(%rbp)
  41bdb3:	48 01 f0             	add    %rsi,%rax
  41bdb6:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
  41bdbc:	48 05 00 10 00 00    	add    $0x1000,%rax
  41bdc2:	48 29 f0             	sub    %rsi,%rax
  41bdc5:	48 83 c4 08          	add    $0x8,%rsp
  41bdc9:	5b                   	pop    %rbx
  41bdca:	5d                   	pop    %rbp
  41bdcb:	c3                   	retq   
  41bdcc:	0f 1f 40 00          	nopl   0x0(%rax)
  41bdd0:	31 c0                	xor    %eax,%eax
  41bdd2:	eb f1                	jmp    41bdc5 <caml_aligned_malloc+0x35>
  41bdd4:	66 90                	xchg   %ax,%ax
  41bdd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bddd:	00 00 00 

000000000041bde0 <caml_ext_table_init>:
  41bde0:	53                   	push   %rbx
  41bde1:	89 77 04             	mov    %esi,0x4(%rdi)
  41bde4:	48 63 f6             	movslq %esi,%rsi
  41bde7:	48 89 fb             	mov    %rdi,%rbx
  41bdea:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  41bdf0:	48 8d 3c f5 00 00 00 	lea    0x0(,%rsi,8),%rdi
  41bdf7:	00 
  41bdf8:	e8 d3 d9 fe ff       	callq  4097d0 <caml_stat_alloc>
  41bdfd:	48 89 43 08          	mov    %rax,0x8(%rbx)
  41be01:	5b                   	pop    %rbx
  41be02:	c3                   	retq   
  41be03:	0f 1f 00             	nopl   (%rax)
  41be06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41be0d:	00 00 00 

000000000041be10 <caml_ext_table_add>:
  41be10:	55                   	push   %rbp
  41be11:	53                   	push   %rbx
  41be12:	48 89 f5             	mov    %rsi,%rbp
  41be15:	48 89 fb             	mov    %rdi,%rbx
  41be18:	48 83 ec 08          	sub    $0x8,%rsp
  41be1c:	8b 07                	mov    (%rdi),%eax
  41be1e:	8b 77 04             	mov    0x4(%rdi),%esi
  41be21:	39 f0                	cmp    %esi,%eax
  41be23:	7d 1b                	jge    41be40 <caml_ext_table_add+0x30>
  41be25:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  41be29:	48 63 c8             	movslq %eax,%rcx
  41be2c:	48 89 2c ca          	mov    %rbp,(%rdx,%rcx,8)
  41be30:	83 03 01             	addl   $0x1,(%rbx)
  41be33:	48 83 c4 08          	add    $0x8,%rsp
  41be37:	5b                   	pop    %rbx
  41be38:	5d                   	pop    %rbp
  41be39:	c3                   	retq   
  41be3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41be40:	01 f6                	add    %esi,%esi
  41be42:	89 77 04             	mov    %esi,0x4(%rdi)
  41be45:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  41be49:	48 63 f6             	movslq %esi,%rsi
  41be4c:	48 c1 e6 03          	shl    $0x3,%rsi
  41be50:	e8 ab d9 fe ff       	callq  409800 <caml_stat_resize>
  41be55:	48 89 c2             	mov    %rax,%rdx
  41be58:	48 89 43 08          	mov    %rax,0x8(%rbx)
  41be5c:	8b 03                	mov    (%rbx),%eax
  41be5e:	eb c9                	jmp    41be29 <caml_ext_table_add+0x19>

000000000041be60 <caml_ext_table_remove>:
  41be60:	8b 07                	mov    (%rdi),%eax
  41be62:	85 c0                	test   %eax,%eax
  41be64:	7e 43                	jle    41bea9 <caml_ext_table_remove+0x49>
  41be66:	41 55                	push   %r13
  41be68:	41 54                	push   %r12
  41be6a:	49 89 f5             	mov    %rsi,%r13
  41be6d:	55                   	push   %rbp
  41be6e:	53                   	push   %rbx
  41be6f:	48 89 fd             	mov    %rdi,%rbp
  41be72:	31 db                	xor    %ebx,%ebx
  41be74:	48 83 ec 08          	sub    $0x8,%rsp
  41be78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41be7f:	00 
  41be80:	48 8b 55 08          	mov    0x8(%rbp),%rdx
  41be84:	48 63 c3             	movslq %ebx,%rax
  41be87:	4c 8d 24 c5 00 00 00 	lea    0x0(,%rax,8),%r12
  41be8e:	00 
  41be8f:	4c 39 2c c2          	cmp    %r13,(%rdx,%rax,8)
  41be93:	74 1b                	je     41beb0 <caml_ext_table_remove+0x50>
  41be95:	8b 45 00             	mov    0x0(%rbp),%eax
  41be98:	83 c3 01             	add    $0x1,%ebx
  41be9b:	39 c3                	cmp    %eax,%ebx
  41be9d:	7c e1                	jl     41be80 <caml_ext_table_remove+0x20>
  41be9f:	48 83 c4 08          	add    $0x8,%rsp
  41bea3:	5b                   	pop    %rbx
  41bea4:	5d                   	pop    %rbp
  41bea5:	41 5c                	pop    %r12
  41bea7:	41 5d                	pop    %r13
  41bea9:	f3 c3                	repz retq 
  41beab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41beb0:	4c 89 ef             	mov    %r13,%rdi
  41beb3:	e8 38 d9 fe ff       	callq  4097f0 <caml_stat_free>
  41beb8:	89 da                	mov    %ebx,%edx
  41beba:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
  41bebe:	f7 d2                	not    %edx
  41bec0:	03 55 00             	add    0x0(%rbp),%edx
  41bec3:	4a 8d 74 27 08       	lea    0x8(%rdi,%r12,1),%rsi
  41bec8:	4c 01 e7             	add    %r12,%rdi
  41becb:	48 63 d2             	movslq %edx,%rdx
  41bece:	48 c1 e2 03          	shl    $0x3,%rdx
  41bed2:	e8 59 5e fe ff       	callq  401d30 <memmove@plt>
  41bed7:	8b 45 00             	mov    0x0(%rbp),%eax
  41beda:	83 e8 01             	sub    $0x1,%eax
  41bedd:	89 45 00             	mov    %eax,0x0(%rbp)
  41bee0:	eb b6                	jmp    41be98 <caml_ext_table_remove+0x38>
  41bee2:	0f 1f 40 00          	nopl   0x0(%rax)
  41bee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41beed:	00 00 00 

000000000041bef0 <caml_ext_table_clear>:
  41bef0:	55                   	push   %rbp
  41bef1:	53                   	push   %rbx
  41bef2:	48 89 fd             	mov    %rdi,%rbp
  41bef5:	48 83 ec 08          	sub    $0x8,%rsp
  41bef9:	85 f6                	test   %esi,%esi
  41befb:	74 23                	je     41bf20 <caml_ext_table_clear+0x30>
  41befd:	8b 07                	mov    (%rdi),%eax
  41beff:	85 c0                	test   %eax,%eax
  41bf01:	7e 1d                	jle    41bf20 <caml_ext_table_clear+0x30>
  41bf03:	31 db                	xor    %ebx,%ebx
  41bf05:	0f 1f 00             	nopl   (%rax)
  41bf08:	48 8b 45 08          	mov    0x8(%rbp),%rax
  41bf0c:	48 63 d3             	movslq %ebx,%rdx
  41bf0f:	83 c3 01             	add    $0x1,%ebx
  41bf12:	48 8b 3c d0          	mov    (%rax,%rdx,8),%rdi
  41bf16:	e8 d5 d8 fe ff       	callq  4097f0 <caml_stat_free>
  41bf1b:	39 5d 00             	cmp    %ebx,0x0(%rbp)
  41bf1e:	7f e8                	jg     41bf08 <caml_ext_table_clear+0x18>
  41bf20:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
  41bf27:	48 83 c4 08          	add    $0x8,%rsp
  41bf2b:	5b                   	pop    %rbx
  41bf2c:	5d                   	pop    %rbp
  41bf2d:	c3                   	retq   
  41bf2e:	66 90                	xchg   %ax,%ax

000000000041bf30 <caml_ext_table_free>:
  41bf30:	53                   	push   %rbx
  41bf31:	48 89 fb             	mov    %rdi,%rbx
  41bf34:	e8 b7 ff ff ff       	callq  41bef0 <caml_ext_table_clear>
  41bf39:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  41bf3d:	5b                   	pop    %rbx
  41bf3e:	e9 ad d8 fe ff       	jmpq   4097f0 <caml_stat_free>
  41bf43:	0f 1f 00             	nopl   (%rax)
  41bf46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bf4d:	00 00 00 

000000000041bf50 <caml_strdup>:
  41bf50:	55                   	push   %rbp
  41bf51:	53                   	push   %rbx
  41bf52:	48 89 fd             	mov    %rdi,%rbp
  41bf55:	48 83 ec 08          	sub    $0x8,%rsp
  41bf59:	e8 f2 5a fe ff       	callq  401a50 <strlen@plt>
  41bf5e:	48 8d 58 01          	lea    0x1(%rax),%rbx
  41bf62:	48 89 df             	mov    %rbx,%rdi
  41bf65:	e8 66 d8 fe ff       	callq  4097d0 <caml_stat_alloc>
  41bf6a:	48 89 da             	mov    %rbx,%rdx
  41bf6d:	48 89 ee             	mov    %rbp,%rsi
  41bf70:	48 89 c7             	mov    %rax,%rdi
  41bf73:	e8 98 5c fe ff       	callq  401c10 <memcpy@plt>
  41bf78:	48 83 c4 08          	add    $0x8,%rsp
  41bf7c:	5b                   	pop    %rbx
  41bf7d:	5d                   	pop    %rbp
  41bf7e:	c3                   	retq   
  41bf7f:	90                   	nop

000000000041bf80 <caml_strconcat>:
  41bf80:	41 57                	push   %r15
  41bf82:	41 56                	push   %r14
  41bf84:	41 55                	push   %r13
  41bf86:	41 54                	push   %r12
  41bf88:	55                   	push   %rbp
  41bf89:	53                   	push   %rbx
  41bf8a:	48 83 ec 58          	sub    $0x58,%rsp
  41bf8e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41bf95:	00 00 
  41bf97:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41bf9c:	31 c0                	xor    %eax,%eax
  41bf9e:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
  41bfa5:	00 
  41bfa6:	85 ff                	test   %edi,%edi
  41bfa8:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  41bfad:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  41bfb2:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  41bfb7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41bfbc:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41bfc1:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  41bfc6:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  41bfcb:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
  41bfd2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41bfd7:	0f 8e d8 00 00 00    	jle    41c0b5 <caml_strconcat+0x135>
  41bfdd:	89 fb                	mov    %edi,%ebx
  41bfdf:	49 89 c4             	mov    %rax,%r12
  41bfe2:	45 31 ed             	xor    %r13d,%r13d
  41bfe5:	31 ed                	xor    %ebp,%ebp
  41bfe7:	eb 26                	jmp    41c00f <caml_strconcat+0x8f>
  41bfe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41bff0:	89 c2                	mov    %eax,%edx
  41bff2:	83 c0 08             	add    $0x8,%eax
  41bff5:	4c 01 e2             	add    %r12,%rdx
  41bff8:	89 04 24             	mov    %eax,(%rsp)
  41bffb:	48 8b 3a             	mov    (%rdx),%rdi
  41bffe:	41 83 c5 01          	add    $0x1,%r13d
  41c002:	e8 49 5a fe ff       	callq  401a50 <strlen@plt>
  41c007:	48 01 c5             	add    %rax,%rbp
  41c00a:	44 39 eb             	cmp    %r13d,%ebx
  41c00d:	74 21                	je     41c030 <caml_strconcat+0xb0>
  41c00f:	8b 04 24             	mov    (%rsp),%eax
  41c012:	83 f8 2f             	cmp    $0x2f,%eax
  41c015:	76 d9                	jbe    41bff0 <caml_strconcat+0x70>
  41c017:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41c01c:	48 8d 42 08          	lea    0x8(%rdx),%rax
  41c020:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41c025:	eb d4                	jmp    41bffb <caml_strconcat+0x7b>
  41c027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c02e:	00 00 
  41c030:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
  41c034:	45 31 ed             	xor    %r13d,%r13d
  41c037:	e8 94 d7 fe ff       	callq  4097d0 <caml_stat_alloc>
  41c03c:	49 89 c4             	mov    %rax,%r12
  41c03f:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
  41c046:	00 
  41c047:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
  41c04e:	4c 89 e5             	mov    %r12,%rbp
  41c051:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41c056:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41c05b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41c060:	eb 3b                	jmp    41c09d <caml_strconcat+0x11d>
  41c062:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41c068:	89 c2                	mov    %eax,%edx
  41c06a:	48 03 54 24 10       	add    0x10(%rsp),%rdx
  41c06f:	83 c0 08             	add    $0x8,%eax
  41c072:	89 04 24             	mov    %eax,(%rsp)
  41c075:	4c 8b 3a             	mov    (%rdx),%r15
  41c078:	41 83 c5 01          	add    $0x1,%r13d
  41c07c:	4c 89 ff             	mov    %r15,%rdi
  41c07f:	e8 cc 59 fe ff       	callq  401a50 <strlen@plt>
  41c084:	48 89 ef             	mov    %rbp,%rdi
  41c087:	49 89 c6             	mov    %rax,%r14
  41c08a:	48 89 c2             	mov    %rax,%rdx
  41c08d:	4c 89 fe             	mov    %r15,%rsi
  41c090:	4c 01 f5             	add    %r14,%rbp
  41c093:	e8 78 5b fe ff       	callq  401c10 <memcpy@plt>
  41c098:	44 39 eb             	cmp    %r13d,%ebx
  41c09b:	74 4b                	je     41c0e8 <caml_strconcat+0x168>
  41c09d:	8b 04 24             	mov    (%rsp),%eax
  41c0a0:	83 f8 2f             	cmp    $0x2f,%eax
  41c0a3:	76 c3                	jbe    41c068 <caml_strconcat+0xe8>
  41c0a5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  41c0aa:	48 8d 42 08          	lea    0x8(%rdx),%rax
  41c0ae:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41c0b3:	eb c0                	jmp    41c075 <caml_strconcat+0xf5>
  41c0b5:	bf 01 00 00 00       	mov    $0x1,%edi
  41c0ba:	e8 11 d7 fe ff       	callq  4097d0 <caml_stat_alloc>
  41c0bf:	49 89 c4             	mov    %rax,%r12
  41c0c2:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
  41c0c9:	00 
  41c0ca:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
  41c0d1:	4c 89 e5             	mov    %r12,%rbp
  41c0d4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41c0d9:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41c0de:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41c0e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41c0e8:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  41c0ed:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41c0f4:	00 00 
  41c0f6:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
  41c0fa:	4c 89 e0             	mov    %r12,%rax
  41c0fd:	75 0f                	jne    41c10e <caml_strconcat+0x18e>
  41c0ff:	48 83 c4 58          	add    $0x58,%rsp
  41c103:	5b                   	pop    %rbx
  41c104:	5d                   	pop    %rbp
  41c105:	41 5c                	pop    %r12
  41c107:	41 5d                	pop    %r13
  41c109:	41 5e                	pop    %r14
  41c10b:	41 5f                	pop    %r15
  41c10d:	c3                   	retq   
  41c10e:	e8 5d 59 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41c113:	0f 1f 00             	nopl   (%rax)
  41c116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c11d:	00 00 00 

000000000041c120 <caml_runtime_warnings_active>:
  41c120:	53                   	push   %rbx
  41c121:	31 db                	xor    %ebx,%ebx
  41c123:	48 83 3d 5d 52 22 00 	cmpq   $0x0,0x22525d(%rip)        # 641388 <caml_runtime_warnings>
  41c12a:	00 
  41c12b:	74 0f                	je     41c13c <caml_runtime_warnings_active+0x1c>
  41c12d:	8b 05 ad 07 21 00    	mov    0x2107ad(%rip),%eax        # 62c8e0 <caml_runtime_warnings_first>
  41c133:	bb 01 00 00 00       	mov    $0x1,%ebx
  41c138:	85 c0                	test   %eax,%eax
  41c13a:	75 04                	jne    41c140 <caml_runtime_warnings_active+0x20>
  41c13c:	89 d8                	mov    %ebx,%eax
  41c13e:	5b                   	pop    %rbx
  41c13f:	c3                   	retq   
  41c140:	48 8b 0d b9 07 21 00 	mov    0x2107b9(%rip),%rcx        # 62c900 <stderr@@GLIBC_2.2.5>
  41c147:	ba 44 00 00 00       	mov    $0x44,%edx
  41c14c:	be 01 00 00 00       	mov    $0x1,%esi
  41c151:	bf 10 f2 41 00       	mov    $0x41f210,%edi
  41c156:	e8 85 5c fe ff       	callq  401de0 <fwrite@plt>
  41c15b:	89 d8                	mov    %ebx,%eax
  41c15d:	c7 05 79 07 21 00 00 	movl   $0x0,0x210779(%rip)        # 62c8e0 <caml_runtime_warnings_first>
  41c164:	00 00 00 
  41c167:	5b                   	pop    %rbx
  41c168:	c3                   	retq   
  41c169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041c170 <caml_alloc>:
  41c170:	48 85 ff             	test   %rdi,%rdi
  41c173:	0f 84 97 00 00 00    	je     41c210 <caml_alloc+0xa0>
  41c179:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
  41c180:	41 54                	push   %r12
  41c182:	55                   	push   %rbp
  41c183:	89 f5                	mov    %esi,%ebp
  41c185:	53                   	push   %rbx
  41c186:	48 89 fb             	mov    %rdi,%rbx
  41c189:	0f 87 91 00 00 00    	ja     41c220 <caml_alloc+0xb0>
  41c18f:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
  41c196:	00 
  41c197:	49 c7 c4 f8 ff ff ff 	mov    $0xfffffffffffffff8,%r12
  41c19e:	49 29 d4             	sub    %rdx,%r12
  41c1a1:	4c 89 e0             	mov    %r12,%rax
  41c1a4:	48 03 05 fd 0c 21 00 	add    0x210cfd(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c1ab:	48 3b 05 e6 0c 21 00 	cmp    0x210ce6(%rip),%rax        # 62ce98 <caml_young_trigger>
  41c1b2:	48 89 05 ef 0c 21 00 	mov    %rax,0x210cef(%rip)        # 62cea8 <caml_young_ptr>
  41c1b9:	0f 82 91 00 00 00    	jb     41c250 <caml_alloc+0xe0>
  41c1bf:	48 89 d9             	mov    %rbx,%rcx
  41c1c2:	89 ea                	mov    %ebp,%edx
  41c1c4:	48 c1 e1 0a          	shl    $0xa,%rcx
  41c1c8:	81 fd fa 00 00 00    	cmp    $0xfa,%ebp
  41c1ce:	48 8d 94 11 00 03 00 	lea    0x300(%rcx,%rdx,1),%rdx
  41c1d5:	00 
  41c1d6:	48 89 10             	mov    %rdx,(%rax)
  41c1d9:	48 8b 0d c8 0c 21 00 	mov    0x210cc8(%rip),%rcx        # 62cea8 <caml_young_ptr>
  41c1e0:	48 8d 41 08          	lea    0x8(%rcx),%rax
  41c1e4:	77 1c                	ja     41c202 <caml_alloc+0x92>
  41c1e6:	31 d2                	xor    %edx,%edx
  41c1e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41c1ef:	00 
  41c1f0:	48 c7 44 d1 08 01 00 	movq   $0x1,0x8(%rcx,%rdx,8)
  41c1f7:	00 00 
  41c1f9:	48 83 c2 01          	add    $0x1,%rdx
  41c1fd:	48 39 d3             	cmp    %rdx,%rbx
  41c200:	75 ee                	jne    41c1f0 <caml_alloc+0x80>
  41c202:	5b                   	pop    %rbx
  41c203:	5d                   	pop    %rbp
  41c204:	41 5c                	pop    %r12
  41c206:	c3                   	retq   
  41c207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c20e:	00 00 
  41c210:	89 f6                	mov    %esi,%esi
  41c212:	48 8d 04 f5 88 14 64 	lea    0x641488(,%rsi,8),%rax
  41c219:	00 
  41c21a:	c3                   	retq   
  41c21b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41c220:	e8 eb d1 fe ff       	callq  409410 <caml_alloc_shr>
  41c225:	81 fd fa 00 00 00    	cmp    $0xfa,%ebp
  41c22b:	77 14                	ja     41c241 <caml_alloc+0xd1>
  41c22d:	31 d2                	xor    %edx,%edx
  41c22f:	90                   	nop
  41c230:	48 c7 04 d0 01 00 00 	movq   $0x1,(%rax,%rdx,8)
  41c237:	00 
  41c238:	48 83 c2 01          	add    $0x1,%rdx
  41c23c:	48 39 d3             	cmp    %rdx,%rbx
  41c23f:	75 ef                	jne    41c230 <caml_alloc+0xc0>
  41c241:	5b                   	pop    %rbx
  41c242:	5d                   	pop    %rbp
  41c243:	41 5c                	pop    %r12
  41c245:	48 89 c7             	mov    %rax,%rdi
  41c248:	e9 03 c8 fe ff       	jmpq   408a50 <caml_check_urgent_gc>
  41c24d:	0f 1f 00             	nopl   (%rax)
  41c250:	48 8d 44 10 08       	lea    0x8(%rax,%rdx,1),%rax
  41c255:	48 89 05 4c 0c 21 00 	mov    %rax,0x210c4c(%rip)        # 62cea8 <caml_young_ptr>
  41c25c:	e8 cf c6 fe ff       	callq  408930 <caml_gc_dispatch>
  41c261:	4c 89 e0             	mov    %r12,%rax
  41c264:	48 03 05 3d 0c 21 00 	add    0x210c3d(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c26b:	48 89 05 36 0c 21 00 	mov    %rax,0x210c36(%rip)        # 62cea8 <caml_young_ptr>
  41c272:	e9 48 ff ff ff       	jmpq   41c1bf <caml_alloc+0x4f>
  41c277:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c27e:	00 00 

000000000041c280 <caml_alloc_small>:
  41c280:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
  41c287:	00 
  41c288:	41 54                	push   %r12
  41c28a:	55                   	push   %rbp
  41c28b:	48 c7 c5 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rbp
  41c292:	53                   	push   %rbx
  41c293:	41 89 f4             	mov    %esi,%r12d
  41c296:	48 29 d5             	sub    %rdx,%rbp
  41c299:	48 89 fb             	mov    %rdi,%rbx
  41c29c:	48 89 e8             	mov    %rbp,%rax
  41c29f:	48 03 05 02 0c 21 00 	add    0x210c02(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c2a6:	48 3b 05 eb 0b 21 00 	cmp    0x210beb(%rip),%rax        # 62ce98 <caml_young_trigger>
  41c2ad:	48 89 05 f4 0b 21 00 	mov    %rax,0x210bf4(%rip)        # 62cea8 <caml_young_ptr>
  41c2b4:	73 22                	jae    41c2d8 <caml_alloc_small+0x58>
  41c2b6:	48 8d 44 10 08       	lea    0x8(%rax,%rdx,1),%rax
  41c2bb:	48 89 05 e6 0b 21 00 	mov    %rax,0x210be6(%rip)        # 62cea8 <caml_young_ptr>
  41c2c2:	e8 69 c6 fe ff       	callq  408930 <caml_gc_dispatch>
  41c2c7:	48 89 e8             	mov    %rbp,%rax
  41c2ca:	48 03 05 d7 0b 21 00 	add    0x210bd7(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c2d1:	48 89 05 d0 0b 21 00 	mov    %rax,0x210bd0(%rip)        # 62cea8 <caml_young_ptr>
  41c2d8:	48 c1 e3 0a          	shl    $0xa,%rbx
  41c2dc:	44 89 e6             	mov    %r12d,%esi
  41c2df:	48 8d 94 33 00 03 00 	lea    0x300(%rbx,%rsi,1),%rdx
  41c2e6:	00 
  41c2e7:	48 89 10             	mov    %rdx,(%rax)
  41c2ea:	48 8b 05 b7 0b 21 00 	mov    0x210bb7(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c2f1:	5b                   	pop    %rbx
  41c2f2:	5d                   	pop    %rbp
  41c2f3:	48 83 c0 08          	add    $0x8,%rax
  41c2f7:	41 5c                	pop    %r12
  41c2f9:	c3                   	retq   
  41c2fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041c300 <caml_alloc_small_with_my_or_given_profinfo>:
  41c300:	48 85 d2             	test   %rdx,%rdx
  41c303:	0f 84 87 00 00 00    	je     41c390 <caml_alloc_small_with_my_or_given_profinfo+0x90>
  41c309:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
  41c310:	00 
  41c311:	41 54                	push   %r12
  41c313:	55                   	push   %rbp
  41c314:	48 c7 c5 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rbp
  41c31b:	53                   	push   %rbx
  41c31c:	41 89 f4             	mov    %esi,%r12d
  41c31f:	48 29 d5             	sub    %rdx,%rbp
  41c322:	48 89 fb             	mov    %rdi,%rbx
  41c325:	48 89 e8             	mov    %rbp,%rax
  41c328:	48 03 05 79 0b 21 00 	add    0x210b79(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c32f:	48 3b 05 62 0b 21 00 	cmp    0x210b62(%rip),%rax        # 62ce98 <caml_young_trigger>
  41c336:	48 89 05 6b 0b 21 00 	mov    %rax,0x210b6b(%rip)        # 62cea8 <caml_young_ptr>
  41c33d:	72 29                	jb     41c368 <caml_alloc_small_with_my_or_given_profinfo+0x68>
  41c33f:	48 c1 e3 0a          	shl    $0xa,%rbx
  41c343:	44 89 e6             	mov    %r12d,%esi
  41c346:	48 8d 94 33 00 03 00 	lea    0x300(%rbx,%rsi,1),%rdx
  41c34d:	00 
  41c34e:	48 89 10             	mov    %rdx,(%rax)
  41c351:	48 8b 05 50 0b 21 00 	mov    0x210b50(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c358:	5b                   	pop    %rbx
  41c359:	5d                   	pop    %rbp
  41c35a:	48 83 c0 08          	add    $0x8,%rax
  41c35e:	41 5c                	pop    %r12
  41c360:	c3                   	retq   
  41c361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41c368:	48 8d 44 10 08       	lea    0x8(%rax,%rdx,1),%rax
  41c36d:	48 89 05 34 0b 21 00 	mov    %rax,0x210b34(%rip)        # 62cea8 <caml_young_ptr>
  41c374:	e8 b7 c5 fe ff       	callq  408930 <caml_gc_dispatch>
  41c379:	48 89 e8             	mov    %rbp,%rax
  41c37c:	48 03 05 25 0b 21 00 	add    0x210b25(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c383:	48 89 05 1e 0b 21 00 	mov    %rax,0x210b1e(%rip)        # 62cea8 <caml_young_ptr>
  41c38a:	eb b3                	jmp    41c33f <caml_alloc_small_with_my_or_given_profinfo+0x3f>
  41c38c:	0f 1f 40 00          	nopl   0x0(%rax)
  41c390:	e9 eb fe ff ff       	jmpq   41c280 <caml_alloc_small>
  41c395:	90                   	nop
  41c396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c39d:	00 00 00 

000000000041c3a0 <caml_alloc_tuple>:
  41c3a0:	31 f6                	xor    %esi,%esi
  41c3a2:	e9 c9 fd ff ff       	jmpq   41c170 <caml_alloc>
  41c3a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c3ae:	00 00 

000000000041c3b0 <caml_alloc_string>:
  41c3b0:	41 55                	push   %r13
  41c3b2:	41 54                	push   %r12
  41c3b4:	49 89 fd             	mov    %rdi,%r13
  41c3b7:	55                   	push   %rbp
  41c3b8:	53                   	push   %rbx
  41c3b9:	48 8d 5f 08          	lea    0x8(%rdi),%rbx
  41c3bd:	48 c1 eb 03          	shr    $0x3,%rbx
  41c3c1:	48 83 ec 08          	sub    $0x8,%rsp
  41c3c5:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
  41c3cc:	0f 87 96 00 00 00    	ja     41c468 <caml_alloc_string+0xb8>
  41c3d2:	48 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%rbp
  41c3d9:	00 
  41c3da:	49 c7 c4 f8 ff ff ff 	mov    $0xfffffffffffffff8,%r12
  41c3e1:	49 29 ec             	sub    %rbp,%r12
  41c3e4:	4c 89 e0             	mov    %r12,%rax
  41c3e7:	48 03 05 ba 0a 21 00 	add    0x210aba(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c3ee:	48 3b 05 a3 0a 21 00 	cmp    0x210aa3(%rip),%rax        # 62ce98 <caml_young_trigger>
  41c3f5:	48 89 05 ac 0a 21 00 	mov    %rax,0x210aac(%rip)        # 62cea8 <caml_young_ptr>
  41c3fc:	72 42                	jb     41c440 <caml_alloc_string+0x90>
  41c3fe:	48 c1 e3 0a          	shl    $0xa,%rbx
  41c402:	48 81 c3 fc 03 00 00 	add    $0x3fc,%rbx
  41c409:	48 89 18             	mov    %rbx,(%rax)
  41c40c:	48 8b 05 95 0a 21 00 	mov    0x210a95(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c413:	48 83 c0 08          	add    $0x8,%rax
  41c417:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  41c41b:	48 c7 44 05 f8 00 00 	movq   $0x0,-0x8(%rbp,%rax,1)
  41c422:	00 00 
  41c424:	44 29 ea             	sub    %r13d,%edx
  41c427:	88 54 28 ff          	mov    %dl,-0x1(%rax,%rbp,1)
  41c42b:	48 83 c4 08          	add    $0x8,%rsp
  41c42f:	5b                   	pop    %rbx
  41c430:	5d                   	pop    %rbp
  41c431:	41 5c                	pop    %r12
  41c433:	41 5d                	pop    %r13
  41c435:	c3                   	retq   
  41c436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c43d:	00 00 00 
  41c440:	48 8d 44 28 08       	lea    0x8(%rax,%rbp,1),%rax
  41c445:	48 89 05 5c 0a 21 00 	mov    %rax,0x210a5c(%rip)        # 62cea8 <caml_young_ptr>
  41c44c:	e8 df c4 fe ff       	callq  408930 <caml_gc_dispatch>
  41c451:	4c 89 e0             	mov    %r12,%rax
  41c454:	48 03 05 4d 0a 21 00 	add    0x210a4d(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c45b:	48 89 05 46 0a 21 00 	mov    %rax,0x210a46(%rip)        # 62cea8 <caml_young_ptr>
  41c462:	eb 9a                	jmp    41c3fe <caml_alloc_string+0x4e>
  41c464:	0f 1f 40 00          	nopl   0x0(%rax)
  41c468:	be fc 00 00 00       	mov    $0xfc,%esi
  41c46d:	48 89 df             	mov    %rbx,%rdi
  41c470:	48 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%rbp
  41c477:	00 
  41c478:	e8 93 cf fe ff       	callq  409410 <caml_alloc_shr>
  41c47d:	48 89 c7             	mov    %rax,%rdi
  41c480:	e8 cb c5 fe ff       	callq  408a50 <caml_check_urgent_gc>
  41c485:	eb 90                	jmp    41c417 <caml_alloc_string+0x67>
  41c487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c48e:	00 00 

000000000041c490 <caml_copy_string>:
  41c490:	55                   	push   %rbp
  41c491:	53                   	push   %rbx
  41c492:	48 89 fd             	mov    %rdi,%rbp
  41c495:	48 83 ec 08          	sub    $0x8,%rsp
  41c499:	e8 b2 55 fe ff       	callq  401a50 <strlen@plt>
  41c49e:	48 63 d8             	movslq %eax,%rbx
  41c4a1:	48 89 df             	mov    %rbx,%rdi
  41c4a4:	e8 07 ff ff ff       	callq  41c3b0 <caml_alloc_string>
  41c4a9:	48 89 da             	mov    %rbx,%rdx
  41c4ac:	48 89 ee             	mov    %rbp,%rsi
  41c4af:	48 89 c7             	mov    %rax,%rdi
  41c4b2:	e8 79 58 fe ff       	callq  401d30 <memmove@plt>
  41c4b7:	48 83 c4 08          	add    $0x8,%rsp
  41c4bb:	5b                   	pop    %rbx
  41c4bc:	5d                   	pop    %rbp
  41c4bd:	c3                   	retq   
  41c4be:	66 90                	xchg   %ax,%ax

000000000041c4c0 <caml_alloc_final>:
  41c4c0:	41 54                	push   %r12
  41c4c2:	55                   	push   %rbp
  41c4c3:	49 89 cc             	mov    %rcx,%r12
  41c4c6:	53                   	push   %rbx
  41c4c7:	48 89 d5             	mov    %rdx,%rbp
  41c4ca:	48 89 fb             	mov    %rdi,%rbx
  41c4cd:	48 89 f7             	mov    %rsi,%rdi
  41c4d0:	e8 2b c7 ff ff       	callq  418c00 <caml_final_custom_operations>
  41c4d5:	48 8d 34 dd 00 00 00 	lea    0x0(,%rbx,8),%rsi
  41c4dc:	00 
  41c4dd:	4c 89 e1             	mov    %r12,%rcx
  41c4e0:	48 89 ea             	mov    %rbp,%rdx
  41c4e3:	5b                   	pop    %rbx
  41c4e4:	5d                   	pop    %rbp
  41c4e5:	41 5c                	pop    %r12
  41c4e7:	48 89 c7             	mov    %rax,%rdi
  41c4ea:	e9 c1 c5 ff ff       	jmpq   418ab0 <caml_alloc_custom>
  41c4ef:	90                   	nop

000000000041c4f0 <caml_alloc_array>:
  41c4f0:	41 56                	push   %r14
  41c4f2:	41 55                	push   %r13
  41c4f4:	41 54                	push   %r12
  41c4f6:	55                   	push   %rbp
  41c4f7:	53                   	push   %rbx
  41c4f8:	48 83 ec 60          	sub    $0x60,%rsp
  41c4fc:	4c 8b 35 45 04 21 00 	mov    0x210445(%rip),%r14        # 62c948 <caml_local_roots>
  41c503:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41c50a:	00 00 
  41c50c:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  41c511:	31 c0                	xor    %eax,%eax
  41c513:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  41c518:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
  41c51f:	00 
  41c520:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
  41c527:	00 00 
  41c529:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
  41c52e:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
  41c535:	00 00 
  41c537:	48 89 05 0a 04 21 00 	mov    %rax,0x21040a(%rip)        # 62c948 <caml_local_roots>
  41c53e:	48 83 3e 00          	cmpq   $0x0,(%rsi)
  41c542:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  41c547:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
  41c54e:	00 00 
  41c550:	48 89 64 24 28       	mov    %rsp,0x28(%rsp)
  41c555:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  41c55a:	74 5e                	je     41c5ba <caml_alloc_array+0xca>
  41c55c:	49 89 fd             	mov    %rdi,%r13
  41c55f:	49 89 f4             	mov    %rsi,%r12
  41c562:	31 db                	xor    %ebx,%ebx
  41c564:	0f 1f 40 00          	nopl   0x0(%rax)
  41c568:	48 83 c3 01          	add    $0x1,%rbx
  41c56c:	49 83 3c dc 00       	cmpq   $0x0,(%r12,%rbx,8)
  41c571:	75 f5                	jne    41c568 <caml_alloc_array+0x78>
  41c573:	48 89 df             	mov    %rbx,%rdi
  41c576:	31 f6                	xor    %esi,%esi
  41c578:	48 c1 e3 03          	shl    $0x3,%rbx
  41c57c:	e8 ef fb ff ff       	callq  41c170 <caml_alloc>
  41c581:	31 ed                	xor    %ebp,%ebp
  41c583:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41c588:	49 8b 3c 2c          	mov    (%r12,%rbp,1),%rdi
  41c58c:	41 ff d5             	callq  *%r13
  41c58f:	48 89 ef             	mov    %rbp,%rdi
  41c592:	48 03 7c 24 08       	add    0x8(%rsp),%rdi
  41c597:	48 89 c6             	mov    %rax,%rsi
  41c59a:	48 83 c5 08          	add    $0x8,%rbp
  41c59e:	48 89 04 24          	mov    %rax,(%rsp)
  41c5a2:	e8 69 d1 fe ff       	callq  409710 <caml_modify>
  41c5a7:	48 39 eb             	cmp    %rbp,%rbx
  41c5aa:	75 dc                	jne    41c588 <caml_alloc_array+0x98>
  41c5ac:	4c 89 35 95 03 21 00 	mov    %r14,0x210395(%rip)        # 62c948 <caml_local_roots>
  41c5b3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41c5b8:	eb 0c                	jmp    41c5c6 <caml_alloc_array+0xd6>
  41c5ba:	4c 89 35 87 03 21 00 	mov    %r14,0x210387(%rip)        # 62c948 <caml_local_roots>
  41c5c1:	b8 88 14 64 00       	mov    $0x641488,%eax
  41c5c6:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
  41c5cb:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  41c5d2:	00 00 
  41c5d4:	75 0d                	jne    41c5e3 <caml_alloc_array+0xf3>
  41c5d6:	48 83 c4 60          	add    $0x60,%rsp
  41c5da:	5b                   	pop    %rbx
  41c5db:	5d                   	pop    %rbp
  41c5dc:	41 5c                	pop    %r12
  41c5de:	41 5d                	pop    %r13
  41c5e0:	41 5e                	pop    %r14
  41c5e2:	c3                   	retq   
  41c5e3:	e8 88 54 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41c5e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41c5ef:	00 

000000000041c5f0 <caml_alloc_float_array>:
  41c5f0:	48 85 ff             	test   %rdi,%rdi
  41c5f3:	0f 84 87 00 00 00    	je     41c680 <caml_alloc_float_array+0x90>
  41c5f9:	55                   	push   %rbp
  41c5fa:	53                   	push   %rbx
  41c5fb:	48 89 fd             	mov    %rdi,%rbp
  41c5fe:	48 83 ec 08          	sub    $0x8,%rsp
  41c602:	48 81 ff 00 01 00 00 	cmp    $0x100,%rdi
  41c609:	0f 87 81 00 00 00    	ja     41c690 <caml_alloc_float_array+0xa0>
  41c60f:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
  41c616:	00 
  41c617:	48 c7 c3 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rbx
  41c61e:	48 29 d3             	sub    %rdx,%rbx
  41c621:	48 89 d8             	mov    %rbx,%rax
  41c624:	48 03 05 7d 08 21 00 	add    0x21087d(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c62b:	48 3b 05 66 08 21 00 	cmp    0x210866(%rip),%rax        # 62ce98 <caml_young_trigger>
  41c632:	48 89 05 6f 08 21 00 	mov    %rax,0x21086f(%rip)        # 62cea8 <caml_young_ptr>
  41c639:	73 22                	jae    41c65d <caml_alloc_float_array+0x6d>
  41c63b:	48 8d 44 10 08       	lea    0x8(%rax,%rdx,1),%rax
  41c640:	48 89 05 61 08 21 00 	mov    %rax,0x210861(%rip)        # 62cea8 <caml_young_ptr>
  41c647:	e8 e4 c2 fe ff       	callq  408930 <caml_gc_dispatch>
  41c64c:	48 89 d8             	mov    %rbx,%rax
  41c64f:	48 03 05 52 08 21 00 	add    0x210852(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c656:	48 89 05 4b 08 21 00 	mov    %rax,0x21084b(%rip)        # 62cea8 <caml_young_ptr>
  41c65d:	48 89 ef             	mov    %rbp,%rdi
  41c660:	48 c1 e7 0a          	shl    $0xa,%rdi
  41c664:	48 81 c7 fe 03 00 00 	add    $0x3fe,%rdi
  41c66b:	48 89 38             	mov    %rdi,(%rax)
  41c66e:	48 8b 05 33 08 21 00 	mov    0x210833(%rip),%rax        # 62cea8 <caml_young_ptr>
  41c675:	48 83 c4 08          	add    $0x8,%rsp
  41c679:	5b                   	pop    %rbx
  41c67a:	5d                   	pop    %rbp
  41c67b:	48 83 c0 08          	add    $0x8,%rax
  41c67f:	c3                   	retq   
  41c680:	b8 88 14 64 00       	mov    $0x641488,%eax
  41c685:	c3                   	retq   
  41c686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c68d:	00 00 00 
  41c690:	be fe 00 00 00       	mov    $0xfe,%esi
  41c695:	e8 76 cd fe ff       	callq  409410 <caml_alloc_shr>
  41c69a:	48 83 c4 08          	add    $0x8,%rsp
  41c69e:	48 89 c7             	mov    %rax,%rdi
  41c6a1:	5b                   	pop    %rbx
  41c6a2:	5d                   	pop    %rbp
  41c6a3:	e9 a8 c3 fe ff       	jmpq   408a50 <caml_check_urgent_gc>
  41c6a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41c6af:	00 

000000000041c6b0 <caml_copy_string_array>:
  41c6b0:	48 89 fe             	mov    %rdi,%rsi
  41c6b3:	bf 90 c4 41 00       	mov    $0x41c490,%edi
  41c6b8:	e9 33 fe ff ff       	jmpq   41c4f0 <caml_alloc_array>
  41c6bd:	0f 1f 00             	nopl   (%rax)

000000000041c6c0 <caml_convert_flag_list>:
  41c6c0:	31 c0                	xor    %eax,%eax
  41c6c2:	48 83 ff 01          	cmp    $0x1,%rdi
  41c6c6:	74 20                	je     41c6e8 <caml_convert_flag_list+0x28>
  41c6c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41c6cf:	00 
  41c6d0:	48 8b 17             	mov    (%rdi),%rdx
  41c6d3:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  41c6d7:	48 d1 fa             	sar    %rdx
  41c6da:	48 63 d2             	movslq %edx,%rdx
  41c6dd:	0b 04 96             	or     (%rsi,%rdx,4),%eax
  41c6e0:	48 83 ff 01          	cmp    $0x1,%rdi
  41c6e4:	75 ea                	jne    41c6d0 <caml_convert_flag_list+0x10>
  41c6e6:	f3 c3                	repz retq 
  41c6e8:	f3 c3                	repz retq 
  41c6ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041c6f0 <caml_alloc_dummy_function>:
  41c6f0:	48 d1 ff             	sar    %rdi
  41c6f3:	75 0b                	jne    41c700 <caml_alloc_dummy_function+0x10>
  41c6f5:	b8 88 14 64 00       	mov    $0x641488,%eax
  41c6fa:	c3                   	retq   
  41c6fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41c700:	31 f6                	xor    %esi,%esi
  41c702:	e9 69 fa ff ff       	jmpq   41c170 <caml_alloc>
  41c707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c70e:	00 00 

000000000041c710 <caml_alloc_dummy_float>:
  41c710:	48 d1 ff             	sar    %rdi
  41c713:	75 0b                	jne    41c720 <caml_alloc_dummy_float+0x10>
  41c715:	b8 88 14 64 00       	mov    $0x641488,%eax
  41c71a:	c3                   	retq   
  41c71b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41c720:	31 f6                	xor    %esi,%esi
  41c722:	e9 49 fa ff ff       	jmpq   41c170 <caml_alloc>
  41c727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41c72e:	00 00 

000000000041c730 <caml_alloc_dummy>:
  41c730:	eb de                	jmp    41c710 <caml_alloc_dummy_float>
  41c732:	0f 1f 40 00          	nopl   0x0(%rax)
  41c736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c73d:	00 00 00 

000000000041c740 <caml_update_dummy>:
  41c740:	0f b6 56 f8          	movzbl -0x8(%rsi),%edx
  41c744:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
  41c748:	80 fa fe             	cmp    $0xfe,%dl
  41c74b:	88 57 f8             	mov    %dl,-0x8(%rdi)
  41c74e:	74 40                	je     41c790 <caml_update_dummy+0x50>
  41c750:	48 c1 e8 0a          	shr    $0xa,%rax
  41c754:	48 29 fe             	sub    %rdi,%rsi
  41c757:	41 54                	push   %r12
  41c759:	48 85 c0             	test   %rax,%rax
  41c75c:	55                   	push   %rbp
  41c75d:	4c 8d 24 c7          	lea    (%rdi,%rax,8),%r12
  41c761:	53                   	push   %rbx
  41c762:	48 89 f5             	mov    %rsi,%rbp
  41c765:	48 89 fb             	mov    %rdi,%rbx
  41c768:	74 1c                	je     41c786 <caml_update_dummy+0x46>
  41c76a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41c770:	48 8b 74 1d 00       	mov    0x0(%rbp,%rbx,1),%rsi
  41c775:	48 89 df             	mov    %rbx,%rdi
  41c778:	48 83 c3 08          	add    $0x8,%rbx
  41c77c:	e8 8f cf fe ff       	callq  409710 <caml_modify>
  41c781:	49 39 dc             	cmp    %rbx,%r12
  41c784:	75 ea                	jne    41c770 <caml_update_dummy+0x30>
  41c786:	5b                   	pop    %rbx
  41c787:	b8 01 00 00 00       	mov    $0x1,%eax
  41c78c:	5d                   	pop    %rbp
  41c78d:	41 5c                	pop    %r12
  41c78f:	c3                   	retq   
  41c790:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
  41c794:	48 c1 ea 0a          	shr    $0xa,%rdx
  41c798:	48 85 d2             	test   %rdx,%rdx
  41c79b:	74 16                	je     41c7b3 <caml_update_dummy+0x73>
  41c79d:	31 c0                	xor    %eax,%eax
  41c79f:	90                   	nop
  41c7a0:	f2 0f 10 04 c6       	movsd  (%rsi,%rax,8),%xmm0
  41c7a5:	f2 0f 11 04 c7       	movsd  %xmm0,(%rdi,%rax,8)
  41c7aa:	48 83 c0 01          	add    $0x1,%rax
  41c7ae:	48 39 c2             	cmp    %rax,%rdx
  41c7b1:	75 ed                	jne    41c7a0 <caml_update_dummy+0x60>
  41c7b3:	b8 01 00 00 00       	mov    $0x1,%eax
  41c7b8:	c3                   	retq   
  41c7b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041c7c0 <caml_parse_engine>:
  41c7c0:	48 d1 fa             	sar    %rdx
  41c7c3:	83 fa 05             	cmp    $0x5,%edx
  41c7c6:	0f 87 0a 08 00 00    	ja     41cfd6 <caml_parse_engine+0x816>
  41c7cc:	41 57                	push   %r15
  41c7ce:	41 56                	push   %r14
  41c7d0:	89 d2                	mov    %edx,%edx
  41c7d2:	41 55                	push   %r13
  41c7d4:	41 54                	push   %r12
  41c7d6:	49 89 ca             	mov    %rcx,%r10
  41c7d9:	55                   	push   %rbp
  41c7da:	53                   	push   %rbx
  41c7db:	49 89 fe             	mov    %rdi,%r14
  41c7de:	48 89 f3             	mov    %rsi,%rbx
  41c7e1:	48 83 ec 28          	sub    $0x28,%rsp
  41c7e5:	48 8b 6e 68          	mov    0x68(%rsi),%rbp
  41c7e9:	48 d1 fd             	sar    %rbp
  41c7ec:	48 63 ed             	movslq %ebp,%rbp
  41c7ef:	ff 24 d5 40 f3 41 00 	jmpq   *0x41f340(,%rdx,8)
  41c7f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c7fd:	00 00 00 
  41c800:	4c 8b 6e 70          	mov    0x70(%rsi),%r13
  41c804:	48 8b 46 78          	mov    0x78(%rsi),%rax
  41c808:	4c 8d 3c ed 00 00 00 	lea    0x0(,%rbp,8),%r15
  41c80f:	00 
  41c810:	4c 89 ff             	mov    %r15,%rdi
  41c813:	49 d1 fd             	sar    %r13
  41c816:	48 d1 e8             	shr    %rax
  41c819:	49 63 d5             	movslq %r13d,%rdx
  41c81c:	44 89 2c 24          	mov    %r13d,(%rsp)
  41c820:	49 89 c4             	mov    %rax,%r12
  41c823:	4c 8d 2c 12          	lea    (%rdx,%rdx,1),%r13
  41c827:	48 8b 06             	mov    (%rsi),%rax
  41c82a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
  41c82f:	49 8d 4d 01          	lea    0x1(%r13),%rcx
  41c833:	48 89 0c e8          	mov    %rcx,(%rax,%rbp,8)
  41c837:	48 03 7e 08          	add    0x8(%rsi),%rdi
  41c83b:	4c 89 d6             	mov    %r10,%rsi
  41c83e:	e8 cd ce fe ff       	callq  409710 <caml_modify>
  41c843:	48 8b 43 50          	mov    0x50(%rbx),%rax
  41c847:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
  41c84b:	48 d1 f8             	sar    %rax
  41c84e:	48 98                	cltq   
  41c850:	48 8b 34 c7          	mov    (%rdi,%rax,8),%rsi
  41c854:	4c 01 ff             	add    %r15,%rdi
  41c857:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41c85c:	e8 af ce fe ff       	callq  409710 <caml_modify>
  41c861:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  41c866:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  41c86b:	48 39 c5             	cmp    %rax,%rbp
  41c86e:	0f 87 2c 05 00 00    	ja     41cda0 <caml_parse_engine+0x5e0>
  41c874:	4c 89 e8             	mov    %r13,%rax
  41c877:	49 8b 4e 28          	mov    0x28(%r14),%rcx
  41c87b:	4c 0f bf 2c 01       	movswq (%rcx,%rax,1),%r13
  41c880:	45 85 ed             	test   %r13d,%r13d
  41c883:	0f 85 7f 01 00 00    	jne    41ca08 <caml_parse_engine+0x248>
  41c889:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
  41c88d:	48 d1 f9             	sar    %rcx
  41c890:	85 c9                	test   %ecx,%ecx
  41c892:	89 ce                	mov    %ecx,%esi
  41c894:	0f 88 66 05 00 00    	js     41ce00 <caml_parse_engine+0x640>
  41c89a:	49 8b 4e 38          	mov    0x38(%r14),%rcx
  41c89e:	0f bf 3c 01          	movswl (%rcx,%rax,1),%edi
  41c8a2:	85 ff                	test   %edi,%edi
  41c8a4:	8d 0c 37             	lea    (%rdi,%rsi,1),%ecx
  41c8a7:	74 27                	je     41c8d0 <caml_parse_engine+0x110>
  41c8a9:	85 c9                	test   %ecx,%ecx
  41c8ab:	78 23                	js     41c8d0 <caml_parse_engine+0x110>
  41c8ad:	49 8b 7e 50          	mov    0x50(%r14),%rdi
  41c8b1:	48 d1 ff             	sar    %rdi
  41c8b4:	39 f9                	cmp    %edi,%ecx
  41c8b6:	7f 18                	jg     41c8d0 <caml_parse_engine+0x110>
  41c8b8:	49 8b 7e 60          	mov    0x60(%r14),%rdi
  41c8bc:	48 63 c9             	movslq %ecx,%rcx
  41c8bf:	4c 8d 3c 09          	lea    (%rcx,%rcx,1),%r15
  41c8c3:	0f bf 0c 4f          	movswl (%rdi,%rcx,2),%ecx
  41c8c7:	39 f1                	cmp    %esi,%ecx
  41c8c9:	0f 84 e2 03 00 00    	je     41ccb1 <caml_parse_engine+0x4f1>
  41c8cf:	90                   	nop
  41c8d0:	49 8b 4e 40          	mov    0x40(%r14),%rcx
  41c8d4:	0f bf 0c 01          	movswl (%rcx,%rax,1),%ecx
  41c8d8:	85 c9                	test   %ecx,%ecx
  41c8da:	8d 04 31             	lea    (%rcx,%rsi,1),%eax
  41c8dd:	74 21                	je     41c900 <caml_parse_engine+0x140>
  41c8df:	85 c0                	test   %eax,%eax
  41c8e1:	78 1d                	js     41c900 <caml_parse_engine+0x140>
  41c8e3:	49 8b 4e 50          	mov    0x50(%r14),%rcx
  41c8e7:	48 d1 f9             	sar    %rcx
  41c8ea:	39 c8                	cmp    %ecx,%eax
  41c8ec:	7f 12                	jg     41c900 <caml_parse_engine+0x140>
  41c8ee:	49 8b 4e 60          	mov    0x60(%r14),%rcx
  41c8f2:	48 98                	cltq   
  41c8f4:	0f bf 0c 41          	movswl (%rcx,%rax,2),%ecx
  41c8f8:	39 f1                	cmp    %esi,%ecx
  41c8fa:	0f 84 3b 04 00 00    	je     41cd3b <caml_parse_engine+0x57b>
  41c900:	45 85 e4             	test   %r12d,%r12d
  41c903:	7f 40                	jg     41c945 <caml_parse_engine+0x185>
  41c905:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
  41c90a:	4d 63 e4             	movslq %r12d,%r12
  41c90d:	48 89 43 68          	mov    %rax,0x68(%rbx)
  41c911:	48 8d 44 12 01       	lea    0x1(%rdx,%rdx,1),%rax
  41c916:	48 89 43 70          	mov    %rax,0x70(%rbx)
  41c91a:	4b 8d 44 24 01       	lea    0x1(%r12,%r12,1),%rax
  41c91f:	48 89 43 78          	mov    %rax,0x78(%rbx)
  41c923:	b8 0b 00 00 00       	mov    $0xb,%eax
  41c928:	e9 b1 02 00 00       	jmpq   41cbde <caml_parse_engine+0x41e>
  41c92d:	0f 1f 00             	nopl   (%rax)
  41c930:	48 8b 46 70          	mov    0x70(%rsi),%rax
  41c934:	48 d1 e8             	shr    %rax
  41c937:	48 89 04 24          	mov    %rax,(%rsp)
  41c93b:	48 8b 46 78          	mov    0x78(%rsi),%rax
  41c93f:	48 d1 e8             	shr    %rax
  41c942:	49 89 c4             	mov    %rax,%r12
  41c945:	41 83 fc 02          	cmp    $0x2,%r12d
  41c949:	0f 8f a1 02 00 00    	jg     41cbf0 <caml_parse_engine+0x430>
  41c94f:	8b 35 73 4a 22 00    	mov    0x224a73(%rip),%esi        # 6413c8 <caml_parser_trace>
  41c955:	4c 8d 24 ed 00 00 00 	lea    0x0(,%rbp,8),%r12
  41c95c:	00 
  41c95d:	eb 1b                	jmp    41c97a <caml_parse_engine+0x1ba>
  41c95f:	90                   	nop
  41c960:	48 8b 43 28          	mov    0x28(%rbx),%rax
  41c964:	49 83 ec 08          	sub    $0x8,%r12
  41c968:	48 d1 f8             	sar    %rax
  41c96b:	48 98                	cltq   
  41c96d:	48 39 c5             	cmp    %rax,%rbp
  41c970:	0f 86 a2 02 00 00    	jbe    41cc18 <caml_parse_engine+0x458>
  41c976:	48 83 ed 01          	sub    $0x1,%rbp
  41c97a:	48 8b 03             	mov    (%rbx),%rax
  41c97d:	4a 8b 0c 20          	mov    (%rax,%r12,1),%rcx
  41c981:	49 8b 46 38          	mov    0x38(%r14),%rax
  41c985:	48 d1 f9             	sar    %rcx
  41c988:	48 63 d1             	movslq %ecx,%rdx
  41c98b:	0f bf 14 50          	movswl (%rax,%rdx,2),%edx
  41c98f:	85 d2                	test   %edx,%edx
  41c991:	8d 82 00 01 00 00    	lea    0x100(%rdx),%eax
  41c997:	74 25                	je     41c9be <caml_parse_engine+0x1fe>
  41c999:	85 c0                	test   %eax,%eax
  41c99b:	78 21                	js     41c9be <caml_parse_engine+0x1fe>
  41c99d:	49 8b 56 50          	mov    0x50(%r14),%rdx
  41c9a1:	48 d1 fa             	sar    %rdx
  41c9a4:	39 d0                	cmp    %edx,%eax
  41c9a6:	7f 16                	jg     41c9be <caml_parse_engine+0x1fe>
  41c9a8:	49 8b 56 60          	mov    0x60(%r14),%rdx
  41c9ac:	48 98                	cltq   
  41c9ae:	4c 8d 3c 00          	lea    (%rax,%rax,1),%r15
  41c9b2:	66 81 3c 42 00 01    	cmpw   $0x100,(%rdx,%rax,2)
  41c9b8:	0f 84 12 04 00 00    	je     41cdd0 <caml_parse_engine+0x610>
  41c9be:	85 f6                	test   %esi,%esi
  41c9c0:	74 9e                	je     41c960 <caml_parse_engine+0x1a0>
  41c9c2:	48 8b 3d 37 ff 20 00 	mov    0x20ff37(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41c9c9:	be 01 00 00 00       	mov    $0x1,%esi
  41c9ce:	ba b9 f2 41 00       	mov    $0x41f2b9,%edx
  41c9d3:	31 c0                	xor    %eax,%eax
  41c9d5:	e8 26 54 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41c9da:	8b 35 e8 49 22 00    	mov    0x2249e8(%rip),%esi        # 6413c8 <caml_parser_trace>
  41c9e0:	e9 7b ff ff ff       	jmpq   41c960 <caml_parse_engine+0x1a0>
  41c9e5:	0f 1f 00             	nopl   (%rax)
  41c9e8:	49 8b 4e 28          	mov    0x28(%r14),%rcx
  41c9ec:	31 c0                	xor    %eax,%eax
  41c9ee:	31 d2                	xor    %edx,%edx
  41c9f0:	45 31 e4             	xor    %r12d,%r12d
  41c9f3:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
  41c9fa:	4c 0f bf 2c 01       	movswq (%rcx,%rax,1),%r13
  41c9ff:	45 85 ed             	test   %r13d,%r13d
  41ca02:	0f 84 81 fe ff ff    	je     41c889 <caml_parse_engine+0xc9>
  41ca08:	8b 05 ba 49 22 00    	mov    0x2249ba(%rip),%eax        # 6413c8 <caml_parser_trace>
  41ca0e:	85 c0                	test   %eax,%eax
  41ca10:	0f 85 3a 03 00 00    	jne    41cd50 <caml_parse_engine+0x590>
  41ca16:	49 8b 46 20          	mov    0x20(%r14),%rax
  41ca1a:	48 8d 54 2d 01       	lea    0x1(%rbp,%rbp,1),%rdx
  41ca1f:	48 83 c5 01          	add    $0x1,%rbp
  41ca23:	4a 0f bf 04 68       	movswq (%rax,%r13,2),%rax
  41ca28:	48 89 53 50          	mov    %rdx,0x50(%rbx)
  41ca2c:	4b 8d 54 2d 01       	lea    0x1(%r13,%r13,1),%rdx
  41ca31:	48 89 53 60          	mov    %rdx,0x60(%rbx)
  41ca35:	48 8d 54 00 01       	lea    0x1(%rax,%rax,1),%rdx
  41ca3a:	48 29 c5             	sub    %rax,%rbp
  41ca3d:	48 8b 03             	mov    (%rbx),%rax
  41ca40:	48 89 53 58          	mov    %rdx,0x58(%rbx)
  41ca44:	49 8b 56 18          	mov    0x18(%r14),%rdx
  41ca48:	48 8b 44 e8 f8       	mov    -0x8(%rax,%rbp,8),%rax
  41ca4d:	4a 0f bf 34 6a       	movswq (%rdx,%r13,2),%rsi
  41ca52:	49 8b 56 48          	mov    0x48(%r14),%rdx
  41ca56:	48 d1 f8             	sar    %rax
  41ca59:	0f bf 0c 72          	movswl (%rdx,%rsi,2),%ecx
  41ca5d:	85 c9                	test   %ecx,%ecx
  41ca5f:	8d 14 01             	lea    (%rcx,%rax,1),%edx
  41ca62:	74 13                	je     41ca77 <caml_parse_engine+0x2b7>
  41ca64:	85 d2                	test   %edx,%edx
  41ca66:	78 0f                	js     41ca77 <caml_parse_engine+0x2b7>
  41ca68:	49 8b 4e 50          	mov    0x50(%r14),%rcx
  41ca6c:	48 d1 f9             	sar    %rcx
  41ca6f:	39 ca                	cmp    %ecx,%edx
  41ca71:	0f 8e 19 02 00 00    	jle    41cc90 <caml_parse_engine+0x4d0>
  41ca77:	49 8b 46 30          	mov    0x30(%r14),%rax
  41ca7b:	48 0f bf 04 70       	movswq (%rax,%rsi,2),%rax
  41ca80:	48 8b 53 20          	mov    0x20(%rbx),%rdx
  41ca84:	48 d1 fa             	sar    %rdx
  41ca87:	48 39 d5             	cmp    %rdx,%rbp
  41ca8a:	0f 82 29 01 00 00    	jb     41cbb9 <caml_parse_engine+0x3f9>
  41ca90:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  41ca95:	4d 63 e4             	movslq %r12d,%r12
  41ca98:	48 8d 54 2d 01       	lea    0x1(%rbp,%rbp,1),%rdx
  41ca9d:	48 89 43 70          	mov    %rax,0x70(%rbx)
  41caa1:	4b 8d 44 24 01       	lea    0x1(%r12,%r12,1),%rax
  41caa6:	48 89 53 68          	mov    %rdx,0x68(%rbx)
  41caaa:	48 89 43 78          	mov    %rax,0x78(%rbx)
  41caae:	b8 07 00 00 00       	mov    $0x7,%eax
  41cab3:	e9 26 01 00 00       	jmpq   41cbde <caml_parse_engine+0x41e>
  41cab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41cabf:	00 
  41cac0:	48 8b 46 70          	mov    0x70(%rsi),%rax
  41cac4:	48 d1 f8             	sar    %rax
  41cac7:	49 89 c7             	mov    %rax,%r15
  41caca:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41cacf:	89 04 24             	mov    %eax,(%rsp)
  41cad2:	48 8b 46 78          	mov    0x78(%rsi),%rax
  41cad6:	48 d1 e8             	shr    %rax
  41cad9:	f6 c1 01             	test   $0x1,%cl
  41cadc:	49 89 c4             	mov    %rax,%r12
  41cadf:	0f 85 5b 01 00 00    	jne    41cc40 <caml_parse_engine+0x480>
  41cae5:	0f b6 51 f8          	movzbl -0x8(%rcx),%edx
  41cae9:	48 8b 47 10          	mov    0x10(%rdi),%rax
  41caed:	48 8d 7e 38          	lea    0x38(%rsi),%rdi
  41caf1:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
  41caf6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  41cafa:	48 89 46 30          	mov    %rax,0x30(%rsi)
  41cafe:	48 8b 31             	mov    (%rcx),%rsi
  41cb01:	e8 0a cc fe ff       	callq  409710 <caml_modify>
  41cb06:	8b 3d bc 48 22 00    	mov    0x2248bc(%rip),%edi        # 6413c8 <caml_parser_trace>
  41cb0c:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
  41cb11:	85 ff                	test   %edi,%edi
  41cb13:	0f 85 70 03 00 00    	jne    41ce89 <caml_parse_engine+0x6c9>
  41cb19:	48 8b 73 30          	mov    0x30(%rbx),%rsi
  41cb1d:	49 63 d7             	movslq %r15d,%rdx
  41cb20:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
  41cb24:	48 d1 ee             	shr    %rsi
  41cb27:	e9 6e fd ff ff       	jmpq   41c89a <caml_parse_engine+0xda>
  41cb2c:	0f 1f 40 00          	nopl   0x0(%rax)
  41cb30:	48 8b 46 70          	mov    0x70(%rsi),%rax
  41cb34:	48 d1 e8             	shr    %rax
  41cb37:	48 89 04 24          	mov    %rax,(%rsp)
  41cb3b:	48 8b 46 78          	mov    0x78(%rsi),%rax
  41cb3f:	48 d1 e8             	shr    %rax
  41cb42:	49 89 c4             	mov    %rax,%r12
  41cb45:	48 63 14 24          	movslq (%rsp),%rdx
  41cb49:	48 8b 03             	mov    (%rbx),%rax
  41cb4c:	4c 8d 2c ed 00 00 00 	lea    0x0(,%rbp,8),%r13
  41cb53:	00 
  41cb54:	4c 89 ef             	mov    %r13,%rdi
  41cb57:	4c 8d 3c 12          	lea    (%rdx,%rdx,1),%r15
  41cb5b:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  41cb60:	49 8d 4f 01          	lea    0x1(%r15),%rcx
  41cb64:	48 89 0c e8          	mov    %rcx,(%rax,%rbp,8)
  41cb68:	48 03 7b 08          	add    0x8(%rbx),%rdi
  41cb6c:	48 8b 73 38          	mov    0x38(%rbx),%rsi
  41cb70:	e8 9b cb fe ff       	callq  409710 <caml_modify>
  41cb75:	4c 89 ef             	mov    %r13,%rdi
  41cb78:	48 03 7b 10          	add    0x10(%rbx),%rdi
  41cb7c:	48 8b 73 40          	mov    0x40(%rbx),%rsi
  41cb80:	e8 8b cb fe ff       	callq  409710 <caml_modify>
  41cb85:	4c 89 ef             	mov    %r13,%rdi
  41cb88:	48 03 7b 18          	add    0x18(%rbx),%rdi
  41cb8c:	48 8b 73 48          	mov    0x48(%rbx),%rsi
  41cb90:	e8 7b cb fe ff       	callq  409710 <caml_modify>
  41cb95:	4c 89 f8             	mov    %r15,%rax
  41cb98:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  41cb9d:	e9 d5 fc ff ff       	jmpq   41c877 <caml_parse_engine+0xb7>
  41cba2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41cba8:	48 8b 7e 78          	mov    0x78(%rsi),%rdi
  41cbac:	48 8b 46 70          	mov    0x70(%rsi),%rax
  41cbb0:	48 d1 ef             	shr    %rdi
  41cbb3:	48 d1 e8             	shr    %rax
  41cbb6:	49 89 fc             	mov    %rdi,%r12
  41cbb9:	48 98                	cltq   
  41cbbb:	4d 63 e4             	movslq %r12d,%r12
  41cbbe:	48 8d 54 2d 01       	lea    0x1(%rbp,%rbp,1),%rdx
  41cbc3:	48 8d 44 00 01       	lea    0x1(%rax,%rax,1),%rax
  41cbc8:	48 89 53 68          	mov    %rdx,0x68(%rbx)
  41cbcc:	48 89 43 70          	mov    %rax,0x70(%rbx)
  41cbd0:	4b 8d 44 24 01       	lea    0x1(%r12,%r12,1),%rax
  41cbd5:	48 89 43 78          	mov    %rax,0x78(%rbx)
  41cbd9:	b8 09 00 00 00       	mov    $0x9,%eax
  41cbde:	48 83 c4 28          	add    $0x28,%rsp
  41cbe2:	5b                   	pop    %rbx
  41cbe3:	5d                   	pop    %rbp
  41cbe4:	41 5c                	pop    %r12
  41cbe6:	41 5d                	pop    %r13
  41cbe8:	41 5e                	pop    %r14
  41cbea:	41 5f                	pop    %r15
  41cbec:	c3                   	retq   
  41cbed:	0f 1f 00             	nopl   (%rax)
  41cbf0:	48 8b 43 30          	mov    0x30(%rbx),%rax
  41cbf4:	48 d1 f8             	sar    %rax
  41cbf7:	85 c0                	test   %eax,%eax
  41cbf9:	0f 85 79 01 00 00    	jne    41cd78 <caml_parse_engine+0x5b8>
  41cbff:	48 83 c4 28          	add    $0x28,%rsp
  41cc03:	b8 03 00 00 00       	mov    $0x3,%eax
  41cc08:	5b                   	pop    %rbx
  41cc09:	5d                   	pop    %rbp
  41cc0a:	41 5c                	pop    %r12
  41cc0c:	41 5d                	pop    %r13
  41cc0e:	41 5e                	pop    %r14
  41cc10:	41 5f                	pop    %r15
  41cc12:	c3                   	retq   
  41cc13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41cc18:	85 f6                	test   %esi,%esi
  41cc1a:	74 e3                	je     41cbff <caml_parse_engine+0x43f>
  41cc1c:	48 8b 0d dd fc 20 00 	mov    0x20fcdd(%rip),%rcx        # 62c900 <stderr@@GLIBC_2.2.5>
  41cc23:	ba 1a 00 00 00       	mov    $0x1a,%edx
  41cc28:	be 01 00 00 00       	mov    $0x1,%esi
  41cc2d:	bf ce f2 41 00       	mov    $0x41f2ce,%edi
  41cc32:	e8 a9 51 fe ff       	callq  401de0 <fwrite@plt>
  41cc37:	eb c6                	jmp    41cbff <caml_parse_engine+0x43f>
  41cc39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41cc40:	48 8b 47 08          	mov    0x8(%rdi),%rax
  41cc44:	49 d1 fa             	sar    %r10
  41cc47:	48 8d 7e 38          	lea    0x38(%rsi),%rdi
  41cc4b:	49 63 d2             	movslq %r10d,%rdx
  41cc4e:	45 89 d7             	mov    %r10d,%r15d
  41cc51:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
  41cc56:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  41cc5a:	48 89 46 30          	mov    %rax,0x30(%rsi)
  41cc5e:	be 01 00 00 00       	mov    $0x1,%esi
  41cc63:	e8 a8 ca fe ff       	callq  409710 <caml_modify>
  41cc68:	8b 35 5a 47 22 00    	mov    0x22475a(%rip),%esi        # 6413c8 <caml_parser_trace>
  41cc6e:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
  41cc73:	85 f6                	test   %esi,%esi
  41cc75:	0f 85 ad 01 00 00    	jne    41ce28 <caml_parse_engine+0x668>
  41cc7b:	48 63 54 24 18       	movslq 0x18(%rsp),%rdx
  41cc80:	48 8b 73 30          	mov    0x30(%rbx),%rsi
  41cc84:	48 d1 ee             	shr    %rsi
  41cc87:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
  41cc8b:	e9 0a fc ff ff       	jmpq   41c89a <caml_parse_engine+0xda>
  41cc90:	49 8b 4e 60          	mov    0x60(%r14),%rcx
  41cc94:	48 63 d2             	movslq %edx,%rdx
  41cc97:	0f bf 0c 51          	movswl (%rcx,%rdx,2),%ecx
  41cc9b:	39 c8                	cmp    %ecx,%eax
  41cc9d:	0f 85 d4 fd ff ff    	jne    41ca77 <caml_parse_engine+0x2b7>
  41cca3:	49 8b 46 58          	mov    0x58(%r14),%rax
  41cca7:	48 0f bf 04 50       	movswq (%rax,%rdx,2),%rax
  41ccac:	e9 cf fd ff ff       	jmpq   41ca80 <caml_parse_engine+0x2c0>
  41ccb1:	31 c0                	xor    %eax,%eax
  41ccb3:	45 85 e4             	test   %r12d,%r12d
  41ccb6:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
  41ccbd:	ff 
  41ccbe:	0f 9f c0             	setg   %al
  41ccc1:	41 29 c4             	sub    %eax,%r12d
  41ccc4:	8b 15 fe 46 22 00    	mov    0x2246fe(%rip),%edx        # 6413c8 <caml_parser_trace>
  41ccca:	85 d2                	test   %edx,%edx
  41cccc:	74 24                	je     41ccf2 <caml_parse_engine+0x532>
  41ccce:	49 8b 46 58          	mov    0x58(%r14),%rax
  41ccd2:	8b 0c 24             	mov    (%rsp),%ecx
  41ccd5:	ba 05 f3 41 00       	mov    $0x41f305,%edx
  41ccda:	48 8b 3d 1f fc 20 00 	mov    0x20fc1f(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41cce1:	be 01 00 00 00       	mov    $0x1,%esi
  41cce6:	46 0f bf 04 38       	movswl (%rax,%r15,1),%r8d
  41cceb:	31 c0                	xor    %eax,%eax
  41cced:	e8 0e 51 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41ccf2:	49 8b 46 58          	mov    0x58(%r14),%rax
  41ccf6:	48 83 c5 01          	add    $0x1,%rbp
  41ccfa:	42 0f b7 14 38       	movzwl (%rax,%r15,1),%edx
  41ccff:	48 8b 43 20          	mov    0x20(%rbx),%rax
  41cd03:	48 d1 f8             	sar    %rax
  41cd06:	48 39 c5             	cmp    %rax,%rbp
  41cd09:	0f 82 37 02 00 00    	jb     41cf46 <caml_parse_engine+0x786>
  41cd0f:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
  41cd14:	4c 0f bf f2          	movswq %dx,%r14
  41cd18:	4d 63 e4             	movslq %r12d,%r12
  41cd1b:	48 89 43 68          	mov    %rax,0x68(%rbx)
  41cd1f:	4b 8d 44 36 01       	lea    0x1(%r14,%r14,1),%rax
  41cd24:	48 89 43 70          	mov    %rax,0x70(%rbx)
  41cd28:	4b 8d 44 24 01       	lea    0x1(%r12,%r12,1),%rax
  41cd2d:	48 89 43 78          	mov    %rax,0x78(%rbx)
  41cd31:	b8 05 00 00 00       	mov    $0x5,%eax
  41cd36:	e9 a3 fe ff ff       	jmpq   41cbde <caml_parse_engine+0x41e>
  41cd3b:	49 8b 56 58          	mov    0x58(%r14),%rdx
  41cd3f:	4c 0f bf 2c 42       	movswq (%rdx,%rax,2),%r13
  41cd44:	e9 bf fc ff ff       	jmpq   41ca08 <caml_parse_engine+0x248>
  41cd49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41cd50:	8b 0c 24             	mov    (%rsp),%ecx
  41cd53:	48 8b 3d a6 fb 20 00 	mov    0x20fba6(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41cd5a:	45 89 e8             	mov    %r13d,%r8d
  41cd5d:	ba 22 f3 41 00       	mov    $0x41f322,%edx
  41cd62:	be 01 00 00 00       	mov    $0x1,%esi
  41cd67:	31 c0                	xor    %eax,%eax
  41cd69:	e8 92 50 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41cd6e:	e9 a3 fc ff ff       	jmpq   41ca16 <caml_parse_engine+0x256>
  41cd73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41cd78:	8b 0d 4a 46 22 00    	mov    0x22464a(%rip),%ecx        # 6413c8 <caml_parser_trace>
  41cd7e:	85 c9                	test   %ecx,%ecx
  41cd80:	0f 85 cb 01 00 00    	jne    41cf51 <caml_parse_engine+0x791>
  41cd86:	48 63 14 24          	movslq (%rsp),%rdx
  41cd8a:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
  41cd91:	ff 
  41cd92:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
  41cd96:	e9 dc fa ff ff       	jmpq   41c877 <caml_parse_engine+0xb7>
  41cd9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41cda0:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
  41cda4:	4c 89 ff             	mov    %r15,%rdi
  41cda7:	48 03 7b 10          	add    0x10(%rbx),%rdi
  41cdab:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  41cdb0:	48 8b 34 c1          	mov    (%rcx,%rax,8),%rsi
  41cdb4:	e8 57 c9 fe ff       	callq  409710 <caml_modify>
  41cdb9:	4c 89 e8             	mov    %r13,%rax
  41cdbc:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  41cdc1:	e9 b1 fa ff ff       	jmpq   41c877 <caml_parse_engine+0xb7>
  41cdc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41cdcd:	00 00 00 
  41cdd0:	85 f6                	test   %esi,%esi
  41cdd2:	41 bc 03 00 00 00    	mov    $0x3,%r12d
  41cdd8:	0f 84 14 ff ff ff    	je     41ccf2 <caml_parse_engine+0x532>
  41cdde:	48 8b 3d 1b fb 20 00 	mov    0x20fb1b(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41cde5:	ba a1 f2 41 00       	mov    $0x41f2a1,%edx
  41cdea:	be 01 00 00 00       	mov    $0x1,%esi
  41cdef:	31 c0                	xor    %eax,%eax
  41cdf1:	e8 0a 50 fe ff       	callq  401e00 <__fprintf_chk@plt>
  41cdf6:	e9 c9 fe ff ff       	jmpq   41ccc4 <caml_parse_engine+0x504>
  41cdfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41ce00:	48 8d 44 2d 01       	lea    0x1(%rbp,%rbp,1),%rax
  41ce05:	4d 63 e4             	movslq %r12d,%r12
  41ce08:	48 89 43 68          	mov    %rax,0x68(%rbx)
  41ce0c:	48 8d 44 12 01       	lea    0x1(%rdx,%rdx,1),%rax
  41ce11:	48 89 43 70          	mov    %rax,0x70(%rbx)
  41ce15:	4b 8d 44 24 01       	lea    0x1(%r12,%r12,1),%rax
  41ce1a:	48 89 43 78          	mov    %rax,0x78(%rbx)
  41ce1e:	b8 01 00 00 00       	mov    $0x1,%eax
  41ce23:	e9 b6 fd ff ff       	jmpq   41cbde <caml_parse_engine+0x41e>
  41ce28:	45 85 d2             	test   %r10d,%r10d
  41ce2b:	4d 8b 6e 70          	mov    0x70(%r14),%r13
  41ce2f:	7f 26                	jg     41ce57 <caml_parse_engine+0x697>
  41ce31:	e9 43 01 00 00       	jmpq   41cf79 <caml_parse_engine+0x7b9>
  41ce36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41ce3d:	00 00 00 
  41ce40:	4c 89 ef             	mov    %r13,%rdi
  41ce43:	e8 08 4c fe ff       	callq  401a50 <strlen@plt>
  41ce48:	41 83 ef 01          	sub    $0x1,%r15d
  41ce4c:	4d 8d 6c 05 01       	lea    0x1(%r13,%rax,1),%r13
  41ce51:	0f 84 22 01 00 00    	je     41cf79 <caml_parse_engine+0x7b9>
  41ce57:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  41ce5c:	75 e2                	jne    41ce40 <caml_parse_engine+0x680>
  41ce5e:	41 b8 55 f2 41 00    	mov    $0x41f255,%r8d
  41ce64:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
  41ce69:	48 8b 3d 90 fa 20 00 	mov    0x20fa90(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41ce70:	ba 65 f2 41 00       	mov    $0x41f265,%edx
  41ce75:	be 01 00 00 00       	mov    $0x1,%esi
  41ce7a:	31 c0                	xor    %eax,%eax
  41ce7c:	44 89 f9             	mov    %r15d,%ecx
  41ce7f:	e8 7c 4f fe ff       	callq  401e00 <__fprintf_chk@plt>
  41ce84:	e9 90 fc ff ff       	jmpq   41cb19 <caml_parse_engine+0x359>
  41ce89:	45 0f b6 7a f8       	movzbl -0x8(%r10),%r15d
  41ce8e:	4d 8b 6e 78          	mov    0x78(%r14),%r13
  41ce92:	45 85 ff             	test   %r15d,%r15d
  41ce95:	75 2a                	jne    41cec1 <caml_parse_engine+0x701>
  41ce97:	e9 d5 00 00 00       	jmpq   41cf71 <caml_parse_engine+0x7b1>
  41ce9c:	0f 1f 40 00          	nopl   0x0(%rax)
  41cea0:	4c 89 ef             	mov    %r13,%rdi
  41cea3:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
  41cea8:	e8 a3 4b fe ff       	callq  401a50 <strlen@plt>
  41cead:	41 83 ef 01          	sub    $0x1,%r15d
  41ceb1:	4d 8d 6c 05 01       	lea    0x1(%r13,%rax,1),%r13
  41ceb6:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
  41cebb:	0f 84 b0 00 00 00    	je     41cf71 <caml_parse_engine+0x7b1>
  41cec1:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
  41cec6:	75 d8                	jne    41cea0 <caml_parse_engine+0x6e0>
  41cec8:	41 b8 55 f2 41 00    	mov    $0x41f255,%r8d
  41cece:	48 8b 3d 2b fa 20 00 	mov    0x20fa2b(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41ced5:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
  41ced9:	31 c0                	xor    %eax,%eax
  41cedb:	ba 7e f2 41 00       	mov    $0x41f27e,%edx
  41cee0:	be 01 00 00 00       	mov    $0x1,%esi
  41cee5:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
  41ceea:	e8 11 4f fe ff       	callq  401e00 <__fprintf_chk@plt>
  41ceef:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
  41cef4:	49 8b 3a             	mov    (%r10),%rdi
  41cef7:	40 f6 c7 01          	test   $0x1,%dil
  41cefb:	0f 85 80 00 00 00    	jne    41cf81 <caml_parse_engine+0x7c1>
  41cf01:	0f b6 47 f8          	movzbl -0x8(%rdi),%eax
  41cf05:	3c fc                	cmp    $0xfc,%al
  41cf07:	0f 84 b8 00 00 00    	je     41cfc5 <caml_parse_engine+0x805>
  41cf0d:	3c fd                	cmp    $0xfd,%al
  41cf0f:	0f 84 8c 00 00 00    	je     41cfa1 <caml_parse_engine+0x7e1>
  41cf15:	48 8b 35 e4 f9 20 00 	mov    0x20f9e4(%rip),%rsi        # 62c900 <stderr@@GLIBC_2.2.5>
  41cf1c:	bf 5f 00 00 00       	mov    $0x5f,%edi
  41cf21:	e8 2a 4c fe ff       	callq  401b50 <fputc@plt>
  41cf26:	48 8b 0d d3 f9 20 00 	mov    0x20f9d3(%rip),%rcx        # 62c900 <stderr@@GLIBC_2.2.5>
  41cf2d:	ba 02 00 00 00       	mov    $0x2,%edx
  41cf32:	be 01 00 00 00       	mov    $0x1,%esi
  41cf37:	bf 9e f2 41 00       	mov    $0x41f29e,%edi
  41cf3c:	e8 9f 4e fe ff       	callq  401de0 <fwrite@plt>
  41cf41:	e9 35 fd ff ff       	jmpq   41cc7b <caml_parse_engine+0x4bb>
  41cf46:	0f bf c2             	movswl %dx,%eax
  41cf49:	89 04 24             	mov    %eax,(%rsp)
  41cf4c:	e9 f4 fb ff ff       	jmpq   41cb45 <caml_parse_engine+0x385>
  41cf51:	48 8b 0d a8 f9 20 00 	mov    0x20f9a8(%rip),%rcx        # 62c900 <stderr@@GLIBC_2.2.5>
  41cf58:	ba 1b 00 00 00       	mov    $0x1b,%edx
  41cf5d:	be 01 00 00 00       	mov    $0x1,%esi
  41cf62:	bf e9 f2 41 00       	mov    $0x41f2e9,%edi
  41cf67:	e8 74 4e fe ff       	callq  401de0 <fwrite@plt>
  41cf6c:	e9 15 fe ff ff       	jmpq   41cd86 <caml_parse_engine+0x5c6>
  41cf71:	4d 89 e8             	mov    %r13,%r8
  41cf74:	e9 55 ff ff ff       	jmpq   41cece <caml_parse_engine+0x70e>
  41cf79:	4d 89 e8             	mov    %r13,%r8
  41cf7c:	e9 e3 fe ff ff       	jmpq   41ce64 <caml_parse_engine+0x6a4>
  41cf81:	48 d1 ff             	sar    %rdi
  41cf84:	ba 97 f2 41 00       	mov    $0x41f297,%edx
  41cf89:	be 01 00 00 00       	mov    $0x1,%esi
  41cf8e:	48 89 f9             	mov    %rdi,%rcx
  41cf91:	48 8b 3d 68 f9 20 00 	mov    0x20f968(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41cf98:	31 c0                	xor    %eax,%eax
  41cf9a:	e8 61 4e fe ff       	callq  401e00 <__fprintf_chk@plt>
  41cf9f:	eb 85                	jmp    41cf26 <caml_parse_engine+0x766>
  41cfa1:	f2 0f 10 07          	movsd  (%rdi),%xmm0
  41cfa5:	48 8b 3d 54 f9 20 00 	mov    0x20f954(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41cfac:	ba 9b f2 41 00       	mov    $0x41f29b,%edx
  41cfb1:	be 01 00 00 00       	mov    $0x1,%esi
  41cfb6:	b8 01 00 00 00       	mov    $0x1,%eax
  41cfbb:	e8 40 4e fe ff       	callq  401e00 <__fprintf_chk@plt>
  41cfc0:	e9 61 ff ff ff       	jmpq   41cf26 <caml_parse_engine+0x766>
  41cfc5:	48 8b 35 34 f9 20 00 	mov    0x20f934(%rip),%rsi        # 62c900 <stderr@@GLIBC_2.2.5>
  41cfcc:	e8 df 4a fe ff       	callq  401ab0 <fputs@plt>
  41cfd1:	e9 50 ff ff ff       	jmpq   41cf26 <caml_parse_engine+0x766>
  41cfd6:	b8 03 00 00 00       	mov    $0x3,%eax
  41cfdb:	c3                   	retq   
  41cfdc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041cfe0 <caml_set_parser_trace>:
  41cfe0:	83 3d e1 43 22 00 01 	cmpl   $0x1,0x2243e1(%rip)        # 6413c8 <caml_parser_trace>
  41cfe7:	48 19 c0             	sbb    %rax,%rax
  41cfea:	48 d1 ff             	sar    %rdi
  41cfed:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  41cff1:	89 3d d1 43 22 00    	mov    %edi,0x2243d1(%rip)        # 6413c8 <caml_parser_trace>
  41cff7:	48 83 c0 03          	add    $0x3,%rax
  41cffb:	c3                   	retq   
  41cffc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041d000 <add_string.isra.0>:
  41d000:	41 55                	push   %r13
  41d002:	41 54                	push   %r12
  41d004:	49 89 fc             	mov    %rdi,%r12
  41d007:	55                   	push   %rbp
  41d008:	53                   	push   %rbx
  41d009:	48 89 d7             	mov    %rdx,%rdi
  41d00c:	48 89 f5             	mov    %rsi,%rbp
  41d00f:	49 89 d5             	mov    %rdx,%r13
  41d012:	48 83 ec 08          	sub    $0x8,%rsp
  41d016:	e8 35 4a fe ff       	callq  401a50 <strlen@plt>
  41d01b:	49 8b 3c 24          	mov    (%r12),%rdi
  41d01f:	48 63 d8             	movslq %eax,%rbx
  41d022:	89 c2                	mov    %eax,%edx
  41d024:	48 8d 04 1f          	lea    (%rdi,%rbx,1),%rax
  41d028:	48 39 c5             	cmp    %rax,%rbp
  41d02b:	73 08                	jae    41d035 <add_string.isra.0+0x35>
  41d02d:	48 29 fd             	sub    %rdi,%rbp
  41d030:	89 ea                	mov    %ebp,%edx
  41d032:	48 63 dd             	movslq %ebp,%rbx
  41d035:	85 d2                	test   %edx,%edx
  41d037:	7e 0f                	jle    41d048 <add_string.isra.0+0x48>
  41d039:	48 89 da             	mov    %rbx,%rdx
  41d03c:	4c 89 ee             	mov    %r13,%rsi
  41d03f:	e8 ec 4c fe ff       	callq  401d30 <memmove@plt>
  41d044:	49 8b 3c 24          	mov    (%r12),%rdi
  41d048:	48 01 fb             	add    %rdi,%rbx
  41d04b:	49 89 1c 24          	mov    %rbx,(%r12)
  41d04f:	48 83 c4 08          	add    $0x8,%rsp
  41d053:	5b                   	pop    %rbx
  41d054:	5d                   	pop    %rbp
  41d055:	41 5c                	pop    %r12
  41d057:	41 5d                	pop    %r13
  41d059:	c3                   	retq   
  41d05a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041d060 <caml_format_exception>:
  41d060:	41 56                	push   %r14
  41d062:	41 55                	push   %r13
  41d064:	41 54                	push   %r12
  41d066:	55                   	push   %rbp
  41d067:	53                   	push   %rbx
  41d068:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
  41d06f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41d076:	00 00 
  41d078:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
  41d07f:	00 
  41d080:	31 c0                	xor    %eax,%eax
  41d082:	80 7f f8 00          	cmpb   $0x0,-0x8(%rdi)
  41d086:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
  41d08b:	48 8d b4 24 0f 01 00 	lea    0x10f(%rsp),%rsi
  41d092:	00 
  41d093:	48 89 04 24          	mov    %rax,(%rsp)
  41d097:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  41d09c:	0f 85 06 01 00 00    	jne    41d1a8 <caml_format_exception+0x148>
  41d0a2:	48 8b 07             	mov    (%rdi),%rax
  41d0a5:	48 89 fd             	mov    %rdi,%rbp
  41d0a8:	48 8d 5f f8          	lea    -0x8(%rdi),%rbx
  41d0ac:	48 89 e7             	mov    %rsp,%rdi
  41d0af:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  41d0b5:	49 89 dd             	mov    %rbx,%r13
  41d0b8:	48 8b 10             	mov    (%rax),%rdx
  41d0bb:	e8 40 ff ff ff       	callq  41d000 <add_string.isra.0>
  41d0c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41d0c4:	48 c1 e8 0a          	shr    $0xa,%rax
  41d0c8:	48 83 f8 02          	cmp    $0x2,%rax
  41d0cc:	0f 84 ce 01 00 00    	je     41d2a0 <caml_format_exception+0x240>
  41d0d2:	48 8b 04 24          	mov    (%rsp),%rax
  41d0d6:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
  41d0db:	0f 83 a7 01 00 00    	jae    41d288 <caml_format_exception+0x228>
  41d0e1:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41d0e5:	48 89 14 24          	mov    %rdx,(%rsp)
  41d0e9:	c6 00 28             	movb   $0x28,(%rax)
  41d0ec:	49 8b 45 00          	mov    0x0(%r13),%rax
  41d0f0:	48 c1 e8 0a          	shr    $0xa,%rax
  41d0f4:	4c 39 e0             	cmp    %r12,%rax
  41d0f7:	0f 86 63 01 00 00    	jbe    41d260 <caml_format_exception+0x200>
  41d0fd:	4c 89 e3             	mov    %r12,%rbx
  41d100:	48 8b 54 dd 00       	mov    0x0(%rbp,%rbx,8),%rdx
  41d105:	f6 c2 01             	test   $0x1,%dl
  41d108:	75 56                	jne    41d160 <caml_format_exception+0x100>
  41d10a:	80 7a f8 fc          	cmpb   $0xfc,-0x8(%rdx)
  41d10e:	48 8b 04 24          	mov    (%rsp),%rax
  41d112:	0f 84 00 01 00 00    	je     41d218 <caml_format_exception+0x1b8>
  41d118:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
  41d11d:	73 0b                	jae    41d12a <caml_format_exception+0xca>
  41d11f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41d123:	48 89 14 24          	mov    %rdx,(%rsp)
  41d127:	c6 00 5f             	movb   $0x5f,(%rax)
  41d12a:	49 8b 45 00          	mov    0x0(%r13),%rax
  41d12e:	48 83 c3 01          	add    $0x1,%rbx
  41d132:	48 c1 e8 0a          	shr    $0xa,%rax
  41d136:	48 39 d8             	cmp    %rbx,%rax
  41d139:	0f 86 21 01 00 00    	jbe    41d260 <caml_format_exception+0x200>
  41d13f:	4c 39 e3             	cmp    %r12,%rbx
  41d142:	76 bc                	jbe    41d100 <caml_format_exception+0xa0>
  41d144:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41d149:	ba 70 f3 41 00       	mov    $0x41f370,%edx
  41d14e:	48 89 e7             	mov    %rsp,%rdi
  41d151:	e8 aa fe ff ff       	callq  41d000 <add_string.isra.0>
  41d156:	48 8b 54 dd 00       	mov    0x0(%rbp,%rbx,8),%rdx
  41d15b:	f6 c2 01             	test   $0x1,%dl
  41d15e:	74 aa                	je     41d10a <caml_format_exception+0xaa>
  41d160:	48 d1 fa             	sar    %rdx
  41d163:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
  41d16a:	00 
  41d16b:	41 b8 97 f2 41 00    	mov    $0x41f297,%r8d
  41d171:	49 89 d1             	mov    %rdx,%r9
  41d174:	b9 40 00 00 00       	mov    $0x40,%ecx
  41d179:	ba 01 00 00 00       	mov    $0x1,%edx
  41d17e:	be 40 00 00 00       	mov    $0x40,%esi
  41d183:	31 c0                	xor    %eax,%eax
  41d185:	e8 c6 47 fe ff       	callq  401950 <__snprintf_chk@plt>
  41d18a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41d18f:	48 8d 94 24 10 01 00 	lea    0x110(%rsp),%rdx
  41d196:	00 
  41d197:	48 89 e7             	mov    %rsp,%rdi
  41d19a:	e8 61 fe ff ff       	callq  41d000 <add_string.isra.0>
  41d19f:	eb 89                	jmp    41d12a <caml_format_exception+0xca>
  41d1a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41d1a8:	48 8b 17             	mov    (%rdi),%rdx
  41d1ab:	48 89 e7             	mov    %rsp,%rdi
  41d1ae:	e8 4d fe ff ff       	callq  41d000 <add_string.isra.0>
  41d1b3:	48 8b 04 24          	mov    (%rsp),%rax
  41d1b7:	c6 00 00             	movb   $0x0,(%rax)
  41d1ba:	48 8b 1c 24          	mov    (%rsp),%rbx
  41d1be:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
  41d1c3:	48 29 eb             	sub    %rbp,%rbx
  41d1c6:	48 83 c3 01          	add    $0x1,%rbx
  41d1ca:	48 89 df             	mov    %rbx,%rdi
  41d1cd:	e8 be 4a fe ff       	callq  401c90 <malloc@plt>
  41d1d2:	48 85 c0             	test   %rax,%rax
  41d1d5:	48 89 c1             	mov    %rax,%rcx
  41d1d8:	74 11                	je     41d1eb <caml_format_exception+0x18b>
  41d1da:	48 89 da             	mov    %rbx,%rdx
  41d1dd:	48 89 ee             	mov    %rbp,%rsi
  41d1e0:	48 89 c7             	mov    %rax,%rdi
  41d1e3:	e8 28 4a fe ff       	callq  401c10 <memcpy@plt>
  41d1e8:	48 89 c1             	mov    %rax,%rcx
  41d1eb:	48 89 c8             	mov    %rcx,%rax
  41d1ee:	48 8b 8c 24 58 01 00 	mov    0x158(%rsp),%rcx
  41d1f5:	00 
  41d1f6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41d1fd:	00 00 
  41d1ff:	0f 85 e7 00 00 00    	jne    41d2ec <caml_format_exception+0x28c>
  41d205:	48 81 c4 60 01 00 00 	add    $0x160,%rsp
  41d20c:	5b                   	pop    %rbx
  41d20d:	5d                   	pop    %rbp
  41d20e:	41 5c                	pop    %r12
  41d210:	41 5d                	pop    %r13
  41d212:	41 5e                	pop    %r14
  41d214:	c3                   	retq   
  41d215:	0f 1f 00             	nopl   (%rax)
  41d218:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41d21d:	48 39 f0             	cmp    %rsi,%rax
  41d220:	73 10                	jae    41d232 <caml_format_exception+0x1d2>
  41d222:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41d226:	48 89 0c 24          	mov    %rcx,(%rsp)
  41d22a:	c6 00 22             	movb   $0x22,(%rax)
  41d22d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41d232:	48 89 e7             	mov    %rsp,%rdi
  41d235:	e8 c6 fd ff ff       	callq  41d000 <add_string.isra.0>
  41d23a:	48 8b 04 24          	mov    (%rsp),%rax
  41d23e:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
  41d243:	0f 83 e1 fe ff ff    	jae    41d12a <caml_format_exception+0xca>
  41d249:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41d24d:	48 89 14 24          	mov    %rdx,(%rsp)
  41d251:	c6 00 22             	movb   $0x22,(%rax)
  41d254:	e9 d1 fe ff ff       	jmpq   41d12a <caml_format_exception+0xca>
  41d259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41d260:	48 8b 04 24          	mov    (%rsp),%rax
  41d264:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
  41d269:	0f 83 48 ff ff ff    	jae    41d1b7 <caml_format_exception+0x157>
  41d26f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  41d273:	48 89 14 24          	mov    %rdx,(%rsp)
  41d277:	c6 00 29             	movb   $0x29,(%rax)
  41d27a:	48 8b 04 24          	mov    (%rsp),%rax
  41d27e:	e9 34 ff ff ff       	jmpq   41d1b7 <caml_format_exception+0x157>
  41d283:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41d288:	49 8b 55 00          	mov    0x0(%r13),%rdx
  41d28c:	48 c1 ea 0a          	shr    $0xa,%rdx
  41d290:	49 39 d4             	cmp    %rdx,%r12
  41d293:	0f 82 64 fe ff ff    	jb     41d0fd <caml_format_exception+0x9d>
  41d299:	e9 19 ff ff ff       	jmpq   41d1b7 <caml_format_exception+0x157>
  41d29e:	66 90                	xchg   %ax,%ax
  41d2a0:	48 8b 45 08          	mov    0x8(%rbp),%rax
  41d2a4:	a8 01                	test   $0x1,%al
  41d2a6:	75 06                	jne    41d2ae <caml_format_exception+0x24e>
  41d2a8:	80 78 f8 00          	cmpb   $0x0,-0x8(%rax)
  41d2ac:	74 1d                	je     41d2cb <caml_format_exception+0x26b>
  41d2ae:	48 8b 04 24          	mov    (%rsp),%rax
  41d2b2:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
  41d2b7:	49 89 dd             	mov    %rbx,%r13
  41d2ba:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  41d2c0:	0f 87 1b fe ff ff    	ja     41d0e1 <caml_format_exception+0x81>
  41d2c6:	e9 32 fe ff ff       	jmpq   41d0fd <caml_format_exception+0x9d>
  41d2cb:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
  41d2cf:	e8 0c d5 ff ff       	callq  41a7e0 <caml_is_special_exception>
  41d2d4:	85 c0                	test   %eax,%eax
  41d2d6:	0f 84 f6 fd ff ff    	je     41d0d2 <caml_format_exception+0x72>
  41d2dc:	48 8b 6d 08          	mov    0x8(%rbp),%rbp
  41d2e0:	45 31 e4             	xor    %r12d,%r12d
  41d2e3:	4c 8d 6d f8          	lea    -0x8(%rbp),%r13
  41d2e7:	e9 e6 fd ff ff       	jmpq   41d0d2 <caml_format_exception+0x72>
  41d2ec:	e8 7f 47 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41d2f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41d2f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d2fd:	00 00 00 

000000000041d300 <caml_fatal_uncaught_exception>:
  41d300:	41 54                	push   %r12
  41d302:	55                   	push   %rbp
  41d303:	53                   	push   %rbx
  41d304:	48 89 fb             	mov    %rdi,%rbx
  41d307:	bf a8 f3 41 00       	mov    $0x41f3a8,%edi
  41d30c:	e8 9f 85 ff ff       	callq  4158b0 <caml_named_value>
  41d311:	48 85 c0             	test   %rax,%rax
  41d314:	74 33                	je     41d349 <caml_fatal_uncaught_exception+0x49>
  41d316:	48 8b 38             	mov    (%rax),%rdi
  41d319:	ba 01 00 00 00       	mov    $0x1,%edx
  41d31e:	48 89 de             	mov    %rbx,%rsi
  41d321:	e8 fa 83 ff ff       	callq  415720 <caml_callback2>
  41d326:	48 8b 05 73 7d 21 00 	mov    0x217d73(%rip),%rax        # 6350a0 <caml_cplugins_prim>
  41d32d:	48 85 c0             	test   %rax,%rax
  41d330:	74 0d                	je     41d33f <caml_fatal_uncaught_exception+0x3f>
  41d332:	31 c9                	xor    %ecx,%ecx
  41d334:	31 d2                	xor    %edx,%edx
  41d336:	be 02 00 00 00       	mov    $0x2,%esi
  41d33b:	31 ff                	xor    %edi,%edi
  41d33d:	ff d0                	callq  *%rax
  41d33f:	bf 02 00 00 00       	mov    $0x2,%edi
  41d344:	e8 87 4a fe ff       	callq  401dd0 <exit@plt>
  41d349:	48 89 df             	mov    %rbx,%rdi
  41d34c:	e8 0f fd ff ff       	callq  41d060 <caml_format_exception>
  41d351:	bf 73 f3 41 00       	mov    $0x41f373,%edi
  41d356:	44 8b 25 ff fe 21 00 	mov    0x21feff(%rip),%r12d        # 63d25c <caml_backtrace_active>
  41d35d:	48 89 c3             	mov    %rax,%rbx
  41d360:	8b 2d f2 fe 21 00    	mov    0x21fef2(%rip),%ebp        # 63d258 <caml_backtrace_pos>
  41d366:	c7 05 ec fe 21 00 00 	movl   $0x0,0x21feec(%rip)        # 63d25c <caml_backtrace_active>
  41d36d:	00 00 00 
  41d370:	e8 3b 85 ff ff       	callq  4158b0 <caml_named_value>
  41d375:	48 85 c0             	test   %rax,%rax
  41d378:	74 0d                	je     41d387 <caml_fatal_uncaught_exception+0x87>
  41d37a:	48 8b 38             	mov    (%rax),%rdi
  41d37d:	be 01 00 00 00       	mov    $0x1,%esi
  41d382:	e8 15 cb ff ff       	callq  419e9c <caml_callback_exn>
  41d387:	48 8b 3d 72 f5 20 00 	mov    0x20f572(%rip),%rdi        # 62c900 <stderr@@GLIBC_2.2.5>
  41d38e:	48 89 d9             	mov    %rbx,%rcx
  41d391:	ba 89 f3 41 00       	mov    $0x41f389,%edx
  41d396:	be 01 00 00 00       	mov    $0x1,%esi
  41d39b:	31 c0                	xor    %eax,%eax
  41d39d:	44 89 25 b8 fe 21 00 	mov    %r12d,0x21feb8(%rip)        # 63d25c <caml_backtrace_active>
  41d3a4:	89 2d ae fe 21 00    	mov    %ebp,0x21feae(%rip)        # 63d258 <caml_backtrace_pos>
  41d3aa:	e8 51 4a fe ff       	callq  401e00 <__fprintf_chk@plt>
  41d3af:	48 89 df             	mov    %rbx,%rdi
  41d3b2:	e8 a9 45 fe ff       	callq  401960 <free@plt>
  41d3b7:	83 3d 9e fe 21 00 00 	cmpl   $0x0,0x21fe9e(%rip)        # 63d25c <caml_backtrace_active>
  41d3be:	0f 84 62 ff ff ff    	je     41d326 <caml_fatal_uncaught_exception+0x26>
  41d3c4:	e8 07 c0 ff ff       	callq  4193d0 <caml_print_exception_backtrace>
  41d3c9:	e9 58 ff ff ff       	jmpq   41d326 <caml_fatal_uncaught_exception+0x26>
  41d3ce:	66 90                	xchg   %ax,%ax

000000000041d3d0 <caml_next_frame_descriptor>:
  41d3d0:	48 8b 0f             	mov    (%rdi),%rcx
  41d3d3:	4c 63 05 56 f5 20 00 	movslq 0x20f556(%rip),%r8        # 62c930 <caml_frame_descriptors_mask>
  41d3da:	48 89 c8             	mov    %rcx,%rax
  41d3dd:	4c 8b 0d 54 f5 20 00 	mov    0x20f554(%rip),%r9        # 62c938 <caml_frame_descriptors>
  41d3e4:	48 c1 e8 03          	shr    $0x3,%rax
  41d3e8:	4c 21 c0             	and    %r8,%rax
  41d3eb:	49 8b 14 c1          	mov    (%r9,%rax,8),%rdx
  41d3ef:	48 85 d2             	test   %rdx,%rdx
  41d3f2:	75 1c                	jne    41d410 <caml_next_frame_descriptor+0x40>
  41d3f4:	eb 40                	jmp    41d436 <caml_next_frame_descriptor+0x66>
  41d3f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d3fd:	00 00 00 
  41d400:	48 83 c0 01          	add    $0x1,%rax
  41d404:	4c 21 c0             	and    %r8,%rax
  41d407:	49 8b 14 c1          	mov    (%r9,%rax,8),%rdx
  41d40b:	48 85 d2             	test   %rdx,%rdx
  41d40e:	74 26                	je     41d436 <caml_next_frame_descriptor+0x66>
  41d410:	48 39 0a             	cmp    %rcx,(%rdx)
  41d413:	75 eb                	jne    41d400 <caml_next_frame_descriptor+0x30>
  41d415:	0f b7 42 08          	movzwl 0x8(%rdx),%eax
  41d419:	66 83 f8 ff          	cmp    $0xffff,%ax
  41d41d:	75 1a                	jne    41d439 <caml_next_frame_descriptor+0x69>
  41d41f:	48 8b 06             	mov    (%rsi),%rax
  41d422:	48 8b 50 10          	mov    0x10(%rax),%rdx
  41d426:	48 89 16             	mov    %rdx,(%rsi)
  41d429:	48 8b 48 18          	mov    0x18(%rax),%rcx
  41d42d:	48 89 0f             	mov    %rcx,(%rdi)
  41d430:	48 83 3e 00          	cmpq   $0x0,(%rsi)
  41d434:	75 9d                	jne    41d3d3 <caml_next_frame_descriptor+0x3>
  41d436:	31 c0                	xor    %eax,%eax
  41d438:	c3                   	retq   
  41d439:	25 fc ff 00 00       	and    $0xfffc,%eax
  41d43e:	48 03 06             	add    (%rsi),%rax
  41d441:	48 89 06             	mov    %rax,(%rsi)
  41d444:	48 8b 40 f8          	mov    -0x8(%rax),%rax
  41d448:	48 89 07             	mov    %rax,(%rdi)
  41d44b:	48 89 d0             	mov    %rdx,%rax
  41d44e:	c3                   	retq   
  41d44f:	90                   	nop

000000000041d450 <caml_stash_backtrace>:
  41d450:	53                   	push   %rbx
  41d451:	48 89 cb             	mov    %rcx,%rbx
  41d454:	48 83 ec 10          	sub    $0x10,%rsp
  41d458:	48 39 3d b9 f3 20 00 	cmp    %rdi,0x20f3b9(%rip)        # 62c818 <caml_backtrace_last_exn>
  41d45f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  41d464:	48 89 14 24          	mov    %rdx,(%rsp)
  41d468:	74 11                	je     41d47b <caml_stash_backtrace+0x2b>
  41d46a:	c7 05 e4 fd 21 00 00 	movl   $0x0,0x21fde4(%rip)        # 63d258 <caml_backtrace_pos>
  41d471:	00 00 00 
  41d474:	48 89 3d 9d f3 20 00 	mov    %rdi,0x20f39d(%rip)        # 62c818 <caml_backtrace_last_exn>
  41d47b:	48 83 3d cd fd 21 00 	cmpq   $0x0,0x21fdcd(%rip)        # 63d250 <caml_backtrace_buffer>
  41d482:	00 
  41d483:	75 34                	jne    41d4b9 <caml_stash_backtrace+0x69>
  41d485:	eb 4a                	jmp    41d4d1 <caml_stash_backtrace+0x81>
  41d487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41d48e:	00 00 
  41d490:	48 63 15 c1 fd 21 00 	movslq 0x21fdc1(%rip),%rdx        # 63d258 <caml_backtrace_pos>
  41d497:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx
  41d49d:	7f 2c                	jg     41d4cb <caml_stash_backtrace+0x7b>
  41d49f:	8d 4a 01             	lea    0x1(%rdx),%ecx
  41d4a2:	89 0d b0 fd 21 00    	mov    %ecx,0x21fdb0(%rip)        # 63d258 <caml_backtrace_pos>
  41d4a8:	48 8b 0d a1 fd 21 00 	mov    0x21fda1(%rip),%rcx        # 63d250 <caml_backtrace_buffer>
  41d4af:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
  41d4b3:	48 39 1c 24          	cmp    %rbx,(%rsp)
  41d4b7:	77 12                	ja     41d4cb <caml_stash_backtrace+0x7b>
  41d4b9:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  41d4be:	48 89 e6             	mov    %rsp,%rsi
  41d4c1:	e8 0a ff ff ff       	callq  41d3d0 <caml_next_frame_descriptor>
  41d4c6:	48 85 c0             	test   %rax,%rax
  41d4c9:	75 c5                	jne    41d490 <caml_stash_backtrace+0x40>
  41d4cb:	48 83 c4 10          	add    $0x10,%rsp
  41d4cf:	5b                   	pop    %rbx
  41d4d0:	c3                   	retq   
  41d4d1:	bf 00 20 00 00       	mov    $0x2000,%edi
  41d4d6:	e8 b5 47 fe ff       	callq  401c90 <malloc@plt>
  41d4db:	48 85 c0             	test   %rax,%rax
  41d4de:	48 89 05 6b fd 21 00 	mov    %rax,0x21fd6b(%rip)        # 63d250 <caml_backtrace_buffer>
  41d4e5:	75 d2                	jne    41d4b9 <caml_stash_backtrace+0x69>
  41d4e7:	eb e2                	jmp    41d4cb <caml_stash_backtrace+0x7b>
  41d4e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041d4f0 <caml_get_current_callstack>:
  41d4f0:	55                   	push   %rbp
  41d4f1:	53                   	push   %rbx
  41d4f2:	49 89 fa             	mov    %rdi,%r10
  41d4f5:	49 d1 fa             	sar    %r10
  41d4f8:	31 db                	xor    %ebx,%ebx
  41d4fa:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
  41d501:	48 8b 2d 40 f4 20 00 	mov    0x20f440(%rip),%rbp        # 62c948 <caml_local_roots>
  41d508:	4c 8b 1d c1 3e 22 00 	mov    0x223ec1(%rip),%r11        # 6413d0 <caml_top_of_stack>
  41d50f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  41d516:	00 00 
  41d518:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  41d51f:	00 
  41d520:	31 c0                	xor    %eax,%eax
  41d522:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  41d527:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  41d52c:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
  41d533:	00 00 
  41d535:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
  41d53a:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
  41d541:	00 00 
  41d543:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  41d548:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  41d54d:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
  41d554:	00 00 
  41d556:	48 c7 84 24 80 00 00 	movq   $0x1,0x80(%rsp)
  41d55d:	00 01 00 00 00 
  41d562:	48 c7 44 24 78 01 00 	movq   $0x1,0x78(%rsp)
  41d569:	00 00 
  41d56b:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
  41d570:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
  41d575:	48 89 05 cc f3 20 00 	mov    %rax,0x20f3cc(%rip)        # 62c948 <caml_local_roots>
  41d57c:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
  41d581:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  41d588:	00 
  41d589:	48 8b 05 d8 f0 20 00 	mov    0x20f0d8(%rip),%rax        # 62c668 <caml_last_return_address>
  41d590:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  41d595:	48 8b 05 8c f3 20 00 	mov    0x20f38c(%rip),%rax        # 62c928 <caml_bottom_of_stack>
  41d59c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  41d5a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41d5a8:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
  41d5ad:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  41d5b2:	e8 19 fe ff ff       	callq  41d3d0 <caml_next_frame_descriptor>
  41d5b7:	48 85 c0             	test   %rax,%rax
  41d5ba:	74 3c                	je     41d5f8 <caml_get_current_callstack+0x108>
  41d5bc:	4c 39 d3             	cmp    %r10,%rbx
  41d5bf:	7d 37                	jge    41d5f8 <caml_get_current_callstack+0x108>
  41d5c1:	48 83 c3 01          	add    $0x1,%rbx
  41d5c5:	4c 3b 5c 24 28       	cmp    0x28(%rsp),%r11
  41d5ca:	73 dc                	jae    41d5a8 <caml_get_current_callstack+0xb8>
  41d5cc:	31 f6                	xor    %esi,%esi
  41d5ce:	48 89 df             	mov    %rbx,%rdi
  41d5d1:	e8 9a eb ff ff       	callq  41c170 <caml_alloc>
  41d5d6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41d5db:	48 8b 05 86 f0 20 00 	mov    0x20f086(%rip),%rax        # 62c668 <caml_last_return_address>
  41d5e2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  41d5e7:	48 8b 05 3a f3 20 00 	mov    0x20f33a(%rip),%rax        # 62c928 <caml_bottom_of_stack>
  41d5ee:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  41d5f3:	eb 2f                	jmp    41d624 <caml_get_current_callstack+0x134>
  41d5f5:	0f 1f 00             	nopl   (%rax)
  41d5f8:	31 f6                	xor    %esi,%esi
  41d5fa:	48 89 df             	mov    %rbx,%rdi
  41d5fd:	e8 6e eb ff ff       	callq  41c170 <caml_alloc>
  41d602:	48 8b 15 5f f0 20 00 	mov    0x20f05f(%rip),%rdx        # 62c668 <caml_last_return_address>
  41d609:	48 85 db             	test   %rbx,%rbx
  41d60c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41d611:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  41d616:	48 8b 15 0b f3 20 00 	mov    0x20f30b(%rip),%rdx        # 62c928 <caml_bottom_of_stack>
  41d61d:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  41d622:	74 36                	je     41d65a <caml_get_current_callstack+0x16a>
  41d624:	45 31 d2             	xor    %r10d,%r10d
  41d627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41d62e:	00 00 
  41d630:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
  41d635:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  41d63a:	e8 91 fd ff ff       	callq  41d3d0 <caml_next_frame_descriptor>
  41d63f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  41d644:	48 83 c8 01          	or     $0x1,%rax
  41d648:	4a 89 04 d2          	mov    %rax,(%rdx,%r10,8)
  41d64c:	49 83 c2 01          	add    $0x1,%r10
  41d650:	49 39 da             	cmp    %rbx,%r10
  41d653:	75 db                	jne    41d630 <caml_get_current_callstack+0x140>
  41d655:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  41d65a:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
  41d661:	00 
  41d662:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  41d669:	00 00 
  41d66b:	48 89 2d d6 f2 20 00 	mov    %rbp,0x20f2d6(%rip)        # 62c948 <caml_local_roots>
  41d672:	75 0a                	jne    41d67e <caml_get_current_callstack+0x18e>
  41d674:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
  41d67b:	5b                   	pop    %rbx
  41d67c:	5d                   	pop    %rbp
  41d67d:	c3                   	retq   
  41d67e:	e8 ed 43 fe ff       	callq  401a70 <__stack_chk_fail@plt>
  41d683:	0f 1f 00             	nopl   (%rax)
  41d686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d68d:	00 00 00 

000000000041d690 <caml_debuginfo_extract>:
  41d690:	f6 47 08 01          	testb  $0x1,0x8(%rdi)
  41d694:	74 1a                	je     41d6b0 <caml_debuginfo_extract+0x20>
  41d696:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  41d69a:	48 8d 44 47 13       	lea    0x13(%rdi,%rax,2),%rax
  41d69f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
  41d6a3:	48 8b 00             	mov    (%rax),%rax
  41d6a6:	c3                   	retq   
  41d6a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41d6ae:	00 00 
  41d6b0:	31 c0                	xor    %eax,%eax
  41d6b2:	c3                   	retq   
  41d6b3:	0f 1f 00             	nopl   (%rax)
  41d6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d6bd:	00 00 00 

000000000041d6c0 <caml_debuginfo_next>:
  41d6c0:	48 85 ff             	test   %rdi,%rdi
  41d6c3:	74 0b                	je     41d6d0 <caml_debuginfo_next+0x10>
  41d6c5:	48 8b 47 08          	mov    0x8(%rdi),%rax
  41d6c9:	c3                   	retq   
  41d6ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41d6d0:	31 c0                	xor    %eax,%eax
  41d6d2:	c3                   	retq   
  41d6d3:	0f 1f 00             	nopl   (%rax)
  41d6d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d6dd:	00 00 00 

000000000041d6e0 <caml_debuginfo_location>:
  41d6e0:	48 85 ff             	test   %rdi,%rdi
  41d6e3:	74 63                	je     41d748 <caml_debuginfo_location+0x68>
  41d6e5:	8b 07                	mov    (%rdi),%eax
  41d6e7:	8b 57 04             	mov    0x4(%rdi),%edx
  41d6ea:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
  41d6f0:	89 c1                	mov    %eax,%ecx
  41d6f2:	83 e1 03             	and    $0x3,%ecx
  41d6f5:	83 f9 01             	cmp    $0x1,%ecx
  41d6f8:	0f 94 c1             	sete   %cl
  41d6fb:	0f b6 c9             	movzbl %cl,%ecx
  41d6fe:	89 4e 04             	mov    %ecx,0x4(%rsi)
  41d701:	31 c9                	xor    %ecx,%ecx
  41d703:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
  41d708:	0f 95 c1             	setne  %cl
  41d70b:	89 4e 1c             	mov    %ecx,0x1c(%rsi)
  41d70e:	89 c1                	mov    %eax,%ecx
  41d710:	c1 e8 1a             	shr    $0x1a,%eax
  41d713:	81 e1 fc ff ff 03    	and    $0x3fffffc,%ecx
  41d719:	48 01 cf             	add    %rcx,%rdi
  41d71c:	89 d1                	mov    %edx,%ecx
  41d71e:	c1 e9 0c             	shr    $0xc,%ecx
  41d721:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
  41d725:	89 4e 10             	mov    %ecx,0x10(%rsi)
  41d728:	89 d1                	mov    %edx,%ecx
  41d72a:	83 e2 0f             	and    $0xf,%edx
  41d72d:	c1 e9 04             	shr    $0x4,%ecx
  41d730:	c1 e2 06             	shl    $0x6,%edx
  41d733:	81 e1 ff 00 00 00    	and    $0xff,%ecx
  41d739:	09 d0                	or     %edx,%eax
  41d73b:	89 4e 14             	mov    %ecx,0x14(%rsi)
  41d73e:	89 46 18             	mov    %eax,0x18(%rsi)
  41d741:	c3                   	retq   
  41d742:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41d748:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
  41d74e:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%rsi)
  41d755:	c7 46 1c 00 00 00 00 	movl   $0x0,0x1c(%rsi)
  41d75c:	c3                   	retq   
  41d75d:	0f 1f 00             	nopl   (%rax)

000000000041d760 <caml_add_debug_info>:
  41d760:	b8 01 00 00 00       	mov    $0x1,%eax
  41d765:	c3                   	retq   
  41d766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d76d:	00 00 00 

000000000041d770 <caml_remove_debug_info>:
  41d770:	b8 01 00 00 00       	mov    $0x1,%eax
  41d775:	c3                   	retq   
  41d776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d77d:	00 00 00 

000000000041d780 <caml_debug_info_available>:
  41d780:	b8 01 00 00 00       	mov    $0x1,%eax
  41d785:	c3                   	retq   
  41d786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d78d:	00 00 00 

000000000041d790 <caml_debugger_init>:
  41d790:	f3 c3                	repz retq 
  41d792:	0f 1f 40 00          	nopl   0x0(%rax)
  41d796:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d79d:	00 00 00 

000000000041d7a0 <caml_debugger>:
  41d7a0:	f3 c3                	repz retq 
  41d7a2:	0f 1f 40 00          	nopl   0x0(%rax)
  41d7a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d7ad:	00 00 00 

000000000041d7b0 <caml_debugger_cleanup_fork>:
  41d7b0:	f3 c3                	repz retq 
  41d7b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d7b9:	00 00 00 
  41d7bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041d7c0 <__libc_csu_init>:
  41d7c0:	41 57                	push   %r15
  41d7c2:	41 56                	push   %r14
  41d7c4:	41 89 ff             	mov    %edi,%r15d
  41d7c7:	41 55                	push   %r13
  41d7c9:	41 54                	push   %r12
  41d7cb:	4c 8d 25 1e b6 20 00 	lea    0x20b61e(%rip),%r12        # 628df0 <__frame_dummy_init_array_entry>
  41d7d2:	55                   	push   %rbp
  41d7d3:	48 8d 2d 1e b6 20 00 	lea    0x20b61e(%rip),%rbp        # 628df8 <__init_array_end>
  41d7da:	53                   	push   %rbx
  41d7db:	49 89 f6             	mov    %rsi,%r14
  41d7de:	49 89 d5             	mov    %rdx,%r13
  41d7e1:	4c 29 e5             	sub    %r12,%rbp
  41d7e4:	48 83 ec 08          	sub    $0x8,%rsp
  41d7e8:	48 c1 fd 03          	sar    $0x3,%rbp
  41d7ec:	e8 07 41 fe ff       	callq  4018f8 <_init>
  41d7f1:	48 85 ed             	test   %rbp,%rbp
  41d7f4:	74 20                	je     41d816 <__libc_csu_init+0x56>
  41d7f6:	31 db                	xor    %ebx,%ebx
  41d7f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41d7ff:	00 
  41d800:	4c 89 ea             	mov    %r13,%rdx
  41d803:	4c 89 f6             	mov    %r14,%rsi
  41d806:	44 89 ff             	mov    %r15d,%edi
  41d809:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  41d80d:	48 83 c3 01          	add    $0x1,%rbx
  41d811:	48 39 eb             	cmp    %rbp,%rbx
  41d814:	75 ea                	jne    41d800 <__libc_csu_init+0x40>
  41d816:	48 83 c4 08          	add    $0x8,%rsp
  41d81a:	5b                   	pop    %rbx
  41d81b:	5d                   	pop    %rbp
  41d81c:	41 5c                	pop    %r12
  41d81e:	41 5d                	pop    %r13
  41d820:	41 5e                	pop    %r14
  41d822:	41 5f                	pop    %r15
  41d824:	c3                   	retq   
  41d825:	90                   	nop
  41d826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41d82d:	00 00 00 

000000000041d830 <__libc_csu_fini>:
  41d830:	f3 c3                	repz retq 

セクション .fini の逆アセンブル:

000000000041d834 <_fini>:
  41d834:	48 83 ec 08          	sub    $0x8,%rsp
  41d838:	48 83 c4 08          	add    $0x8,%rsp
  41d83c:	c3                   	retq   
