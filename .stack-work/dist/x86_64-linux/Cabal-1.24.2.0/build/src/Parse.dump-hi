
==================== FINAL INTERFACE ====================
2017-06-09 09:16:13.918767 UTC

interface hml-0.1.0.0-KdOix18Qri95U7BZnPlCun:Parse 8002
  interface hash: ba6811afbe98e557bfeb3dabba8f71bc
  ABI hash: 404f4134e80b3268985d009262e261ad
  export-list hash: b1c1227c640cdb282e684c3d09ef80f5
  orphan hash: 735f68213b1ee2b1143ebf96a8ab1da4
  flag hash: 91cd76246f60d900fce8e309e594df82
  sig of: Nothing
  used TH splices: False
  where
exports:
  Parse.parseA
  Parse.parseAExpr
  Parse.parseApp
  Parse.parseAppExpr
  Parse.parseAppExpr'
  Parse.parseBinOp
  Parse.parseBool
  Parse.parseExpr
  Parse.parseExpr'''
  Parse.parseFun
  Parse.parseIf
  Parse.parseInt
  Parse.parseLet
  Parse.parseLetRec
  Parse.parseLtExpr
  Parse.parseLtExpr'
  Parse.parseMult
  Parse.parseMult'
  Parse.parseMultExpr
  Parse.parseMultExpr'
  Parse.parsePlus
  Parse.parsePlusExpr
  Parse.parsePlusExpr'
  Parse.parseProgram
  Parse.parseSentence
  Parse.parseTest
  Parse.parseValiableName
  Parse.parseVariable
  Parse.reservedName
  Parse.stringToProgram
  Parse.BinOp{Parse.Lt Parse.Mult Parse.Plus}
  Parse.Expr{Parse.EApp Parse.EBinOp Parse.EBool Parse.EFun Parse.EIf Parse.EInt Parse.ELet Parse.ELetRec Parse.EVariable}
  Parse.Program
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.Char 261fdcccc6ba24f6960e6d582f789f87
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.Combinator 78c61d4944845dac4be543f4a5fad926
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.Error ce2217365701a41a4565dbdaf79d63d9
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.Prim cf8fdd65b268b07ee0d4808d85010d49
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.Parsec.String 82047932fe8b05f9590326d15e87580c
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.ParserCombinators.Parsec 09138eb929906f6c6f6f40463cb9c077
import  -/  parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw:Text.ParserCombinators.Parsec.Prim 36790067a17bf441b93287d5552b97d2
6588acc7555e667303aa57bab7831364
  $fShowBinOp :: GHC.Show.Show Parse.BinOp
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parse.BinOp
                  Parse.$fShowBinOp_$cshowsPrec
                  Parse.$fShowBinOp_$cshow
                  Parse.$fShowBinOp_$cshowList -}
ba18fbfc9dbeec59ffb3bd95236a135a
  $fShowBinOp1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lt"#) -}
5f94693f1634e02d66369e260c6bfd92
  $fShowBinOp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Mult"#) -}
fe0d8809871559a8e6abdb98a2340b0b
  $fShowBinOp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Plus"#) -}
6588acc7555e667303aa57bab7831364
  $fShowBinOp_$cshow :: Parse.BinOp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Parse.BinOp) ->
                 case x1 of wild {
                   Parse.Plus -> Parse.$fShowBinOp3
                   Parse.Mult -> Parse.$fShowBinOp2
                   Parse.Lt -> Parse.$fShowBinOp1 }) -}
6588acc7555e667303aa57bab7831364
  $fShowBinOp_$cshowList :: [Parse.BinOp] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parse.BinOp
                   Parse.$w$cshowsPrec) -}
6588acc7555e667303aa57bab7831364
  $fShowBinOp_$cshowsPrec ::
    GHC.Types.Int -> Parse.BinOp -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Parse.BinOp)
                   (w2 :: GHC.Base.String) ->
                 Parse.$w$cshowsPrec w1 w2) -}
3c677ddf2e91efa2230f40d9e88e1bd3
  $fShowExpr :: GHC.Show.Show Parse.Expr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parse.Expr
                  Parse.$fShowExpr_$cshowsPrec
                  Parse.$fShowExpr_$cshow
                  Parse.$fShowExpr_$cshowList -}
3c677ddf2e91efa2230f40d9e88e1bd3
  $fShowExpr1 :: Parse.Expr -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Parse.Expr) (w1 :: GHC.Base.String) ->
                 Parse.$w$cshowsPrec1 0# w w1) -}
3c677ddf2e91efa2230f40d9e88e1bd3
  $fShowExpr_$cshow :: Parse.Expr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Parse.Expr) ->
                 Parse.$fShowExpr_$cshowsPrec
                   GHC.Show.shows22
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3c677ddf2e91efa2230f40d9e88e1bd3
  $fShowExpr_$cshowList :: [Parse.Expr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Parse.Expr Parse.$fShowExpr1) -}
3c677ddf2e91efa2230f40d9e88e1bd3
  $fShowExpr_$cshowsPrec ::
    GHC.Types.Int -> Parse.Expr -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Parse.Expr)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Parse.$w$cshowsPrec1 ww1 w1 w2 }) -}
faa269ffdd7f3112eb2b9050983ed1df
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  (Parse.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok)
                  (Parse.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
101e424611b6badaf7e8f1538dd0b5bf
  $s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream ::
    GHC.Base.Monad Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ tok -> Data.Functor.Identity.$fMonadIdentity) -}
5734220d603a3bb1be976bb57f1797f3
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Nothing @ (tok, [tok]))
                   : t ts
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Just @ (tok, [tok]) (t, ts)) }) -}
861c6c6e30b87d889ed70db376affbfe
  $tc'EApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   896323112129659207##
                   17031066651620590797##
                   Parse.$trModule
                   Parse.$tc'EApp1) -}
1dde176c455146e8a6781f31ece8b077
  $tc'EApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EApp"#) -}
78143b4a6f46cf86d80a83d03c0a3f6b
  $tc'EBinOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9007983192696725267##
                   8440593221616742793##
                   Parse.$trModule
                   Parse.$tc'EBinOp1) -}
131010a055d8f0602f1c70022991fb86
  $tc'EBinOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EBinOp"#) -}
e12d16c7575f0180e9022ace32862764
  $tc'EBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9659929223446725346##
                   9508923658423628442##
                   Parse.$trModule
                   Parse.$tc'EBool1) -}
de31b9858ebf8cf12b390802b4691ece
  $tc'EBool1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EBool"#) -}
fbb4a67e8723ba1f691139e9e700c7ee
  $tc'EFun :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15277070810043869983##
                   13026991767159168215##
                   Parse.$trModule
                   Parse.$tc'EFun1) -}
33dc21598183244f30cde03008f91478
  $tc'EFun1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EFun"#) -}
d1afa1e431513a72171cbd027bc22d1a
  $tc'EIf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14869195785425820119##
                   13174832574309722374##
                   Parse.$trModule
                   Parse.$tc'EIf1) -}
75bb4302e73d2a6ee649362e0e829cce
  $tc'EIf1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EIf"#) -}
19cc1532ec896a2a72305cede0a52ce6
  $tc'EInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5118810935885704839##
                   10611802941295618103##
                   Parse.$trModule
                   Parse.$tc'EInt1) -}
efceb35cbd6e6b4b2afadb5ece1a261a
  $tc'EInt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EInt"#) -}
d8d2d3772586d86201e0faf21e670573
  $tc'ELet :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8982459695650196309##
                   14232030793061067911##
                   Parse.$trModule
                   Parse.$tc'ELet1) -}
5eae59441999916d82018618b9b821be
  $tc'ELet1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ELet"#) -}
52d1ce287a9010efd9d7e42088d6c33f
  $tc'ELetRec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7729186445522195564##
                   11622714821954410051##
                   Parse.$trModule
                   Parse.$tc'ELetRec1) -}
c3ff7d515a5140e31d188652e8e3349a
  $tc'ELetRec1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ELetRec"#) -}
c6ff9657d98bff0beef40cfc6b35cb67
  $tc'EVariable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6266548152651257445##
                   8005811627121698462##
                   Parse.$trModule
                   Parse.$tc'EVariable1) -}
6f7e9a5d6b2c379753b37355fd445c26
  $tc'EVariable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'EVariable"#) -}
6667cb937f4c9061079aa24c32fc45b3
  $tc'Lt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17520862003660954102##
                   1060478311921232009##
                   Parse.$trModule
                   Parse.$tc'Lt1) -}
1dd9695cf3ec07380d2990f9708467cd
  $tc'Lt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Lt"#) -}
10c94f4958c837fb18c849d002c59900
  $tc'Mult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8362128166855037863##
                   3473436061285287400##
                   Parse.$trModule
                   Parse.$tc'Mult1) -}
55ae407e06bb06bd1ca21fd2ee7d1c8c
  $tc'Mult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mult"#) -}
b14b927614234a4be584cb859050077e
  $tc'Plus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3717829280978812198##
                   16419132732951249702##
                   Parse.$trModule
                   Parse.$tc'Plus1) -}
5d074969fba69728a0c5d38ec882a7b2
  $tc'Plus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Plus"#) -}
4f3a578a2460d627b2a1696e29d945c5
  $tcBinOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12236581552747049852##
                   100323179375946254##
                   Parse.$trModule
                   Parse.$tcBinOp1) -}
5952f5c31c7474843e638c65573e5a58
  $tcBinOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "BinOp"#) -}
c7e2d8834ce1f9d7f5790780ba910d67
  $tcExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15810251721774089909##
                   641988798072181847##
                   Parse.$trModule
                   Parse.$tcExpr1) -}
43464a96d22299fb4afa115276221f50
  $tcExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Expr"#) -}
419a07ca6766adc5f13c52c4f0b1510c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Parse.$trModule2 Parse.$trModule1) -}
66ad385c98d875dc0c454071b0ed3e4b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Parse"#) -}
13ebae62a853bc69b864a45ef71c69ed
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "hml-0.1.0.0-KdOix18Qri95U7BZnPlCun"#) -}
6588acc7555e667303aa57bab7831364
  $w$cshowsPrec :: Parse.BinOp -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Parse.BinOp) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Parse.Plus -> GHC.Base.++ @ GHC.Types.Char Parse.$fShowBinOp3 w1
                   Parse.Mult -> GHC.Base.++ @ GHC.Types.Char Parse.$fShowBinOp2 w1
                   Parse.Lt
                   -> GHC.Base.++ @ GHC.Types.Char Parse.$fShowBinOp1 w1 }) -}
3c677ddf2e91efa2230f40d9e88e1bd3
  $w$cshowsPrec1 ::
    GHC.Prim.Int# -> Parse.Expr -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
80024be03adf88f764fd370d6030e1a0
  $wk ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.spaces1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b1
                   w
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    case s2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                    case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                    Parse.$wk1
                      @ b1
                      ww1
                      ww5
                      ww6
                      ww7
                      ww3
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')) } })
                   w2
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    case s2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                    case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                    Parse.$wk1
                      @ b1
                      ww1
                      ww5
                      ww6
                      ww7
                      ww3
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')) } })
                   w3) -}
d77ce64f941ed9480496f10efe77cf88
  $wk1 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
9dd2fd6de8189b2ba7649c8dd201cfa4
  $wk2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.spaces1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b1
                   w
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    case s2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                    case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                    Parse.$wk3
                      @ b1
                      ww1
                      ww5
                      ww6
                      ww7
                      ww3
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')) } })
                   w2
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    case s2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                    case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                    Parse.$wk3
                      @ b1
                      ww1
                      ww5
                      ww6
                      ww7
                      ww3
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')) } })
                   w3) -}
ba7d5179b1d8e00066af0b75fd5a22e1
  $wk3 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
1dba41f838f8364e5911ff1f704b2f67
  $wk4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.spaces1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b1
                   w
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parse.$wk5
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')))
                   w2
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk5
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')))
                   w3) -}
eb07f6e3856ccdf4c0375e8e149ceb46
  $wk5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseLetRec2
                   @ b1
                   w
                   (\ (x1 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk6
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')))
                   w2
                   (\ (x1 :: GHC.Base.String)[OneShot]
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk6
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')))
                   w3) -}
256a5a45bef729dfdb9dff83a9f37a10
  $wk6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.spaces1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b1
                   w
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    case s2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                    case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                    Parse.$wk7
                      @ b1
                      ww1
                      ww5
                      ww6
                      ww7
                      ww3
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')) } })
                   w2
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    case s2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                    case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                    Parse.$wk7
                      @ b1
                      ww1
                      ww5
                      ww6
                      ww7
                      ww3
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')) } })
                   w3) -}
07d832bf2eded1cdd36f1ba7abe3d78c
  $wk7 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
7a8a6260db1840067a7ed4b7fc2beb37
  $wparseAppExpr ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 let {
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ (err :: Text.Parsec.Error.ParseError) ->
                     let {
                       eerr1 :: Text.Parsec.Error.ParseError
                                -> Data.Functor.Identity.Identity b
                         {- Arity: 1, Strictness: <L,1*U(U(U,U,U),U)>,
                            Unfolding: InlineRule (1, True, False)
                                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                                        w3 (Text.Parsec.Error.mergeError err err')) -}
                       = \ (err' :: Text.Parsec.Error.ParseError) ->
                         w3 (Text.Parsec.Error.mergeError err err')
                     } in
                     Parse.parseA3
                       @ b
                       w
                       w1
                       eerr1
                       (\ (y :: Parse.Expr)
                          (s' :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                          (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                        w2 y s' (Text.Parsec.Error.mergeError err err'))
                       eerr1
                 } in
                 Parse.parseApp4 @ b w w1 eerr w2 eerr) -}
0bb7b91f4bd4c70b8b0c1f90094026df
  $wparseExpr''' ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
f14286f8d4807b01af970ca524a4f739
  $wparseFun ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseFun2
                   @ b1
                   w
                   (\ (x1 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')))
                   w2
                   (\ (x1 :: GHC.Base.String)[OneShot]
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')))
                   w3) -}
c02422221720157d6445a7d0247c8368
  $wparseLet ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseLet2
                   @ b1
                   w
                   (\ (x1 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk2
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')))
                   w2
                   (\ (x1 :: GHC.Base.String)[OneShot]
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk2
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')))
                   w3) -}
5e6e105d2befa2122251647acd2df6fe
  $wparseLetRec ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseLet2
                   @ b1
                   w
                   (\ (x1 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk4
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')))
                   w2
                   (\ (x1 :: GHC.Base.String)[OneShot]
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.$wk4
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')))
                   w3) -}
94aa75190d556bea7daa84f49dbdbf01
  $wparseLtExpr ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 let {
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ (err :: Text.Parsec.Error.ParseError) ->
                     let {
                       eerr1 :: Text.Parsec.Error.ParseError
                                -> Data.Functor.Identity.Identity b
                         {- Arity: 1, Strictness: <L,1*U(U(U,U,U),U)>,
                            Unfolding: InlineRule (1, True, False)
                                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                                        w3 (Text.Parsec.Error.mergeError err err')) -}
                       = \ (err' :: Text.Parsec.Error.ParseError) ->
                         w3 (Text.Parsec.Error.mergeError err err')
                     } in
                     Parse.$wparsePlusExpr
                       @ b
                       w
                       w1
                       (\ (y :: Parse.Expr)
                          (s' :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                          (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                        w2 y s' (Text.Parsec.Error.mergeError err err'))
                       eerr1
                 } in
                 Parse.parseBinOp3 @ b w w1 eerr w2 eerr) -}
a8d7cfca577995440daaacd03ce12ab1
  $wparseMultExpr ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 let {
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ (err :: Text.Parsec.Error.ParseError) ->
                     let {
                       eerr1 :: Text.Parsec.Error.ParseError
                                -> Data.Functor.Identity.Identity b
                         {- Arity: 1, Strictness: <L,1*U(U(U,U,U),U)>,
                            Unfolding: InlineRule (1, True, False)
                                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                                        w3 (Text.Parsec.Error.mergeError err err')) -}
                       = \ (err' :: Text.Parsec.Error.ParseError) ->
                         w3 (Text.Parsec.Error.mergeError err err')
                     } in
                     Parse.$wparseAppExpr
                       @ b
                       w
                       w1
                       (\ (y :: Parse.Expr)
                          (s' :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                          (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                        w2 y s' (Text.Parsec.Error.mergeError err err'))
                       eerr1
                 } in
                 Parse.parseBinOp7 @ b w w1 eerr w2 eerr) -}
a7058e4c1e68a0d65688b3711e0a40a4
  $wparsePlusExpr ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 let {
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ (err :: Text.Parsec.Error.ParseError) ->
                     let {
                       eerr1 :: Text.Parsec.Error.ParseError
                                -> Data.Functor.Identity.Identity b
                         {- Arity: 1, Strictness: <L,1*U(U(U,U,U),U)>,
                            Unfolding: InlineRule (1, True, False)
                                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                                        w3 (Text.Parsec.Error.mergeError err err')) -}
                       = \ (err' :: Text.Parsec.Error.ParseError) ->
                         w3 (Text.Parsec.Error.mergeError err err')
                     } in
                     Parse.$wparseMultExpr
                       @ b
                       w
                       w1
                       (\ (y :: Parse.Expr)
                          (s' :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                          (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                        w2 y s' (Text.Parsec.Error.mergeError err err'))
                       eerr1
                 } in
                 Parse.parseBinOp5 @ b w w1 eerr w2 eerr) -}
76de2d1468aedd2b30bdd5d8d6789df3
  $wparseValiableName ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
0a7ea921d0f30cbdbe03f2e2fcf93f74
  $wparseVariable ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [GHC.Types.Char])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: ())
                   (w :: Parse.Expr
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Parse.$wparseValiableName
                   @ b1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x1 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    case GHC.List.elem
                           @ GHC.Base.String
                           GHC.Classes.$fEq[]_$s$fEq[]1
                           x1
                           Parse.reservedName of wild {
                      GHC.Types.False
                      -> w (Parse.EVariable x1)
                           s2
                           (case s2 of wild1 { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                            case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                            case err of ww5 { Text.Parsec.Error.ParseError ww6 ww7 ->
                            case ww6 of ww8 { Text.Parsec.Pos.SourcePos ww9 ww16 ww17 ->
                            case Text.Parsec.Error.$wmergeError
                                   ww9
                                   ww16
                                   ww17
                                   ww7
                                   ww11
                                   ww12
                                   ww13
                                   (GHC.Types.[]
                                      @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww18 ->
                            Text.Parsec.Error.ParseError ww15 ww18 } } } } })
                      GHC.Types.True
                      -> w1
                           (case s2 of wild1 { Text.Parsec.Prim.State ds ds1 ds2 ->
                            case ds1 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                            case err of ww5 { Text.Parsec.Error.ParseError ww6 ww7 ->
                            case ww6 of ww8 { Text.Parsec.Pos.SourcePos ww9 ww16 ww17 ->
                            case Text.Parsec.Error.$wmergeError
                                   ww9
                                   ww16
                                   ww17
                                   ww7
                                   ww11
                                   ww12
                                   ww13
                                   Parse.parseVariable2 of ww14 { (#,#) ww15 ww18 ->
                            Text.Parsec.Error.ParseError ww15 ww18 } } } } }) })
                   w1
                   w2) -}
6588acc7555e667303aa57bab7831364
  data BinOp = Plus | Mult | Lt
3c677ddf2e91efa2230f40d9e88e1bd3
  data Expr
    = EInt GHC.Types.Int
    | EBool GHC.Types.Bool
    | EBinOp Parse.BinOp Parse.Expr Parse.Expr
    | EIf Parse.Expr Parse.Expr Parse.Expr
    | ELet GHC.Base.String Parse.Expr Parse.Expr
    | EFun GHC.Base.String Parse.Expr
    | EApp Parse.Expr Parse.Expr
    | ELetRec GHC.Base.String GHC.Base.String Parse.Expr Parse.Expr
    | EVariable GHC.Base.String
e8c162b99a11164090a4c50105db1e18
  type Program = [Parse.Expr]
f95f831f6dc6ab846afbe446856078a4
  parseA ::
    [GHC.Types.Char]
    -> Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseA1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr>_R) -}
5438d4b818fc5ac8b8502ca23e245d85
  parseA1 ::
    [GHC.Types.Char]
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: [GHC.Types.Char]) ->
                 Text.Parsec.Prim.runPT
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Parse.Expr
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseA3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Parse.Expr>_R))
                   GHC.Tuple.()
                   Parse.parseA2
                   s1) -}
1c3b8ff213a4d40e889d9a85e56fd059
  parseA2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "A"#) -}
37d4d6757a01417993a9d9e399a1021f
  parseA3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
7540fe6f70171ee0a0746ddd03e7a2de
  parseAExpr ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseA3
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
a60604e22205251e44e2056cccbf5b28
  parseApp ::
    [GHC.Types.Char]
    -> Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseApp1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr>_R) -}
cf81b8ed49ddaed4cc4b70834a4f920a
  parseApp1 ::
    [GHC.Types.Char]
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: [GHC.Types.Char]) ->
                 Text.Parsec.Prim.runPT
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Parse.Expr
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseApp3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Parse.Expr>_R))
                   GHC.Tuple.()
                   Parse.parseApp2
                   s1) -}
51b39bc55c4f8b11bab543207fd621f4
  parseApp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "App"#) -}
5d090977158762f0def6fed0dec18902
  parseApp3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Parse.$wparseAppExpr @ b w w1 w3 w4) -}
98483c5d48b419722d0e7d5d6edbecd6
  parseApp4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
281dc9ef5a7bca3362a0db295434ae56
  parseAppExpr ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseApp3
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
41f5234547945fe89c8ab955f7cb253e
  parseAppExpr' ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseAppExpr'1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
5245d572123dc6ae48496993dcb3332d
  parseAppExpr'1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Parse.parseApp4 @ b s1 cok eerr eok eerr) -}
d3cda1e82024a2f95d031b641f913a70
  parseBinOp :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseBinOp1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
ab73265fd9cd0d3cb292712e84bf197f
  parseBinOp1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Parse.parseBinOp2 @ b s1 cok eerr eok eerr) -}
c1a65fb8c5f39579341a559e3245d345
  parseBinOp2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Parse.$wparseLtExpr @ b w w1 w3 w4) -}
72194dd7377b0ff74dd3e2fc52f68623
  parseBinOp3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Parse.$wparsePlusExpr
                   @ b1
                   s1
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseBinOp4
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseBinOp4
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
5d0e169afbf4a5690ecfb6395eb69390
  parseBinOp4 ::
    Parse.Expr
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
2cee7de742036fc4475fbe685c1eb6c1
  parseBinOp5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Parse.$wparseMultExpr
                   @ b1
                   s1
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseBinOp6
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseBinOp6
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
3b840e88fe4a03e61290fcf7485b99e5
  parseBinOp6 ::
    Parse.Expr
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
1eb510726b3b2acfe13f6752b89b672b
  parseBinOp7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Parse.$wparseAppExpr
                   @ b1
                   s1
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseBinOp8
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseBinOp8
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
0b95c191ce3e5ec30f09ebea3d72beb2
  parseBinOp8 ::
    Parse.Expr
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
74af9347c2d271afdea7c3c29ef35e72
  parseBool :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseBool1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
341260740f672cdd01e991608123697d
  parseBool1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,C(C1(C1(U)))><L,C(U)> -}
d75cd552254127e4462d169fac102f5d
  parseExpr ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseExpr1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
9547037ea23df1d14455f146a74432f6
  parseExpr''' :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseExpr'''1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
cff3f36e8cb77ec20c2e01d9f9a7f908
  parseExpr'''1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Parse.$wparseExpr''' @ b w w1 w3 w4) -}
a0599c2cb47ec37ae6a8b0e9411c2f7f
  parseExpr1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: Parse.Expr
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Parse.Expr
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.spaces1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b1
                   eta
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parse.parseExpr2
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta1 x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseExpr2
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta3 x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
d4887b0429fbec19da9b9638481dfe8a
  parseExpr2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Parse.$wparseExpr'''
                   @ b1
                   s1
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseExpr3
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseExpr3
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
616e36cdd36a0147f9448b230a4dcacc
  parseExpr3 ::
    Parse.Expr
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ (e :: Parse.Expr)
                   @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: Parse.Expr
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Parse.Expr
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Char.spaces1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b
                   eta
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eta1
                      e
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eta3
                      e
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
09c06431785b99a39eb2e4afb5573362
  parseFun :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseFun1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
26b259b6f64cc888d50803ba7bb76c20
  parseFun1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Parse.$wparseFun @ b1 w w1 w2 w4) -}
e91d4ace366acd9e8feed32c5dadafe4
  parseFun2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fun"#) -}
f39374830d5d491afa9e3609cdc16b4e
  parseIf :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseIf1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
1de89d32aa337258d6291ade66abd91b
  parseIf1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: Parse.Expr
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Parse.Expr
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseIf5
                   @ b1
                   eta
                   (\ (x1 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseIf2
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta1 x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ (x1 :: GHC.Base.String)[OneShot]
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseIf2
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta3 x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
9bd71321483463889aef69ee18b331e3
  parseIf2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: Parse.Expr
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Parse.Expr
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.spaces1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b1
                   eta
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parse.parseIf3
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta1 x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ (x1 :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseIf3
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta3 x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
72b06ad9b294488623ad58cc2d6ac8bc
  parseIf3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Parse.parseExpr1
                   @ b1
                   s1
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseIf4
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseIf4
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
5b833677c3e5939d52152c16a541fa8e
  parseIf4 ::
    Parse.Expr
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
4aa3dc404c8694c18ada119e75150076
  parseIf5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "if"#) -}
97fefdde9db88ab56ca96f3d1a4df590
  parseInt :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseInt1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
2ea21d5cc3bb27ded6d1caf6e3c55cee
  parseInt1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Parse.parseInt2 @ b s1 cok eerr eok eerr) -}
aa259d9310c35041ae91c81333cae3ed
  parseInt2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wmany1
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   Parse.parseInt6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   s1
                   (\ (x1 :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    cok
                      (Parse.EInt
                         (case Text.Read.readEither6
                                 @ GHC.Types.Int
                                 (Text.ParserCombinators.ReadP.run
                                    @ GHC.Types.Int
                                    Parse.parseInt5
                                    x1) of wild {
                            [] -> Parse.parseInt4
                            : x2 ds
                            -> case ds of wild1 { [] -> x2 : ipv ipv1 -> Parse.parseInt3 } }))
                      s2
                      (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x1 :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eok
                      (Parse.EInt
                         (case Text.Read.readEither6
                                 @ GHC.Types.Int
                                 (Text.ParserCombinators.ReadP.run
                                    @ GHC.Types.Int
                                    Parse.parseInt5
                                    x1) of wild {
                            [] -> Parse.parseInt4
                            : x2 ds
                            -> case ds of wild1 { [] -> x2 : ipv ipv1 -> Parse.parseInt3 } }))
                      s2
                      (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr) -}
0bb710cc2e80a4447047eaadc1a4c024
  parseInt3 :: GHC.Types.Int
  {- Strictness: x -}
b7fd29bb2177b6ac8ad307ed3d663ed0
  parseInt4 :: GHC.Types.Int
  {- Strictness: x -}
79e241824a5d60db407a5f6e59315b66
  parseInt5 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: (GHC.Read.$fReadInt3
                   GHC.Read.$fReadInt_$sconvertInt
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Int
                   (Text.Read.readEither5 @ GHC.Types.Int)) -}
aecdf1245e37591ea5f9874b843e53de
  parseInt6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   Parse.parseInt8
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   Parse.parseInt7
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
e914cb40c30bec84e6a8694fa6ba4f9c
  parseInt7 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.digit2
                   (GHC.Types.[] @ GHC.Base.String)) -}
7b44143fa953fe25199bab900f50fb4c
  parseInt8 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (w2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w5 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot] ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isDigit
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
c94046f436caeba8a9a92a30f4a38db8
  parseLet :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseLet1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
5ecbdf08f742b9cb08b378685080c805
  parseLet1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Parse.$wparseLet @ b1 w w1 w2 w4) -}
e3d616907a8fc0ce4a0fa99dbeecbebe
  parseLet2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "let"#) -}
b8de90609e583628669b8a3628942bc2
  parseLetRec :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseLetRec1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
40bdaacb8953fb0e6d4244659f57cbb4
  parseLetRec1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Parse.$wparseLetRec @ b1 w w1 w2 w4) -}
473bc793794bc407f813d82bacd5a6d6
  parseLetRec2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rec"#) -}
f4064ca44b12d11581cbb4b3379ae1b3
  parseLtExpr :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseBinOp2
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
d28af12b05fb78cd28bc7f25c7b8829e
  parseLtExpr' ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseBinOp3
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
5e76c2fcd29ecf83455c167a81d9dddc
  parseMult ::
    [GHC.Types.Char]
    -> Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseMult1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr>_R) -}
8789a1db4aaa9ce1bfd03ce95ade8d6e
  parseMult' ::
    [GHC.Types.Char]
    -> Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseMult'1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr>_R) -}
d4879ca8bd420e61ab8ce44dc192b4e7
  parseMult'1 ::
    [GHC.Types.Char]
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: [GHC.Types.Char]) ->
                 Text.Parsec.Prim.runPT
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Parse.Expr
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseBinOp7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Parse.Expr>_R))
                   GHC.Tuple.()
                   Parse.$fShowBinOp2
                   s1) -}
75bc79714891831b73aac6ec077007dc
  parseMult1 ::
    [GHC.Types.Char]
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: [GHC.Types.Char]) ->
                 Text.Parsec.Prim.runPT
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Parse.Expr
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseMult2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Parse.Expr>_R))
                   GHC.Tuple.()
                   Parse.$fShowBinOp2
                   s1) -}
57204d58bdd05f3df1936005e445ce78
  parseMult2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Parse.$wparseMultExpr @ b w w1 w3 w4) -}
879036b818d939d54bcd2edec9e13fce
  parseMultExpr ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseMult2
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
e80d979c499ce85efc219ebab040ef63
  parseMultExpr' ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseBinOp7
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
c221f3dbf4116a3b8f75e4bb4df1051e
  parsePlus ::
    [GHC.Types.Char]
    -> Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.parsePlus1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr>_R) -}
f513961521a623af4ba1cb91bb53af40
  parsePlus1 ::
    [GHC.Types.Char]
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError Parse.Expr)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: [GHC.Types.Char]) ->
                 Text.Parsec.Prim.runPT
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Parse.Expr
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parsePlus2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Parse.Expr>_R))
                   GHC.Tuple.()
                   Parse.$fShowBinOp3
                   s1) -}
b8603c089cc6a9f5379a774f870171db
  parsePlus2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Parse.$wparsePlusExpr @ b w w1 w3 w4) -}
270440b45bf5323e6041fb09b8cb5e8d
  parsePlusExpr ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parsePlus2
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
ad5c819ecd7350a99507d06caa75603c
  parsePlusExpr' ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity Parse.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseBinOp5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
173a230066a0bd053f72de7bd038defb
  parseProgram :: Text.Parsec.String.Parser Parse.Program
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseProgram1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[Parse.Expr]>_R)) -}
2a4354beea48331c77da6e59f09d8457
  parseProgram1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([Parse.Expr]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Parse.Expr]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w3 :: [Parse.Expr]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: [Parse.Expr]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Parse.Expr
                   Parse.parseProgram2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Parse.Expr>_R))
                   @ b
                   w2
                   w3
                   w4
                   w5
                   w6) -}
23764fea721d57420fddc3259ed5d13c
  parseProgram2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Parse.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Parse.parseExpr1
                   @ b1
                   s1
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseProgram3
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x1 :: Parse.Expr)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parse.parseProgram3
                      x1
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x2 :: Parse.Expr)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x2 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
a136e8c96bd0b3f3af00281d71957f5a
  parseProgram3 ::
    Parse.Expr
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Parse.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
399550197a75dc7ba3ff57494f436ae9
  parseSentence :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseProgram2
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
847cd668ffbf8627142f226f87a15097
  parseTest ::
    Text.Parsec.Prim.Stream s Data.Functor.Identity.Identity t =>
    Text.Parsec.Prim.Parsec s () a
    -> s -> Data.Either.Either Text.Parsec.Error.ParseError a
  {- Arity: 3, Strictness: <L,U(U,A)><L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseTest1
                  `cast`
                (forall (a :: <*>_N) (s :: <*>_N) (t :: <*>_N).
                 <Text.Parsec.Prim.Stream s Data.Functor.Identity.Identity t>_R
                 ->_R <Text.Parsec.Prim.Parsec s () a>_R
                 ->_R <s>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError a>_R) -}
db8d04900d0f810ce8cfc2f373c50900
  parseTest1 ::
    Text.Parsec.Prim.Stream s Data.Functor.Identity.Identity t =>
    Text.Parsec.Prim.Parsec s () a
    -> s
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError a)
  {- Arity: 3, Strictness: <L,U(U,A)><L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ s
                   @ t
                   ($dStream :: Text.Parsec.Prim.Stream
                                  s Data.Functor.Identity.Identity t)
                   (f :: Text.Parsec.Prim.Parsec s () a)
                   (eta :: s) ->
                 Text.Parsec.Prim.parse1
                   @ s
                   @ t
                   @ a
                   $dStream
                   f
                   Parse.parseTest2
                   eta) -}
9aa729b2ae58667a3b3709307a12d841
  parseTest2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Test"#) -}
617a7bff056ebcd89f470220f6ac233c
  parseValiableName :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseValiableName1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
c9f589f7baff2d5f5716e288e48a6fae
  parseValiableName1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Parse.$wparseValiableName @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
2bac920f80442b428aba14e8b1244b2e
  parseVariable :: Text.Parsec.String.Parser Parse.Expr
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parse.parseVariable1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Parse.Expr>_R)) -}
3ba4ff941f36c439ae12e65d7d629718
  parseVariable1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Parse.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Parse.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Parse.$wparseVariable @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
6620aeba9e65539b1d2e2580e0b9ae00
  parseVariable2 :: [Text.Parsec.Error.Message]
  {- Unfolding: (GHC.Types.:
                   @ Text.Parsec.Error.Message
                   Parse.parseVariable3
                   (GHC.Types.[] @ Text.Parsec.Error.Message)) -}
ce6fe2725f126cd40521996603400265
  parseVariable3 :: Text.Parsec.Error.Message
  {- Unfolding: (case Parse.parseVariable4 of dt { DEFAULT ->
                 Text.Parsec.Error.Message dt }) -}
287321b3f81a4430425464d219eab439
  parseVariable4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "reservedName is used for variable name."#) -}
d3558d08a25a930a0494b4f0447b280c
  reservedName :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Parse.parseLet2
                   Parse.reservedName1) -}
ef862e3b09d8e3b3425037370b52686c
  reservedName1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Parse.reservedName8
                   Parse.reservedName2) -}
92ef1dbf7e90572814f1be78706cbd28
  reservedName2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Parse.parseFun2
                   Parse.reservedName3) -}
4473a38f1810789d8ececcb44b33b615
  reservedName3 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Parse.parseIf5
                   Parse.reservedName4) -}
c70e34ecac67b059e138febe1b703889
  reservedName4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Parse.reservedName7
                   Parse.reservedName5) -}
9a24054abde965ef8455a1474527d230
  reservedName5 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Parse.reservedName6
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
d0d5f9d6f6045e71d945506ddbbfc646
  reservedName6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "else"#) -}
2d4eccdcc72f43d27df83eb571ac8edd
  reservedName7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "then"#) -}
6d3ab4c243697ae792bf465b85ca0f6d
  reservedName8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "in"#) -}
a4603e9d625ec0fe96183c759385fa43
  stringToProgram ::
    GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError Parse.Program
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Parse.stringToProgram1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either
                             Text.Parsec.Error.ParseError Parse.Program>_R) -}
5827bc3cd8757fbab6480920404c9b43
  stringToProgram1 ::
    GHC.Base.String
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError Parse.Program)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: GHC.Base.String) ->
                 Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Parse.Program
                   (Parse.$s$fStream[]mtok @ GHC.Types.Char)
                   Parse.parseProgram1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[Parse.Expr]>_R))
                   GHC.Tuple.()
                   Parse.stringToProgram2
                   s1) -}
a3f9efa7804db7ad3668424483e05a1d
  stringToProgram2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Parse.hs"#) -}
instance [safe] GHC.Show.Show [Parse.BinOp] = Parse.$fShowBinOp
instance [safe] GHC.Show.Show [Parse.Expr] = Parse.$fShowExpr
"SPEC/Parse $fStream[]mtok @ Identity _" [ALWAYS] forall @ tok
                                                         ($dMonad :: GHC.Base.Monad
                                                                       Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  $dMonad
  = Parse.$s$fStream[]mtok @ tok
"SPEC/Parse $fStream[]mtok_$cp1Stream @ Identity _" [ALWAYS] forall @ tok
                                                                    ($dMonad :: GHC.Base.Monad
                                                                                  Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cp1Stream @ Data.Functor.Identity.Identity
                                             @ tok
                                             $dMonad
  = Parse.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok
"SPEC/Parse $fStream[]mtok_$cuncons @ Identity _" [ALWAYS] forall @ tok
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = Parse.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

